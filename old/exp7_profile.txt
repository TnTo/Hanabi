         471272881 function calls (457851614 primitive calls) in 1458.056 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        2    0.001    0.001 1457.374  728.687 Experiment.py:187(run)
       50    0.002    0.000 1037.040   20.741 Experiment.py:180(train)
       50    0.175    0.003 1037.038   20.741 Experiment.py:113(train)
    19264    0.889    0.000  980.424    0.051 training.py:126(_method_wrapper)
    19264    2.335    0.000  962.180    0.050 training.py:1486(predict)
       50    0.001    0.000  627.144   12.543 function_base.py:2063(__call__)
       50    0.293    0.006  627.143   12.543 function_base.py:2154(_vectorize_call)
    12705    0.861    0.000  626.845    0.049 Experiment.py:101(Q)
    19314    0.748    0.000  571.562    0.030 data_adapter.py:1073(__init__)
51724/51628    1.391    0.000  566.960    0.011 def_function.py:757(__call__)
    19314    0.894    0.000  563.958    0.029 data_adapter.py:254(__init__)
51724/51628    0.534    0.000  562.934    0.011 def_function.py:798(_call)
51699/51603    0.388    0.000  561.066    0.011 function.py:2825(__call__)
    51724    0.492    0.000  547.695    0.011 function.py:1827(_filtered_call)
    51748    1.146    0.000  545.904    0.011 function.py:1850(_call_flat)
    51748    2.563    0.000  540.264    0.010 function.py:509(call)
    51388    0.569    0.000  537.143    0.010 execute.py:33(quick_execute)
    51388  536.384    0.010  536.384    0.010 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
    57942    2.472    0.000  486.525    0.008 dataset_ops.py:3186(__init__)
115031/114215    1.983    0.000  482.820    0.004 function.py:3147(_maybe_define_function)
63162/62970    1.170    0.000  471.396    0.007 function.py:2870(_get_concrete_function_garbage_collected)
    57942    0.248    0.000  469.175    0.008 function.py:2931(get_concrete_function)
58306/58186    1.421    0.000  463.854    0.008 function.py:3047(_create_graph_function)
58306/58186    3.732    0.000  426.365    0.007 func_graph.py:801(func_graph_from_py_func)
       50    0.001    0.000  406.695    8.134 training.py:106(_method_wrapper)
       50    0.672    0.013  406.692    8.134 training.py:824(fit)
       52    0.334    0.006  385.117    7.406 Experiment.py:167(play_episode)
    13530    0.385    0.000  378.470    0.028 Experiment.py:82(move)
    38628    0.173    0.000  273.816    0.007 dataset_ops.py:1557(map)
    19314    0.065    0.000  253.473    0.013 dataset_ops.py:1704(flat_map)
    19314    0.795    0.000  253.408    0.013 dataset_ops.py:4119(__init__)
   333466  235.961    0.001  237.168    0.001 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
    57942    0.404    0.000  224.531    0.004 dataset_ops.py:3358(wrapper_fn)
    57942    0.786    0.000  221.666    0.004 dataset_ops.py:3292(_wrapper_helper)
57985/57946    0.550    0.000  214.016    0.004 api.py:247(wrapper)
58032/57958    1.092    0.000  212.614    0.004 api.py:417(converted_call)
58013/57970    0.268    0.000  198.914    0.003 api.py:330(_call_unconverted)
    40516    0.444    0.000  188.909    0.005 data_adapter.py:1135(enumerate_epochs)
  1002938    0.344    0.000  188.569    0.000 {built-in method builtins.iter}
    19314    0.135    0.000  188.225    0.010 dataset_ops.py:403(__iter__)
    19323    0.298    0.000  188.060    0.010 iterator_ops.py:648(__init__)
    19314    0.812    0.000  187.200    0.010 iterator_ops.py:700(_create_iterator)
263054/197923    0.516    0.000  178.933    0.001 dispatch.py:198(wrapper)
216065/215745   17.097    0.000  177.685    0.001 op_def_library.py:299(_apply_op_helper)
    19314    0.181    0.000  175.221    0.009 gen_dataset_ops.py:2987(make_iterator)
    19314    0.336    0.000  146.580    0.008 data_adapter.py:373(slice_inputs)
469752/469188    4.356    0.000  144.056    0.000 func_graph.py:528(_create_op_internal)
    19314    0.738    0.000  142.480    0.007 dataset_ops.py:4031(__init__)
   470388    5.642    0.000  138.374    0.000 ops.py:3418(_create_op_internal)
    19314    0.810    0.000  131.163    0.007 dataset_ops.py:4069(__init__)
    19314    0.421    0.000  128.110    0.007 data_adapter.py:330(slice_batch_indices)
   470388   11.560    0.000   94.439    0.000 ops.py:1839(__init__)
947234/946639    3.148    0.000   88.615    0.000 ops.py:1448(convert_to_tensor)
   355186    0.651    0.000   79.260    0.000 constant_op.py:166(constant)
   355186    3.485    0.000   78.609    0.000 constant_op.py:267(_constant_impl)
    58306    3.918    0.000   77.530    0.001 auto_control_deps.py:301(__exit__)
326987/326459    1.877    0.000   71.089    0.000 nest.py:573(map_structure)
   471720    2.572    0.000   66.529    0.000 auto_control_deps.py:519(_get_resource_inputs)
326987/326459    0.487    0.000   62.464    0.000 nest.py:635(<listcomp>)
    38627    0.122    0.000   59.847    0.002 array_ops.py:1028(slice)
    38627    0.373    0.000   59.725    0.002 gen_array_ops.py:9212(_slice)
   469724    2.678    0.000   55.857    0.000 auto_control_deps_utils.py:89(get_read_write_resource_inputs)
   116612    2.534    0.000   43.988    0.000 func_graph.py:1148(_get_defun_inputs)
    58306    0.125    0.000   42.839    0.001 func_graph.py:1136(_get_defun_inputs_from_args)
   630717    3.685    0.000   41.824    0.000 ops.py:2471(get_attr)
   470388    6.735    0.000   41.625    0.000 ops.py:1764(_create_c_op)
    96665    0.098    0.000   41.467    0.000 constant_op.py:335(_constant_tensor_conversion_function)
    19314    0.113    0.000   40.139    0.002 data_adapter.py:315(permutation)
    19317    0.353    0.000   39.944    0.002 math_ops.py:1731(range)
   239027    0.339    0.000   37.744    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
    58306    1.315    0.000   35.727    0.001 function.py:1460(__init__)
    79860    1.843    0.000   34.882    0.000 graph_only_ops.py:29(graph_placeholder)
       12    0.021    0.002   34.324    2.860 Experiment.py:220(save_status)
   630717   29.009    0.000   30.553    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
5160014/3258906    3.169    0.000   30.498    0.000 {built-in method builtins.next}
    19314    0.065    0.000   28.965    0.001 data_adapter.py:393(grab_batch)
    58356    0.329    0.000   28.566    0.000 func_graph.py:930(convert)
    19364    0.106    0.000   28.556    0.001 data_adapter.py:394(<lambda>)
    19364    0.488    0.000   28.387    0.001 array_ops.py:4589(gather)
    58306    0.494    0.000   28.219    0.000 function.py:597(__init__)
       13    0.074    0.006   28.085    2.160 _dill.py:253(dump)
       13    0.000    0.000   28.010    2.155 _dill.py:414(dump)
       13    0.000    0.000   28.010    2.155 pickle.py:398(dump)
6175618/13    9.383    0.000   28.009    2.155 pickle.py:457(save)
 53926/37    0.069    0.000   28.006    0.757 pickle.py:774(save_list)
 53926/37    0.236    0.000   28.005    0.757 pickle.py:787(_batch_appends)
303281/548    1.254    0.000   27.991    0.051 _dill.py:903(save_module_dict)
303281/548    0.461    0.000   27.986    0.051 pickle.py:814(save_dict)
303281/548    2.525    0.000   27.982    0.051 pickle.py:827(_batch_setitems)
241446/4428    0.892    0.000   27.867    0.006 pickle.py:539(save_reduce)
    19364    0.400    0.000   27.735    0.001 gen_array_ops.py:3790(gather_v2)
    58356    0.433    0.000   27.610    0.000 auto_control_deps.py:182(mark_as_return)
    81864    0.510    0.000   27.412    0.000 array_ops.py:244(identity)
    58306    3.696    0.000   27.399    0.000 function.py:412(__init__)
    81864    0.451    0.000   26.147    0.000 gen_array_ops.py:3973(identity)
2775801/1827655    1.271    0.000   22.954    0.000 contextlib.py:79(__enter__)
    38627    0.105    0.000   21.623    0.001 dataset_ops.py:569(from_tensors)
    38627    0.448    0.000   21.517    0.001 dataset_ops.py:2980(__init__)
   174079    5.482    0.000   20.008    0.000 tensor_util.py:360(make_tensor_proto)
   270394    3.254    0.000   18.883    0.000 dataset_ops.py:186(__init__)
    19331    0.073    0.000   18.179    0.001 array_ops.py:59(reshape)
   547788    3.671    0.000   17.962    0.000 func_graph.py:365(inner_cm)
    19314    0.088    0.000   17.944    0.001 dataset_ops.py:606(from_tensor_slices)
    19314    0.410    0.000   17.856    0.001 dataset_ops.py:2999(__init__)
    19331    0.150    0.000   17.553    0.001 gen_array_ops.py:8143(reshape)
    19314    0.352    0.000   16.790    0.001 iterator_ops.py:531(__del__)
    19313    0.069    0.000   16.044    0.001 dataset_ops.py:1002(concatenate)
    19313    0.371    0.000   15.975    0.001 dataset_ops.py:3504(__init__)
35899209/35897709    9.294    0.000   15.727    0.000 {built-in method builtins.isinstance}
    58488    2.969    0.000   15.101    0.000 func_graph.py:165(__init__)
    19314    0.080    0.000   14.996    0.001 gen_dataset_ops.py:1262(delete_iterator)
    32112    0.082    0.000   13.766    0.000 callbacks.py:281(_call_batch_hook)
    19317    0.201    0.000   13.748    0.001 gen_math_ops.py:7268(_range)
    32112    0.284    0.000   13.432    0.000 callbacks.py:332(_call_batch_hook_helper)
    16056    0.101    0.000   12.975    0.001 callbacks.py:432(on_train_batch_end)
   764304    0.625    0.000   12.846    0.000 nest.py:536(pack_sequence_as)
    17994    0.953    0.000   12.836    0.001 generic_utils.py:528(update)
    16056    0.074    0.000   12.818    0.001 callbacks.py:302(_call_batch_end_hook)
    38627    0.282    0.000   12.709    0.000 gen_dataset_ops.py:6595(tensor_dataset)
2775801/1832316    3.692    0.000   12.704    0.000 contextlib.py:85(__exit__)
   783622    2.074    0.000   12.562    0.000 nest.py:496(_pack_sequence_as)
   154512    0.344    0.000   12.382    0.000 dataset_ops.py:2956(__init__)
   470388   12.331    0.000   12.331    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
   588369    1.025    0.000   12.143    0.000 tf_stack.py:131(extract_stack)
   470388    3.662    0.000   12.102    0.000 ops.py:3521(_create_op_helper)
    19314    0.239    0.000   11.999    0.001 gen_dataset_ops.py:6664(tensor_slice_dataset)
   470388    7.216    0.000   11.893    0.000 ops.py:1737(_NodeDef)
    19314    0.085    0.000   11.637    0.001 gen_dataset_ops.py:2003(flat_map_dataset)
    19313    0.233    0.000   11.557    0.001 gen_dataset_ops.py:853(concatenate_dataset)
   273894    1.215    0.000   11.551    0.000 func_graph.py:362(as_default)
   588369   10.883    0.000   10.885    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
    16056    0.040    0.000   10.562    0.001 callbacks.py:960(on_train_batch_end)
    16056    0.178    0.000   10.521    0.001 callbacks.py:999(_batch_update_progbar)
    58282    0.498    0.000   10.510    0.000 function.py:3632(decorated)
   116828    0.451    0.000   10.295    0.000 func_graph.py:69(convert_structure_to_signature)
   475275    6.027    0.000   10.204    0.000 ops.py:2312(inputs)
    58500    5.239    0.000    9.813    0.000 ops.py:2862(__init__)
       12    0.000    0.000    9.414    0.785 training.py:1918(save)
       12    0.000    0.000    9.414    0.785 save.py:47(save_model)
       12    0.042    0.004    9.413    0.784 save.py:40(save)
2853543/2802325    4.954    0.000    9.354    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
       12    0.008    0.001    9.324    0.777 save.py:788(save)
   553980    3.080    0.000    9.221    0.000 ops.py:5580(get_controller)
     8790    0.092    0.000    9.220    0.001 iostream.py:334(flush)
   271392    1.931    0.000    8.883    0.000 base.py:800(_track_trackable)
    19314    0.088    0.000    8.816    0.000 gen_dataset_ops.py:3036(map_dataset)
    19314    0.083    0.000    8.772    0.000 gen_dataset_ops.py:5057(parallel_map_dataset_v2)
   115207    1.773    0.000    8.768    0.000 function.py:2977(_cache_key)
  1573263    8.633    0.000    8.633    0.000 {method 'acquire' of '_thread.lock' objects}
  2775801    2.453    0.000    8.476    0.000 contextlib.py:157(helper)
  2969654    1.560    0.000    8.386    0.000 nest.py:274(flatten)
     8790    0.069    0.000    8.186    0.001 threading.py:533(wait)
     8690    0.083    0.000    8.092    0.001 threading.py:263(wait)
    19314    0.247    0.000    7.968    0.000 dataset_ops.py:356(_apply_options)
1254832/963260    1.774    0.000    7.945    0.000 {built-in method builtins.any}
    58282    0.772    0.000    7.846    0.000 function.py:2767(__init__)
   803339    2.005    0.000    7.724    0.000 Hanabi.py:159(toarray)
       12    0.025    0.002    7.701    0.642 save.py:1030(_build_meta_graph)
   273904    0.678    0.000    7.594    0.000 tf_contextlib.py:25(contextmanager)
   335947    7.493    0.000    7.493    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
    96570    0.162    0.000    7.410    0.000 dataset_ops.py:2967(__init__)
    34119    0.169    0.000    7.354    0.000 Hanabi.py:371(save)
    58306    7.337    0.000    7.337    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
  7095942    2.399    0.000    7.304    0.000 ops.py:2376(type)
   254323    1.592    0.000    7.274    0.000 ops.py:3868(_get_op_def)
    19314    0.079    0.000    7.199    0.000 dataset_ops.py:920(range)
    19314    0.323    0.000    7.120    0.000 dataset_ops.py:3570(__init__)
    38628    0.089    0.000    7.091    0.000 dataset_ops.py:1128(repeat)
    38628    0.429    0.000    7.002    0.000 dataset_ops.py:3552(__init__)
  2969654    6.608    0.000    6.826    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
  3080563    5.370    0.000    6.500    0.000 dtypes.py:606(as_dtype)
  2038283    3.630    0.000    6.399    0.000 abc.py:180(__instancecheck__)
10290362/10286678    4.460    0.000    6.358    0.000 {built-in method builtins.getattr}
    57941    1.252    0.000    6.357    0.000 structure.py:70(normalize_element)
    19314    0.232    0.000    6.355    0.000 dataset_ops.py:4375(__init__)
   499576    0.430    0.000    6.242    0.000 Experiment.py:108(<lambda>)
    31919    0.444    0.000    6.149    0.000 Hanabi.py:259(toarray)
    34119    0.078    0.000    6.146    0.000 Hanabi.py:379(<listcomp>)
  2658926    1.331    0.000    6.121    0.000 <__array_function__ internals>:2(concatenate)
   170595    0.222    0.000    6.069    0.000 Hanabi.py:245(save)
    58452    0.441    0.000    6.051    0.000 function.py:2299(from_function_and_signature)
   656690    0.652    0.000    6.047    0.000 {built-in method _functools.reduce}
   749318    2.818    0.000    6.041    0.000 Hanabi.py:111(save)
   111874    0.292    0.000    6.031    0.000 tf_utils.py:513(to_numpy_or_python_type)
  2775801    4.870    0.000    5.922    0.000 contextlib.py:59(__init__)
   470284    0.519    0.000    5.869    0.000 ops.py:386(_create_with_tf_output)
    23236    0.418    0.000    5.825    0.000 resource_variable_ops.py:838(assign)
   170595    0.244    0.000    5.757    0.000 Hanabi.py:246(<listcomp>)
   276100    0.786    0.000    5.635    0.000 ops.py:6458(__enter__)
13593627/13592667    5.220    0.000    5.549    0.000 {built-in method builtins.hasattr}
   193139    0.491    0.000    5.515    0.000 dataset_ops.py:546(_flat_structure)
   470284    1.786    0.000    5.350    0.000 ops.py:359(__init__)
   391203    2.490    0.000    5.323    0.000 tf_decorator.py:67(make_decorator)
   116828    0.082    0.000    5.313    0.000 func_graph.py:130(<listcomp>)
    78126    0.653    0.000    5.230    0.000 func_graph.py:82(encode_arg)
   291108    0.433    0.000    5.190    0.000 Experiment.py:93(<lambda>)
    19314    0.060    0.000    5.100    0.000 dataset_ops.py:1031(prefetch)
   273904    1.305    0.000    5.043    0.000 contextlib.py:129(contextmanager)
    19314    0.364    0.000    5.040    0.000 dataset_ops.py:4289(__init__)
1054862/583681    1.672    0.000    5.038    0.000 {built-in method builtins.hash}
   470388    0.387    0.000    4.957    0.000 lock_util.py:123(__enter__)
 10934005    2.458    0.000    4.917    0.000 {method 'get' of 'dict' objects}
  7095942    4.904    0.000    4.904    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
  2127229    4.885    0.000    4.887    0.000 {built-in method numpy.array}
   940776    4.770    0.000    4.770    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
   115883    0.453    0.000    4.648    0.000 structure.py:299(_to_tensor_list_helper)
366180/115207    0.868    0.000    4.615    0.000 function.py:95(_make_input_signature_hashable)
   470388    1.178    0.000    4.570    0.000 lock_util.py:86(acquire)
864265/864225    1.181    0.000    4.568    0.000 base.py:453(_method_wrapper)
  3867700    2.128    0.000    4.562    0.000 compat.py:114(as_str)
   558526    2.552    0.000    4.551    0.000 nest.py:129(_sequence_like)
   154628    0.192    0.000    4.529    0.000 type_spec.py:301(__hash__)
   470388    0.428    0.000    4.523    0.000 lock_util.py:126(__exit__)
  1045894    4.429    0.000    4.429    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
   902036    4.404    0.000    4.404    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
  1408824    1.610    0.000    4.387    0.000 object_identity.py:195(update)
558238/556800    1.026    0.000    4.359    0.000 nest.py:461(_packed_nest_with_indices)
    59411    0.217    0.000    4.346    0.000 tf_inspect.py:238(getfullargspec)
   251080    0.334    0.000    4.315    0.000 dataset_ops.py:2927(merge)
5220/4836    0.017    0.000    4.232    0.001 def_function.py:1052(_get_concrete_function_garbage_collected)
   258050    0.411    0.000    4.227    0.000 type_spec.py:337(__get_cmp_key)
    35310    0.127    0.000    4.144    0.000 nest.py:1061(map_structure_up_to)
   159595    0.533    0.000    4.128    0.000 Hanabi.py:212(toarray)
   540807    0.841    0.000    4.124    0.000 structure.py:257(get_flat_tensor_specs)
    58282    0.148    0.000    4.110    0.000 context.py:2346(add_function)
5196/4812    0.008    0.000    4.098    0.001 def_function.py:1091(get_concrete_function)
   470388    1.348    0.000    4.096    0.000 lock_util.py:96(release)
    19412    0.140    0.000    4.087    0.000 resource_variable_ops.py:606(numpy)
    19314    0.048    0.000    4.049    0.000 dataset_ops.py:957(zip)
174074/173874    0.313    0.000    4.032    0.000 structure.py:407(type_spec_from_value)
     1938    0.022    0.000    4.028    0.002 callbacks.py:397(on_epoch_end)
    35310    0.305    0.000    4.017    0.000 nest.py:1142(map_structure_with_tuple_paths_up_to)
    19314    0.234    0.000    4.001    0.000 dataset_ops.py:3472(__init__)
    59339    0.725    0.000    3.985    0.000 inspect.py:1089(getfullargspec)
   251080    1.088    0.000    3.980    0.000 options.py:89(merge_options)
   552968    1.460    0.000    3.971    0.000 ops.py:4091(name_scope)
    58282    0.212    0.000    3.956    0.000 context.py:1085(add_function)
5064/1224    0.012    0.000    3.929    0.003 save_impl.py:546(get_concrete_function)
  364/244    0.003    0.000    3.926    0.016 def_function.py:583(wrapped_fn)
    96569    0.150    0.000    3.871    0.000 structure.py:355(to_tensor_list)
    19314    0.180    0.000    3.867    0.000 callbacks.py:202(__init__)
   469724    0.667    0.000    3.840    0.000 tpu.py:223(tpu_replicated_input_resolver)
1368/1176    0.009    0.000    3.823    0.003 save_impl.py:401(add_trace)
    51748    1.282    0.000    3.748    0.000 function.py:2151(_build_call_outputs)
679122/258050    1.087    0.000    3.733    0.000 type_spec.py:342(__make_cmp_key)
   174074    0.561    0.000    3.718    0.000 type_spec.py:555(_type_spec_from_value)
    58282    3.690    0.000    3.690    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
    19688    0.217    0.000    3.659    0.000 resource_variable_ops.py:668(read_value)
   847250    1.966    0.000    3.651    0.000 tensor_shape.py:746(__init__)
   271382    1.029    0.000    3.635    0.000 base.py:854(_handle_deferred_dependencies)
  1086340    3.624    0.000    3.624    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
   845365    1.667    0.000    3.622    0.000 dtypes.py:172(is_compatible_with)
  2620086    2.159    0.000    3.599    0.000 ops.py:5989(get_default_graph)
   470388    3.597    0.000    3.597    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
    57966    1.212    0.000    3.590    0.000 conversion.py:129(is_whitelisted)
        1    0.003    0.003    3.527    3.527 Experiment.py:200(save)
   455772    0.395    0.000    3.499    0.000 ops.py:421(shape)
109333/23019    0.397    0.000    3.439    0.000 training.py:322(__setattr__)
   594827    0.596    0.000    3.382    0.000 {built-in method builtins.all}
    58306    0.209    0.000    3.344    0.000 function.py:1549(_set_function_spec)
    19314    0.088    0.000    3.341    0.000 data_adapter.py:995(_process_tensorlike)
   115983    0.104    0.000    3.341    0.000 structure.py:321(reduce_fn)
   318409    2.364    0.000    3.310    0.000 tensor_shape.py:1193(as_proto)
   193139    0.510    0.000    3.305    0.000 dataset_ops.py:528(_flat_shapes)
   291293    1.150    0.000    3.304    0.000 tensor_spec.py:39(__init__)
     1938    0.005    0.000    3.291    0.002 callbacks.py:971(on_epoch_end)
     1938    0.029    0.000    3.285    0.002 callbacks.py:1019(_finalize_progbar)
   470388    1.108    0.000    3.271    0.000 ops.py:4439(_apply_device_functions)
   347892    0.206    0.000    3.214    0.000 api.py:519(<genexpr>)
  1252200    2.780    0.000    3.198    0.000 object_identity.py:174(__init__)
  1417933    1.819    0.000    3.194    0.000 nest.py:203(_yield_sorted_items)
   749318    3.060    0.000    3.173    0.000 <string>:1(__init__)
  1389704    3.136    0.000    3.146    0.000 _collections_abc.py:742(__iter__)
   270403    0.413    0.000    3.135    0.000 structure.py:273(get_flat_tensor_shapes)
   216754    0.978    0.000    3.103    0.000 ops.py:444(_c_api_shape)
    58306    1.453    0.000    3.096    0.000 function.py:1562(_initialize_function_spec)
    19314    0.067    0.000    3.078    0.000 gen_dataset_ops.py:5296(range_dataset)
   793390    1.658    0.000    3.070    0.000 Hanabi.py:70(toarray)
   331886    1.559    0.000    3.067    0.000 functools.py:44(update_wrapper)
    57988    0.522    0.000    3.063    0.000 api.py:157(tf_convert)
     2376    0.010    0.000    3.062    0.001 save_impl.py:415(trace_with_training)
  7686488    1.844    0.000    3.060    0.000 pickle.py:213(write)
    35310    0.041    0.000    3.053    0.000 nest.py:1234(<listcomp>)
    35310    0.056    0.000    3.011    0.000 nest.py:1137(<lambda>)
   289910    0.384    0.000    3.008    0.000 api.py:343(_is_of_known_loaded_module)
  1611078    1.221    0.000    3.006    0.000 c_api_util.py:157(tf_buffer)
    19314    0.082    0.000    2.994    0.000 callbacks.py:274(set_model)
60271/59339    0.425    0.000    2.984    0.000 inspect.py:2183(_signature_from_callable)
   470388    2.079    0.000    2.983    0.000 lock_util.py:106(_another_group_active)
    20271    0.105    0.000    2.981    0.000 resource_variable_ops.py:643(_read_variable_op)
    31919    0.115    0.000    2.979    0.000 Hanabi.py:272(<listcomp>)
  1022313    0.655    0.000    2.978    0.000 nest.py:198(_yield_value)
    19264    0.191    0.000    2.927    0.000 training.py:2667(concat)
   170/74    0.003    0.000    2.901    0.039 def_function.py:663(_initialize)
    58031    0.150    0.000    2.897    0.000 <__array_function__ internals>:2(array_equal)
     2856    0.004    0.000    2.895    0.001 save.py:141(list_functions)
   170/74    0.001    0.000    2.852    0.039 function.py:2850(_get_concrete_function_internal_garbage_collected)
123499/32791    0.704    0.000    2.847    0.000 base_layer.py:2756(__setattr__)
  3463305    2.803    0.000    2.803    0.000 _weakrefset.py:70(__contains__)
       84    0.001    0.000    2.799    0.033 base_layer.py:3017(_list_functions_for_serialization)
       84    0.001    0.000    2.798    0.033 base_serialization.py:76(list_functions_for_serialization)
  2121579    1.061    0.000    2.784    0.000 dtypes.py:84(base_dtype)
  2109372    2.413    0.000    2.771    0.000 dtypes.py:192(__eq__)
  1246365    1.497    0.000    2.761    0.000 context.py:1851(executing_eagerly)
   939448    1.170    0.000    2.759    0.000 tpu.py:239(replace_with_unreplicated_resources)
   123644    0.356    0.000    2.758    0.000 nest.py:1379(flatten_with_tuple_paths)
    13530    0.093    0.000    2.722    0.000 Experiment.py:39(availableActions)
       50    0.002    0.000    2.698    0.054 function_base.py:2093(_get_ufunc_and_otypes)
    57982    0.346    0.000    2.685    0.000 inspect_utils.py:82(isbuiltin)
    57946    0.088    0.000    2.653    0.000 structure.py:210(from_compatible_tensor_list)
       24    0.008    0.000    2.645    0.110 save.py:168(__init__)
  1451087    1.506    0.000    2.636    0.000 compat.py:64(as_bytes)
    66825    0.277    0.000    2.613    0.000 iostream.py:195(schedule)
   181107    0.196    0.000    2.609    0.000 constant_op.py:298(_constant_eager_impl)
    58031    1.103    0.000    2.606    0.000 numeric.py:2287(array_equal)
  5015578    1.666    0.000    2.589    0.000 pickle.py:448(get)
    58557    0.041    0.000    2.571    0.000 c_api_util.py:53(__del__)
    57946    0.389    0.000    2.566    0.000 structure.py:175(_from_tensor_list_helper)
    96669    0.152    0.000    2.554    0.000 structure.py:376(<lambda>)
    58557    2.530    0.000    2.530    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteGraph}
    59339    1.040    0.000    2.506    0.000 inspect.py:2102(_signature_from_function)
    96669    0.229    0.000    2.502    0.000 type_spec.py:211(_to_tensor_list)
       12    0.000    0.000    2.501    0.208 signature_serialization.py:71(find_function_to_export)
       12    0.000    0.000    2.500    0.208 training.py:2581(_list_functions_for_serialization)
   470388    2.308    0.000    2.459    0.000 ops.py:6880(_reconstruct_sequence_inputs)
   411956    1.088    0.000    2.439    0.000 ops.py:3848(_get_tensor_by_tf_output)
  3868264    1.646    0.000    2.435    0.000 compat.py:90(as_text)
  312/192    0.008    0.000    2.417    0.013 save_impl.py:511(wrapper)
   181107    2.129    0.000    2.413    0.000 constant_op.py:70(convert_to_eager_tensor)
  1408824    0.929    0.000    2.380    0.000 object_identity.py:196(<listcomp>)
    58500    0.378    0.000    2.369    0.000 c_api_util.py:45(__init__)
    55302    0.416    0.000    2.367    0.000 tf_utils.py:531(_to_single_numpy_or_python_type)
   289910    2.361    0.000    2.361    0.000 api.py:347(<genexpr>)
  636/588    0.002    0.000    2.341    0.004 layer_serialization.py:81(_get_serialized_attributes)
       72    0.000    0.000    2.336    0.032 layer_serialization.py:77(functions_to_serialize)
       12    0.000    0.000    2.329    0.194 model_serialization.py:45(_get_serialized_attributes_internal)
   470388    0.601    0.000    2.316    0.000 threading.py:357(notify_all)
    38628    0.105    0.000    2.313    0.000 gen_dataset_ops.py:5498(repeat_dataset)
   605778    1.166    0.000    2.311    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
    19264    0.156    0.000    2.291    0.000 array_ops.py:1562(concat)
    57985    0.406    0.000    2.254    0.000 api.py:244(decorator)
   509344    1.272    0.000    2.234    0.000 ops.py:4206(unique_name)
  1873908    0.969    0.000    2.226    0.000 options.py:74(get_fn)
    39360    0.200    0.000    2.223    0.000 iostream.py:382(write)
    19314    0.061    0.000    2.221    0.000 gen_dataset_ops.py:3266(model_dataset)
    23246    0.214    0.000    2.212    0.000 resource_variable_ops.py:830(_lazy_read)
   706504    0.514    0.000    2.181    0.000 ops.py:1925(<genexpr>)
     1938    0.012    0.000    2.179    0.001 training.py:1617(reset_metrics)
   470284    2.165    0.000    2.165    0.000 c_api_util.py:190(tf_output)
      780    0.010    0.000    2.164    0.003 def_function.py:1024(_list_all_concrete_functions_for_serialization)
    20271    0.101    0.000    2.160    0.000 resource_variable_ops.py:646(read_and_set_handle)
   821095    1.342    0.000    2.114    0.000 base.py:577(_maybe_initialize_trackable)
   127676    0.227    0.000    2.099    0.000 Hanabi.py:219(<listcomp>)
   470388    1.654    0.000    2.096    0.000 ops.py:3052(_add_op)
    96669    0.291    0.000    2.089    0.000 tensor_spec.py:155(_to_components)
   120/96    0.001    0.000    2.072    0.022 utils.py:153(wrap_with_training_arg)
   120/96    0.001    0.000    2.061    0.021 tf_utils.py:42(smart_cond)
   120/96    0.001    0.000    2.060    0.021 smart_cond.py:27(smart_cond)
   120/96    0.001    0.000    2.059    0.021 utils.py:163(replace_training_and_call)
    20571    0.066    0.000    2.056    0.000 gen_resource_variable_ops.py:452(read_variable_op)
   599363    0.536    0.000    2.049    0.000 structure.py:269(<lambda>)
   207674    0.181    0.000    2.038    0.000 nest.py:1310(yield_flat_paths)
     1937    0.018    0.000    2.035    0.001 metrics.py:241(reset_states)
   474315    0.474    0.000    2.019    0.000 tensor_shape.py:1230(as_shape)
   276990    0.328    0.000    2.014    0.000 ops.py:3886(as_default)
   116758    1.354    0.000    1.984    0.000 function.py:2388(__init__)
    60/12    0.000    0.000    1.981    0.165 layer_serialization.py:101(_get_serialized_attributes_internal)
    66825    1.974    0.000    1.974    0.000 socket.py:357(send)
    60/12    0.002    0.000    1.965    0.164 save_impl.py:134(wrap_layer_functions)
  372/308    0.014    0.000    1.961    0.006 base_layer.py:875(__call__)
       12    0.003    0.000    1.955    0.163 save.py:594(_fill_meta_graph_def)
539222/381062    0.927    0.000    1.947    0.000 nest.py:720(_yield_flat_up_to)
    58500    1.931    0.000    1.931    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
       88    0.000    0.000    1.923    0.022 functional.py:367(call)
       88    0.008    0.000    1.922    0.022 functional.py:464(_run_internal_graph)
   939499    0.889    0.000    1.909    0.000 registry.py:82(lookup)
   529799    0.646    0.000    1.894    0.000 tensor_spec.py:87(__hash__)
   313297    0.736    0.000    1.891    0.000 op_def_library.py:173(_MakeType)
    58365    0.106    0.000    1.879    0.000 c_api_util.py:94(__del__)
      120    0.001    0.000    1.877    0.016 save_impl.py:495(add_function)
   471811    0.536    0.000    1.874    0.000 func_graph.py:595(capture)
     1937    0.068    0.000    1.861    0.001 backend.py:3565(batch_set_value)
23582/23552    0.147    0.000    1.852    0.000 variables.py:258(__call__)
    19314    0.061    0.000    1.846    0.000 data_adapter.py:963(select_data_adapter)
   116064    0.131    0.000    1.831    0.000 ag_logging.py:138(log)
  336/192    0.002    0.000    1.805    0.009 save_impl.py:541(__call__)
  168/120    0.002    0.000    1.799    0.015 save_impl.py:567(call_and_return_conditional_losses)
  1023636    1.705    0.000    1.793    0.000 options.py:33(__init__)
  4327098    1.688    0.000    1.791    0.000 enum.py:332(<genexpr>)
    19314    0.249    0.000    1.783    0.000 data_adapter.py:965(<listcomp>)
    58365    1.773    0.000    1.773    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteFunction}
  1354100    1.761    0.000    1.770    0.000 {built-in method builtins.sorted}
    19314    0.114    0.000    1.753    0.000 gen_dataset_ops.py:106(anonymous_iterator_v2)
    57942    0.213    0.000    1.748    0.000 data_adapter.py:1011(_convert_numpy_and_scipy)
    58306    1.739    0.000    1.739    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
    19314    0.063    0.000    1.735    0.000 gen_dataset_ops.py:5189(prefetch_dataset)
   599433    0.851    0.000    1.725    0.000 pickle.py:413(memoize)
  2121627    1.723    0.000    1.723    0.000 dtypes.py:71(_is_ref_dtype)
   193139    0.262    0.000    1.719    0.000 dataset_ops.py:537(_flat_types)
   180988    0.442    0.000    1.705    0.000 ops.py:5639(init_scope)
   676676    0.788    0.000    1.705    0.000 type_spec.py:262(_flat_tensor_specs)
   116080    0.113    0.000    1.701    0.000 ag_logging.py:121(has_verbosity)
    12205    0.210    0.000    1.693    0.000 Experiment.py:58(availableActionsData)
    51361    0.428    0.000    1.684    0.000 def_function.py:97(called_without_tracing)
  1236154    1.681    0.000    1.681    0.000 {built-in method tensorflow.python._pywrap_utils.FlattenForData}
   116612    0.418    0.000    1.672    0.000 func_graph.py:1061(check_mutation)
   174062    0.342    0.000    1.671    0.000 tensor_util.py:309(_AssertCompatible)
   470388    0.485    0.000    1.668    0.000 ops.py:5153(_mutation_lock)
    80615    1.626    0.000    1.641    0.000 {method 'reduce' of 'numpy.ufunc' objects}
    23542    0.077    0.000    1.640    0.000 gen_resource_variable_ops.py:123(assign_variable_op)
    57944    0.054    0.000    1.620    0.000 op_def_library.py:700(<listcomp>)
    51711    0.189    0.000    1.608    0.000 type_spec.py:293(__eq__)
   469724    0.562    0.000    1.602    0.000 dataset_ops.py:4572(_resource_resolver)
    74714    0.255    0.000    1.602    0.000 ops.py:1039(numpy)
    56946    0.365    0.000    1.601    0.000 function.py:2513(canonicalize_function_inputs)
   116504    1.592    0.000    1.592    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
   470388    0.705    0.000    1.591    0.000 ops.py:1995(_control_flow_post_processing)
   470388    1.089    0.000    1.590    0.000 threading.py:334(notify)
   116080    0.308    0.000    1.588    0.000 ag_logging.py:114(get_verbosity)
    78750    0.288    0.000    1.583    0.000 ops.py:2422(_set_attr)
    58248    0.129    0.000    1.571    0.000 op_def_library.py:184(_MakeShape)
   135192    0.346    0.000    1.551    0.000 nest.py:195(map_structure)
   212462    0.219    0.000    1.551    0.000 structure.py:286(get_flat_tensor_types)
    16044    0.063    0.000    1.544    0.000 gen_array_ops.py:1183(concat_v2)
   469592    0.743    0.000    1.544    0.000 errors_impl.py:264(__init__)
   939448    0.631    0.000    1.532    0.000 auto_control_deps.py:125(op_is_stateful)
339561/258050    0.332    0.000    1.529    0.000 type_spec.py:357(<listcomp>)
   270394    0.646    0.000    1.478    0.000 dataset_ops.py:3795(__init__)
   371616    1.464    0.000    1.464    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
   470388    0.619    0.000    1.456    0.000 ops.py:5059(_snapshot_colocation_stack_metadata)
    11332    0.119    0.000    1.453    0.000 Experiment.py:52(<listcomp>)
   309019    0.542    0.000    1.441    0.000 nest.py:157(pack_sequence_as)
  2620086    1.440    0.000    1.440    0.000 ops.py:5557(get_default)
  2205940    1.430    0.000    1.430    0.000 context.py:791(executing_eagerly)
   746406    1.413    0.000    1.413    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
  9045192    1.411    0.000    1.411    0.000 inspect_utils.py:84(<genexpr>)
    19314    0.051    0.000    1.405    0.000 dataset_ops.py:2112(with_options)
    60/48    0.000    0.000    1.401    0.029 utils.py:169(<lambda>)
    19314    0.151    0.000    1.399    0.000 dataset_ops.py:3581(_parse_args)
    19314    0.056    0.000    1.399    0.000 gen_dataset_ops.py:7053(zip_dataset)
   319449    0.801    0.000    1.379    0.000 ops.py:6385(name_scope)
   685406    0.544    0.000    1.371    0.000 nest.py:96(_sorted)
   469118    0.581    0.000    1.367    0.000 auto_control_deps_utils.py:112(<genexpr>)
    58306    0.081    0.000    1.355    0.000 func_graph.py:1258(_get_defun_inputs_from_kwargs)
    19314    0.078    0.000    1.354    0.000 dataset_ops.py:4358(__init__)
   326987    0.281    0.000    1.352    0.000 nest.py:631(<listcomp>)
  1717335    0.908    0.000    1.342    0.000 ops.py:4998(_device_function_stack)
   805539    1.304    0.000    1.304    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
   470004    0.760    0.000    1.289    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
    23246    0.116    0.000    1.283    0.000 resource_variable_ops.py:1924(__init__)
6915682/6915610    1.282    0.000    1.282    0.000 {built-in method builtins.len}
   116082    0.251    0.000    1.280    0.000 os.py:760(getenv)
    77313    0.105    0.000    1.270    0.000 structure.py:229(<lambda>)
   150638    0.342    0.000    1.267    0.000 _collections_abc.py:657(get)
    44573    0.220    0.000    1.256    0.000 resource_variable_ops.py:329(variable_accessed)
    58048    0.124    0.000    1.254    0.000 {method 'all' of 'numpy.ndarray' objects}
   411956    0.392    0.000    1.245    0.000 ops.py:3823(_get_operation_by_tf_operation)
    57942    0.076    0.000    1.245    0.000 dataset_ops.py:3602(_build_tensor)
  1043388    0.445    0.000    1.245    0.000 config_lib.py:50(get_action)
      192    0.002    0.000    1.242    0.006 utils.py:66(return_outputs_and_add_losses)
   588200    0.488    0.000    1.233    0.000 ops.py:216(uid)
   954912    0.727    0.000    1.230    0.000 ops.py:5075(_control_dependencies_stack)
   113820    0.323    0.000    1.230    0.000 function.py:2646(_convert_numpy_inputs)
    78607    0.200    0.000    1.219    0.000 ops.py:5202(device)
       24    0.001    0.000    1.218    0.051 functional_saver.py:202(save)
   137156    0.647    0.000    1.216    0.000 distribution_strategy_context.py:79(_get_per_thread_mode)
  7687276    1.215    0.000    1.215    0.000 {method 'write' of '_io.BufferedWriter' objects}
       12    0.001    0.000    1.211    0.101 util.py:1152(save)
       12    0.000    0.000    1.204    0.100 util.py:1117(_save_cached_when_graph_building)
       24    0.001    0.000    1.185    0.049 functional_saver.py:252(save_fn)
   391203    0.975    0.000    1.183    0.000 tf_decorator.py:236(__init__)
   470388    0.722    0.000    1.183    0.000 lock_util.py:74(group)
   299642    0.636    0.000    1.181    0.000 context.py:219(push)
   410285    0.322    0.000    1.177    0.000 op_def_library.py:510(<listcomp>)
    77313    0.153    0.000    1.166    0.000 tensor_spec.py:169(_from_compatible_tensor_list)
  1999573    1.118    0.000    1.164    0.000 object_identity.py:211(__iter__)
   216065    0.378    0.000    1.163    0.000 op_def_library.py:84(_Flatten)
   469724    0.402    0.000    1.157    0.000 auto_control_deps.py:136(collective_manager_ids_from_op)
   572497    0.634    0.000    1.151    0.000 tensor_shape.py:756(<listcomp>)
    23552    0.390    0.000    1.144    0.000 resource_variable_ops.py:341(__init__)
   174079    0.753    0.000    1.143    0.000 tensor_util.py:339(_is_array_like)
  1451671    1.134    0.000    1.134    0.000 {built-in method numpy.zeros}
   120662    0.553    0.000    1.131    0.000 tensor_shape.py:1074(is_compatible_with)
  1015826    0.669    0.000    1.130    0.000 ops.py:5094(_distribution_strategy_stack)
    58060    0.071    0.000    1.130    0.000 _methods.py:47(_all)
  5886414    1.122    0.000    1.124    0.000 {built-in method _struct.pack}
   686375    1.108    0.000    1.121    0.000 traceable_stack.py:119(peek_objs)
   276990    0.406    0.000    1.119    0.000 context.py:2001(graph_mode)
    57085    0.839    0.000    1.112    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_EncodeArg}
   154675    0.296    0.000    1.107    0.000 tensor_util.py:194(GetNumpyAppendFn)
    74714    0.107    0.000    1.098    0.000 ops.py:1027(_numpy)
    96689    0.098    0.000    1.091    0.000 array_ops.py:1489(_autopacking_conversion_function)
    58282    0.130    0.000    1.080    0.000 function.py:3595(defun_with_attributes)
   116662    0.087    0.000    1.065    0.000 function.py:1529(<genexpr>)
   215655    0.320    0.000    1.047    0.000 func_graph.py:1055(device_stack_has_callable)
   470284    1.038    0.000    1.038    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
    51364    0.452    0.000    1.038    0.000 def_function.py:91(_get_counter)
    19264    0.141    0.000    1.037    0.000 callbacks.py:571(on_predict_end)
   175158    0.858    0.000    1.036    0.000 ops.py:3761(get_operations)
   116011    0.187    0.000    1.035    0.000 tensor_util.py:263(inner)
    58306    0.224    0.000    1.031    0.000 auto_control_deps.py:225(__enter__)
   470388    0.405    0.000    1.028    0.000 ops.py:4603(_control_dependencies_for_inputs)
   273904    0.940    0.000    1.027    0.000 functools.py:74(wraps)
   469642    0.319    0.000    1.022    0.000 {method 'throw' of 'generator' objects}
    77789    0.393    0.000    1.012    0.000 ops.py:616(set_shape)
   115884    0.427    0.000    1.008    0.000 options.py:37(__eq__)
    57942    0.281    0.000    1.001    0.000 function_utils.py:89(get_func_name)
   625264    0.664    0.000    0.999    0.000 six.py:588(iteritems)
   599284    0.748    0.000    0.997    0.000 context.py:773(_mode)
  1101354    0.807    0.000    0.994    0.000 config_lib.py:33(matches)
   415906    0.438    0.000    0.993    0.000 tf_decorator.py:200(unwrap)
    74714    0.991    0.000    0.991    0.000 {method '_numpy_internal' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   276100    0.278    0.000    0.990    0.000 ops.py:6498(__exit__)
    96689    0.305    0.000    0.985    0.000 array_ops.py:1479(_should_not_autopack)
   116962    0.346    0.000    0.983    0.000 tf_logging.py:210(vlog)
   367824    0.640    0.000    0.981    0.000 tensor_shape.py:866(__getitem__)
       12    0.000    0.000    0.972    0.081 functional_saver.py:172(to_proto)
  1525996    0.968    0.000    0.968    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
   470388    0.451    0.000    0.967    0.000 ops.py:5019(_snapshot_device_function_stack_metadata)
    96655    0.126    0.000    0.962    0.000 distribution_strategy_context.py:179(get_strategy)
    19314    0.033    0.000    0.960    0.000 structure.py:329(to_batched_tensor_list)
      384    0.020    0.000    0.952    0.002 functional_ops.py:1112(partitioned_call)
   470388    0.338    0.000    0.950    0.000 ops.py:4637(_record_op_seen_by_control_dependencies)
   316117    0.867    0.000    0.946    0.000 tensor_shape.py:1199(<listcomp>)
      260    0.001    0.000    0.946    0.004 core.py:1192(call)
      144    0.001    0.000    0.945    0.007 save_impl.py:585(call)
      260    0.004    0.000    0.944    0.004 core.py:30(dense)
   917635    0.944    0.000    0.944    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceOrComposite}
  1241635    0.589    0.000    0.943    0.000 ops.py:4079(_name_stack)
    16056    0.036    0.000    0.929    0.000 callbacks.py:418(on_train_batch_begin)
    43084    0.147    0.000    0.926    0.000 base_layer.py:2690(_obj_reference_counts)
    19314    0.145    0.000    0.926    0.000 dataset_ops.py:2889(_graph_rewrites)
  1260718    0.921    0.000    0.921    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
   470000    0.914    0.000    0.914    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
   553980    0.632    0.000    0.909    0.000 ops.py:5387(get_controller)
    58306    0.259    0.000    0.904    0.000 auto_control_deps.py:178(__init__)
       24    0.001    0.000    0.903    0.038 functional_saver.py:57(save)
    58026    0.210    0.000    0.898    0.000 function.py:3245(validate_signature)
  3989753    0.888    0.000    0.888    0.000 context.py:1826(context_safe)
       52    0.036    0.001    0.876    0.017 Experiment.py:160(create_episode)
       24    0.000    0.000    0.874    0.036 gen_io_ops.py:1694(save_v2)
    16056    0.053    0.000    0.867    0.000 callbacks.py:293(_call_batch_begin_hook)
    77935    0.157    0.000    0.866    0.000 context.py:2016(device)
    40354    0.256    0.000    0.842    0.000 tape.py:104(variable_accessed)
    21500    0.194    0.000    0.841    0.000 base_layer.py:2714(__delattr__)
   270394    0.643    0.000    0.826    0.000 tracking.py:215(__init__)
    34119    0.106    0.000    0.824    0.000 Hanabi.py:365(count_discarded)
   154675    0.541    0.000    0.811    0.000 tensor_util.py:186(GetFromNumpyDTypeDict)
   216754    0.810    0.000    0.810    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
   412679    0.461    0.000    0.810    0.000 control_flow_util.py:266(CheckInputFromValidContext)
    19264    0.091    0.000    0.809    0.000 callbacks.py:554(on_predict_begin)
     2312    0.012    0.000    0.806    0.000 func_graph.py:644(_capture_helper)
   469594    0.784    0.000    0.801    0.000 errors_impl.py:64(__init__)
    58500    0.320    0.000    0.796    0.000 lock_util.py:54(__init__)
   251230    0.306    0.000    0.792    0.000 Hanabi.py:200(save)
   473616    0.536    0.000    0.792    0.000 _collections_abc.py:676(items)
    66960    0.508    0.000    0.786    0.000 inspect.py:2452(__init__)
     2186    0.014    0.000    0.780    0.000 func_graph.py:1123(_create_substitute_placeholder)
   118334    0.097    0.000    0.777    0.000 nest.py:357(assert_same_structure)
   942007    0.461    0.000    0.777    0.000 ops.py:5044(_colocation_stack)
    31919    0.164    0.000    0.775    0.000 Hanabi.py:215(<listcomp>)
  6175618    0.775    0.000    0.775    0.000 pickle.py:200(commit_frame)
  1160040    0.540    0.000    0.773    0.000 _dill.py:380(get)
   453280    0.695    0.000    0.772    0.000 Hanabi.py:196(__init__)
    78750    0.117    0.000    0.761    0.000 ops.py:2431(_set_attr_with_buf)
   110110    0.378    0.000    0.760    0.000 function.py:2008(captured_inputs)
       12    0.000    0.000    0.755    0.063 gen_io_ops.py:1743(save_v2_eager_fallback)
   116082    0.488    0.000    0.753    0.000 os.py:664(__getitem__)
   588200    0.745    0.000    0.745    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
   723750    0.531    0.000    0.745    0.000 __init__.py:1544(isEnabledFor)
    25318    0.019    0.000    0.744    0.000 <__array_function__ internals>:2(vstack)
  8019798    0.742    0.000    0.742    0.000 {built-in method builtins.id}
    57966    0.151    0.000    0.735    0.000 conversion.py:242(cache_whitelisted)
   721183    0.579    0.000    0.721    0.000 enum.py:331(__iter__)
   274474    0.174    0.000    0.709    0.000 nest.py:104(_is_namedtuple)
  4026960    0.709    0.000    0.709    0.000 {method 'append' of 'list' objects}
    34119    0.149    0.000    0.704    0.000 Hanabi.py:366(<dictcomp>)
    58488    0.424    0.000    0.704    0.000 ops.py:4037(get_all_collection_keys)
    58032    0.143    0.000    0.702    0.000 conversion.py:234(is_in_whitelist_cache)
   469724    0.475    0.000    0.695    0.000 control_flow_util.py:82(IsInWhileLoop)
    13530    0.128    0.000    0.686    0.000 Hanabi.py:312(move)
    19314    0.034    0.000    0.683    0.000 structure.py:351(<lambda>)
     8778    0.023    0.000    0.681    0.000 <__array_function__ internals>:2(mean)
   118334    0.680    0.000    0.680    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructure}
       16    0.000    0.000    0.678    0.042 func_graph.py:958(wrapper)
   135192    0.112    0.000    0.672    0.000 nest.py:245(<listcomp>)
   292508    0.671    0.000    0.671    0.000 op_def_library.py:38(_Attr)
    12421    0.039    0.000    0.670    0.000 <__array_function__ internals>:2(amax)
   898500    0.660    0.000    0.668    0.000 {built-in method __new__ of type object at 0x9d12c0}
  2207447    0.528    0.000    0.665    0.000 {built-in method builtins.setattr}
  1313047    0.664    0.000    0.664    0.000 {method 'encode' of 'str' objects}
    60/48    0.000    0.000    0.658    0.014 utils.py:170(<lambda>)
   606782    0.214    0.000    0.657    0.000 __init__.py:1298(info)
    19314    0.179    0.000    0.657    0.000 optimization_options.py:215(_graph_rewrites)
    77910    0.078    0.000    0.652    0.000 func_graph.py:1142(_get_composite_tensor_spec)
    19314    0.053    0.000    0.650    0.000 type_spec.py:498(_to_batched_tensor_list)
   350402    0.308    0.000    0.648    0.000 tensor_shape.py:1180(as_list)
    25318    0.043    0.000    0.646    0.000 shape_base.py:224(vstack)
    19314    0.133    0.000    0.645    0.000 training.py:2626(_in_multi_worker_mode)
   216068    0.274    0.000    0.642    0.000 ops.py:6051(_get_graph_from_inputs)
     8778    0.124    0.000    0.635    0.000 fromnumeric.py:3231(mean)
    11332    0.156    0.000    0.628    0.000 Experiment.py:47(<listcomp>)
    10113    0.216    0.000    0.626    0.000 Experiment.py:66(<listcomp>)
   105511    0.231    0.000    0.626    0.000 ops.py:1160(shape)
    58306    0.538    0.000    0.625    0.000 function.py:229(_parse_func_attrs)
   216065    0.291    0.000    0.623    0.000 op_def_library.py:87(<listcomp>)
    59339    0.470    0.000    0.621    0.000 inspect.py:2732(__init__)
    19313    0.130    0.000    0.618    0.000 structure.py:119(convert_legacy_structure)
    58356    0.093    0.000    0.616    0.000 ops.py:1602(convert_to_tensor_or_composite)
    78750    0.609    0.000    0.609    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetAttr}
    31919    0.330    0.000    0.609    0.000 Hanabi.py:266(<listcomp>)
    38694    0.132    0.000    0.606    0.000 variable_scope.py:2738(variable_creator_scope)
   116482    0.270    0.000    0.604    0.000 ag_ctx.py:61(__exit__)
       24    0.000    0.000    0.604    0.025 function.py:3718(bound_method_wrapper)
    96710    0.600    0.000    0.600    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
    38653    0.104    0.000    0.598    0.000 training.py:679(distribute_strategy)
    38626    0.092    0.000    0.598    0.000 dataset_ops.py:2796(get_legacy_output_types)
        4    0.000    0.000    0.596    0.149 distribute_lib.py:1130(run)
        4    0.000    0.000    0.596    0.149 distribute_lib.py:2537(call_for_each_replica)
        4    0.000    0.000    0.596    0.149 distribute_lib.py:2941(_call_for_each_replica)
    12421    0.073    0.000    0.595    0.000 fromnumeric.py:2551(amax)
    19347    0.070    0.000    0.594    0.000 distribute_lib.py:2863(__enter__)
    42404    0.071    0.000    0.590    0.000 data_adapter.py:1164(catch_stop_iteration)
   173946    0.380    0.000    0.586    0.000 api.py:352(_is_known_loaded_type)
        3    0.000    0.000    0.585    0.195 tmphwkujs8b.py:9(tf__train_function)
        3    0.000    0.000    0.585    0.195 training.py:785(step_function)
      583    0.001    0.000    0.584    0.001 resource_variable_ops.py:1908(_dense_var_to_tensor)
   465419    0.295    0.000    0.583    0.000 ag_ctx.py:29(_control_ctx)
      583    0.002    0.000    0.583    0.001 resource_variable_ops.py:1317(_dense_var_to_tensor)
    19487    0.128    0.000    0.580    0.000 monitoring.py:335(get_cell)
        3    0.000    0.000    0.577    0.192 training.py:788(run_step)
    58110    0.123    0.000    0.576    0.000 function.py:1494(<listcomp>)
        3    0.000    0.000    0.572    0.191 training.py:716(train_step)
      583    0.003    0.000    0.568    0.001 resource_variable_ops.py:550(value)
    77935    0.348    0.000    0.565    0.000 context.py:827(device)
   278297    0.170    0.000    0.564    0.000 dtypes.py:205(__ne__)
    58048    0.265    0.000    0.559    0.000 cache.py:43(has)
    68366    0.185    0.000    0.556    0.000 object_identity.py:192(add)
    19353    0.096    0.000    0.553    0.000 tensor_util.py:1036(maybe_set_static_shape)
       52    0.002    0.000    0.553    0.011 Experiment.py:165(<listcomp>)
      520    0.004    0.000    0.551    0.001 Hanabi.py:290(__init__)
    67290    0.541    0.000    0.551    0.000 threading.py:215(__init__)
    38628    0.133    0.000    0.551    0.000 data_adapter.py:1549(_is_distributed_dataset)
    39053    0.548    0.000    0.548    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInputList}
    57942    0.236    0.000    0.548    0.000 data_adapter.py:235(can_handle)
   174834    0.299    0.000    0.546    0.000 function.py:3763(__del__)
    77935    0.392    0.000    0.538    0.000 context.py:1738(__enter__)
  1142589    0.537    0.000    0.537    0.000 ops.py:3071(_c_graph)
   274474    0.535    0.000    0.535    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
     1938    0.029    0.000    0.534    0.000 callbacks.py:1045(on_epoch_end)
      156    0.037    0.000    0.531    0.003 tracking.py:103(_list_functions_for_serialization)
   529915    0.450    0.000    0.530    0.000 tensor_shape.py:185(__init__)
    38678    0.097    0.000    0.528    0.000 data_adapter.py:275(<genexpr>)
    13293    0.097    0.000    0.528    0.000 fromnumeric.py:73(_wrapreduction)
    58282    0.410    0.000    0.527    0.000 function.py:2728(__init__)
    58306    0.135    0.000    0.527    0.000 variable_scope.py:1433(get_variable_scope)
   181756    0.288    0.000    0.526    0.000 tape.py:150(stop_recording)
   116962    0.191    0.000    0.525    0.000 __init__.py:1359(log)
  6175618    0.524    0.000    0.524    0.000 pickle.py:523(persistent_id)
    58356    0.126    0.000    0.523    0.000 ops.py:1625(internal_convert_to_tensor_or_composite)
   884289    0.522    0.000    0.522    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
    19314    0.077    0.000    0.521    0.000 data_adapter.py:681(can_handle)
    21214    0.059    0.000    0.519    0.000 context.py:2310(async_wait)
   479078    0.311    0.000    0.516    0.000 threading.py:254(_is_owned)
    58033    0.490    0.000    0.516    0.000 converter.py:153(__init__)
      520    0.025    0.000    0.515    0.001 Hanabi.py:129(__init__)
   115883    0.135    0.000    0.514    0.000 nest.py:104(assert_same_structure)
     8778    0.178    0.000    0.511    0.000 _methods.py:134(_mean)
   413388    0.510    0.000    0.510    0.000 ops.py:3800(_get_operation_by_name_unsafe)
    10113    0.146    0.000    0.507    0.000 Experiment.py:71(<listcomp>)
  1411164    0.505    0.000    0.505    0.000 lock_util.py:110(_validate_group_id)
    51713    0.503    0.000    0.503    0.000 weakref.py:431(__contains__)
   215677    0.214    0.000    0.499    0.000 backprop.py:170(_must_record_gradient)
   470388    0.495    0.000    0.495    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
    77789    0.492    0.000    0.492    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
    38669    0.263    0.000    0.484    0.000 ops.py:1523(internal_convert_n_to_tensor)
   469592    0.373    0.000    0.480    0.000 errors_impl.py:117(__str__)
    55366    0.147    0.000    0.476    0.000 <__array_function__ internals>:2(ndim)
   336299    0.319    0.000    0.472    0.000 tensor_conversion_registry.py:114(get)
      281    0.004    0.000    0.468    0.002 gen_math_ops.py:5591(mat_mul)
   468399    0.329    0.000    0.457    0.000 function.py:2840(input_signature)
    21214    0.065    0.000    0.455    0.000 context.py:645(sync_executors)
        3    0.000    0.000    0.454    0.151 training.py:2696(_minimize)
     1938    0.030    0.000    0.452    0.000 callbacks.py:377(on_epoch_begin)
   422617    0.177    0.000    0.450    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
   494372    0.326    0.000    0.448    0.000 ops.py:402(graph)
   689029    0.447    0.000    0.447    0.000 op_def_registry.py:34(get)
    57942    0.221    0.000    0.446    0.000 tf_inspect.py:370(isfunction)
    19314    0.216    0.000    0.443    0.000 iterator_ops.py:525(__init__)
   547788    0.304    0.000    0.443    0.000 ops.py:5117(_auto_cast_variable_read_dtype)
    77935    0.341    0.000    0.441    0.000 context.py:1772(__exit__)
   226280    0.438    0.000    0.438    0.000 {method 'format' of 'str' objects}
   883067    0.354    0.000    0.436    0.000 ops.py:3472(<genexpr>)
    13530    0.073    0.000    0.435    0.000 Experiment.py:42(<listcomp>)
  1774372    0.434    0.000    0.434    0.000 ops.py:397(dtype)
    58505    0.419    0.000    0.434    0.000 weakref.py:354(__init__)
    19487    0.114    0.000    0.432    0.000 monitoring.py:136(get_cell)
   135416    0.107    0.000    0.431    0.000 function.py:3246(<genexpr>)
   665148    0.290    0.000    0.430    0.000 op_def_library.py:80(_IsListValue)
   267425    0.430    0.000    0.430    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
   695500    0.429    0.000    0.429    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceForData}
       12    0.006    0.000    0.429    0.036 save.py:276(map_resources)
    26000    0.141    0.000    0.427    0.000 Hanabi.py:90(__init__)
    40354    0.046    0.000    0.426    0.000 distribution_strategy_context.py:215(get_strategy_and_replica_context)
   599433    0.278    0.000    0.425    0.000 pickle.py:436(put)
   299642    0.327    0.000    0.422    0.000 context.py:239(pop)
   106959    0.179    0.000    0.420    0.000 object_identity.py:131(__getitem__)
    19318    0.039    0.000    0.420    0.000 nest.py:1403(list_to_tuple)
    19347    0.095    0.000    0.418    0.000 distribute_lib.py:2872(__exit__)
       12    0.000    0.000    0.415    0.035 functional_saver.py:193(_traced_restore)
   851488    0.415    0.000    0.415    0.000 ops.py:796(_as_tf_output)
    75630    0.233    0.000    0.413    0.000 tensor_spec.py:90(__eq__)
   622729    0.201    0.000    0.412    0.000 {method 'extend' of 'list' objects}
    58306    0.410    0.000    0.410    0.000 function.py:474(<listcomp>)
    19314    0.070    0.000    0.408    0.000 dataset_ops.py:3147(_to_tensor_list)
      276    0.001    0.000    0.405    0.001 resource_variable_ops.py:636(_map_resources)
       12    0.000    0.000    0.404    0.034 functional_saver.py:297(restore)
       12    0.004    0.000    0.404    0.034 save.py:703(_serialize_object_graph)
       12    0.000    0.000    0.404    0.034 functional_saver.py:310(restore_fn)
       12    0.001    0.000    0.402    0.034 functional_saver.py:80(restore)
   224756    0.267    0.000    0.402    0.000 ops.py:1033(dtype)
    57982    0.203    0.000    0.402    0.000 cache.py:50(__getitem__)
    57968    0.050    0.000    0.396    0.000 op_def_library.py:695(<listcomp>)
      384    0.002    0.000    0.396    0.001 functional_ops.py:1175(<listcomp>)
    58341    0.062    0.000    0.392    0.000 function.py:384(__del__)
    58306    0.118    0.000    0.392    0.000 variable_scope.py:1420(get_variable_scope_store)
   567529    0.251    0.000    0.392    0.000 ops.py:3015(_variable_creator_stack)
    58144    0.389    0.000    0.389    0.000 {method 'astype' of 'numpy.ndarray' objects}
    21214    0.389    0.000    0.389    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextSyncExecutors}
    38626    0.051    0.000    0.389    0.000 dataset_ops.py:2762(get_legacy_output_classes)
      260    0.003    0.000    0.389    0.001 nn_ops.py:3307(bias_add)
   469724    0.283    0.000    0.387    0.000 registry.py:74(list)
    57942    0.386    0.000    0.386    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionSetAttrValueProto}
      276    0.003    0.000    0.385    0.001 resource_variable_ops.py:2133(copy_to_graph_uninitialized)
    35310    0.044    0.000    0.383    0.000 nest.py:1226(<listcomp>)
   940776    0.383    0.000    0.383    0.000 traceable_stack.py:123(peek_traceable_objs)
      289    0.006    0.000    0.383    0.001 resource_variable_ops.py:1821(__init__)
   115883    0.380    0.000    0.380    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructureForData}
      176    0.003    0.000    0.380    0.002 function.py:3085(_define_function_with_shape_relaxation)
   470004    0.378    0.000    0.378    0.000 context.py:1204(op_callbacks)
    33698    0.054    0.000    0.376    0.000 Hanabi.py:191(save)
    33240    0.052    0.000    0.375    0.000 Hanabi.py:183(save)
   940776    0.373    0.000    0.373    0.000 lock_util.py:108(<genexpr>)
   129972    0.216    0.000    0.369    0.000 training.py:328(<genexpr>)
   216065    0.369    0.000    0.369    0.000 op_def_library.py:737(<listcomp>)
      276    0.002    0.000    0.369    0.001 saveable_object_util.py:119(restore)
   195138    0.231    0.000    0.367    0.000 object_identity.py:183(_wrap_key)
      389    0.005    0.000    0.366    0.001 deprecation.py:473(new_func)
   121468    0.276    0.000    0.366    0.000 func_graph.py:740(internal_captures)
    57949    0.366    0.000    0.366    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}
    97653    0.154    0.000    0.364    0.000 object_identity.py:186(__contains__)
   276100    0.346    0.000    0.360    0.000 ops.py:6439(__init__)
    19313    0.040    0.000    0.359    0.000 dataset_ops.py:3523(<listcomp>)
   103140    0.236    0.000    0.356    0.000 iterator_ops.py:766(_type_spec)
    57966    0.162    0.000    0.356    0.000 config_lib.py:62(get_action)
270699/174062    0.290    0.000    0.354    0.000 tensor_util.py:219(_GetDenseDimensions)
    19314    0.030    0.000    0.354    0.000 dataset_ops.py:3005(<lambda>)
    54120    0.327    0.000    0.352    0.000 Hanabi.py:188(__init__)
   723199    0.349    0.000    0.349    0.000 {method 'pop' of 'list' objects}
       12    0.000    0.000    0.348    0.029 save_impl.py:202(default_save_signature)
   413556    0.348    0.000    0.348    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
   558526    0.345    0.000    0.345    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
  1575034    0.344    0.000    0.344    0.000 {method 'items' of 'dict' objects}
    19314    0.188    0.000    0.344    0.000 data_adapter.py:117(__init__)
289710/231768    0.208    0.000    0.341    0.000 dataset_ops.py:2972(element_spec)
    51384    0.184    0.000    0.340    0.000 nest.py:873(flatten_up_to)
   350354    0.258    0.000    0.339    0.000 tensor_shape.py:1191(<listcomp>)
  1437482    0.338    0.000    0.338    0.000 ops.py:2381(graph)
   270403    0.224    0.000    0.336    0.000 structure.py:283(<listcomp>)
    58341    0.051    0.000    0.331    0.000 context.py:2351(remove_function)
    19944    0.031    0.000    0.331    0.000 ops.py:5314(colocate_with)
    58087    0.152    0.000    0.331    0.000 math_ops.py:866(cast)
1487915/1487195    0.323    0.000    0.331    0.000 {method 'update' of 'set' objects}
        3    0.000    0.000    0.329    0.110 optimizer_v2.py:473(apply_gradients)
    19670    0.150    0.000    0.326    0.000 tensor_shape.py:1136(most_specific_compatible_shape)
   116612    0.161    0.000    0.326    0.000 variable_scope.py:1202(set_use_resource)
   479540    0.325    0.000    0.325    0.000 {built-in method builtins.max}
    19314    0.074    0.000    0.324    0.000 tensor_spec.py:190(_unbatch)
   489270    0.196    0.000    0.323    0.000 ops.py:2245(_add_control_inputs)
    19347    0.042    0.000    0.322    0.000 distribute_lib.py:791(scope)
   464166    0.265    0.000    0.322    0.000 tensor_shape.py:843(__len__)
   136217    0.200    0.000    0.321    0.000 context.py:1831(ensure_initialized)
   256394    0.166    0.000    0.320    0.000 pickle.py:652(save_long)
   155815    0.210    0.000    0.320    0.000 tensor_shape.py:252(is_compatible_with)
  1568832    0.320    0.000    0.320    0.000 {method 'pop' of 'dict' objects}
   292440    0.221    0.000    0.318    0.000 ops.py:3972(get_collection_ref)
    58306    0.170    0.000    0.317    0.000 function.py:356(_inference_name)
    19314    0.163    0.000    0.316    0.000 training.py:2453(_check_call_args)
    38626    0.046    0.000    0.315    0.000 dataset_ops.py:2779(get_legacy_output_shapes)
  1496021    0.314    0.000    0.314    0.000 {method 'startswith' of 'str' objects}
   179605    0.084    0.000    0.313    0.000 _asarray.py:16(asarray)
    19317    0.313    0.000    0.313    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
    57946    0.111    0.000    0.311    0.000 structure.py:196(<listcomp>)
  1704691    0.311    0.000    0.311    0.000 tensor_shape.py:247(value)
   895162    0.238    0.000    0.309    0.000 {built-in method builtins.issubclass}
      384    0.002    0.000    0.305    0.001 ops.py:3360(create_op)
    39422    0.200    0.000    0.303    0.000 ops.py:2979(_variable_creator_scope)
    19944    0.046    0.000    0.299    0.000 ops.py:5291(_colocate_with_for_gradient)
    57982    0.092    0.000    0.298    0.000 tf_inspect.py:335(getmodule)
  1282460    0.278    0.000    0.297    0.000 object_identity.py:175(<genexpr>)
    75615    0.147    0.000    0.297    0.000 threading.py:1104(is_alive)
   103448    0.297    0.000    0.297    0.000 def_function.py:752(_get_tracing_count)
   840247    0.295    0.000    0.295    0.000 tensor_spec.py:68(dtype)
     2112    0.016    0.000    0.294    0.000 {built-in method builtins.print}
    58051    0.111    0.000    0.294    0.000 tensor_util.py:280(_check_not_tensor)
     1938    0.019    0.000    0.292    0.000 callbacks.py:955(on_epoch_begin)
  1157526    0.289    0.000    0.292    0.000 {method 'keys' of 'dict' objects}
        6    0.000    0.000    0.292    0.049 distribute_lib.py:2683(merge_call)
   141586    0.200    0.000    0.291    0.000 weakref.py:428(get)
        6    0.000    0.000    0.291    0.048 distribute_lib.py:2717(_merge_call)
   485335    0.290    0.000    0.290    0.000 context.py:514(ensure_initialized)
        3    0.000    0.000    0.289    0.096 optimizer_v2.py:588(_distributed_apply)
   116482    0.128    0.000    0.288    0.000 ag_ctx.py:53(__enter__)
       52    0.286    0.006    0.286    0.006 {method 'clear' of 'list' objects}
   547788    0.283    0.000    0.283    0.000 ops.py:5101(_distribution_strategy_stack)
   115973    0.135    0.000    0.283    0.000 ag_ctx.py:35(control_status_ctx)
   410285    0.281    0.000    0.281    0.000 op_def_library.py:64(_IsListParameter)
       24    0.000    0.000    0.280    0.012 distribute_lib.py:2233(update)
    19347    0.069    0.000    0.280    0.000 distribute_lib.py:2892(_scope)
  2658926    0.279    0.000    0.279    0.000 multiarray.py:145(concatenate)
       24    0.000    0.000    0.278    0.012 distribute_lib.py:2952(_update)
       24    0.000    0.000    0.278    0.012 distribute_lib.py:2957(_update_non_slot)
    62958    0.072    0.000    0.276    0.000 function.py:2632(_is_ndarray)
38731/38681    0.140    0.000    0.276    0.000 nest.py:126(_packed_nest_with_indices)
    58306    0.086    0.000    0.274    0.000 ops.py:6351(get_collection)
       24    0.000    0.000    0.274    0.011 optimizer_v2.py:591(apply_grad_to_update_var)
       24    0.001    0.000    0.273    0.011 rmsprop.py:175(_resource_apply_dense)
   480956    0.201    0.000    0.272    0.000 traceable_stack.py:127(__len__)
    19314    0.056    0.000    0.271    0.000 data_adapter.py:529(can_handle)
    58341    0.080    0.000    0.269    0.000 context.py:1154(remove_function)
    58306    0.119    0.000    0.268    0.000 object_identity.py:223(__len__)
   412679    0.206    0.000    0.267    0.000 control_flow_util.py:180(GetOutputContext)
   234637    0.231    0.000    0.265    0.000 inspect.py:159(isfunction)
     1092    0.009    0.000    0.264    0.000 save.py:725(_write_object_proto)
   941916    0.264    0.000    0.264    0.000 ops.py:3043(_check_not_finalized)
   212462    0.179    0.000    0.262    0.000 structure.py:296(<listcomp>)
   271392    0.201    0.000    0.261    0.000 base.py:677(_lookup_dependency)
       24    0.000    0.000    0.258    0.011 gen_io_ops.py:466(merge_v2_checkpoints)
   473616    0.256    0.000    0.256    0.000 _collections_abc.py:698(__init__)
   552968    0.255    0.000    0.255    0.000 ops.py:4086(_name_stack)
   139600    0.158    0.000    0.255    0.000 {method 'join' of 'str' objects}
    25181    0.061    0.000    0.255    0.000 ops.py:5744(executing_eagerly_outside_functions)
  1295082    0.253    0.000    0.253    0.000 ops.py:2036(_get_control_flow_context)
    58248    0.102    0.000    0.251    0.000 execute.py:201(make_shape)
       24    0.002    0.000    0.251    0.010 graph_view.py:336(_serialize_gathered_objects)
   241399    0.250    0.000    0.251    0.000 {method '__reduce_ex__' of 'object' objects}
  1168364    0.249    0.000    0.249    0.000 ops.py:392(op)
    58743    0.248    0.000    0.248    0.000 {built-in method tensorflow.python._pywrap_tf_session.AddControlInput}
  1001190    0.247    0.000    0.247    0.000 {method 'release' of '_thread.lock' objects}
    59103    0.117    0.000    0.246    0.000 tf_inspect.py:390(ismethod)
   685421    0.246    0.000    0.246    0.000 ops.py:3354(building_function)
    80124    0.172    0.000    0.245    0.000 <frozen importlib._bootstrap>:997(_handle_fromlist)
       12    0.000    0.000    0.242    0.020 gen_io_ops.py:521(merge_v2_checkpoints_eager_fallback)
   116082    0.149    0.000    0.242    0.000 os.py:742(encode)
   335947    0.242    0.000    0.242    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
   470388    0.241    0.000    0.241    0.000 lock_util.py:119(__init__)
   407432    0.176    0.000    0.241    0.000 inspect.py:81(ismethod)
   469644    0.239    0.000    0.239    0.000 {built-in method sys.exc_info}
    46728    0.027    0.000    0.238    0.000 __init__.py:340(set_verbosity)
   161125    0.235    0.000    0.235    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
    58306    0.100    0.000    0.234    0.000 func_graph.py:1081(flatten)
   588425    0.234    0.000    0.234    0.000 {built-in method _thread.get_ident}
   241537    0.187    0.000    0.233    0.000 _dill.py:386(__missing__)
   117669    0.163    0.000    0.231    0.000 <string>:12(__new__)
    58488    0.182    0.000    0.230    0.000 ops.py:4040(<listcomp>)
   403272    0.187    0.000    0.230    0.000 tensor_shape.py:819(rank)
      276    0.001    0.000    0.230    0.001 resource_variable_ops.py:307(shape_safe_assign_variable_handle)
    39360    0.042    0.000    0.229    0.000 iostream.py:320(_schedule_flush)
    51748    0.082    0.000    0.228    0.000 tape.py:220(could_possibly_record)
   241446    0.117    0.000    0.227    0.000 pickle.py:723(save_tuple)
    58092    0.094    0.000    0.226    0.000 options.py:51(__setattr__)
   886136    0.225    0.000    0.225    0.000 ops.py:2307(outputs)
    72566    0.221    0.000    0.221    0.000 data_adapter.py:1184(steps)
       12    0.000    0.000    0.221    0.018 saving_utils.py:125(_wrapped_model)
    55450    0.220    0.000    0.220    0.000 {method 'item' of 'numpy.generic' objects}
   359985    0.166    0.000    0.220    0.000 object_identity.py:63(__hash__)
   510822    0.219    0.000    0.219    0.000 {method 'lower' of 'str' objects}
    51361    0.218    0.000    0.218    0.000 def_function.py:72(called_without_tracing)
    12205    0.086    0.000    0.218    0.000 Experiment.py:61(<listcomp>)
   115998    0.124    0.000    0.215    0.000 cache.py:92(_get_key)
       12    0.000    0.000    0.214    0.018 file_io.py:549(atomic_write_string_to_file)
   723750    0.213    0.000    0.213    0.000 __init__.py:1530(getEffectiveLevel)
    38678    0.031    0.000    0.213    0.000 callbacks.py:235(<genexpr>)
   284359    0.148    0.000    0.213    0.000 {method 'add' of 'set' objects}
    19976    0.213    0.000    0.213    0.000 {method 'copy' of 'numpy.ndarray' objects}
    19314    0.107    0.000    0.213    0.000 callbacks.py:247(_add_default_callbacks)
    19347    0.104    0.000    0.212    0.000 distribute_lib.py:2853(__init__)
    46728    0.049    0.000    0.211    0.000 _flagvalues.py:500(__setattr__)
   270394    0.210    0.000    0.210    0.000 {built-in method _weakref.proxy}
   659780    0.210    0.000    0.210    0.000 tensor_spec.py:63(shape)
   116662    0.074    0.000    0.210    0.000 func_graph.py:1023(<genexpr>)
    58306    0.171    0.000    0.209    0.000 func_graph.py:735(external_captures)
    19313    0.050    0.000    0.209    0.000 ops.py:2263(_add_control_input)
   234960    0.207    0.000    0.208    0.000 traceable_stack.py:83(__init__)
       48    0.014    0.000    0.208    0.004 graph_view.py:89(_serialize_slot_variables)
    51724    0.188    0.000    0.206    0.000 function.py:1844(<listcomp>)
    25318    0.017    0.000    0.205    0.000 <__array_function__ internals>:2(atleast_2d)
   115884    0.196    0.000    0.205    0.000 tracking.py:154(resource_tracker_scope)
    57982    0.111    0.000    0.205    0.000 inspect.py:714(getmodule)
   154891    0.204    0.000    0.204    0.000 {method 'ravel' of 'numpy.ndarray' objects}
    78750    0.201    0.000    0.201    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
    13530    0.098    0.000    0.201    0.000 Hanabi.py:340(is_ended)
   135192    0.071    0.000    0.200    0.000 nest.py:241(<listcomp>)
   236958    0.199    0.000    0.199    0.000 ops.py:2801(name_from_scope_name)
   743196    0.194    0.000    0.199    0.000 {method 'values' of 'dict' objects}
    23512    0.028    0.000    0.198    0.000 tensor_shape.py:1121(assert_is_compatible_with)
    67286    0.156    0.000    0.198    0.000 enum.py:267(__call__)
   216934    0.146    0.000    0.198    0.000 func_graph.py:1057(<genexpr>)
   349067    0.197    0.000    0.197    0.000 context.py:813(device_name)
   116768    0.137    0.000    0.195    0.000 traceable_stack.py:131(copy)
    22652    0.059    0.000    0.195    0.000 context.py:2006(eager_mode)
    58306    0.074    0.000    0.194    0.000 function.py:1581(<listcomp>)
       24    0.002    0.000    0.193    0.008 graph_view.py:412(objects_ids_and_slot_variables)
    64100    0.193    0.000    0.193    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
   457061    0.192    0.000    0.192    0.000 {method 'update' of 'dict' objects}
   909843    0.188    0.000    0.188    0.000 _dill.py:1515(is_dill)
       12    0.000    0.000    0.188    0.016 functional_saver.py:184(_traced_save)
     3564    0.186    0.000    0.186    0.000 {built-in method builtins.dir}
    31919    0.129    0.000    0.183    0.000 Hanabi.py:263(<listcomp>)
    58045    0.103    0.000    0.183    0.000 converter.py:174(__hash__)
   270394    0.183    0.000    0.183    0.000 tracking.py:186(__init__)
    19364    0.091    0.000    0.182    0.000 callbacks.py:815(_implements_train_batch_hooks)
   560102    0.182    0.000    0.182    0.000 dataset_ops.py:216(_variant_tensor)
   349118    0.181    0.000    0.181    0.000 context.py:749(_handle)
24260/23276    0.059    0.000    0.180    0.000 data_structures.py:103(sticky_attribute_assignment)
   605091    0.180    0.000    0.180    0.000 context.py:1718(context_switches)
       12    0.000    0.000    0.179    0.015 graph_view.py:389(frozen_saveable_objects)
   359985    0.179    0.000    0.179    0.000 object_identity.py:35(__init__)
   364944    0.177    0.000    0.177    0.000 {method 'replace' of 'str' objects}
     2994    0.009    0.000    0.177    0.000 base_layer.py:1347(weights)
   105888    0.068    0.000    0.173    0.000 layer_utils.py:43(has_weights)
    29696    0.034    0.000    0.171    0.000 _collections_abc.py:664(__contains__)
        2    0.000    0.000    0.171    0.085 pyplot.py:720(savefig)
      202    0.001    0.000    0.170    0.001 math_ops.py:1122(binary_op_wrapper)
      168    0.000    0.000    0.169    0.001 base_layer.py:3009(_tracking_metadata)
   690795    0.169    0.000    0.169    0.000 traceable_stack.py:121(<genexpr>)
      168    0.001    0.000    0.169    0.001 base_serialization.py:45(tracking_metadata)
   709373    0.168    0.000    0.168    0.000 tensor_shape.py:826(dims)
    25318    0.068    0.000    0.168    0.000 shape_base.py:83(atleast_2d)
     7059    0.021    0.000    0.168    0.000 <__array_function__ internals>:2(argmax)
   175530    0.137    0.000    0.167    0.000 memory.py:24(dismantle_ordered_dict)
       12    0.000    0.000    0.167    0.014 ops.py:3268(as_graph_def)
       12    0.044    0.004    0.167    0.014 ops.py:3178(_as_graph_def)
  1078265    0.166    0.000    0.166    0.000 {built-in method builtins.callable}
   547788    0.164    0.000    0.164    0.000 ops.py:3039(_variable_creator_stack)
   115973    0.070    0.000    0.164    0.000 api.py:153(is_autograph_artifact)
      306    0.003    0.000    0.162    0.001 resource_variable_ops.py:146(_variable_handle_from_shape_and_dtype)
   528173    0.162    0.000    0.162    0.000 function.py:2463(input_signature)
     2093    0.005    0.000    0.161    0.000 base_layer.py:2235(variables)
      132    0.002    0.000    0.160    0.001 function_serialization.py:94(serialize_function)
    45836    0.160    0.000    0.160    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
    58341    0.159    0.000    0.159    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextRemoveFunction}
   295741    0.159    0.000    0.159    0.000 func_graph.py:427(outer_graph)
    19314    0.039    0.000    0.159    0.000 version_utils.py:114(disallow_legacy_graph)
       12    0.001    0.000    0.159    0.013 util.py:1100(_gather_saveables)
    38678    0.019    0.000    0.158    0.000 data_adapter.py:550(<genexpr>)
    59982    0.026    0.000    0.157    0.000 _asarray.py:88(asanyarray)
   216065    0.151    0.000    0.155    0.000 op_def_library.py:89(<listcomp>)
   547788    0.154    0.000    0.154    0.000 ops.py:5133(_auto_cast_variable_read_dtype)
   470388    0.152    0.000    0.154    0.000 ops.py:5061(<dictcomp>)
20774/20738    0.072    0.000    0.153    0.000 tracking.py:440(wrapped)
       12    0.000    0.000    0.153    0.013 graph_view.py:364(serialize_object_graph)
   162714    0.151    0.000    0.151    0.000 {method 'decode' of 'bytes' objects}
       12    0.001    0.000    0.150    0.012 signature_serialization.py:96(canonicalize_signatures)
    19375    0.044    0.000    0.149    0.000 tensor_util.py:804(constant_value)
    19314    0.051    0.000    0.149    0.000 data_adapter.py:448(can_handle)
    12705    0.049    0.000    0.149    0.000 Hanabi.py:277(score)
    58306    0.119    0.000    0.147    0.000 ops.py:3997(get_collection)
   126299    0.116    0.000    0.147    0.000 inspect.py:2781(<genexpr>)
    57982    0.095    0.000    0.146    0.000 inspect_utils.py:96(isconstructor)
    19314    0.024    0.000    0.146    0.000 nest.py:1417(sequence_fn)
    19314    0.046    0.000    0.145    0.000 dataset_ops.py:565(_type_spec)
    19314    0.034    0.000    0.145    0.000 dataset_ops.py:2920(_autotune_settings)
    17268    0.027    0.000    0.144    0.000 save.py:108(list_dependencies)
    60102    0.104    0.000    0.144    0.000 function.py:1959(name)
   154920    0.048    0.000    0.143    0.000 generic_utils.py:792(is_default)
    376/4    0.001    0.000    0.143    0.036 artist.py:30(draw_wrapper)
        4    0.000    0.000    0.143    0.036 figure.py:1688(draw)
    58306    0.042    0.000    0.142    0.000 object_identity.py:225(<listcomp>)
      144    0.000    0.000    0.141    0.001 layer_serialization.py:38(python_properties)
      306    0.003    0.000    0.141    0.000 gen_resource_variable_ops.py:1163(var_handle_op)
      8/4    0.000    0.000    0.141    0.035 image.py:119(_draw_list_compositing_images)
        4    0.000    0.000    0.141    0.035 _base.py:2555(draw)
      260    0.002    0.000    0.140    0.001 gen_nn_ops.py:648(bias_add)
    19364    0.064    0.000    0.139    0.000 data_adapter.py:535(_is_composite)
     4776    0.021    0.000    0.138    0.000 backend.py:489(deprecated_internal_learning_phase_scope)
     8790    0.034    0.000    0.137    0.000 threading.py:498(__init__)
     2027    0.055    0.000    0.137    0.000 training.py:589(metrics)
   225044    0.135    0.000    0.135    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   432130    0.135    0.000    0.135    0.000 op_def_library.py:235(_MaybeColocateWith)
    39360    0.058    0.000    0.135    0.000 iostream.py:307(_is_master_process)
    58306    0.134    0.000    0.134    0.000 function.py:3061(<listcomp>)
    90878    0.134    0.000    0.134    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
       48    0.015    0.000    0.133    0.003 graph_view.py:185(_breadth_first_traversal)
    20571    0.073    0.000    0.133    0.000 resource_variable_ops.py:317(_maybe_set_handle_data)
   162766    0.091    0.000    0.132    0.000 object_identity.py:128(_wrap_key)
    19314    0.045    0.000    0.132    0.000 dataset_ops.py:2907(_graph_rewrite_configs)
    19356    0.037    0.000    0.132    0.000 distribution_strategy_context.py:199(has_strategy)
    58500    0.131    0.000    0.131    0.000 threading.py:74(RLock)
     6995    0.028    0.000    0.129    0.000 Hanabi.py:237(getHint)
     7059    0.021    0.000    0.129    0.000 fromnumeric.py:1112(argmax)
    51399    0.129    0.000    0.129    0.000 iterator_ops.py:895(_to_components)
   119834    0.128    0.000    0.129    0.000 object_identity.py:227(__iter__)
102766/102742    0.053    0.000    0.127    0.000 nest.py:750(assert_shallow_structure)
    58306    0.109    0.000    0.125    0.000 func_graph.py:750(deferred_internal_captures)
        8    0.000    0.000    0.125    0.016 axis.py:1219(draw)
        3    0.000    0.000    0.124    0.041 backprop.py:983(gradient)
        3    0.000    0.000    0.123    0.041 imperative_grad.py:33(imperative_grad)
        3    0.001    0.000    0.123    0.041 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeGradient}
   276864    0.123    0.000    0.123    0.000 ops.py:5035(_device_function_stack)
   101935    0.070    0.000    0.122    0.000 object_identity.py:54(__eq__)
    57942    0.063    0.000    0.122    0.000 dataset_ops.py:3366(<listcomp>)
    75615    0.060    0.000    0.121    0.000 threading.py:1062(_wait_for_tstate_lock)
       51    0.000    0.000    0.120    0.002 backprop.py:132(_gradient_function)
       12    0.000    0.000    0.120    0.010 file_io.py:516(rename)
       12    0.000    0.000    0.120    0.010 file_io.py:532(rename_v2)
   115878    0.088    0.000    0.120    0.000 dataset_ops.py:2738(get_structure)
   102768    0.058    0.000    0.119    0.000 nest.py:954(<genexpr>)
    51748    0.119    0.000    0.119    0.000 function.py:271(__exit__)
       12    0.119    0.010    0.119    0.010 {built-in method tensorflow.python._pywrap_file_io.RenameFile}
   155870    0.118    0.000    0.118    0.000 context.py:823(_set_device)
   274753    0.118    0.000    0.118    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
    47050    0.046    0.000    0.118    0.000 resource_variable_ops.py:246(_handle_graph)
    19314    0.031    0.000    0.117    0.000 training.py:2772(_disallow_inside_tf_function)
    58306    0.099    0.000    0.116    0.000 func_graph.py:745(deferred_external_captures)
    19314    0.034    0.000    0.116    0.000 gen_dataset_ops.py:6697(<listcomp>)
   676676    0.115    0.000    0.115    0.000 tensor_spec.py:37(<lambda>)
        2    0.000    0.000    0.115    0.058 figure.py:2063(savefig)
        2    0.000    0.000    0.115    0.058 backend_bases.py:2001(print_figure)
   475442    0.115    0.000    0.115    0.000 ops.py:3148(_get_control_flow_context)
   303721    0.113    0.000    0.113    0.000 {method 'split' of 'str' objects}
    96570    0.087    0.000    0.113    0.000 dataset_ops.py:4108(element_spec)
        2    0.000    0.000    0.113    0.056 backend_pdf.py:2532(print_pdf)
   116974    0.112    0.000    0.112    0.000 tf_logging.py:93(get_logger)
   214354    0.112    0.000    0.112    0.000 array_ops.py:1485(<genexpr>)
   348510    0.112    0.000    0.112    0.000 tensor_shape.py:790(_v2_behavior)
     7239    0.014    0.000    0.111    0.000 fromnumeric.py:55(_wrapfunc)
    46728    0.016    0.000    0.111    0.000 __init__.py:174(value)
    34119    0.059    0.000    0.111    0.000 Hanabi.py:377(<dictcomp>)
    19313    0.023    0.000    0.110    0.000 gen_dataset_ops.py:6628(<listcomp>)
   116464    0.110    0.000    0.110    0.000 {method 'SetInParent' of 'google.protobuf.pyext._message.CMessage' objects}
   469724    0.109    0.000    0.109    0.000 control_flow_util.py:191(GetContainingWhileContext)
    23569    0.108    0.000    0.109    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
   174846    0.103    0.000    0.109    0.000 function.py:3760(__init__)
   469592    0.107    0.000    0.107    0.000 errors_impl.py:86(message)
    19314    0.043    0.000    0.107    0.000 data_adapter.py:617(can_handle)
     2570    0.028    0.000    0.106    0.000 custom_gradient.py:45(copy_handle_data)
    19313    0.029    0.000    0.106    0.000 gen_dataset_ops.py:890(<listcomp>)
    96570    0.081    0.000    0.104    0.000 dataset_ops.py:4058(element_spec)
    55366    0.104    0.000    0.104    0.000 fromnumeric.py:3037(ndim)
    38731    0.064    0.000    0.104    0.000 nest.py:53(_sequence_like)
    77935    0.092    0.000    0.103    0.000 device.py:45(is_device_spec)
   274522    0.103    0.000    0.103    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
       24    0.000    0.000    0.103    0.004 model_serialization.py:34(_python_properties_internal)
   175184    0.103    0.000    0.103    0.000 context.py:818(device_spec)
       19    0.103    0.005    0.103    0.005 {built-in method io.open}
    98613    0.052    0.000    0.102    0.000 tensor_shape.py:838(ndims)
    19314    0.059    0.000    0.102    0.000 callbacks.py:1038(__init__)
   116021    0.102    0.000    0.102    0.000 dtypes.py:103(as_numpy_dtype)
   274762    0.101    0.000    0.101    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
    27980    0.060    0.000    0.101    0.000 Hanabi.py:99(receive_hint)
   216188    0.099    0.000    0.099    0.000 ops.py:452(<listcomp>)
    38626    0.042    0.000    0.099    0.000 dataset_ops.py:2775(<lambda>)
   274482    0.098    0.000    0.098    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
   274465    0.097    0.000    0.097    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
    21576    0.070    0.000    0.097    0.000 tensor_util.py:986(is_tensor)
    19313    0.016    0.000    0.097    0.000 gen_dataset_ops.py:895(<listcomp>)
    19314    0.063    0.000    0.096    0.000 optimization_options.py:196(_autotune_settings)
 6744/360    0.011    0.000    0.096    0.000 generic_utils.py:235(serialize_keras_object)
    12334    0.045    0.000    0.096    0.000 Experiment.py:44(<listcomp>)
   270604    0.096    0.000    0.096    0.000 tracking.py:199(__del__)
    17994    0.042    0.000    0.095    0.000 callbacks.py:985(_maybe_init_progbar)
    58306    0.081    0.000    0.095    0.000 func_graph.py:491(variables)
    46728    0.040    0.000    0.095    0.000 __init__.py:179(_update_logging_levels)
    51748    0.095    0.000    0.095    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
     3386    0.015    0.000    0.095    0.000 base_layer.py:1311(trainable_weights)
    58500    0.095    0.000    0.095    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
      103    0.001    0.000    0.094    0.001 gen_math_ops.py:6143(mul)
    67792    0.094    0.000    0.094    0.000 trace.py:52(__init__)
    58544    0.094    0.000    0.094    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
    19314    0.037    0.000    0.094    0.000 dataset_ops.py:3122(__init__)
    19412    0.035    0.000    0.093    0.000 tensor_shape.py:1166(is_fully_defined)
       12    0.000    0.000    0.092    0.008 file_io.py:323(write_string_to_file)
       97    0.000    0.000    0.092    0.001 math_ops.py:463(multiply)
   116193    0.078    0.000    0.091    0.000 nest.py:81(_yield_value)
      600    0.004    0.000    0.091    0.000 function.py:489(add_to_graph)
   176030    0.072    0.000    0.091    0.000 tensor_shape.py:704(as_dimension)
      195    0.001    0.000    0.090    0.000 activations.py:190(softplus)
    11559    0.027    0.000    0.090    0.000 Experiment.py:63(<listcomp>)
       91    0.000    0.000    0.090    0.001 math_ops.py:1450(_mul_dispatch)
      195    0.001    0.000    0.090    0.000 gen_nn_ops.py:10917(softplus)
   135245    0.090    0.000    0.090    0.000 distribution_strategy_context.py:337(_get_default_replica_mode)
    36388    0.045    0.000    0.089    0.000 object_identity.py:134(__setitem__)
      384    0.002    0.000    0.089    0.000 functional_ops.py:1217(_set_read_only_resource_inputs_attr)
   155548    0.089    0.000    0.089    0.000 func_graph.py:97(<genexpr>)
24262/24260    0.079    0.000    0.088    0.000 data_structures.py:80(wrap_or_unwrap)
   811438    0.088    0.000    0.088    0.000 options.py:59(<lambda>)
   134440    0.088    0.000    0.088    0.000 {built-in method _thread.allocate_lock}
    77935    0.087    0.000    0.087    0.000 context.py:1733(__init__)
    60/12    0.001    0.000    0.087    0.007 save_impl.py:210(_replace_child_layer_functions)
    19397    0.045    0.000    0.086    0.000 ops.py:5777(inside_function)
    38678    0.025    0.000    0.086    0.000 callbacks.py:237(<genexpr>)
   138158    0.068    0.000    0.086    0.000 function.py:422(<genexpr>)
     7059    0.086    0.000    0.086    0.000 {method 'argmax' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.085    0.002 functional.py:597(get_config)
      120    0.002    0.000    0.085    0.001 layer_serialization.py:43(_python_properties_internal)
      216    0.003    0.000    0.084    0.000 function_serialization.py:52(serialize_concrete_function)
     3371    0.014    0.000    0.084    0.000 base_layer.py:1326(non_trainable_weights)
    98307    0.084    0.000    0.084    0.000 function.py:484(<genexpr>)
    40354    0.084    0.000    0.084    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
    51689    0.084    0.000    0.084    0.000 weakref.py:393(__getitem__)
    58306    0.083    0.000    0.083    0.000 c_api_util.py:86(__init__)
   116034    0.045    0.000    0.083    0.000 data_adapter.py:252(<genexpr>)
   212452    0.083    0.000    0.083    0.000 dataset_ops.py:348(options)
   258584    0.083    0.000    0.083    0.000 iterator_ops.py:885(_serialize)
      852    0.005    0.000    0.083    0.000 ops.py:3319(_add_function)
    20816    0.037    0.000    0.083    0.000 execute.py:191(make_type)
    58306    0.059    0.000    0.082    0.000 function.py:475(<listcomp>)
    38678    0.026    0.000    0.082    0.000 callbacks.py:239(<genexpr>)
    19314    0.019    0.000    0.081    0.000 dataset_ops.py:3493(_inputs)
    19487    0.047    0.000    0.080    0.000 monitoring.py:303(set)
    39053    0.046    0.000    0.080    0.000 ops.py:1794(<listcomp>)
       12    0.015    0.001    0.079    0.007 file_io.py:99(write)
     6757    0.031    0.000    0.077    0.000 base_layer.py:2835(_gather_children_attribute)
   116758    0.077    0.000    0.077    0.000 function.py:2421(<dictcomp>)
   115970    0.055    0.000    0.077    0.000 api.py:148(autograph_artifact)
    58294    0.077    0.000    0.077    0.000 func_graph.py:127(<listcomp>)
    39372    0.076    0.000    0.076    0.000 {built-in method posix.getpid}
     3874    0.042    0.000    0.076    0.000 backend.py:1341(dtype)
      144    0.001    0.000    0.076    0.001 layer_serialization.py:113(get_config)
   300172    0.076    0.000    0.076    0.000 {method 'values' of 'collections.OrderedDict' objects}
    67869    0.075    0.000    0.075    0.000 weakref.py:406(__setitem__)
    51364    0.075    0.000    0.075    0.000 data_adapter.py:1232(should_sync)
       12    0.003    0.000    0.075    0.006 meta_graph.py:457(strip_graph_default_valued_attrs)
      852    0.075    0.000    0.075    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
       24    0.013    0.001    0.075    0.003 graph_view.py:318(_fill_object_graph_proto)
   271553    0.074    0.000    0.074    0.000 base.py:662(_deferred_dependencies)
     6870    0.022    0.000    0.072    0.000 base_layer.py:2958(_dedup_weights)
    58306    0.061    0.000    0.072    0.000 func_graph.py:919(<listcomp>)
     3168    0.017    0.000    0.072    0.000 meta_graph.py:474(_strip_node_default_valued_attrs)
    66825    0.072    0.000    0.072    0.000 iostream.py:93(_event_pipe)
    43372    0.072    0.000    0.072    0.000 object_identity.py:125(__init__)
    51748    0.071    0.000    0.071    0.000 context.py:1056(function_call_options)
       16    0.001    0.000    0.071    0.004 axis.py:1098(_update_ticks)
    19313    0.037    0.000    0.070    0.000 abc.py:196(__subclasscheck__)
    66960    0.070    0.000    0.070    0.000 {method 'isidentifier' of 'str' objects}
      384    0.009    0.000    0.070    0.000 auto_control_deps_utils.py:36(get_read_only_resource_input_indices_graph)
   116758    0.068    0.000    0.070    0.000 function.py:2427(<dictcomp>)
    19314    0.023    0.000    0.070    0.000 data_adapter.py:756(can_handle)
    58182    0.049    0.000    0.070    0.000 function.py:2845(flat_input_signature)
     6264    0.006    0.000    0.070    0.000 graph_view.py:158(list_dependencies)
    19837    0.061    0.000    0.069    0.000 {method 'sort' of 'list' objects}
    59154    0.069    0.000    0.069    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
    12705    0.044    0.000    0.069    0.000 Hanabi.py:278(<listcomp>)
       12    0.000    0.000    0.069    0.006 tmpamx0glat.py:9(tf__signature_wrapper)
    19419    0.033    0.000    0.069    0.000 object_identity.py:137(__delitem__)
    58306    0.047    0.000    0.069    0.000 function.py:442(<listcomp>)
    58051    0.066    0.000    0.068    0.000 weakref.py:356(remove)
      696    0.001    0.000    0.068    0.000 nested_structure_coder.py:86(encode_structure)
      340    0.002    0.000    0.068    0.000 def_function.py:579(_defun_with_scope)
   154512    0.067    0.000    0.067    0.000 dataset_ops.py:2960(_inputs)
    58306    0.067    0.000    0.067    0.000 function.py:423(<listcomp>)
    58306    0.053    0.000    0.065    0.000 func_graph.py:1093(<listcomp>)
       12    0.000    0.000    0.065    0.005 function.py:1605(__call__)
       12    0.000    0.000    0.065    0.005 function.py:1657(_call_impl)
    58306    0.065    0.000    0.065    0.000 function.py:441(<listcomp>)
    38628    0.038    0.000    0.065    0.000 type_spec.py:501(<genexpr>)
    59339    0.065    0.000    0.065    0.000 {method 'values' of 'mappingproxy' objects}
 3912/696    0.011    0.000    0.065    0.000 nested_structure_coder.py:78(_map_structure)
    48168    0.056    0.000    0.065    0.000 callbacks.py:659(on_train_batch_begin)
       12    0.000    0.000    0.065    0.005 function.py:1675(_call_with_flat_signature)
       48    0.003    0.000    0.064    0.001 functional.py:1244(get_network_config)
    20838    0.040    0.000    0.064    0.000 base_layer.py:2847(_flatten_layers)
    13530    0.033    0.000    0.064    0.000 Hanabi.py:341(<listcomp>)
    19364    0.030    0.000    0.064    0.000 data_adapter.py:625(_is_list_of_scalars)
  240/216    0.024    0.000    0.064    0.000 ops.py:6267(dismantle_graph)
       12    0.063    0.005    0.063    0.005 file_io.py:81(_prewrite_check)
    32112    0.053    0.000    0.063    0.000 callbacks.py:675(on_train_batch_end)
    19314    0.031    0.000    0.063    0.000 optimization_options.py:259(_graph_rewrite_configs)
    90784    0.063    0.000    0.063    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
   103495    0.063    0.000    0.063    0.000 iterator_ops.py:878(__init__)
    38626    0.044    0.000    0.063    0.000 dataset_ops.py:2809(<lambda>)
   231768    0.062    0.000    0.062    0.000 dataset_ops.py:3387(output_structure)
   157430    0.062    0.000    0.062    0.000 op_def_library.py:46(_AttrValue)
    19364    0.035    0.000    0.061    0.000 callbacks.py:822(_implements_test_batch_hooks)
    19314    0.038    0.000    0.061    0.000 data_adapter.py:1239(_infer_steps)
    19869    0.042    0.000    0.060    0.000 types.py:135(__get__)
   116864    0.060    0.000    0.060    0.000 function.py:2447(fullargspec)
    58365    0.030    0.000    0.059    0.000 function.py:3784(__del__)
    70710    0.058    0.000    0.059    0.000 {built-in method builtins.sum}
   162195    0.059    0.000    0.059    0.000 Hanabi.py:16(handSize)
   103496    0.059    0.000    0.059    0.000 context.py:135(config_proto_serialized)
    57942    0.059    0.000    0.059    0.000 tracking.py:143(__init__)
        2    0.000    0.000    0.059    0.029 <__array_function__ internals>:2(savetxt)
        2    0.011    0.006    0.058    0.029 npyio.py:1211(savetxt)
    57985    0.058    0.000    0.058    0.000 api.py:217(convert)
   103140    0.057    0.000    0.057    0.000 iterator_ops.py:820(element_spec)
    19314    0.030    0.000    0.057    0.000 dataset_ops.py:3487(<listcomp>)
    19326    0.057    0.000    0.057    0.000 {built-in method math.ceil}
    31951    0.041    0.000    0.057    0.000 random.py:223(_randbelow)
       68    0.001    0.000    0.057    0.001 axis.py:56(__init__)
    38626    0.041    0.000    0.056    0.000 tensor_spec.py:116(_to_legacy_output_classes)
      340    0.002    0.000    0.056    0.000 def_function.py:629(_defun)
    19314    0.050    0.000    0.056    0.000 distribute_lib.py:943(experimental_distribute_dataset)
    19364    0.030    0.000    0.056    0.000 callbacks.py:827(_implements_predict_batch_hooks)
      288    0.003    0.000    0.056    0.000 core.py:1209(get_config)
    58306    0.045    0.000    0.056    0.000 object_identity.py:208(__len__)
    58228    0.049    0.000    0.056    0.000 context.py:1841(global_seed)
    51748    0.055    0.000    0.055    0.000 function.py:265(__init__)
        2    0.000    0.000    0.055    0.028 backend_bases.py:1932(draw_idle)
        2    0.000    0.000    0.055    0.028 backend_agg.py:384(draw)
    58306    0.055    0.000    0.055    0.000 function.py:2479(vararg_name)
       24    0.001    0.000    0.054    0.002 saving_utils.py:147(model_metadata)
      387    0.005    0.000    0.054    0.000 tf_inspect.py:260(getcallargs)
   174463    0.051    0.000    0.054    0.000 ops.py:1922(<listcomp>)
       24    0.012    0.001    0.054    0.002 graph_view.py:209(_add_attributes_to_object_graph)
    35310    0.025    0.000    0.054    0.000 nest.py:1232(<listcomp>)
     8778    0.051    0.000    0.053    0.000 _methods.py:50(_count_reduce_items)
   118724    0.053    0.000    0.053    0.000 function.py:1974(structured_input_signature)
   101935    0.039    0.000    0.052    0.000 object_identity.py:42(_assert_type)
    58019    0.044    0.000    0.052    0.000 inspect.py:73(isclass)
     1938    0.039    0.000    0.052    0.000 callbacks.py:1660(on_epoch_end)
    58497    0.052    0.000    0.052    0.000 ag_ctx.py:49(__init__)
    58051    0.043    0.000    0.052    0.000 tensor_util.py:281(<listcomp>)
    19314    0.029    0.000    0.051    0.000 iterator_ops.py:71(_device_stack_is_empty)
    51724    0.050    0.000    0.050    0.000 trace.py:89(set_metadata)
        4    0.001    0.000    0.050    0.013 base_layer.py:996(_functional_construction_call)
   119008    0.050    0.000    0.050    0.000 function.py:763(forward)
     1938    0.031    0.000    0.050    0.000 generic_utils.py:497(__init__)
    38628    0.029    0.000    0.050    0.000 optimization_options.py:189(_autotune_buffers)
    58306    0.050    0.000    0.050    0.000 function.py:3777(__init__)
    40354    0.049    0.000    0.049    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
    49336    0.043    0.000    0.049    0.000 Hanabi.py:180(__init__)
    58203    0.049    0.000    0.049    0.000 converter.py:170(as_tuple)
      384    0.007    0.000    0.049    0.000 save_impl.py:309(_reset_layer_losses)
    19314    0.044    0.000    0.048    0.000 data_adapter.py:884(can_handle)
    20033    0.032    0.000    0.048    0.000 tensor_shape.py:215(__eq__)
       12    0.009    0.001    0.048    0.004 save.py:247(fill_object_graph_proto)
    57998    0.039    0.000    0.047    0.000 inspect.py:64(ismodule)
   120820    0.047    0.000    0.047    0.000 function.py:501(name)
    57982    0.039    0.000    0.046    0.000 inspect.py:277(isbuiltin)
    65772    0.046    0.000    0.046    0.000 object_identity.py:38(unwrapped)
        3    0.000    0.000    0.046    0.015 compile_utils.py:164(__call__)
    58282    0.046    0.000    0.046    0.000 function.py:381(__init__)
    78667    0.046    0.000    0.046    0.000 tensor_spec.py:73(name)
    38626    0.031    0.000    0.046    0.000 dataset_ops.py:2792(<lambda>)
   121468    0.045    0.000    0.045    0.000 func_graph.py:743(<listcomp>)
    51880    0.045    0.000    0.045    0.000 resource_variable_ops.py:498(dtype)
    58092    0.036    0.000    0.045    0.000 options.py:80(set_fn)
       84    0.000    0.000    0.045    0.001 module.py:171(submodules)
    19314    0.034    0.000    0.045    0.000 callbacks.py:269(set_params)
  204/144    0.008    0.000    0.044    0.000 module.py:317(_flatten_module)
    58306    0.035    0.000    0.044    0.000 function.py:443(<listcomp>)
       48    0.000    0.000    0.044    0.001 state_ops.py:198(assign)
    57942    0.044    0.000    0.044    0.000 def_function.py:423(functions_run_eagerly)
    57942    0.044    0.000    0.044    0.000 tracking.py:146(resources)
     3220    0.005    0.000    0.044    0.000 ops.py:1173(get_shape)
    46728    0.017    0.000    0.043    0.000 _flagvalues.py:525(_assert_validators)
    19414    0.043    0.000    0.043    0.000 callbacks.py:607(__init__)
    38669    0.033    0.000    0.043    0.000 op_def_library.py:447(<listcomp>)
    58306    0.043    0.000    0.043    0.000 function.py:2836(function_spec)
        9    0.000    0.000    0.043    0.005 math_grad.py:147(_SumGrad)
      520    0.013    0.000    0.043    0.000 random.py:263(shuffle)
       24    0.000    0.000    0.043    0.002 math_ops.py:4739(sqrt)
       24    0.000    0.000    0.043    0.002 gen_math_ops.py:10161(sqrt)
    90784    0.042    0.000    0.042    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
    19314    0.028    0.000    0.042    0.000 optimization_options.py:55(_graph_rewrites)
     4608    0.006    0.000    0.042    0.000 base.py:498(no_automatic_dependency_tracking_scope)
      176    0.001    0.000    0.042    0.000 function.py:177(_shape_relaxed_type_for_composite_tensor)
    58256    0.041    0.000    0.041    0.000 ops.py:3112(seed)
        3    0.000    0.000    0.041    0.014 math_grad.py:249(_MeanGrad)
    36615    0.041    0.000    0.041    0.000 Hanabi.py:280(availableActions)
    57942    0.041    0.000    0.041    0.000 dataset_ops.py:4023(_should_unpack_args)
      288    0.002    0.000    0.041    0.000 base_layer.py:640(get_config)
     6471    0.014    0.000    0.041    0.000 random.py:255(choice)
    43132    0.022    0.000    0.041    0.000 base_layer.py:2697(_maybe_create_attribute)
   110110    0.041    0.000    0.041    0.000 function.py:2014(<listcomp>)
    57942    0.032    0.000    0.041    0.000 base.py:1192(isspmatrix)
    58570    0.041    0.000    0.041    0.000 function.py:2451(is_method)
   133920    0.041    0.000    0.041    0.000 inspect.py:2502(name)
     6757    0.007    0.000    0.040    0.000 base_layer.py:2844(<genexpr>)
  528/176    0.002    0.000    0.040    0.000 type_spec.py:134(_with_tensor_ranks_only)
     2388    0.009    0.000    0.040    0.000 backend.py:429(deprecated_internal_set_learning_phase)
       12    0.000    0.000    0.040    0.003 save.py:481(_generate_signatures)
     5807    0.024    0.000    0.039    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
     7957    0.019    0.000    0.039    0.000 layer_utils.py:234(filter_empty_layer_containers)
   126624    0.039    0.000    0.039    0.000 function.py:1964(graph)
    58092    0.027    0.000    0.039    0.000 data_adapter.py:247(_is_tensor)
    58306    0.038    0.000    0.038    0.000 variable_scope.py:1166(use_resource)
    23113    0.015    0.000    0.038    0.000 ops.py:535(get_shape)
        2    0.000    0.000    0.038    0.019 _datasource.py:231(open)
        2    0.000    0.000    0.038    0.019 _datasource.py:577(open)
    13530    0.023    0.000    0.038    0.000 Hanabi.py:354(next_player)
    67286    0.038    0.000    0.038    0.000 enum.py:517(__new__)
    19314    0.025    0.000    0.038    0.000 dataset_ops.py:3489(<listcomp>)
    67792    0.037    0.000    0.037    0.000 trace.py:123(__exit__)
    54120    0.037    0.000    0.037    0.000 Hanabi.py:304(availableActions)
       60    0.002    0.000    0.037    0.001 save_impl.py:83(wrap_layer_objects)
     4559    0.007    0.000    0.036    0.000 ops.py:5325(control_dependencies)
    25350    0.014    0.000    0.036    0.000 shape_base.py:220(_vhstack_dispatcher)
    59008    0.036    0.000    0.036    0.000 tf2.py:42(enabled)
   115884    0.036    0.000    0.036    0.000 dataset_ops.py:3409(function)
    65476    0.036    0.000    0.036    0.000 distribute_lib.py:771(extended)
      228    0.001    0.000    0.036    0.000 func_graph.py:1269(dismantle_func_graph)
    19491    0.031    0.000    0.036    0.000 execute.py:166(make_int)
    58500    0.036    0.000    0.036    0.000 ops.py:4981(switch_to_thread_local)
       51    0.000    0.000    0.035    0.001 math_ops.py:1419(_add_dispatch)
    23568    0.035    0.000    0.035    0.000 ops.py:1217(graph)
       51    0.000    0.000    0.035    0.001 gen_math_ops.py:463(add_v2)
       15    0.000    0.000    0.035    0.002 base.py:691(_add_variable_with_custom_getter)
    51364    0.034    0.000    0.034    0.000 data_adapter.py:1212(step_increment)
       32    0.000    0.000    0.034    0.001 ticker.py:2201(__call__)
     1152    0.005    0.000    0.033    0.000 auto_control_deps_utils.py:63(_get_read_only_resource_input_indices_op)
        2    0.000    0.000    0.033    0.017 pyplot.py:2759(plot)
       17    0.000    0.000    0.033    0.002 resource_variable_ops.py:1419(__init__)
    10632    0.020    0.000    0.033    0.000 meta_graph.py:443(_is_default_attr_value)
       24    0.000    0.000    0.033    0.001 variables.py:1072(_run_op)
       17    0.001    0.000    0.033    0.002 resource_variable_ops.py:1520(_init_from_args)
    58090    0.026    0.000    0.033    0.000 tensor_shape.py:1169(<genexpr>)
       32    0.000    0.000    0.033    0.001 ticker.py:2205(tick_values)
       15    0.000    0.000    0.033    0.002 base_layer_utils.py:55(make_variable)
  540/324    0.004    0.000    0.033    0.000 nested_structure_coder.py:179(do_encode)
    19487    0.033    0.000    0.033    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
       15    0.000    0.000    0.033    0.002 variables.py:182(_variable_v1_call)
      308    0.001    0.000    0.033    0.000 ops.py:2013(colocation_groups)
   116612    0.033    0.000    0.033    0.000 function.py:2475(arg_names)
    47446    0.032    0.000    0.032    0.000 resource_variable_ops.py:545(handle)
       32    0.002    0.000    0.032    0.001 ticker.py:2141(_raw_ticks)
 1408/352    0.003    0.000    0.032    0.000 type_spec.py:148(relax)
    35308    0.032    0.000    0.032    0.000 callbacks.py:476(on_predict_batch_end)
    39567    0.016    0.000    0.032    0.000 pickle.py:641(save_none)
       10    0.000    0.000    0.032    0.003 base_layer.py:477(add_weight)
        4    0.000    0.000    0.032    0.008 pyplot.py:861(gca)
     2532    0.003    0.000    0.032    0.000 ops.py:3264(<listcomp>)
     3546    0.002    0.000    0.031    0.000 def_function.py:1042(<genexpr>)
    19518    0.026    0.000    0.031    0.000 op_def_library.py:148(_MakeInt)
    23364    0.016    0.000    0.031    0.000 __init__.py:335(get_verbosity)
       12    0.000    0.000    0.031    0.003 save.py:468(_call_function_with_mapped_captures)
      384    0.004    0.000    0.031    0.000 save_impl.py:321(_restore_layer_losses)
      206    0.004    0.000    0.031    0.000 lines.py:269(__init__)
        4    0.000    0.000    0.031    0.008 base_layer.py:2614(_maybe_build)
      132    0.002    0.000    0.031    0.000 function_serialization.py:29(_serialize_function_spec)
    58488    0.030    0.000    0.030    0.000 ops.py:3117(seed)
       10    0.000    0.000    0.030    0.003 variables.py:199(<lambda>)
       10    0.000    0.000    0.030    0.003 variable_scope.py:2557(default_variable_creator)
        4    0.000    0.000    0.030    0.008 figure.py:1913(gca)
        2    0.000    0.000    0.030    0.015 figure.py:1259(add_subplot)
        2    0.000    0.000    0.030    0.015 _subplots.py:18(__init__)
        4    0.000    0.000    0.030    0.008 core.py:1159(build)
      520    0.002    0.000    0.030    0.000 Hanabi.py:301(<listcomp>)
    51748    0.030    0.000    0.030    0.000 context.py:127(executor_type)
       48    0.000    0.000    0.030    0.001 axis.py:289(draw)
    45135    0.030    0.000    0.030    0.000 resource_variable_ops.py:588(trainable)
        2    0.000    0.000    0.029    0.015 _base.py:378(__init__)
    63138    0.029    0.000    0.029    0.000 function.py:3780(release)
     1722    0.005    0.000    0.029    0.000 function.py:211(is_same_structure)
    46728    0.014    0.000    0.029    0.000 __init__.py:1280(setLevel)
    38628    0.029    0.000    0.029    0.000 data_adapter.py:1147(_truncate_execution_to_epoch)
       34    0.000    0.000    0.029    0.001 axis.py:1938(_get_tick)
    75615    0.028    0.000    0.028    0.000 threading.py:506(is_set)
    16044    0.022    0.000    0.028    0.000 training.py:1609(<lambda>)
       34    0.000    0.000    0.028    0.001 axis.py:2225(_get_tick)
   115881    0.028    0.000    0.028    0.000 dataset_ops.py:2991(element_spec)
     2600    0.007    0.000    0.027    0.000 Hanabi.py:226(__init__)
    58306    0.027    0.000    0.027    0.000 function.py:2471(is_pure)
     1364    0.002    0.000    0.027    0.000 ops.py:4368(device)
      576    0.001    0.000    0.027    0.000 saveable_object.py:53(tensor)
      350    0.000    0.000    0.027    0.000 function.py:3110(<genexpr>)
    96570    0.026    0.000    0.026    0.000 dataset_ops.py:3605(element_spec)
    67792    0.026    0.000    0.026    0.000 trace.py:85(__enter__)
    35308    0.026    0.000    0.026    0.000 callbacks.py:464(on_predict_batch_begin)
      175    0.001    0.000    0.026    0.000 function.py:169(_is_type_subset)
      276    0.002    0.000    0.026    0.000 saveable_object_util.py:100(f)
    19314    0.018    0.000    0.026    0.000 data_adapter.py:1474(pack_x_y_sample_weight)
    20244    0.026    0.000    0.026    0.000 {built-in method time.time}
       24    0.000    0.000    0.026    0.001 resource_variable_ops.py:1953(value)
        3    0.000    0.000    0.026    0.009 optimizer_v2.py:778(_prepare)
       24    0.000    0.000    0.026    0.001 resource_variable_ops.py:1959(_read_variable_op)
 11856/72    0.011    0.000    0.026    0.000 copy.py:132(deepcopy)
      168    0.001    0.000    0.026    0.000 json_utils.py:43(encode)
       50    0.000    0.000    0.026    0.001 random_ops.py:319(random_shuffle)
    46728    0.021    0.000    0.026    0.000 converter.py:138(absl_to_standard)
        3    0.000    0.000    0.025    0.008 rmsprop.py:163(_prepare_local)
       50    0.000    0.000    0.025    0.001 gen_random_ops.py:528(random_shuffle)
    19264    0.025    0.000    0.025    0.000 training.py:1420(make_predict_function)
4230/1830    0.006    0.000    0.025    0.000 tracking.py:80(__setattr__)
       12    0.000    0.000    0.025    0.002 gen_io_ops.py:1463(restore_v2)
    58306    0.022    0.000    0.025    0.000 func_graph.py:1016(<listcomp>)
    59339    0.025    0.000    0.025    0.000 inspect.py:2821(return_annotation)
    23930    0.021    0.000    0.025    0.000 Hanabi.py:147(numberOfTiles)
    57942    0.024    0.000    0.024    0.000 dataset_ops.py:4139(element_spec)
    66960    0.024    0.000    0.024    0.000 inspect.py:2514(kind)
       16    0.000    0.000    0.024    0.001 axis.py:1428(get_major_ticks)
     6264    0.005    0.000    0.024    0.000 save.py:137(list_extra_dependencies)
    59339    0.024    0.000    0.024    0.000 inspect.py:2817(parameters)
    55366    0.024    0.000    0.024    0.000 fromnumeric.py:3033(_ndim_dispatcher)
     2027    0.011    0.000    0.024    0.000 compile_utils.py:123(metrics)
    58031    0.023    0.000    0.023    0.000 numeric.py:2283(_array_equal_dispatcher)
      780    0.004    0.000    0.023    0.000 def_function.py:1009(_list_all_concrete_functions)
      768    0.008    0.000    0.023    0.000 ops.py:6937(set_int_list_attr)
    66960    0.023    0.000    0.023    0.000 inspect.py:2510(annotation)
       12    0.023    0.002    0.023    0.002 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToGraphDef}
    13293    0.023    0.000    0.023    0.000 fromnumeric.py:74(<dictcomp>)
   127676    0.023    0.000    0.023    0.000 Hanabi.py:220(<listcomp>)
      108    0.001    0.000    0.023    0.000 text.py:867(get_window_extent)
    25472    0.012    0.000    0.023    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)
    19314    0.023    0.000    0.023    0.000 data_adapter.py:413(get_size)
    77255    0.023    0.000    0.023    0.000 dataset_ops.py:2949(_inputs)
      682    0.002    0.000    0.022    0.000 ops.py:4361(_add_device_to_stack)
        2    0.000    0.000    0.021    0.011 _base.py:948(cla)
       72    0.001    0.000    0.021    0.000 serialized_attributes.py:205(set_and_validate_objects)
    19320    0.021    0.000    0.021    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
    45237    0.021    0.000    0.021    0.000 ops.py:167(__init__)
      216    0.001    0.000    0.021    0.000 function.py:2041(add_to_graph)
      170    0.002    0.000    0.021    0.000 def_function.py:451(__init__)
      108    0.001    0.000    0.021    0.000 functional.py:332(_checkpoint_dependencies)
  888/168    0.001    0.000    0.021    0.000 copy.py:210(_deepcopy_list)
     8690    0.015    0.000    0.021    0.000 threading.py:251(_acquire_restore)
10380/5580    0.013    0.000    0.021    0.000 data_structures.py:756(__getattribute__)
    58182    0.021    0.000    0.021    0.000 function.py:2467(flat_input_signature)
      121    0.002    0.000    0.021    0.000 functional.py:308(_layer_checkpoint_dependencies)
        3    0.000    0.000    0.020    0.007 math_ops.py:3894(reduced_shape)
        3    0.000    0.000    0.020    0.007 losses.py:117(__call__)
    58306    0.020    0.000    0.020    0.000 func_graph.py:738(<listcomp>)
  1488/48    0.004    0.000    0.020    0.000 copy.py:236(_deepcopy_dict)
    10400    0.010    0.000    0.020    0.000 Hanabi.py:233(draw)
      444    0.005    0.000    0.020    0.000 nested_structure_coder.py:428(do_encode)
       12    0.000    0.000    0.020    0.002 builder_impl.py:757(copy_assets_to_destination_dir)
      432    0.001    0.000    0.020    0.000 data_structures.py:414(__init__)
    19487    0.020    0.000    0.020    0.000 monitoring.py:295(__init__)
       34    0.000    0.000    0.020    0.001 math_ops.py:524(subtract)
       16    0.000    0.000    0.020    0.001 axis.py:1171(_get_tick_bboxes)
       16    0.000    0.000    0.019    0.001 axis.py:1173(<listcomp>)
       34    0.000    0.000    0.019    0.001 gen_math_ops.py:10433(sub)
    19314    0.016    0.000    0.019    0.000 dataset_ops.py:3150(<lambda>)
      179    0.001    0.000    0.019    0.000 type_spec.py:110(most_specific_compatible_type)
     3534    0.006    0.000    0.019    0.000 ops.py:4567(__exit__)
     3534    0.009    0.000    0.019    0.000 ops.py:4557(__enter__)
    78875    0.019    0.000    0.019    0.000 {method 'append' of 'collections.deque' objects}
        3    0.000    0.000    0.019    0.006 math_grad.py:1424(_DivNoNanGrad)
      432    0.002    0.000    0.019    0.000 data_structures.py:309(__init__)
       27    0.000    0.000    0.019    0.001 math_ops.py:1267(truediv)
    19938    0.019    0.000    0.019    0.000 device_spec.py:272(device_type)
       27    0.000    0.000    0.019    0.001 math_ops.py:1220(_truediv_python3)
      132    0.004    0.000    0.019    0.000 nested_structure_coder.py:229(do_encode)
     1697    0.004    0.000    0.019    0.000 func_graph.py:265(watch_variable)
    19869    0.019    0.000    0.019    0.000 enum.py:599(value)
     2610    0.005    0.000    0.019    0.000 func_graph.py:321(control_dependencies)
    57939    0.019    0.000    0.019    0.000 dataset_ops.py:3544(element_spec)
    38626    0.018    0.000    0.018    0.000 tensor_spec.py:110(_to_legacy_output_types)
  714/179    0.003    0.000    0.018    0.000 type_spec.py:395(__most_specific_compatible_type_serialization)
       16    0.000    0.000    0.018    0.001 axis.py:1346(get_majorticklocs)
      552    0.001    0.000    0.018    0.000 variables.py:1079(__hash__)
    19372    0.018    0.000    0.018    0.000 backend_config.py:67(floatx)
        1    0.000    0.000    0.018    0.018 tmpzo79h315.py:9(tf__predict_function)
       27    0.000    0.000    0.018    0.001 gen_math_ops.py:7416(real_div)
    45237    0.018    0.000    0.018    0.000 ops.py:173(__exit__)
        1    0.000    0.000    0.018    0.018 training.py:1441(step_function)
    58306    0.018    0.000    0.018    0.000 function.py:445(<listcomp>)
    57940    0.018    0.000    0.018    0.000 dataset_ops.py:3018(element_spec)
    21202    0.017    0.000    0.017    0.000 data_adapter.py:425(should_recreate_iterator)
        3    0.000    0.000    0.017    0.006 metrics_utils.py:73(decorated)
      148    0.002    0.000    0.017    0.000 lines.py:751(draw)
  892/358    0.001    0.000    0.017    0.000 type_spec.py:429(<genexpr>)
     4608    0.009    0.000    0.017    0.000 base.py:549(_setattr_tracking)
       20    0.000    0.000    0.017    0.001 math_ops.py:1921(reduce_sum)
      152    0.002    0.000    0.017    0.000 text.py:272(_get_layout)
     8064    0.007    0.000    0.017    0.000 backend.py:639(get_graph)
      180    0.001    0.000    0.017    0.000 utils.py:202(get_training_arg_index)
       13    0.000    0.000    0.017    0.001 resource_variable_ops.py:806(assign_add)
     1898    0.017    0.000    0.017    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
    19314    0.010    0.000    0.017    0.000 optimization_options.py:60(_graph_rewrite_configs)
       16    0.000    0.000    0.016    0.001 axis.py:1350(get_minorticklocs)
    57942    0.016    0.000    0.016    0.000 dataset_ops.py:3496(element_spec)
    58318    0.016    0.000    0.016    0.000 function.py:1586(<genexpr>)
        3    0.000    0.000    0.016    0.005 metrics.py:173(update_state_fn)
       24    0.000    0.000    0.016    0.001 gen_math_ops.py:10278(square)
 1104/384    0.003    0.000    0.016    0.000 utils.py:124(list_all_layers_and_sublayers)
      600    0.001    0.000    0.016    0.000 base_layer.py:3013(_list_extra_dependencies_for_serialization)
        3    0.000    0.000    0.016    0.005 metrics.py:336(update_state)
    46728    0.012    0.000    0.016    0.000 __init__.py:190(_checkLevel)
    14489    0.007    0.000    0.016    0.000 pickle.py:680(save_float)
        1    0.000    0.000    0.016    0.016 training.py:1444(run_step)
      192    0.002    0.000    0.015    0.000 node.py:162(serialize)
      120    0.001    0.000    0.015    0.000 save_impl.py:535(__init__)
        4    0.000    0.000    0.015    0.004 initializers_v2.py:387(__call__)
       60    0.001    0.000    0.015    0.000 save_impl.py:339(__init__)
    38710    0.015    0.000    0.015    0.000 tensor_spec.py:153(<lambda>)
        4    0.000    0.000    0.015    0.004 init_ops_v2.py:528(__call__)
    19326    0.013    0.000    0.015    0.000 tensor_shape.py:97(dimension_value)
        4    0.000    0.000    0.015    0.004 init_ops_v2.py:1037(random_uniform)
11784/168    0.007    0.000    0.015    0.000 json_utils.py:47(_encode_tuple)
        4    0.001    0.000    0.015    0.004 random_ops.py:207(random_uniform)
      124    0.002    0.000    0.015    0.000 text.py:670(draw)
    51748    0.015    0.000    0.015    0.000 function.py:268(__enter__)
     1104    0.002    0.000    0.015    0.000 saveable_object_util.py:134(saveable_objects_for_op)
    38626    0.015    0.000    0.015    0.000 tensor_spec.py:113(_to_legacy_output_shapes)
 2568/168    0.003    0.000    0.015    0.000 json_utils.py:54(<dictcomp>)
       25    0.000    0.000    0.015    0.001 array_ops.py:3058(placeholder)
      376    0.005    0.000    0.014    0.000 input_spec.py:132(assert_input_compatibility)
        4    0.000    0.000    0.014    0.004 axis.py:2011(_update_label_position)
        4    0.000    0.000    0.014    0.004 axis.py:2303(_update_label_position)
       16    0.000    0.000    0.014    0.001 axis.py:2187(get_tick_space)
       25    0.000    0.000    0.014    0.001 gen_array_ops.py:6769(placeholder)
    38628    0.014    0.000    0.014    0.000 dataset_ops.py:4368(options)
     1380    0.004    0.000    0.014    0.000 utils.py:116(list_all_layers)
     4092    0.007    0.000    0.014    0.000 weakref.py:242(values)
     3534    0.005    0.000    0.014    0.000 ops.py:4646(control_dependencies)
        1    0.000    0.000    0.014    0.014 training.py:1396(predict_step)
      708    0.002    0.000    0.014    0.000 traceable_stack.py:92(push_obj)
    19356    0.014    0.000    0.014    0.000 distribution_strategy_context.py:312(_get_default_strategy)
        3    0.000    0.000    0.014    0.005 losses_utils.py:71(compute_weighted_loss)
     2532    0.002    0.000    0.014    0.000 ops.py:3779(get_operation_by_name)
     8790    0.010    0.000    0.014    0.000 threading.py:239(__enter__)
    58306    0.014    0.000    0.014    0.000 func_graph.py:493(<listcomp>)
    19314    0.014    0.000    0.014    0.000 training_utils.py:643(handle_partial_sample_weights)
      948    0.002    0.000    0.014    0.000 _collections_abc.py:824(update)
      357    0.002    0.000    0.014    0.000 tensor_spec.py:100(most_specific_compatible_type)
      480    0.000    0.000    0.014    0.000 data_structures.py:635(_track_value)
     3408    0.002    0.000    0.013    0.000 graph_view.py:61(_object_prefix_from_path)
       16    0.000    0.000    0.013    0.001 axis.py:2487(get_tick_space)
    21152    0.013    0.000    0.013    0.000 data_adapter.py:227(on_epoch_end)
       12    0.000    0.000    0.013    0.001 tf_logging.py:166(info)
    55/16    0.000    0.000    0.013    0.001 variables.py:66(getter)
    42/16    0.000    0.000    0.013    0.001 distribute_lib.py:2855(creator)
        3    0.000    0.000    0.013    0.004 math_grad.py:1554(_SquaredDifferenceGrad)
       12    0.000    0.000    0.013    0.001 file_io.py:197(__exit__)
      600    0.001    0.000    0.013    0.000 base_serialization.py:56(list_extra_dependencies_for_serialization)
     2905    0.003    0.000    0.013    0.000 ops.py:3636(as_graph_element)
       12    0.013    0.001    0.013    0.001 file_io.py:223(close)
      480    0.001    0.000    0.013    0.000 data_structures.py:173(_track_value)
       12    0.000    0.000    0.013    0.001 __init__.py:1421(_log)
       20    0.000    0.000    0.013    0.001 math_ops.py:1987(reduce_sum_with_dims)
       96    0.000    0.000    0.013    0.000 deprecation.py:311(new_func)
        4    0.000    0.000    0.013    0.003 axis.py:1992(_get_tick_boxes_siblings)
    19414    0.013    0.000    0.013    0.000 callbacks.py:619(set_model)
        4    0.000    0.000    0.013    0.003 axis.py:2284(_get_tick_boxes_siblings)
        1    0.000    0.000    0.013    0.013 Experiment.py:33(__init__)
        1    0.000    0.000    0.013    0.013 training.py:462(compile)
       20    0.000    0.000    0.013    0.001 gen_math_ops.py:10493(_sum)
      552    0.003    0.000    0.013    0.000 saveable_object_util.py:91(__init__)
       16    0.000    0.000    0.013    0.001 axis.py:884(set_tick_params)
      516    0.001    0.000    0.013    0.000 layer_serialization.py:73(objects_to_serialize)
     1218    0.002    0.000    0.013    0.000 ops.py:4275(_colocate_with_for_gradient)
      552    0.003    0.000    0.012    0.000 resource_variable_ops.py:64(get_resource_handle_data)
       12    0.000    0.000    0.012    0.001 math_grad.py:1672(_MatMulGrad)
        9    0.000    0.000    0.012    0.001 optimizer_v2.py:673(_get_hyper)
     1938    0.010    0.000    0.012    0.000 {method 'isatty' of '_io._IOBase' objects}
       48    0.000    0.000    0.012    0.000 save_impl.py:237(replace_layer_functions)
    23364    0.009    0.000    0.012    0.000 _flagvalues.py:468(__getitem__)
       84    0.001    0.000    0.012    0.000 base_layer.py:1356(updates)
       24    0.000    0.000    0.012    0.001 array_ops.py:631(shape_internal)
        2    0.000    0.000    0.012    0.006 backend_pdf.py:592(finalize)
      372    0.000    0.000    0.012    0.000 ops.py:819(__hash__)
     1415    0.005    0.000    0.012    0.000 ops.py:6601(__enter__)
        3    0.000    0.000    0.012    0.004 optimizer_v2.py:689(_create_all_weights)
     8790    0.010    0.000    0.012    0.000 threading.py:242(__exit__)
     1560    0.006    0.000    0.012    0.000 function.py:2748(all_values)
       24    0.000    0.000    0.012    0.000 rmsprop.py:288(get_config)
    19314    0.012    0.000    0.012    0.000 data_adapter.py:1272(_validate_data_handler)
    58306    0.012    0.000    0.012    0.000 func_graph.py:748(<listcomp>)
    47716    0.012    0.000    0.012    0.000 {method 'getrandbits' of '_random.Random' objects}
      360    0.001    0.000    0.012    0.000 encoder.py:182(encode)
      708    0.006    0.000    0.011    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
     1725    0.002    0.000    0.011    0.000 ops.py:158(string_merge)
    19264    0.011    0.000    0.011    0.000 training.py:1604(<lambda>)
       12    0.000    0.000    0.011    0.001 __init__.py:1446(handle)
        2    0.000    0.000    0.011    0.006 backend_pdf.py:711(writeFonts)
       12    0.000    0.000    0.011    0.001 __init__.py:1500(callHandlers)
       96    0.000    0.000    0.011    0.000 optimizer_v2.py:904(_serialize_hyperparameter)
        2    0.000    0.000    0.011    0.006 backend_pdf.py:896(embedTTF)
    13126    0.011    0.000    0.011    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.011    0.001 __init__.py:852(handle)
        2    0.000    0.000    0.011    0.006 backend_pdf.py:913(embedTTFType3)
    70092    0.011    0.000    0.011    0.000 _flagvalues.py:148(_flags)
       12    0.000    0.000    0.011    0.001 __init__.py:982(emit)
       13    0.000    0.000    0.011    0.001 gen_resource_variable_ops.py:23(assign_add_variable_op)
        3    0.000    0.000    0.011    0.004 losses_utils.py:59(reduce_weighted_loss)
       15    0.000    0.000    0.011    0.001 variables.py:223(_variable_v2_call)
       15    0.000    0.000    0.011    0.001 math_ops.py:1327(div_no_nan)
     1432    0.003    0.000    0.011    0.000 ops.py:762(consumers)
    19364    0.011    0.000    0.011    0.000 callbacks.py:616(set_params)
       24    0.001    0.000    0.011    0.000 functional_saver.py:137(__init__)
    19314    0.011    0.000    0.011    0.000 data_adapter.py:1034(broadcast_sample_weight_modes)
     3534    0.005    0.000    0.011    0.000 ops.py:4592(_pop_control_dependencies_controller)
      624    0.001    0.000    0.011    0.000 saveable_object_util.py:54(set_cpu0)
     8880    0.007    0.000    0.011    0.000 pickle.py:645(save_bool)
     12/8    0.000    0.000    0.011    0.001 axis.py:687(__get__)
    40306    0.011    0.000    0.011    0.000 distribute_lib.py:2973(value_container)
       96    0.000    0.000    0.011    0.000 backend.py:3469(get_value)
     3220    0.007    0.000    0.011    0.000 tensor_shape.py:1004(assert_has_rank)
        4    0.000    0.000    0.010    0.003 _base.py:2727(grid)
        8    0.000    0.000    0.010    0.001 axis.py:1456(grid)
      360    0.009    0.000    0.010    0.000 encoder.py:204(iterencode)
       24    0.000    0.000    0.010    0.000 functional_saver.py:115(sharded_filename)
       24    0.000    0.000    0.010    0.000 gen_io_ops.py:1756(sharded_filename)
    32112    0.010    0.000    0.010    0.000 callbacks.py:627(on_batch_end)
     2174    0.010    0.000    0.010    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
    19314    0.010    0.000    0.010    0.000 data_adapter.py:410(get_dataset)
     3024    0.005    0.000    0.010    0.000 data_structures.py:497(_checkpoint_dependencies)
    45237    0.010    0.000    0.010    0.000 ops.py:170(__enter__)
     2905    0.005    0.000    0.010    0.000 ops.py:3672(_as_graph_element_locked)
    31919    0.010    0.000    0.010    0.000 Hanabi.py:216(<listcomp>)
        1    0.000    0.000    0.010    0.010 compile_utils.py:110(__init__)
      276    0.001    0.000    0.010    0.000 resource_variable_ops.py:110(_combine_handle_data)
    19314    0.010    0.000    0.010    0.000 dataset_ops.py:4143(_transformation_name)
    13140    0.010    0.000    0.010    0.000 {method 'add' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
       24    0.000    0.000    0.010    0.000 file_io.py:235(file_exists)
     1725    0.002    0.000    0.010    0.000 device.py:133(shortcut_string_merge)
       24    0.000    0.000    0.010    0.000 file_io.py:252(file_exists_v2)
       20    0.000    0.000    0.010    0.000 array_ops.py:604(shape)
    19313    0.010    0.000    0.010    0.000 dataset_ops.py:3541(_inputs)
        9    0.000    0.000    0.010    0.001 nn_grad.py:473(_SoftplusGrad)
       14    0.000    0.000    0.010    0.001 file_io.py:453(recursive_create_dir)
       24    0.009    0.000    0.009    0.000 {built-in method tensorflow.python._pywrap_file_io.FileExists}
       14    0.000    0.000    0.009    0.001 file_io.py:468(recursive_create_dir_v2)
       13    0.000    0.000    0.009    0.001 def_function.py:681(variable_capturing_scope)
       12    0.000    0.000    0.009    0.001 utils_impl.py:210(get_or_create_variables_dir)
    58306    0.009    0.000    0.009    0.000 func_graph.py:753(<listcomp>)
       14    0.009    0.001    0.009    0.001 {built-in method tensorflow.python._pywrap_file_io.RecursivelyCreateDir}
     8690    0.007    0.000    0.009    0.000 threading.py:248(_release_save)
        4    0.000    0.000    0.009    0.002 gen_random_ops.py:695(random_uniform)
    13530    0.009    0.000    0.009    0.000 {method 'random' of '_random.Random' objects}
    19314    0.009    0.000    0.009    0.000 data_adapter.py:1217(inferred_steps)
       13    0.000    0.000    0.009    0.001 def_function.py:136(__init__)
        3    0.000    0.000    0.009    0.003 rmsprop.py:153(_create_slots)
      986    0.001    0.000    0.009    0.000 ops.py:521(_shape_tuple)
       24    0.000    0.000    0.009    0.000 optimizer_v2.py:735(add_slot)
      552    0.003    0.000    0.009    0.000 saveable_object_util.py:224(op_list_to_dict)
     1938    0.009    0.000    0.009    0.000 callbacks.py:981(_reset_progbar)
    10992    0.003    0.000    0.009    0.000 graph_view.py:63(<genexpr>)
       12    0.000    0.000    0.009    0.001 __init__.py:971(flush)
    19314    0.009    0.000    0.009    0.000 distribute_lib.py:2993(_in_multi_worker_mode)
     1218    0.004    0.000    0.008    0.000 ops.py:4288(colocate_with)
    48168    0.008    0.000    0.008    0.000 callbacks.py:622(on_batch_begin)
       24    0.000    0.000    0.008    0.000 array_ops.py:1393(_autopacking_helper)
    19951    0.008    0.000    0.008    0.000 ops.py:3003(<lambda>)
      504    0.002    0.000    0.008    0.000 artist.py:974(update)
    19264    0.008    0.000    0.008    0.000 callbacks.py:804(on_predict_end)
  864/144    0.000    0.000    0.008    0.000 json_utils.py:52(<listcomp>)
        7    0.000    0.000    0.008    0.001 version_utils.py:63(__new__)
       88    0.001    0.000    0.008    0.000 functional.py:556(_conform_to_reference_input)
      372    0.002    0.000    0.008    0.000 base_layer.py:3208(_in_functional_construction_mode)
     3432    0.002    0.000    0.008    0.000 optimizer_v2.py:773(get_slot)
      420    0.001    0.000    0.008    0.000 data_structures.py:793(_checkpoint_dependencies)
      707    0.001    0.000    0.008    0.000 type_spec.py:286(_deserialize)
     21/8    0.008    0.000    0.008    0.001 version_utils.py:98(swap_class)
      118    0.002    0.000    0.008    0.000 lines.py:667(recache)
      986    0.003    0.000    0.008    0.000 ops.py:515(_shape_as_list)
    19314    0.008    0.000    0.008    0.000 dataset_ops.py:4062(_transformation_name)
    19264    0.008    0.000    0.008    0.000 callbacks.py:793(on_predict_begin)
      278    0.000    0.000    0.008    0.000 markers.py:205(__init__)
       24    0.000    0.000    0.008    0.000 gen_array_ops.py:6416(pack)
       12    0.000    0.000    0.008    0.001 saving_utils.py:100(trace_model_call)
     2895    0.002    0.000    0.007    0.000 tape.py:177(record_operation)
        3    0.000    0.000    0.007    0.002 optimizer_v2.py:797(_prepare_local)
        2    0.000    0.000    0.007    0.004 backend_pdf.py:435(__init__)
       27    0.000    0.000    0.007    0.000 gen_control_flow_ops.py:470(no_op)
     1940    0.006    0.000    0.007    0.000 copy.py:66(copy)
     1898    0.007    0.000    0.007    0.000 custom_gradient.py:75(<listcomp>)
       24    0.000    0.000    0.007    0.000 saving_utils.py:57(model_input_signature)
       24    0.000    0.000    0.007    0.000 string_ops.py:48(regex_full_match)
       24    0.000    0.000    0.007    0.000 gen_string_ops.py:586(static_regex_full_match)
       14    0.000    0.000    0.007    0.001 gen_array_ops.py:8994(shape)
       34    0.000    0.000    0.007    0.000 axis.py:485(_get_gridline)
        4    0.000    0.000    0.007    0.002 axis.py:967(set_clip_path)
      425    0.002    0.000    0.007    0.000 training.py:2361(layers)
       15    0.000    0.000    0.007    0.000 gen_math_ops.py:3113(div_no_nan)
    12421    0.007    0.000    0.007    0.000 fromnumeric.py:2546(_amax_dispatcher)
    19314    0.007    0.000    0.007    0.000 dataset_ops.py:4112(_transformation_name)
        3    0.000    0.000    0.007    0.002 training.py:760(<dictcomp>)
       34    0.000    0.000    0.007    0.000 axis.py:603(_get_gridline)
        3    0.000    0.000    0.007    0.002 metrics_utils.py:117(decorated)
      682    0.004    0.000    0.007    0.000 ops.py:121(__init__)
       50    0.001    0.000    0.007    0.000 callbacks.py:503(on_train_end)
       48    0.000    0.000    0.007    0.000 training.py:2322(_undeduplicated_weights)
     4107    0.002    0.000    0.007    0.000 resource_variable_ops.py:2127(is_resource_variable)
     8520    0.004    0.000    0.007    0.000 graph_view.py:51(_escape_local_name)
      147    0.000    0.000    0.007    0.000 base_layer.py:2247(trainable_variables)
1824/1104    0.001    0.000    0.007    0.000 utils.py:127(<genexpr>)
      276    0.000    0.000    0.007    0.000 resource_variable_ops.py:74(get_eager_safe_handle_data)
        2    0.000    0.000    0.007    0.003 __init__.py:359(to_filehandle)
       12    0.000    0.000    0.007    0.001 save.py:399(_map_function_arguments_to_created_inputs)
9526/8032    0.004    0.000    0.007    0.000 artist.py:217(stale)
      278    0.001    0.000    0.007    0.000 markers.py:272(set_marker)
       24    0.000    0.000    0.007    0.000 base_layer.py:2993(_get_save_spec)
      168    0.000    0.000    0.007    0.000 def_function.py:434(__del__)
       34    0.000    0.000    0.007    0.000 axis.py:459(_get_tick1line)
       12    0.000    0.000    0.007    0.001 nn_grad.py:327(_BiasAddGrad)
       24    0.000    0.000    0.007    0.000 string_ops.py:540(string_join)
6976/6695    0.005    0.000    0.006    0.000 optimizer_v2.py:706(__getattribute__)
       24    0.000    0.000    0.006    0.000 gen_string_ops.py:819(string_join)
       34    0.000    0.000    0.006    0.000 axis.py:574(_get_tick1line)
       24    0.000    0.000    0.006    0.000 array_ops.py:4314(where)
       18    0.000    0.000    0.006    0.000 array_ops.py:200(fill)
     3528    0.001    0.000    0.006    0.000 nested_structure_coder.py:176(can_encode)
       36    0.000    0.000    0.006    0.000 training.py:2313(weights)
       12    0.000    0.000    0.006    0.001 utils_impl.py:232(get_or_create_assets_dir)
     2081    0.002    0.000    0.006    0.000 object_identity.py:220(_wrap_key)
     8790    0.006    0.000    0.006    0.000 {built-in method _imp.lock_held}
       12    0.000    0.000    0.006    0.001 gen_nn_ops.py:725(bias_add_grad)
       60    0.000    0.000    0.006    0.000 save_impl.py:367(_generate_input_signature)
       32    0.000    0.000    0.006    0.000 ticker.py:672(set_locs)
       24    0.000    0.000    0.006    0.000 gen_math_ops.py:8744(select)
       18    0.000    0.000    0.006    0.000 gen_array_ops.py:3357(fill)
       24    0.000    0.000    0.006    0.000 def_function.py:1171(__get__)
      840    0.003    0.000    0.006    0.000 function.py:361(_enclosing_xla_context)
     3464    0.002    0.000    0.006    0.000 optimizer_v2.py:1279(_var_key)
       30    0.000    0.000    0.006    0.000 tf_utils.py:484(get_tensor_spec)
        3    0.000    0.000    0.006    0.002 array_ops.py:872(_slice_helper)
       24    0.000    0.000    0.006    0.000 base_layer.py:2998(<lambda>)
        2    0.000    0.000    0.006    0.003 functional.py:108(__init__)
      384    0.003    0.000    0.006    0.000 function.py:2071(_select_forward_and_backward_functions)
     1248    0.003    0.000    0.006    0.000 device_spec.py:111(__init__)
       34    0.000    0.000    0.006    0.000 axis.py:589(_get_tick2line)
      516    0.001    0.000    0.006    0.000 serialized_attributes.py:180(objects_to_serialize)
      2/1    0.000    0.000    0.006    0.006 training.py:237(__new__)
       24    0.000    0.000    0.006    0.000 function.py:3700(class_method_to_instance_method)
     3534    0.006    0.000    0.006    0.000 ops.py:4522(__init__)
      444    0.001    0.000    0.006    0.000 nested_structure_coder.py:379(do_encode)
    19314    0.006    0.000    0.006    0.000 distribute_lib.py:2904(_experimental_distribute_dataset)
      306    0.002    0.000    0.006    0.000 resource_variable_ops.py:84(_set_handle_shapes_and_types)
      150    0.001    0.000    0.006    0.000 text.py:121(__init__)
       24    0.001    0.000    0.006    0.000 save.py:224(_add_saveable_objects)
        2    0.000    0.000    0.006    0.003 backend_pdf.py:954(<listcomp>)
       24    0.000    0.000    0.006    0.000 patches.py:585(draw)
       27    0.000    0.000    0.006    0.000 math_ops.py:1826(_ReductionDims)
       34    0.000    0.000    0.006    0.000 axis.py:470(_get_tick2line)
      120    0.001    0.000    0.006    0.000 save_impl.py:600(_create_call_fn_decorator)
    19314    0.006    0.000    0.006    0.000 {method 'pop' of 'set' objects}
        1    0.000    0.000    0.005    0.005 metrics.py:162(__new__)
        3    0.000    0.000    0.005    0.002 optimizer_v2.py:848(_decayed_lr)
     3141    0.004    0.000    0.005    0.000 traceable_stack.py:75(copy_metadata)
      512    0.000    0.000    0.005    0.000 backend_pdf.py:943(get_char_width)
     2616    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tf_session.EqualAttrValueWrapper}
        3    0.000    0.000    0.005    0.002 losses.py:239(call)
     9136    0.005    0.000    0.005    0.000 {built-in method builtins.abs}
     3528    0.002    0.000    0.005    0.000 nested_structure_coder.py:153(_is_tuple)
      672    0.001    0.000    0.005    0.000 revived_types.py:140(serialize)
     3534    0.003    0.000    0.005    0.000 ops.py:4589(_push_control_dependencies_controller)
       50    0.001    0.000    0.005    0.000 training_utils.py:1226(__enter__)
      384    0.002    0.000    0.005    0.000 nested_structure_coder.py:136(do_encode)
        3    0.000    0.000    0.005    0.002 metrics.py:188(result_fn)
        3    0.000    0.000    0.005    0.002 losses.py:1162(mean_squared_error)
 1509/649    0.002    0.000    0.005    0.000 backend_pdf.py:134(pdfRepr)
     1415    0.002    0.000    0.005    0.000 ops.py:6635(__exit__)
     2895    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
      372    0.002    0.000    0.005    0.000 base_layer.py:2457(_set_mask_metadata)
     1432    0.002    0.000    0.005    0.000 ops.py:772(<listcomp>)
      624    0.002    0.000    0.005    0.000 device_spec.py:236(replace)
      576    0.000    0.000    0.005    0.000 __init__.py:133(serialize)
        3    0.000    0.000    0.005    0.002 math_grad.py:35(_safe_shape_div)
      164    0.000    0.000    0.005    0.000 transforms.py:1388(transform)
     6120    0.002    0.000    0.005    0.000 nested_structure_coder.py:157(_is_named_tuple)
      130    0.005    0.000    0.005    0.000 {method 'set_text' of 'matplotlib.ft2font.FT2Font' objects}
      255    0.002    0.000    0.005    0.000 base_layer.py:1378(losses)
      396    0.002    0.000    0.005    0.000 nested_structure_coder.py:202(do_encode)
       28    0.000    0.000    0.005    0.000 axis.py:334(_apply_params)
      198    0.001    0.000    0.005    0.000 font_manager.py:623(__init__)
       26    0.000    0.000    0.005    0.000 def_function.py:1423(decorated)
      288    0.000    0.000    0.005    0.000 tf_utils.py:261(convert_inner_node_data)
     7161    0.005    0.000    0.005    0.000 {method 'index' of 'list' objects}
      502    0.000    0.000    0.005    0.000 <__array_function__ internals>:2(any)
       40    0.000    0.000    0.005    0.000 training.py:1890(trainable_weights)
        3    0.000    0.000    0.005    0.002 metrics.py:394(result)
        4    0.000    0.000    0.005    0.001 _base.py:2491(_update_title_position)
        7    0.000    0.000    0.005    0.001 gen_array_ops.py:11337(tile)
     2186    0.004    0.000    0.005    0.000 func_graph.py:669(add_capture)
     1092    0.001    0.000    0.005    0.000 _collections_abc.py:851(setdefault)
   122/26    0.000    0.000    0.005    0.000 copy.py:268(_reconstruct)
       70    0.000    0.000    0.005    0.000 lines.py:1021(get_path)
      512    0.005    0.000    0.005    0.000 {method 'load_char' of 'matplotlib.ft2font.FT2Font' objects}
       26    0.000    0.000    0.005    0.000 backend_pdf.py:2090(draw_text)
        3    0.000    0.000    0.005    0.002 losses_utils.py:38(_safe_mean)
     1365    0.001    0.000    0.005    0.000 ops.py:2180(_set_device_from_string)
       15    0.000    0.000    0.005    0.000 array_ops.py:2746(wrapped)
        2    0.000    0.000    0.005    0.002 training.py:246(__init__)
       60    0.001    0.000    0.005    0.000 data_structures.py:735(__init__)
       38    0.000    0.000    0.005    0.000 backend_pdf.py:1768(draw_path)
       32    0.000    0.000    0.005    0.000 ticker.py:253(format_ticks)
     1478    0.003    0.000    0.005    0.000 _weakrefset.py:26(__exit__)
       15    0.000    0.000    0.005    0.000 array_ops.py:2754(zeros)
    10400    0.003    0.000    0.005    0.000 Hanabi.py:144(draw)
      556    0.001    0.000    0.005    0.000 markers.py:227(_recache)
      312    0.001    0.000    0.005    0.000 save_impl.py:453(get_input_arg_value)
  576/288    0.001    0.000    0.004    0.000 tf_utils.py:157(map_structure_with_atomic)
        9    0.000    0.000    0.004    0.000 math_ops.py:3594(sigmoid)
     3024    0.003    0.000    0.004    0.000 data_structures.py:479(_check_external_modification)
      624    0.001    0.000    0.004    0.000 device_spec.py:142(from_string)
        1    0.000    0.000    0.004    0.004 metrics.py:481(__init__)
        1    0.000    0.000    0.004    0.004 metrics.py:326(__init__)
        4    0.000    0.000    0.004    0.001 iterator_ops.py:735(__next__)
        4    0.000    0.000    0.004    0.001 iterator_ops.py:770(next)
        4    0.000    0.000    0.004    0.001 iterator_ops.py:738(_next_internal)
        1    0.000    0.000    0.004    0.004 training.py:2332(summary)
        1    0.000    0.000    0.004    0.004 layer_utils.py:112(print_summary)
    25/16    0.000    0.000    0.004    0.000 version_utils.py:110(<genexpr>)
      328    0.002    0.000    0.004    0.000 tf_decorator.py:128(rewrap)
      140    0.000    0.000    0.004    0.000 artist.py:1095(set)
     3238    0.003    0.000    0.004    0.000 ops.py:4579(add_op)
       32    0.000    0.000    0.004    0.000 axis.py:825(_set_scale)
       12    0.000    0.000    0.004    0.000 signature_serialization.py:265(validate_saveable_view)
      368    0.001    0.000    0.004    0.000 base_layer_utils.py:310(is_in_keras_graph)
      588    0.003    0.000    0.004    0.000 serialized_attributes.py:168(checkpointable_objects)
     2070    0.002    0.000    0.004    0.000 base_layer.py:2942(_eager_losses)
     9847    0.004    0.000    0.004    0.000 __init__.py:815(__getitem__)
        9    0.000    0.000    0.004    0.000 gen_math_ops.py:8903(sigmoid)
       24    0.000    0.000    0.004    0.000 axis.py:1398(_copy_tick_props)
     2873    0.002    0.000    0.004    0.000 ops.py:2062(device)
      408    0.000    0.000    0.004    0.000 policy.py:615(serialize)
       52    0.000    0.000    0.004    0.000 backend_agg.py:196(get_text_width_height_descent)
      216    0.000    0.000    0.004    0.000 backend_pdf.py:641(output)
     7783    0.004    0.000    0.004    0.000 base_layer.py:1246(trainable)
       32    0.000    0.000    0.004    0.000 scale.py:105(set_default_locators_and_formatters)
     2081    0.003    0.000    0.004    0.000 object_identity.py:75(__init__)
       24    0.000    0.000    0.004    0.000 backend_pdf.py:1847(draw_markers)
        8    0.000    0.000    0.004    0.001 gen_math_ops.py:1837(cast)
       30    0.000    0.000    0.004    0.000 artist.py:731(set_clip_path)
      552    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetHandleShapeAndType}
        1    0.000    0.000    0.004    0.004 Experiment.py:210(<listcomp>)
   288/96    0.000    0.000    0.004    0.000 copy.py:273(<genexpr>)
       62    0.000    0.000    0.004    0.000 patches.py:260(get_transform)
     4718    0.002    0.000    0.004    0.000 ops.py:193(_as_graph_element)
      502    0.000    0.000    0.004    0.000 fromnumeric.py:2236(any)
    31951    0.004    0.000    0.004    0.000 {method 'bit_length' of 'int' objects}
       50    0.000    0.000    0.004    0.000 <__array_function__ internals>:2(nanmin)
        4    0.000    0.000    0.004    0.001 math_ops.py:1153(r_binary_op_wrapper)
       24    0.000    0.000    0.004    0.000 backend_bases.py:173(draw_markers)
      552    0.004    0.000    0.004    0.000 {built-in method FromString}
       16    0.000    0.000    0.004    0.000 transforms.py:695(union)
     8778    0.004    0.000    0.004    0.000 fromnumeric.py:3227(_mean_dispatcher)
        7    0.000    0.000    0.004    0.001 gen_math_ops.py:6318(neg)
       97    0.000    0.000    0.004    0.000 backprop.py:174(_record_gradient)
        4    0.000    0.000    0.004    0.001 core.py:1131(__init__)
     1068    0.002    0.000    0.004    0.000 __init__.py:1956(_setattr_cm)
      144    0.000    0.000    0.004    0.000 base_layer.py:2252(non_trainable_variables)
     7059    0.004    0.000    0.004    0.000 fromnumeric.py:1108(_argmax_dispatcher)
      372    0.001    0.000    0.004    0.000 base_layer.py:2395(_name_scope)
       50    0.000    0.000    0.004    0.000 nanfunctions.py:230(nanmin)
       17    0.000    0.000    0.004    0.000 resource_variable_ops.py:198(eager_safe_variable_handle)
     2349    0.001    0.000    0.004    0.000 ops.py:4258(get_name_scope)
      182    0.001    0.000    0.004    0.000 font_manager.py:1166(findfont)
       12    0.000    0.000    0.004    0.000 function_serialization.py:110(wrap_cached_variables)
      192    0.002    0.000    0.004    0.000 base_layer.py:1438(add_loss)
        4    0.000    0.000    0.004    0.001 math_ops.py:2426(reduce_prod)
      492    0.001    0.000    0.004    0.000 data_structures.py:152(__init__)
       53    0.001    0.000    0.004    0.000 base_layer.py:2673(_get_trainable_state)
       12    0.000    0.000    0.004    0.000 base.py:97(restore)
       72    0.000    0.000    0.004    0.000 base_layer.py:2108(input_shape)
    25318    0.004    0.000    0.004    0.000 shape_base.py:79(_atleast_2d_dispatcher)
      408    0.001    0.000    0.004    0.000 policy.py:593(_policy_equivalent_to_dtype)
     1898    0.003    0.000    0.004    0.000 custom_gradient.py:77(<listcomp>)
     8790    0.004    0.000    0.004    0.000 {method '__enter__' of '_thread.lock' objects}
      448    0.002    0.000    0.004    0.000 base_layer.py:2528(_get_call_arg_value)
        2    0.000    0.000    0.004    0.002 _base.py:553(_init_axis)
      444    0.002    0.000    0.004    0.000 artist.py:74(__init__)
      100    0.000    0.000    0.004    0.000 structure.py:452(<listcomp>)
       34    0.000    0.000    0.004    0.000 axis.py:427(_get_text1)
      624    0.001    0.000    0.004    0.000 ops.py:3221(<listcomp>)
     1938    0.003    0.000    0.004    0.000 callbacks.py:1683(get_monitor_value)
  156/148    0.000    0.000    0.004    0.000 _base.py:583(_unstale_viewLim)
        2    0.000    0.000    0.004    0.002 metrics.py:279(add_weight)
       24    0.000    0.000    0.004    0.000 axis.py:841(cla)
        2    0.000    0.000    0.004    0.002 math_grad.py:67(SmartBroadcastGradientArgs)
       13    0.000    0.000    0.004    0.000 initializers_v2.py:127(__call__)
       64    0.000    0.000    0.004    0.000 backend_pdf.py:1691(check_gc)
     1200    0.001    0.000    0.004    0.000 ops.py:3297(_is_function)
     7861    0.004    0.000    0.004    0.000 {built-in method from_iterable}
       26    0.000    0.000    0.004    0.000 backend_agg.py:170(draw_text)
      356    0.001    0.000    0.004    0.000 base_layer.py:2312(_maybe_cast_inputs)
       34    0.000    0.000    0.003    0.000 axis.py:544(_get_text1)
        3    0.000    0.000    0.003    0.001 losses_utils.py:53(_num_elements)
        9    0.000    0.000    0.003    0.000 array_ops.py:1328(stack)
       92    0.001    0.000    0.003    0.000 tensor_shape.py:926(merge_with)
       13    0.000    0.000    0.003    0.000 init_ops_v2.py:118(__call__)
        3    0.000    0.000    0.003    0.001 gen_data_flow_ops.py:704(dynamic_stitch)
       12    0.000    0.000    0.003    0.000 save.py:367(_map_captures_to_created_tensors)
        6    0.000    0.000    0.003    0.001 array_ops.py:713(size)
       52    0.000    0.000    0.003    0.000 _backend_pdf_ps.py:41(get_text_width_height_descent)
        6    0.000    0.000    0.003    0.001 array_ops.py:745(size_internal)
        1    0.000    0.000    0.003    0.003 input_layer.py:210(Input)
       40    0.000    0.000    0.003    0.000 layer_utils.py:254(gather_trainable_weights)
        3    0.000    0.000    0.003    0.001 backend.py:2245(mean)
        4    0.000    0.000    0.003    0.001 gen_dataset_ops.py:2588(iterator_get_next)
       84    0.000    0.000    0.003    0.000 tensor_spec.py:130(is_compatible_with)
     1600    0.001    0.000    0.003    0.000 ops.py:2052(name)
        3    0.000    0.000    0.003    0.001 math_ops.py:2255(reduce_mean)
      420    0.001    0.000    0.003    0.000 data_structures.py:824(_check_self_external_modification)
       12    0.000    0.000    0.003    0.000 axis.py:229(set_clip_path)
       77    0.000    0.000    0.003    0.000 base_layer.py:2162(output_shape)
        3    0.000    0.000    0.003    0.001 gen_math_ops.py:5832(mean)
       62    0.000    0.000    0.003    0.000 functional.py:237(input_shape)
        2    0.000    0.000    0.003    0.002 training.py:312(_init_batch_counters)
     2027    0.003    0.000    0.003    0.000 compile_utils.py:291(metrics)
      164    0.000    0.000    0.003    0.000 transforms.py:2363(transform_affine)
        7    0.000    0.000    0.003    0.000 variables.py:237(<lambda>)
       34    0.000    0.000    0.003    0.000 axis.py:444(_get_text2)
       97    0.002    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_RecordGradient}
        2    0.000    0.000    0.003    0.002 backend_pdf.py:624(close)
        2    0.003    0.002    0.003    0.002 {method 'close' of '_io.BufferedWriter' objects}
    23364    0.003    0.000    0.003    0.000 __init__.py:170(value)
        7    0.000    0.000    0.003    0.000 variable_scope.py:2616(default_variable_creator_v2)
    16823    0.003    0.000    0.003    0.000 {method 'popleft' of 'collections.deque' objects}
        1    0.000    0.000    0.003    0.003 input_layer.py:91(__init__)
       84    0.001    0.000    0.003    0.000 tensor_spec.py:78(is_compatible_with)
      756    0.002    0.000    0.003    0.000 base_layer_utils.py:508(__enter__)
      240    0.001    0.000    0.003    0.000 transforms.py:1986(scale)
        8    0.000    0.000    0.003    0.000 base_layer.py:297(__init__)
      371    0.001    0.000    0.003    0.000 base_layer_utils.py:490(in_keras_graph)
      120    0.000    0.000    0.003    0.000 node.py:227(input_shapes)
      492    0.001    0.000    0.003    0.000 layer_utils.py:179(__init__)
  216/176    0.001    0.000    0.003    0.000 transforms.py:2387(get_affine)
       60    0.000    0.000    0.003    0.000 save_impl.py:581(_extract_outputs_from_fn)
       34    0.000    0.000    0.003    0.000 axis.py:559(_get_text2)
       32    0.001    0.000    0.003    0.000 ticker.py:759(_set_format)
     1898    0.003    0.000    0.003    0.000 custom_gradient.py:78(<listcomp>)
        3    0.000    0.000    0.003    0.001 gen_math_ops.py:5752(maximum)
       12    0.000    0.000    0.003    0.000 signature_serialization.py:39(_get_signature)
      507    0.001    0.000    0.003    0.000 pickle.py:705(save_str)
      288    0.000    0.000    0.003    0.000 activations.py:426(serialize)
       84    0.001    0.000    0.003    0.000 tensor_util.py:548(<listcomp>)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:1609(writeObject)
      206    0.000    0.000    0.003    0.000 lines.py:1243(set_markerfacecolor)
      692    0.001    0.000    0.003    0.000 base_layer.py:1232(dynamic)
       38    0.000    0.000    0.003    0.000 patches.py:776(get_patch_transform)
      472    0.001    0.000    0.003    0.000 ops.py:6013(get_name_scope)
      684    0.002    0.000    0.003    0.000 ops.py:5175(__init__)
       38    0.000    0.000    0.003    0.000 patches.py:746(_update_patch_transform)
      104    0.001    0.000    0.003    0.000 _dill.py:1327(save_type)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:238(write)
       60    0.000    0.000    0.003    0.000 save_impl.py:552(_wrap_call_and_conditional_losses)
       24    0.002    0.000    0.003    0.000 meta_graph.py:138(ops_used_by_graph_def)
        5    0.000    0.000    0.003    0.001 optimizer_v2.py:1003(add_weight)
      130    0.000    0.000    0.003    0.000 node.py:234(output_shapes)
     1432    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
       12    0.000    0.000    0.003    0.000 ops.py:1319(convert_to_tensor_v2)
      210    0.000    0.000    0.003    0.000 text.py:170(update)
     1938    0.003    0.000    0.003    0.000 iostream.py:316(closed)
      900    0.001    0.000    0.003    0.000 data_structures.py:818(_dirty)
     6124    0.003    0.000    0.003    0.000 ops.py:5087(_control_dependencies_stack)
       50    0.000    0.000    0.003    0.000 callbacks.py:486(on_train_begin)
       16    0.000    0.000    0.003    0.000 spines.py:374(draw)
        3    0.000    0.000    0.003    0.001 math_ops.py:570(scalar_mul)
     1365    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequestedDevice}
      324    0.001    0.000    0.003    0.000 backend.py:1283(int_shape)
     1198    0.001    0.000    0.003    0.000 auto_control_deps_utils.py:105(<genexpr>)
      848    0.001    0.000    0.003    0.000 execute.py:177(make_str)
      278    0.000    0.000    0.003    0.000 transforms.py:1247(__add__)
     2873    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
       96    0.000    0.000    0.003    0.000 layer_serialization.py:63(<lambda>)
        5    0.000    0.000    0.003    0.001 gen_array_ops.py:722(broadcast_gradient_args)
      432    0.001    0.000    0.003    0.000 data_structures.py:649(_list_functions_for_serialization)
       12    0.001    0.000    0.003    0.000 meta_graph.py:174(stripped_op_list_for_graph)
       50    0.000    0.000    0.003    0.000 nanfunctions.py:70(_replace_nan)
      698    0.002    0.000    0.003    0.000 font_manager.py:663(__hash__)
       24    0.000    0.000    0.003    0.000 function.py:2672(_convert_inputs_to_signature)
       78    0.000    0.000    0.002    0.000 backend_agg.py:243(_get_agg_font)
      120    0.000    0.000    0.002    0.000 function.py:2899(<genexpr>)
      756    0.002    0.000    0.002    0.000 base_layer_utils.py:441(enter)
    13094    0.002    0.000    0.002    0.000 tf_decorator.py:262(decorated_target)
      584    0.002    0.000    0.002    0.000 tensor_shape.py:1238(unknown_shape)
        4    0.002    0.001    0.002    0.001 {method 'close' of '_io.TextIOWrapper' objects}
       72    0.000    0.000    0.002    0.000 lines.py:1330(update_from)
       60    0.000    0.000    0.002    0.000 base_layer.py:2129(<listcomp>)
      372    0.001    0.000    0.002    0.000 base_layer.py:2495(_get_input_masks)
     5208    0.002    0.000    0.002    0.000 def_function.py:1036(<genexpr>)
       78    0.000    0.000    0.002    0.000 _backend_pdf_ps.py:79(_get_font_ttf)
       72    0.000    0.000    0.002    0.000 serialized_attributes.py:188(set_and_validate_functions)
        3    0.000    0.000    0.002    0.001 array_ops.py:1084(strided_slice)
      422    0.001    0.000    0.002    0.000 colors.py:157(to_rgba)
      278    0.000    0.000    0.002    0.000 transforms.py:2462(composite_transform_factory)
      142    0.002    0.000    0.002    0.000 __init__.py:1663(normalize_kwargs)
        4    0.000    0.000    0.002    0.001 axis.py:744(__init__)
        3    0.000    0.000    0.002    0.001 gen_array_ops.py:10170(strided_slice)
       32    0.000    0.000    0.002    0.000 ticker.py:2817(__init__)
     1272    0.002    0.000    0.002    0.000 device_spec.py:376(__eq__)
     2592    0.001    0.000    0.002    0.000 nested_structure_coder.py:226(can_encode)
     2496    0.002    0.000    0.002    0.000 utils.py:223(set_training_arg)
      192    0.001    0.000    0.002    0.000 __init__.py:183(dumps)
       26    0.000    0.000    0.002    0.000 def_function.py:1199(function)
      168    0.000    0.000    0.002    0.000 utils.py:131(maybe_add_training_arg)
       32    0.000    0.000    0.002    0.000 ticker.py:2020(__init__)
      348    0.001    0.000    0.002    0.000 func_graph.py:468(variables)
      696    0.001    0.000    0.002    0.000 nested_structure_coder.py:70(_get_encoders)
        4    0.000    0.000    0.002    0.001 _base.py:2884(tick_params)
     2908    0.002    0.000    0.002    0.000 {method 'setdefault' of 'dict' objects}
        4    0.000    0.000    0.002    0.001 gen_math_ops.py:6696(prod)
      670    0.001    0.000    0.002    0.000 <__array_function__ internals>:2(dot)
     1336    0.002    0.000    0.002    0.000 def_function.py:911(input_signature)
       32    0.000    0.000    0.002    0.000 ticker.py:2095(set_params)
      456    0.000    0.000    0.002    0.000 transforms.py:126(invalidate)
      924    0.002    0.000    0.002    0.000 <string>:35(_asdict)
      896    0.001    0.000    0.002    0.000 artist.py:49(_stale_axes_callback)
      120    0.000    0.000    0.002    0.000 save_impl.py:509(layer_call_wrapper)
      492    0.001    0.000    0.002    0.000 _weakrefset.py:36(__init__)
      848    0.001    0.000    0.002    0.000 op_def_library.py:159(_MakeStr)
     5064    0.001    0.000    0.002    0.000 module.py:302(_is_module)
      132    0.000    0.000    0.002    0.000 axis.py:1891(getter)
     2460    0.001    0.000    0.002    0.000 base.py:543(_setattr_tracking)
       65    0.000    0.000    0.002    0.000 base_layer.py:2182(<listcomp>)
      432    0.001    0.000    0.002    0.000 data_structures.py:650(<dictcomp>)
     1344    0.001    0.000    0.002    0.000 saveable_object_util.py:365(trace_save_restore_functions)
      384    0.002    0.000    0.002    0.000 functional_ops.py:1178(<listcomp>)
      216    0.000    0.000    0.002    0.000 backend_pdf.py:642(<listcomp>)
      840    0.001    0.000    0.002    0.000 ops.py:416(device)
      176    0.000    0.000    0.002    0.000 function.py:3103(<listcomp>)
      152    0.000    0.000    0.002    0.000 text.py:838(get_prop_tup)
      356    0.001    0.000    0.002    0.000 __init__.py:2096(_check_isinstance)
        4    0.000    0.000    0.002    0.000 gen_math_ops.py:314(add)
        2    0.000    0.000    0.002    0.001 _base.py:2332(autoscale_view)
      122    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(column_stack)
     2976    0.002    0.000    0.002    0.000 __init__.py:2131(_check_in_list)
        1    0.002    0.002    0.002    0.002 {built-in method posix.mkdir}
      272    0.001    0.000    0.002    0.000 transforms.py:727(__init__)
     1415    0.002    0.000    0.002    0.000 ops.py:6583(__init__)
      262    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(amin)
      516    0.002    0.000    0.002    0.000 revived_types.py:73(to_proto)
       48    0.000    0.000    0.002    0.000 save_impl.py:385(to_tensor_spec_or_none)
       32    0.001    0.000    0.002    0.000 ticker.py:683(_compute_offset)
     1327    0.001    0.000    0.002    0.000 base_layer_utils.py:399(call_context)
     3849    0.002    0.000    0.002    0.000 traceable_stack.py:30(__init__)
      548    0.002    0.000    0.002    0.000 transforms.py:163(set_children)
       48    0.000    0.000    0.002    0.000 utils.py:40(use_wrapped_call)
      352    0.001    0.000    0.002    0.000 function.py:3087(<genexpr>)
     8790    0.002    0.000    0.002    0.000 {method '__exit__' of '_thread.lock' objects}
      444    0.000    0.000    0.002    0.000 nested_structure_coder.py:423(can_encode)
       90    0.000    0.000    0.002    0.000 transforms.py:1940(rotate_deg)
     1478    0.001    0.000    0.002    0.000 _weakrefset.py:20(__enter__)
       52    0.001    0.000    0.002    0.000 Experiment.py:176(<listcomp>)
      624    0.001    0.000    0.002    0.000 transforms.py:1831(__init__)
      264    0.000    0.000    0.002    0.000 base_layer.py:1237(stateful)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:10355(squared_difference)
     2208    0.002    0.000    0.002    0.000 base_layer.py:2954(_eager_losses)
      104    0.001    0.000    0.002    0.000 pickle.py:905(save_global)
        3    0.000    0.000    0.002    0.001 optimizer_v2.py:808(_create_hypers)
        3    0.000    0.000    0.002    0.001 backprop.py:697(_ones)
     5592    0.002    0.000    0.002    0.000 function.py:223(<genexpr>)
      206    0.000    0.000    0.002    0.000 lines.py:1257(set_markerfacecoloralt)
      228    0.001    0.000    0.002    0.000 func_graph.py:697(clear_captures)
      216    0.001    0.000    0.002    0.000 json_utils.py:37(default)
     6804    0.001    0.000    0.002    0.000 base.py:649(_checkpoint_dependencies)
    73/65    0.000    0.000    0.002    0.000 backend_pdf.py:183(<listcomp>)
      206    0.001    0.000    0.002    0.000 lines.py:1147(set_linestyle)
        3    0.000    0.000    0.002    0.001 math_grad.py:1656(_MatMulGradAgainstSecondOnly)
     3912    0.001    0.000    0.002    0.000 nested_structure_coder.py:133(can_encode)
        3    0.000    0.000    0.002    0.001 array_ops.py:3007(ones)
      520    0.001    0.000    0.002    0.000 Hanabi.py:298(<dictcomp>)
       60    0.000    0.000    0.002    0.000 data_structures.py:832(_update_snapshot)
       37    0.000    0.000    0.002    0.000 training.py:1899(non_trainable_weights)
     3456    0.001    0.000    0.002    0.000 object_identity.py:143(__iter__)
     1584    0.001    0.000    0.002    0.000 base_layer.py:1235(<genexpr>)
        3    0.000    0.000    0.002    0.001 util.py:123(scale_losses_by_sample_weight)
      864    0.000    0.000    0.002    0.000 regularizers.py:342(serialize)
      152    0.000    0.000    0.002    0.000 _base.py:597(viewLim)
        4    0.000    0.000    0.002    0.000 _base.py:2398(handle_single_axis)
      176    0.001    0.000    0.002    0.000 function.py:157(_type_spec_for)
       41    0.000    0.000    0.002    0.000 backend_pdf.py:649(endStream)
      368    0.001    0.000    0.002    0.000 base_layer.py:1200(_autographed_call)
      312    0.001    0.000    0.002    0.000 save_impl.py:438(training_arg_was_passed)
       48    0.000    0.000    0.002    0.000 text.py:259(update_from)
     1344    0.001    0.000    0.002    0.000 transforms.py:1701(__init__)
     2472    0.001    0.000    0.002    0.000 copy.py:252(_keep_alive)
      756    0.002    0.000    0.002    0.000 base_layer_utils.py:524(__exit__)
      389    0.001    0.000    0.002    0.000 context.py:2390(_tmp_in_graph_mode)
       37    0.000    0.000    0.002    0.000 backend_pdf.py:398(end)
    14279    0.002    0.000    0.002    0.000 inspect.py:2506(default)
      230    0.000    0.000    0.002    0.000 transforms.py:2290(__init__)
  882/456    0.001    0.000    0.002    0.000 transforms.py:136(_invalidate_internal)
      682    0.001    0.000    0.002    0.000 device.py:67(merge_device)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:3851(floor_mod)
      696    0.002    0.000    0.002    0.000 nested_structure_coder.py:72(<listcomp>)
       32    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(clip)
        3    0.000    0.000    0.002    0.001 optimizer_v2.py:552(_aggregate_gradients)
      356    0.001    0.000    0.002    0.000 base_layer.py:2340(_should_cast_single_input)
      108    0.001    0.000    0.002    0.000 functional.py:335(<listcomp>)
      102    0.002    0.000    0.002    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        3    0.000    0.000    0.002    0.001 array_ops.py:2730(_constant_if_small)
      708    0.001    0.000    0.002    0.000 nested_structure_coder.py:333(do_encode)
       12    0.000    0.000    0.002    0.000 save.py:677(_verify_ops)
      560    0.001    0.000    0.002    0.000 variables.py:1132(_shared_name)
        6    0.000    0.000    0.002    0.000 figure.py:466(_set_dpi)
       12    0.000    0.000    0.002    0.000 metric_serialization.py:42(_get_serialized_attributes_internal)
      492    0.000    0.000    0.002    0.000 __init__.py:1309(_to_unmasked_float_array)
       36    0.000    0.000    0.002    0.000 uuid.py:621(uuid4)
      262    0.000    0.000    0.002    0.000 fromnumeric.py:2676(amin)
     6124    0.002    0.000    0.002    0.000 ops.py:3156(_set_control_flow_context)
        2    0.000    0.000    0.002    0.001 _axes.py:1414(plot)
        3    0.000    0.000    0.002    0.001 math_ops.py:1380(floordiv)
      122    0.001    0.000    0.002    0.000 shape_base.py:612(column_stack)
        3    0.000    0.000    0.002    0.001 math_grad.py:1304(_MulGrad)
     5664    0.002    0.000    0.002    0.000 base.py:984(_list_extra_dependencies_for_serialization)
       37    0.000    0.000    0.002    0.000 layer_utils.py:277(gather_non_trainable_weights)
  280/272    0.001    0.000    0.002    0.000 spines.py:424(get_spine_transform)
       32    0.000    0.000    0.002    0.000 fromnumeric.py:2021(clip)
        1    0.000    0.000    0.002    0.002 backend.py:1141(placeholder)
      672    0.001    0.000    0.002    0.000 auto_control_deps_utils.py:66(<listcomp>)
      384    0.001    0.000    0.002    0.000 forwardprop_util.py:34(__new__)
        1    0.000    0.000    0.002    0.002 Experiment.py:216(<listcomp>)
      504    0.000    0.000    0.001    0.000 artist.py:1006(<listcomp>)
        6    0.000    0.000    0.001    0.000 pyplot.py:600(gcf)
        2    0.000    0.000    0.001    0.001 _base.py:930(_gen_axes_spines)
       90    0.001    0.000    0.001    0.000 transforms.py:1924(rotate)
      118    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(broadcast_arrays)
       10    0.000    0.000    0.001    0.000 _base.py:945(<genexpr>)
       52    0.000    0.000    0.001    0.000 statistics.py:291(mean)
     2460    0.001    0.000    0.001    0.000 nested_structure_coder.py:280(can_encode)
        3    0.000    0.000    0.001    0.000 gen_math_ops.py:3773(floor_div)
       38    0.000    0.000    0.001    0.000 transforms.py:1960(rotate_deg_around)
       24    0.000    0.000    0.001    0.000 save.py:360(_tensor_dict_to_tensorinfo)
      408    0.000    0.000    0.001    0.000 policy.py:585(_is_convertible_to_dtype)
       64    0.001    0.000    0.001    0.000 backend_pdf.py:2328(delta)
        8    0.000    0.000    0.001    0.000 spines.py:517(linear_spine)
        2    0.000    0.000    0.001    0.001 pyplot.py:427(figure)
      134    0.001    0.000    0.001    0.000 backend_bases.py:737(__init__)
       12    0.000    0.000    0.001    0.000 patches.py:42(__init__)
       36    0.000    0.000    0.001    0.000 fromnumeric.py:42(_wrapit)
       19    0.000    0.000    0.001    0.000 genericpath.py:16(exists)
        5    0.000    0.000    0.001    0.000 layer_utils.py:197(print_layer_summary)
       48    0.000    0.000    0.001    0.000 input_spec.py:230(to_tensor_spec)
       14    0.000    0.000    0.001    0.000 backend_agg.py:125(draw_path)
       24    0.000    0.000    0.001    0.000 save.py:361(<dictcomp>)
      192    0.001    0.000    0.001    0.000 node.py:188(serialize_first_arg_tensor)
       38    0.000    0.000    0.001    0.000 backend_pdf.py:1585(writePath)
     3222    0.001    0.000    0.001    0.000 object_identity.py:78(unwrapped)
      330    0.000    0.000    0.001    0.000 transforms.py:1714(transform)
     2489    0.001    0.000    0.001    0.000 ops.py:4584(op_in_group)
       19    0.001    0.000    0.001    0.000 {built-in method posix.stat}
        2    0.000    0.000    0.001    0.001 functional.py:117(_init_graph_network)
       14    0.001    0.000    0.001    0.000 {method 'draw_path' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      704    0.001    0.000    0.001    0.000 base_layer.py:2515(_call_arg_was_passed)
      682    0.001    0.000    0.001    0.000 device.py:172(is_null_merge)
       11    0.000    0.000    0.001    0.000 tensor_util.py:674(_ConstantValue)
      520    0.001    0.000    0.001    0.000 Hanabi.py:359(score)
       24    0.000    0.000    0.001    0.000 utils_impl.py:70(build_tensor_info_internal)
      100    0.001    0.000    0.001    0.000 transforms.py:669(translated)
        2    0.000    0.000    0.001    0.001 init_ops.py:111(__call__)
      576    0.000    0.000    0.001    0.000 constraints.py:285(serialize)
      986    0.001    0.000    0.001    0.000 ops.py:517(<listcomp>)
      104    0.000    0.000    0.001    0.000 transforms.py:782(from_extents)
      288    0.000    0.000    0.001    0.000 ops.py:6287(add_to_collection)
      216    0.000    0.000    0.001    0.000 artist.py:978(_update_property)
      182    0.000    0.000    0.001    0.000 font_manager.py:673(__eq__)
       24    0.000    0.000    0.001    0.000 metric_serialization.py:32(_python_properties_internal)
      422    0.000    0.000    0.001    0.000 colors.py:123(_is_nth_color)
     1937    0.001    0.000    0.001    0.000 metrics.py:247(<listcomp>)
        2    0.000    0.000    0.001    0.001 backend_bases.py:3351(new_figure_manager)
        8    0.000    0.000    0.001    0.000 spines.py:36(__init__)
      317    0.001    0.000    0.001    0.000 backend_pdf.py:96(fill)
      128    0.000    0.000    0.001    0.000 artist.py:858(_set_gc_clip)
        8    0.000    0.000    0.001    0.000 base_layer.py:2884(_init_call_fn_args)
       48    0.000    0.000    0.001    0.000 patches.py:526(_bind_draw_path_function)
3576/1272    0.001    0.000    0.001    0.000 tensor_util.py:229(_FlattenToStrings)
     5098    0.001    0.000    0.001    0.000 device_spec.py:431(to_string)
       12    0.000    0.000    0.001    0.000 __init__.py:1406(makeRecord)
       20    0.000    0.000    0.001    0.000 ops.py:5225(combined)
      338    0.000    0.000    0.001    0.000 transforms.py:1793(transform_affine)
      180    0.000    0.000    0.001    0.000 tensor_shape.py:282(merge_with)
        2    0.001    0.001    0.001    0.001 {built-in method matplotlib.ttconv.get_pdf_charprocs}
       32    0.000    0.000    0.001    0.000 {method 'clip' of 'numpy.ndarray' objects}
       52    0.000    0.000    0.001    0.000 font_manager.py:859(copy)
      588    0.001    0.000    0.001    0.000 serialized_attributes.py:171(<dictcomp>)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:190(<listcomp>)
       16    0.000    0.000    0.001    0.000 tf_stack.py:105(__init__)
     2688    0.001    0.000    0.001    0.000 base.py:951(_gather_saveables_for_checkpoint)
      118    0.000    0.000    0.001    0.000 stride_tricks.py:206(broadcast_arrays)
      599    0.000    0.000    0.001    0.000 backend_pdf.py:635(write)
      276    0.001    0.000    0.001    0.000 resource_variable_ops.py:97(<listcomp>)
       12    0.001    0.000    0.001    0.000 __init__.py:251(__init__)
     3876    0.001    0.000    0.001    0.000 callbacks.py:632(on_epoch_begin)
       32    0.000    0.000    0.001    0.000 _methods.py:97(_clip)
       32    0.001    0.000    0.001    0.000 ticker.py:722(_set_order_of_magnitude)
        3    0.000    0.000    0.001    0.000 training.py:2754(write_scalar_summaries)
     1404    0.001    0.000    0.001    0.000 func_graph.py:489(<genexpr>)
      376    0.001    0.000    0.001    0.000 base_layer_utils.py:541(is_subclassed)
     2026    0.001    0.000    0.001    0.000 compile_utils.py:129(<listcomp>)
      708    0.000    0.000    0.001    0.000 base_layer.py:1240(<genexpr>)
     9550    0.001    0.000    0.001    0.000 artist.py:804(get_animated)
      368    0.001    0.000    0.001    0.000 __init__.py:882(get_siblings)
       60    0.000    0.000    0.001    0.000 save_impl.py:296(_restore_child_layer_functions)
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(round_)
      134    0.000    0.000    0.001    0.000 path.py:96(__init__)
       98    0.000    0.000    0.001    0.000 axis.py:618(update_position)
        8    0.000    0.000    0.001    0.000 spines.py:226(register_axis)
      128    0.000    0.000    0.001    0.000 backend_bases.py:901(set_clip_path)
      260    0.000    0.000    0.001    0.000 text.py:824(get_unitless_position)
       32    0.000    0.000    0.001    0.000 ticker.py:2072(_validate_steps)
        8    0.000    0.000    0.001    0.000 spines.py:238(cla)
        2    0.000    0.000    0.001    0.001 gen_array_ops.py:785(broadcast_to)
       98    0.000    0.000    0.001    0.000 axis.py:501(update_position)
       16    0.000    0.000    0.001    0.000 conversion.py:109(convert)
        2    0.000    0.000    0.001    0.001 figure.py:275(__init__)
       36    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(prod)
      472    0.001    0.000    0.001    0.000 ops.py:4596(_current_control_dependencies)
      912    0.001    0.000    0.001    0.000 _collections_abc.py:879(__iter__)
        2    0.000    0.000    0.001    0.001 gen_array_ops.py:9139(size)
       48    0.000    0.000    0.001    0.000 function.py:2709(<genexpr>)
      168    0.001    0.000    0.001    0.000 base_layer.py:3005(_object_identifier)
     2988    0.001    0.000    0.001    0.000 nested_structure_coder.py:199(can_encode)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:792(scalar)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:739(summary_writer_function)
        3    0.000    0.000    0.001    0.000 optimizer_v2.py:826(iterations)
      672    0.001    0.000    0.001    0.000 base_layer.py:3001(_trackable_saved_model_saver)
       52    0.000    0.000    0.001    0.000 statistics.py:105(_sum)
       16    0.000    0.000    0.001    0.000 inspect.py:680(getsourcefile)
       24    0.000    0.000    0.001    0.000 saving_utils.py:270(_serialize_nested_config)
      473    0.000    0.000    0.001    0.000 backend_pdf.py:414(write)
        4    0.000    0.000    0.001    0.000 axis.py:2054(_update_offset_text_position)
       48    0.000    0.000    0.001    0.000 transforms.py:2709(get_transformed_points_and_affine)
       32    0.000    0.000    0.001    0.000 ticker.py:256(<listcomp>)
     1952    0.001    0.000    0.001    0.000 transforms.py:82(__init__)
      100    0.000    0.000    0.001    0.000 transforms.py:1972(translate)
     1031    0.001    0.000    0.001    0.000 ops.py:6625(_restore_name_scope)
      368    0.001    0.000    0.001    0.000 base_layer.py:1157(_set_training_mode)
      442    0.000    0.000    0.001    0.000 artist.py:695(set_figure)
     1478    0.001    0.000    0.001    0.000 _weakrefset.py:16(__init__)
       16    0.000    0.000    0.001    0.000 transpiler.py:384(transform_function)
      684    0.001    0.000    0.001    0.000 ops.py:5193(__exit__)
       50    0.001    0.000    0.001    0.000 function_base.py:2031(__init__)
       46    0.000    0.000    0.001    0.000 markers.py:713(_set_tickleft)
     1852    0.001    0.000    0.001    0.000 artist.py:336(pchanged)
       36    0.000    0.000    0.001    0.000 fromnumeric.py:2843(prod)
       52    0.000    0.000    0.001    0.000 transforms.py:2696(_revalidate)
     1152    0.001    0.000    0.001    0.000 auto_control_deps_utils.py:54(<listcomp>)
      576    0.000    0.000    0.001    0.000 tf_utils.py:281(_is_atomic_nested)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3590(round_)
       46    0.000    0.000    0.001    0.000 markers.py:733(_set_tickdown)
      252    0.000    0.000    0.001    0.000 {method 'max' of 'numpy.ndarray' objects}
       64    0.000    0.000    0.001    0.000 transforms.py:773(from_bounds)
      384    0.001    0.000    0.001    0.000 function.py:1430(forward)
      170    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
      684    0.001    0.000    0.001    0.000 ops.py:5185(__enter__)
       37    0.000    0.000    0.001    0.000 backend_pdf.py:387(_writeHeader)
  310/170    0.000    0.000    0.001    0.000 _base.py:648(get_xaxis_transform)
      756    0.001    0.000    0.001    0.000 base_layer_utils.py:503(__init__)
       34    0.000    0.000    0.001    0.000 axis.py:523(_get_text1_transform)
  310/170    0.000    0.000    0.001    0.000 _base.py:724(get_yaxis_transform)
       66    0.000    0.000    0.001    0.000 backend_pdf.py:2177(new_gc)
       34    0.000    0.000    0.001    0.000 axis.py:407(_get_text1_transform)
      576    0.001    0.000    0.001    0.000 saveable_object.py:24(__init__)
     6048    0.001    0.000    0.001    0.000 data_structures.py:431(_non_append_mutation)
       69    0.001    0.000    0.001    0.000 posixpath.py:75(join)
      100    0.000    0.000    0.001    0.000 transforms.py:361(ymax)
      168    0.001    0.000    0.001    0.000 version_utils.py:125(is_v1_layer_or_model)
       38    0.000    0.000    0.001    0.000 patches.py:341(_set_facecolor)
     1092    0.001    0.000    0.001    0.000 font_manager.py:1220(<genexpr>)
        8    0.000    0.000    0.001    0.000 base_layer.py:2907(_call_fn_args)
      242    0.000    0.000    0.001    0.000 base_layer.py:2578(_get_node_attribute_at_index)
       70    0.000    0.000    0.001    0.000 backend_pdf.py:2184(__init__)
      128    0.001    0.000    0.001    0.000 ticker.py:573(__call__)
     2937    0.001    0.000    0.001    0.000 ops.py:4575(control_inputs)
      444    0.001    0.000    0.001    0.000 nested_structure_coder.py:403(do_encode)
      340    0.000    0.000    0.001    0.000 axis.py:325(_set_artist_props)
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(around)
      288    0.000    0.000    0.001    0.000 tf_utils.py:187(<listcomp>)
     3003    0.001    0.000    0.001    0.000 base_layer.py:1218(name)
      410    0.000    0.000    0.001    0.000 re.py:169(match)
       34    0.000    0.000    0.001    0.000 _base.py:672(get_xaxis_text1_transform)
      612    0.000    0.000    0.001    0.000 data_structures.py:1059(<lambda>)
       34    0.000    0.000    0.001    0.000 _base.py:748(get_yaxis_text1_transform)
      224    0.000    0.000    0.001    0.000 optimizer_v2.py:721(__setattr__)
      206    0.000    0.000    0.001    0.000 lines.py:648(set_data)
        2    0.000    0.000    0.001    0.000 _base.py:1842(add_line)
     1368    0.001    0.000    0.001    0.000 weakref.py:125(_commit_removals)
       50    0.001    0.000    0.001    0.000 callbacks.py:1610(__init__)
        8    0.000    0.000    0.001    0.000 base_layer.py:2900(_call_full_argspec)
       12    0.000    0.000    0.001    0.000 save.py:527(_trace_resource_initializers)
     6048    0.001    0.000    0.001    0.000 data_structures.py:447(_external_modification)
        6    0.000    0.000    0.001    0.000 transforms.py:1915(clear)
       16    0.000    0.000    0.001    0.000 transforms.py:703(<listcomp>)
      382    0.000    0.000    0.001    0.000 artist.py:358(set_transform)
      140    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
      252    0.000    0.000    0.001    0.000 _methods.py:28(_amax)
       38    0.000    0.000    0.001    0.000 backend_pdf.py:1577(pathOperations)
      502    0.000    0.000    0.001    0.000 artist.py:168(convert_xunits)
     2112    0.001    0.000    0.001    0.000 nested_structure_coder.py:170(<genexpr>)
      132    0.000    0.000    0.001    0.000 <string>:24(_replace)
      892    0.001    0.000    0.001    0.000 resource_variable_ops.py:503(device)
      168    0.001    0.000    0.001    0.000 functional.py:816(_trackable_saved_model_saver)
       46    0.000    0.000    0.001    0.000 markers.py:719(_set_tickright)
        9    0.000    0.000    0.001    0.000 tensor_util.py:569(MakeNdarray)
        1    0.000    0.000    0.001    0.001 training.py:557(_get_optimizer)
        1    0.001    0.001    0.001    0.001 Experiment.py:207(<listcomp>)
       46    0.000    0.000    0.001    0.000 markers.py:727(_set_tickup)
      120    0.000    0.000    0.001    0.000 artist.py:1074(update_from)
      350    0.000    0.000    0.001    0.000 weakref.py:438(items)
     2460    0.001    0.000    0.001    0.000 nested_structure_coder.py:307(can_encode)
      352    0.001    0.000    0.001    0.000 node.py:147(map_arguments)
     1248    0.000    0.000    0.001    0.000 device_spec.py:350(_components_to_string)
       84    0.000    0.000    0.001    0.000 transforms.py:346(xmin)
      108    0.000    0.000    0.001    0.000 utils.py:99(layer_uses_training_bool)
      412    0.001    0.000    0.001    0.000 lines.py:1114(_split_drawstyle_linestyle)
      349    0.000    0.000    0.001    0.000 backend_pdf.py:251(__init__)
       32    0.000    0.000    0.001    0.000 ticker.py:2087(_staircase)
      216    0.000    0.000    0.001    0.000 transforms.py:2194(get_affine)
       72    0.000    0.000    0.001    0.000 transforms.py:1532(transform_path_non_affine)
       34    0.000    0.000    0.001    0.000 axis.py:526(_get_text2_transform)
     2544    0.001    0.000    0.001    0.000 generic_utils.py:167(get_registered_name)
        4    0.000    0.000    0.001    0.000 base_layer.py:2556(_set_connectivity_metadata)
       96    0.000    0.000    0.001    0.000 transforms.py:351(ymin)
     2460    0.001    0.000    0.001    0.000 nested_structure_coder.py:257(can_encode)
       72    0.000    0.000    0.001    0.000 serialized_attributes.py:174(functions_to_serialize)
        1    0.000    0.000    0.001    0.001 training.py:560(_get_single_optimizer)
       72    0.000    0.000    0.001    0.000 serialized_attributes.py:142(new)
       15    0.000    0.000    0.001    0.000 constant_op.py:347(_tensor_shape_tensor_conversion_function)
      146    0.000    0.000    0.001    0.000 base_layer.py:2070(input)
       12    0.000    0.000    0.001    0.000 tf_utils.py:464(graph_context_for_symbolic_tensors)
      120    0.000    0.000    0.001    0.000 weakref.py:165(__setitem__)
     3744    0.001    0.000    0.001    0.000 device_spec.py:38(_as_int_or_none)
     2928    0.001    0.000    0.001    0.000 function.py:2566(<genexpr>)
        2    0.000    0.000    0.001    0.000 _datasource.py:427(_findfile)
     9312    0.001    0.000    0.001    0.000 copy.py:190(_deepcopy_atomic)
     1027    0.001    0.000    0.001    0.000 tf_stack.py:123(get_filtered_filenames)
        1    0.000    0.000    0.001    0.001 optimizers.py:872(get)
        5    0.000    0.000    0.001    0.000 node.py:54(__init__)
      736    0.001    0.000    0.001    0.000 base_layer.py:932(<genexpr>)
       64    0.000    0.000    0.001    0.000 _methods.py:63(_clip_dep_is_scalar_nan)
       22    0.000    0.000    0.001    0.000 generic_utils.py:334(deserialize_keras_object)
      708    0.000    0.000    0.001    0.000 traceable_stack.py:111(pop_obj)
      140    0.000    0.000    0.001    0.000 transforms.py:2644(__init__)
      609    0.000    0.000    0.001    0.000 ops.py:6769(_op_to_colocate_with)
      125    0.000    0.000    0.001    0.000 ops.py:2510(_get_attr_type)
       34    0.000    0.000    0.001    0.000 axis.py:410(_get_text2_transform)
       64    0.000    0.000    0.001    0.000 backend_bases.py:656(new_gc)
        5    0.000    0.000    0.001    0.000 base_layer.py:2141(count_params)
      278    0.000    0.000    0.001    0.000 markers.py:249(set_fillstyle)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3130(around)
       36    0.001    0.000    0.001    0.000 uuid.py:106(__init__)
       48    0.001    0.000    0.001    0.000 transforms.py:2779(nonsingular)
        1    0.000    0.000    0.001    0.001 optimizers.py:835(deserialize)
      140    0.000    0.000    0.001    0.000 _methods.py:32(_amin)
     1996    0.001    0.000    0.001    0.000 ops.py:113(tensor_id)
       34    0.000    0.000    0.001    0.000 _base.py:774(get_yaxis_text2_transform)
      516    0.001    0.000    0.001    0.000 serialized_attributes.py:183(<dictcomp>)
      276    0.000    0.000    0.001    0.000 resource_variable_ops.py:100(<listcomp>)
     1152    0.001    0.000    0.001    0.000 base_serialization.py:33(__init__)
       30    0.000    0.000    0.001    0.000 gen_resource_variable_ops.py:1265(var_is_initialized_op)
       12    0.000    0.000    0.001    0.000 gen_io_ops.py:1520(<listcomp>)
       26    0.000    0.000    0.001    0.000 patches.py:348(set_facecolor)
       38    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.convert_to_string}
      438    0.000    0.000    0.001    0.000 artist.py:937(set_visible)
     1248    0.000    0.000    0.001    0.000 device_spec.py:42(_as_device_str_or_none)
      200    0.001    0.000    0.001    0.000 font_manager.py:778(set_weight)
       24    0.001    0.000    0.001    0.000 {method 'draw_markers' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
       34    0.000    0.000    0.001    0.000 _base.py:698(get_xaxis_text2_transform)
      736    0.000    0.000    0.001    0.000 base_layer.py:3234(<genexpr>)
        2    0.000    0.000    0.001    0.000 backend_pdf.py:553(newPage)
      146    0.000    0.000    0.001    0.000 path.py:159(_fast_from_codes_and_verts)
      568    0.000    0.000    0.001    0.000 function_base.py:257(iterable)
      206    0.000    0.000    0.001    0.000 lines.py:733(set_transform)
      373    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddControlInput}
      288    0.001    0.000    0.001    0.000 ops.py:3933(add_to_collection)
      206    0.000    0.000    0.001    0.000 lines.py:1401(set_dash_capstyle)
        4    0.000    0.000    0.001    0.000 _base.py:153(__call__)
      384    0.000    0.000    0.001    0.000 tape.py:163(should_record_backprop)
       32    0.000    0.000    0.001    0.000 transforms.py:1015(get_points)
     1027    0.001    0.000    0.001    0.000 api.py:122(get_effective_source_map)
       52    0.001    0.000    0.001    0.000 __init__.py:557(__setitem__)
      598    0.000    0.000    0.001    0.000 figure.py:45(_stale_figure_callback)
     1725    0.001    0.000    0.001    0.000 device_spec.py:426(__hash__)
       52    0.000    0.000    0.001    0.000 lines.py:724(_get_transformed_path)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:1929(_setup_textpos)
       16    0.000    0.000    0.001    0.000 transforms.py:704(<listcomp>)
        4    0.000    0.000    0.001    0.000 patches.py:704(__init__)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
       32    0.000    0.000    0.001    0.000 distribute_lib.py:2896(colocate_vars_with)
     1928    0.001    0.000    0.001    0.000 {method 'copy' of 'dict' objects}
       12    0.000    0.000    0.001    0.000 file_io.py:631(has_atomic_move)
      200    0.000    0.000    0.001    0.000 font_manager.py:814(set_size)
        2    0.000    0.000    0.001    0.000 _base.py:310(_plot_args)
        4    0.000    0.000    0.001    0.000 _base.py:3104(set_xlim)
     3310    0.001    0.000    0.001    0.000 ops.py:4634(<genexpr>)
     2062    0.001    0.000    0.001    0.000 context.py:808(scope_name)
       37    0.000    0.000    0.001    0.000 backend_pdf.py:423(_flush)
      712    0.000    0.000    0.001    0.000 base_layer.py:2468(<genexpr>)
        2    0.000    0.000    0.001    0.000 backend_agg.py:398(get_renderer)
      500    0.000    0.000    0.001    0.000 lines.py:1285(set_xdata)
      384    0.000    0.000    0.001    0.000 graph_view.py:80(_name_slot_variable)
     1430    0.001    0.000    0.001    0.000 ops.py:5066(_colocation_stack)
      338    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.affine_transform}
       84    0.000    0.000    0.001    0.000 transforms.py:356(xmax)
      467    0.001    0.000    0.001    0.000 {method 'compress' of 'zlib.Compress' objects}
      376    0.001    0.000    0.001    0.000 tensor_spec.py:107(_serialize)
      384    0.001    0.000    0.001    0.000 function.py:1413(__init__)
      120    0.000    0.000    0.001    0.000 function.py:2292(_deterministic_dict_values)
      120    0.000    0.000    0.001    0.000 base_layer.py:1569(metrics)
       50    0.000    0.000    0.001    0.000 lines.py:709(_transform_path)
       16    0.000    0.000    0.001    0.000 transforms.py:706(<listcomp>)
        8    0.000    0.000    0.001    0.000 base_layer.py:2261(_set_dtype_policy)
      206    0.000    0.000    0.001    0.000 lines.py:1096(set_linewidth)
     2224    0.001    0.000    0.001    0.000 resource_variable_ops.py:513(name)
       16    0.000    0.000    0.001    0.000 transforms.py:705(<listcomp>)
       36    0.001    0.000    0.001    0.000 {built-in method posix.urandom}
      198    0.000    0.000    0.001    0.000 font_manager.py:759(set_style)
  214/160    0.000    0.000    0.001    0.000 transforms.py:2319(_invalidate_internal)
       60    0.000    0.000    0.001    0.000 layer_utils.py:224(invalidate_all)
      768    0.001    0.000    0.001    0.000 ops.py:4888(_override_gradient_function)
       48    0.000    0.000    0.001    0.000 path.py:354(iter_segments)
       96    0.000    0.000    0.001    0.000 serialization.py:28(get_json_type)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(ptp)
       16    0.000    0.000    0.001    0.000 transpiler.py:362(_transformed_factory)
       12    0.000    0.000    0.001    0.000 execute.py:281(convert_to_mixed_eager_tensors)
      360    0.001    0.000    0.001    0.000 encoder.py:104(__init__)
        7    0.000    0.000    0.001    0.000 layer_utils.py:95(count_params)
      192    0.000    0.000    0.001    0.000 serialized_attributes.py:162(functions)
      552    0.000    0.000    0.001    0.000 saveable_object_util.py:249(<lambda>)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:654(fontName)
      132    0.000    0.000    0.001    0.000 <string>:16(_make)
       50    0.000    0.000    0.001    0.000 function_base.py:2164(<listcomp>)
       37    0.001    0.000    0.001    0.000 {method 'flush' of 'zlib.Compress' objects}
     2496    0.001    0.000    0.001    0.000 device_spec.py:34(_as_str_or_none)
     1332    0.000    0.000    0.001    0.000 nested_structure_coder.py:376(can_encode)
      104    0.000    0.000    0.001    0.000 text.py:236(get_rotation)
      128    0.000    0.000    0.001    0.000 axis.py:301(set_label1)
     3898    0.001    0.000    0.001    0.000 artist.py:192(axes)
      120    0.000    0.000    0.001    0.000 function.py:2893(<genexpr>)
       50    0.000    0.000    0.001    0.000 function_base.py:2144(<listcomp>)
      502    0.000    0.000    0.001    0.000 artist.py:180(convert_yunits)
      621    0.000    0.000    0.001    0.000 execute.py:184(make_bool)
      778    0.001    0.000    0.001    0.000 functional.py:821(_make_node_key)
        1    0.000    0.000    0.001    0.001 metrics.py:153(__init__)
        6    0.000    0.000    0.001    0.000 figure.py:874(set_size_inches)
      852    0.001    0.000    0.001    0.000 resource_variable_ops.py:518(shape)
    24/22    0.000    0.000    0.001    0.000 transforms.py:412(bounds)
      750    0.001    0.000    0.001    0.000 {method 'find' of 'str' objects}
      112    0.001    0.000    0.001    0.000 {method 'round' of 'numpy.ndarray' objects}
      206    0.000    0.000    0.001    0.000 lines.py:1355(set_dash_joinstyle)
      158    0.000    0.000    0.001    0.000 font_manager.py:1325(get_font)
     1272    0.000    0.000    0.001    0.000 meta_graph.py:159(mark_op_as_used)
      446    0.000    0.000    0.001    0.000 lines.py:59(_scale_dashes)
       32    0.000    0.000    0.001    0.000 axis.py:1648(set_major_locator)
      500    0.000    0.000    0.001    0.000 lines.py:1297(set_ydata)
      180    0.000    0.000    0.001    0.000 optimizer_v2.py:1333(<lambda>)
       52    0.001    0.000    0.001    0.000 Experiment.py:157(update_nn)
      888    0.000    0.000    0.001    0.000 nested_structure_coder.py:400(can_encode)
        8    0.000    0.000    0.001    0.000 _base.py:1436(apply_aspect)
      560    0.001    0.000    0.001    0.000 {method 'index' of 'str' objects}
       50    0.000    0.000    0.001    0.000 training.py:762(make_train_function)
      156    0.000    0.000    0.001    0.000 metrics.py:312(_trackable_saved_model_saver)
      408    0.000    0.000    0.001    0.000 policy.py:461(get_config)
       12    0.000    0.000    0.001    0.000 signature_def_utils_impl.py:350(op_signature_def)
       12    0.001    0.000    0.001    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
       24    0.000    0.000    0.001    0.000 signature_def_utils_impl.py:32(build_signature_def)
       32    0.000    0.000    0.001    0.000 shape_base.py:286(hstack)
      132    0.000    0.000    0.001    0.000 base_layer.py:2299(_compute_dtype)
      100    0.000    0.000    0.001    0.000 transforms.py:1764(frozen)
        2    0.000    0.000    0.001    0.000 backend_agg.py:86(__init__)
      166    0.000    0.000    0.001    0.000 transforms.py:2367(transform_non_affine)
       72    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
       36    0.000    0.000    0.000    0.000 transforms.py:986(__init__)
      276    0.000    0.000    0.000    0.000 resource_variable_ops.py:99(<listcomp>)
      128    0.000    0.000    0.000    0.000 transforms.py:2859(_interval_contains_close)
     1452    0.000    0.000    0.000    0.000 nested_structure_coder.py:353(can_encode)
       26    0.000    0.000    0.000    0.000 {method 'draw_glyphs_to_bitmap' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 _subplots.py:129(update_params)
      206    0.000    0.000    0.000    0.000 lines.py:1416(set_solid_capstyle)
      134    0.000    0.000    0.000    0.000 path.py:188(_update_values)
      104    0.000    0.000    0.000    0.000 text.py:41(get_rotation)
        2    0.000    0.000    0.000    0.000 _datasource.py:517(exists)
      564    0.000    0.000    0.000    0.000 base_layer.py:2968(_split_out_first_arg)
      128    0.000    0.000    0.000    0.000 axis.py:314(set_label2)
       60    0.000    0.000    0.000    0.000 weakref.py:102(__init__)
      144    0.000    0.000    0.000    0.000 base_layer.py:2089(output)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2477(ptp)
       38    0.000    0.000    0.000    0.000 patches.py:315(_set_edgecolor)
       14    0.000    0.000    0.000    0.000 training.py:684(run_eagerly)
        2    0.000    0.000    0.000    0.000 math_grad.py:189(EvaluateAsTuple)
        2    0.000    0.000    0.000    0.000 gridspec.py:586(get_position)
       24    0.000    0.000    0.000    0.000 utils_impl.py:218(get_variables_dir)
       50    0.000    0.000    0.000    0.000 transforms.py:2681(__init__)
       13    0.000    0.000    0.000    0.000 _dill.py:400(__init__)
       27    0.000    0.000    0.000    0.000 __init__.py:149(get)
      206    0.000    0.000    0.000    0.000 lines.py:1061(set_drawstyle)
      170    0.000    0.000    0.000    0.000 def_function.py:556(_get_key_for_call_stats)
      206    0.000    0.000    0.000    0.000 lines.py:1370(set_solid_joinstyle)
       30    0.000    0.000    0.000    0.000 gen_logging_ops.py:23(_assert)
  578/310    0.000    0.000    0.000    0.000 transforms.py:2349(<lambda>)
      372    0.000    0.000    0.000    0.000 base_layer.py:2505(<listcomp>)
        8    0.000    0.000    0.000    0.000 tf_utils.py:445(maybe_init_scope)
        2    0.000    0.000    0.000    0.000 _base.py:1868(_update_line_limits)
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_TryEvaluateConstant_wrapper}
       24    0.000    0.000    0.000    0.000 saving_utils.py:291(_enforce_names_consistency)
      624    0.000    0.000    0.000    0.000 device_spec.py:300(_string_to_components)
       26    0.000    0.000    0.000    0.000 patches.py:330(set_edgecolor)
      387    0.000    0.000    0.000    0.000 tf_inspect.py:283(<listcomp>)
       84    0.000    0.000    0.000    0.000 base_layer.py:1948(input_mask)
       12    0.000    0.000    0.000    0.000 execute.py:282(<listcomp>)
      120    0.000    0.000    0.000    0.000 save_impl.py:446(get_training_arg_value)
       60    0.000    0.000    0.000    0.000 _weakrefset.py:58(__iter__)
       50    0.000    0.000    0.000    0.000 callbacks.py:914(__init__)
      180    0.000    0.000    0.000    0.000 tensor_shape.py:268(assert_is_compatible_with)
      104    0.000    0.000    0.000    0.000 transforms.py:2564(get_matrix)
      168    0.000    0.000    0.000    0.000 signature_serialization.py:233(<lambda>)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:583(op)
      198    0.000    0.000    0.000    0.000 font_manager.py:796(set_stretch)
       37    0.000    0.000    0.000    0.000 backend_pdf.py:645(beginStream)
      480    0.000    0.000    0.000    0.000 data_structures.py:1033(_is_function)
      156    0.000    0.000    0.000    0.000 input_layer.py:205(_trackable_saved_model_saver)
        1    0.000    0.000    0.000    0.000 training.py:578(_configure_steps_per_execution)
     1364    0.000    0.000    0.000    0.000 traceable_stack.py:115(peek_top_obj)
      104    0.000    0.000    0.000    0.000 text.py:1193(_preprocess_math)
      200    0.000    0.000    0.000    0.000 transforms.py:2057(transform)
      912    0.000    0.000    0.000    0.000 data_structures.py:377(__getitem__)
      276    0.000    0.000    0.000    0.000 meta_graph.py:230(_op_name)
      132    0.000    0.000    0.000    0.000 graph_view.py:176(root)
        2    0.000    0.000    0.000    0.000 pyplot.py:3029(title)
       88    0.000    0.000    0.000    0.000 functional.py:522(_flatten_to_reference_inputs)
       12    0.000    0.000    0.000    0.000 utils_impl.py:242(get_assets_dir)
        2    0.000    0.000    0.000    0.000 _base.py:363(<listcomp>)
       24    0.000    0.000    0.000    0.000 path.py:419(cleaned)
        8    0.000    0.000    0.000    0.000 base_layer.py:2409(_init_set_name)
       32    0.000    0.000    0.000    0.000 ticker.py:1955(scale_range)
        2    0.000    0.000    0.000    0.000 _base.py:3024(set_xbound)
      534    0.000    0.000    0.000    0.000 __init__.py:1961(<listcomp>)
      658    0.000    0.000    0.000    0.000 keras_tensor.py:43(keras_tensors_enabled)
       68    0.000    0.000    0.000    0.000 axis.py:1562(convert_units)
     2048    0.000    0.000    0.000    0.000 policy.py:453(name)
      118    0.000    0.000    0.000    0.000 stride_tricks.py:185(_broadcast_shape)
      120    0.000    0.000    0.000    0.000 weakref.py:109(remove)
      198    0.000    0.000    0.000    0.000 font_manager.py:769(set_variant)
       32    0.000    0.000    0.000    0.000 transforms.py:763(unit)
        2    0.000    0.000    0.000    0.000 _base.py:251(_makeline)
       37    0.000    0.000    0.000    0.000 backend_pdf.py:348(__init__)
      125    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrType}
        8    0.000    0.000    0.000    0.000 tensor_util.py:1017(shape_tensor)
        8    0.000    0.000    0.000    0.000 text.py:223(_get_xy_display)
       30    0.000    0.000    0.000    0.000 gen_math_ops.py:5437(logical_not)
       32    0.000    0.000    0.000    0.000 posixpath.py:121(splitext)
       17    0.000    0.000    0.000    0.000 __init__.py:138(deserialize)
      152    0.000    0.000    0.000    0.000 text.py:1137(set_verticalalignment)
      156    0.000    0.000    0.000    0.000 {method 'clear' of 'matplotlib.ft2font.FT2Font' objects}
      387    0.000    0.000    0.000    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
      609    0.000    0.000    0.000    0.000 op_def_library.py:166(_MakeBool)
       84    0.000    0.000    0.000    0.000 base_layer.py:1970(output_mask)
        4    0.000    0.000    0.000    0.000 tensor_util.py:842(constant_value_as_shape)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:47(__init__)
       12    0.000    0.000    0.000    0.000 tensor_spec.py:144(from_tensor)
       72    0.000    0.000    0.000    0.000 fromnumeric.py:2324(all)
       48    0.000    0.000    0.000    0.000 copy.py:219(_deepcopy_tuple)
        1    0.000    0.000    0.000    0.000 pyplot.py:658(close)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
       12    0.000    0.000    0.000    0.000 axis.py:1504(update_units)
        2    0.000    0.000    0.000    0.000 _axes.py:148(set_title)
       32    0.000    0.000    0.000    0.000 _methods.py:228(_ptp)
      260    0.000    0.000    0.000    0.000 nn_ops.py:3294(_tf_deterministic_ops)
        4    0.000    0.000    0.000    0.000 _base.py:3498(set_ylim)
      772    0.000    0.000    0.000    0.000 base_layer.py:1265(input_spec)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:40(destroy)
     1488    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
      104    0.000    0.000    0.000    0.000 {built-in method builtins.__import__}
      136    0.000    0.000    0.000    0.000 ticker.py:564(fix_minus)
     1056    0.000    0.000    0.000    0.000 generic_utils.py:113(serialize_keras_class_and_config)
       23    0.000    0.000    0.000    0.000 layer_utils.py:109(<genexpr>)
       54    0.000    0.000    0.000    0.000 random_seed.py:41(get_seed)
      144    0.000    0.000    0.000    0.000 transforms.py:2154(<lambda>)
       26    0.000    0.000    0.000    0.000 {method 'draw_text_image' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
        1    0.000    0.000    0.000    0.000 functional.py:340(_lookup_dependency)
      704    0.000    0.000    0.000    0.000 functional.py:504(<genexpr>)
     1056    0.000    0.000    0.000    0.000 func_graph.py:478(deref)
       27    0.000    0.000    0.000    0.000 math_ops.py:1855(_may_reduce_to_scalar)
       92    0.000    0.000    0.000    0.000 tensor_shape.py:988(assert_same_rank)
      240    0.000    0.000    0.000    0.000 save_impl.py:634(_get_layer_call_method)
      156    0.000    0.000    0.000    0.000 axis.py:819(get_transform)
       12    0.000    0.000    0.000    0.000 __init__.py:829(format)
       34    0.000    0.000    0.000    0.000 axis.py:529(apply_tickdir)
      228    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
      198    0.000    0.000    0.000    0.000 __init__.py:1296(is_math_text)
       16    0.000    0.000    0.000    0.000 distribute_lib.py:2677(__exit__)
       68    0.000    0.000    0.000    0.000 units.py:58(_is_natively_supported)
       38    0.000    0.000    0.000    0.000 backprop.py:116(get_attr)
    24/12    0.000    0.000    0.000    0.000 units.py:197(get_converter)
      110    0.000    0.000    0.000    0.000 _internal.py:830(npy_ctypes_check)
      148    0.000    0.000    0.000    0.000 artist.py:1037(set_zorder)
       34    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
        7    0.000    0.000    0.000    0.000 policy.py:488(global_policy)
      120    0.000    0.000    0.000    0.000 save_impl.py:426(fn_input_signature)
      288    0.000    0.000    0.000    0.000 base_layer.py:672(<listcomp>)
      144    0.000    0.000    0.000    0.000 lines.py:953(_get_markerfacecolor)
      384    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetShouldRecordBackprop}
      372    0.000    0.000    0.000    0.000 __init__.py:833(clean)
       40    0.000    0.000    0.000    0.000 text.py:1093(set_position)
       86    0.000    0.000    0.000    0.000 functional.py:221(input)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:898(_from_components)
       12    0.000    0.000    0.000    0.000 training.py:2288(state_updates)
      198    0.000    0.000    0.000    0.000 font_manager.py:746(set_family)
       34    0.000    0.000    0.000    0.000 axis.py:413(apply_tickdir)
        2    0.000    0.000    0.000    0.000 gridspec.py:133(get_grid_positions)
      564    0.000    0.000    0.000    0.000 func_graph.py:779(saveable)
      236    0.000    0.000    0.000    0.000 text.py:1104(set_x)
        2    0.000    0.000    0.000    0.000 _base.py:913(_gen_axes_patch)
      566    0.000    0.000    0.000    0.000 {built-in method builtins.round}
       12    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.HasAtomicMove}
      536    0.000    0.000    0.000    0.000 backend_pdf.py:902(cvt)
      478    0.000    0.000    0.000    0.000 backend_mixed.py:67(__getattr__)
      300    0.000    0.000    0.000    0.000 nested_structure_coder.py:310(do_encode)
       50    0.000    0.000    0.000    0.000 {built-in method numpy.frompyfunc}
      426    0.000    0.000    0.000    0.000 re.py:286(_compile)
     2160    0.000    0.000    0.000    0.000 nested_structure_coder.py:330(can_encode)
      152    0.000    0.000    0.000    0.000 base_layer.py:2383(_dtype)
       12    0.000    0.000    0.000    0.000 tf_logging.py:75(_logger_find_caller)
       16    0.000    0.000    0.000    0.000 spines.py:266(_adjust_location)
       48    0.000    0.000    0.000    0.000 markers.py:301(get_transform)
       12    0.000    0.000    0.000    0.000 __init__.py:564(format)
       68    0.000    0.000    0.000    0.000 artist.py:923(set_alpha)
       24    0.000    0.000    0.000    0.000 layer_serialization.py:132(python_properties)
      768    0.000    0.000    0.000    0.000 function.py:2067(_get_gradient_function)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
       72    0.000    0.000    0.000    0.000 input_layer.py:195(get_config)
        8    0.000    0.000    0.000    0.000 policy.py:296(__init__)
      182    0.000    0.000    0.000    0.000 base_layer.py:1213(dtype)
      172    0.000    0.000    0.000    0.000 scale.py:117(get_transform)
        8    0.000    0.000    0.000    0.000 _base.py:859(_set_position)
        1    0.000    0.000    0.000    0.000 {built-in method gc.collect}
        4    0.000    0.000    0.000    0.000 figure.py:956(set_edgecolor)
      152    0.000    0.000    0.000    0.000 text.py:949(set_horizontalalignment)
      206    0.000    0.000    0.000    0.000 lines.py:1228(set_markeredgewidth)
       48    0.000    0.000    0.000    0.000 ops.py:407(name)
       32    0.000    0.000    0.000    0.000 function_base.py:1141(diff)
       16    0.000    0.000    0.000    0.000 distribute_lib.py:2665(__enter__)
      288    0.000    0.000    0.000    0.000 tf_utils.py:289(_convert_object_or_list)
      150    0.000    0.000    0.000    0.000 text.py:240(set_rotation_mode)
      100    0.000    0.000    0.000    0.000 callbacks.py:988(<genexpr>)
       10    0.000    0.000    0.000    0.000 _base.py:2045(_process_unit_info)
       12    0.000    0.000    0.000    0.000 patches.py:436(set_fill)
       24    0.000    0.000    0.000    0.000 save.py:196(<dictcomp>)
       24    0.000    0.000    0.000    0.000 optimizer_v2.py:621(_assume_mirrored)
        2    0.000    0.000    0.000    0.000 _base.py:563(set_figure)
      218    0.000    0.000    0.000    0.000 lines.py:31(_get_dash_pattern)
        6    0.000    0.000    0.000    0.000 layer_utils.py:182(print_row)
       32    0.000    0.000    0.000    0.000 axis.py:1664(set_minor_locator)
       32    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 data_adapter.py:1337(expand_1d)
        2    0.000    0.000    0.000    0.000 axis.py:1945(_get_label)
       20    0.000    0.000    0.000    0.000 cycler.py:349(by_key)
       59    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
        6    0.000    0.000    0.000    0.000 numeric.py:2167(isclose)
       27    0.000    0.000    0.000    0.000 math_ops.py:1850(_has_fully_defined_shape)
        2    0.000    0.000    0.000    0.000 functional.py:825(_map_graph_network)
       32    0.000    0.000    0.000    0.000 axis.py:1620(set_major_formatter)
      150    0.000    0.000    0.000    0.000 text.py:933(set_color)
       16    0.000    0.000    0.000    0.000 transpiler.py:190(instantiate)
      288    0.000    0.000    0.000    0.000 tf_utils.py:273(_is_serialized_node_data)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:39(seterr)
     1031    0.000    0.000    0.000    0.000 context.py:803(scope_name)
      120    0.000    0.000    0.000    0.000 transforms.py:2162(transform_non_affine)
       60    0.000    0.000    0.000    0.000 data_structures.py:902(_list_functions_for_serialization)
      672    0.000    0.000    0.000    0.000 data_structures.py:1039(<lambda>)
     1300    0.000    0.000    0.000    0.000 tf_decorator.py:278(decorator_argspec)
       20    0.000    0.000    0.000    0.000 _base.py:2048(_process_single_axis)
      120    0.000    0.000    0.000    0.000 weakref.py:339(__init__)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:63(_validate_inputs)
       12    0.000    0.000    0.000    0.000 training.py:639(metrics_names)
        4    0.000    0.000    0.000    0.000 _base.py:1116(_set_title_offset_trans)
      150    0.000    0.000    0.000    0.000 text.py:1227(set_usetex)
        6    0.000    0.000    0.000    0.000 transforms.py:904(p1)
       12    0.000    0.000    0.000    0.000 function.py:1724(_call_with_structured_signature)
        4    0.000    0.000    0.000    0.000 figure.py:966(set_facecolor)
      236    0.000    0.000    0.000    0.000 text.py:1115(set_y)
        3    0.000    0.000    0.000    0.000 compile_utils.py:382(update_state)
       84    0.000    0.000    0.000    0.000 module.py:132(name_scope)
      480    0.000    0.000    0.000    0.000 data_structures.py:330(_name_element)
       24    0.000    0.000    0.000    0.000 functional_saver.py:168(<dictcomp>)
      120    0.000    0.000    0.000    0.000 smart_cond.py:62(smart_constant_value)
     10/8    0.000    0.000    0.000    0.000 transforms.py:1709(__eq__)
       34    0.000    0.000    0.000    0.000 shape_base.py:25(atleast_1d)
       12    0.000    0.000    0.000    0.000 utils_impl.py:101(build_tensor_info_from_op)
       24    0.000    0.000    0.000    0.000 dtypes.py:215(__reduce__)
       24    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.cleanup_path}
       32    0.000    0.000    0.000    0.000 axis.py:1634(set_minor_formatter)
      156    0.000    0.000    0.000    0.000 fractions.py:84(__new__)
       52    0.000    0.000    0.000    0.000 fractions.py:386(reverse)
       24    0.000    0.000    0.000    0.000 base.py:92(__init__)
      288    0.000    0.000    0.000    0.000 json_utils.py:50(<genexpr>)
      206    0.000    0.000    0.000    0.000 lines.py:1038(set_antialiased)
      206    0.000    0.000    0.000    0.000 lines.py:1271(set_markersize)
       13    0.000    0.000    0.000    0.000 _dill.py:145(numpyufunc)
       12    0.000    0.000    0.000    0.000 utils_impl.py:225(get_variables_path)
      356    0.000    0.000    0.000    0.000 base_layer_utils.py:475(training)
  280/272    0.000    0.000    0.000    0.000 spines.py:220(_ensure_position_is_set)
      460    0.000    0.000    0.000    0.000 transforms.py:177(<lambda>)
       16    0.000    0.000    0.000    0.000 transpiler.py:356(_cached_factory)
      576    0.000    0.000    0.000    0.000 saveable_object.py:80(device)
        2    0.000    0.000    0.000    0.000 _base.py:3435(set_ybound)
      276    0.000    0.000    0.000    0.000 ops.py:6008(has_default_graph)
      208    0.000    0.000    0.000    0.000 lines.py:635(axes)
       13    0.000    0.000    0.000    0.000 pickle.py:347(__init__)
        4    0.000    0.000    0.000    0.000 training.py:2637(reduce_per_replica)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:563(all_reduce_fn)
        3    0.000    0.000    0.000    0.000 resource_variable_ops.py:280(__del__)
       68    0.000    0.000    0.000    0.000 axis.py:197(_set_labelrotation)
       32    0.000    0.000    0.000    0.000 _methods.py:36(_sum)
      356    0.000    0.000    0.000    0.000 __init__.py:2113(type_name)
       22    0.000    0.000    0.000    0.000 distribution_strategy_context.py:64(_pop_per_thread_mode)
      384    0.000    0.000    0.000    0.000 function.py:505(stateful_ops)
      160    0.000    0.000    0.000    0.000 transforms.py:2658(get_matrix)
      228    0.000    0.000    0.000    0.000 function.py:2003(structured_outputs)
        4    0.000    0.000    0.000    0.000 _base.py:800(_update_transScale)
      104    0.000    0.000    0.000    0.000 pickle.py:262(_getattribute)
        5    0.000    0.000    0.000    0.000 base_layer.py:1228(supports_masking)
      552    0.000    0.000    0.000    0.000 variables.py:1182(_gather_saveables_for_checkpoint)
       32    0.000    0.000    0.000    0.000 ticker.py:508(__init__)
        9    0.000    0.000    0.000    0.000 util.py:34(squeeze_or_expand_dimensions)
       12    0.000    0.000    0.000    0.000 functional.py:272(output_shape)
      384    0.000    0.000    0.000    0.000 function.py:1436(record)
      576    0.000    0.000    0.000    0.000 saveable_object.py:61(__init__)
      204    0.000    0.000    0.000    0.000 backend_bases.py:938(set_foreground)
        6    0.000    0.000    0.000    0.000 generic_utils.py:745(to_snake_case)
       24    0.000    0.000    0.000    0.000 array_ops.py:1443(_get_dtype_from_nested_lists)
       50    0.000    0.000    0.000    0.000 callbacks.py:1650(on_train_begin)
        6    0.000    0.000    0.000    0.000 backend_bases.py:1635(__init__)
      100    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
       16    0.000    0.000    0.000    0.000 _base.py:3087(_validate_converted_limits)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:441(__enter__)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:245(create_signature_map)
       55    0.000    0.000    0.000    0.000 distribute_lib.py:296(_require_cross_replica_or_default_context_extended)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2199(batch_reduce_to)
        8    0.000    0.000    0.000    0.000 transforms.py:1509(transform_path)
      196    0.000    0.000    0.000    0.000 node.py:276(is_keras_tensor)
        6    0.000    0.000    0.000    0.000 _datasource.py:376(_isurl)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:224(_list_functions_for_serialization)
        1    0.000    0.000    0.000    0.000 version_utils.py:54(__new__)
       24    0.000    0.000    0.000    0.000 training.py:2609(_get_compile_args)
      124    0.000    0.000    0.000    0.000 transforms.py:1705(__array__)
      274    0.000    0.000    0.000    0.000 artist.py:371(get_transform)
       96    0.000    0.000    0.000    0.000 input_spec.py:95(get_config)
       22    0.000    0.000    0.000    0.000 distribution_strategy_context.py:60(_push_per_thread_mode)
       26    0.000    0.000    0.000    0.000 __init__.py:138(connect)
       32    0.000    0.000    0.000    0.000 _methods.py:78(_clip_dep_invoke_with_casting)
       34    0.000    0.000    0.000    0.000 ops.py:4760(_attr_scope)
       42    0.000    0.000    0.000    0.000 transforms.py:2544(__init__)
      156    0.000    0.000    0.000    0.000 {method 'set_size' of 'matplotlib.ft2font.FT2Font' objects}
        4    0.000    0.000    0.000    0.000 base_layer.py:2985(_set_save_spec)
       24    0.000    0.000    0.000    0.000 functional_saver.py:44(__init__)
      122    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)
      396    0.000    0.000    0.000    0.000 font_manager.py:940(_normalize_font_family)
      206    0.000    0.000    0.000    0.000 lines.py:1050(set_color)
        8    0.000    0.000    0.000    0.000 path.py:526(get_extents)
       38    0.000    0.000    0.000    0.000 backprop.py:86(make_attr)
        2    0.000    0.000    0.000    0.000 axis.py:2232(_get_label)
      206    0.000    0.000    0.000    0.000 lines.py:1213(set_markeredgecolor)
       16    0.000    0.000    0.000    0.000 transforms.py:2266(blended_transform_factory)
       48    0.000    0.000    0.000    0.000 copy.py:220(<listcomp>)
       48    0.000    0.000    0.000    0.000 input_spec.py:109(to_tensor_shape)
       78    0.000    0.000    0.000    0.000 backend_agg.py:55(get_hinting_flag)
        8    0.000    0.000    0.000    0.000 transforms.py:957(set)
      744    0.000    0.000    0.000    0.000 transforms.py:1868(get_matrix)
       32    0.000    0.000    0.000    0.000 tf_stack.py:53(__enter__)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(nonzero)
        2    0.000    0.000    0.000    0.000 transforms.py:1318(contains_branch_seperately)
      492    0.000    0.000    0.000    0.000 base_layer.py:1255(activity_regularizer)
       12    0.000    0.000    0.000    0.000 re.py:184(sub)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1626(writeInfoDict)
      192    0.000    0.000    0.000    0.000 serialized_attributes.py:165(<dictcomp>)
      354    0.000    0.000    0.000    0.000 policy.py:392(variable_dtype)
       38    0.000    0.000    0.000    0.000 patches.py:768(_convert_units)
       12    0.000    0.000    0.000    0.000 ticker.py:1681(nonsingular)
       52    0.000    0.000    0.000    0.000 fractions.py:374(forward)
       27    0.000    0.000    0.000    0.000 backprop_util.py:25(IsTrainable)
       21    0.000    0.000    0.000    0.000 tf_inspect.py:365(isclass)
      712    0.000    0.000    0.000    0.000 __init__.py:2111(<genexpr>)
      582    0.000    0.000    0.000    0.000 transforms.py:939(get_points)
      301    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
       12    0.000    0.000    0.000    0.000 save.py:89(__init__)
       12    0.000    0.000    0.000    0.000 function_serialization.py:78(serialize_bare_concrete_function)
        8    0.000    0.000    0.000    0.000 spines.py:381(set_position)
        2    0.000    0.000    0.000    0.000 transforms.py:1298(contains_branch)
        1    0.000    0.000    0.000    0.000 compile_utils.py:298(build)
       32    0.000    0.000    0.000    0.000 distribute_lib.py:347(_require_strategy_scope_extended)
      162    0.000    0.000    0.000    0.000 policy.py:406(compute_dtype)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1264(writeExtGSTates)
       52    0.000    0.000    0.000    0.000 fractions.py:401(_add)
       79    0.000    0.000    0.000    0.000 converter.py:177(__eq__)
       60    0.000    0.000    0.000    0.000 data_structures.py:161(_attribute_sentinel)
        6    0.000    0.000    0.000    0.000 math_ops.py:3458(add_n)
       72    0.000    0.000    0.000    0.000 serialized_attributes.py:177(<dictcomp>)
        2    0.000    0.000    0.000    0.000 axis.py:1963(_get_offset_text)
       24    0.000    0.000    0.000    0.000 __init__.py:1633(safe_first_element)
      194    0.000    0.000    0.000    0.000 __init__.py:1860(_str_lower_equal)
       21    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:416(parent)
        3    0.000    0.000    0.000    0.000 math_grad.py:1225(_ShapesFullySpecifiedAndEqual)
      532    0.000    0.000    0.000    0.000 artist.py:197(axes)
       38    0.000    0.000    0.000    0.000 backend_pdf.py:2223(paint)
      572    0.000    0.000    0.000    0.000 statistics.py:201(_exact_ratio)
       84    0.000    0.000    0.000    0.000 save_impl.py:72(should_skip_serialization)
      760    0.000    0.000    0.000    0.000 artist.py:800(get_visible)
       26    0.000    0.000    0.000    0.000 backend_pdf.py:2085(encode_string)
       84    0.000    0.000    0.000    0.000 module.py:195(_flatten)
      242    0.000    0.000    0.000    0.000 node.py:215(input_tensors)
      288    0.000    0.000    0.000    0.000 base.py:1014(_list_functions_for_serialization)
       12    0.000    0.000    0.000    0.000 io_utils.py:57(path_to_string)
        2    0.000    0.000    0.000    0.000 axis.py:2252(_get_offset_text)
      440    0.000    0.000    0.000    0.000 text.py:1151(set_text)
       50    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2225(_batch_reduce_to)
       10    0.000    0.000    0.000    0.000 transforms.py:274(frozen)
        3    0.000    0.000    0.000    0.000 training.py:569(_reset_compile_cache)
      120    0.000    0.000    0.000    0.000 function.py:2583(<dictcomp>)
       24    0.000    0.000    0.000    0.000 transforms.py:2408(__init__)
      248    0.000    0.000    0.000    0.000 __init__.py:1850(_str_equal)
       50    0.000    0.000    0.000    0.000 function_base.py:2120(<listcomp>)
        8    0.000    0.000    0.000    0.000 parse.py:361(urlparse)
        2    0.000    0.000    0.000    0.000 _base.py:612(_set_lim_and_transforms)
      118    0.000    0.000    0.000    0.000 stride_tricks.py:262(<listcomp>)
       50    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        4    0.000    0.000    0.000    0.000 base_layer.py:1560(_clear_losses)
       60    0.000    0.000    0.000    0.000 metrics.py:233(dtype)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2228(<listcomp>)
       12    0.000    0.000    0.000    0.000 axis.py:2147(get_ticks_position)
      288    0.000    0.000    0.000    0.000 generic_utils.py:188(skip_failed_serialization)
      328    0.000    0.000    0.000    0.000 tf_decorator.py:266(decorated_target)
        8    0.000    0.000    0.000    0.000 _base.py:810(get_position)
        3    0.000    0.000    0.000    0.000 weights_broadcast_ops.py:136(broadcast_weights)
       76    0.000    0.000    0.000    0.000 backend_bases.py:958(set_joinstyle)
      698    0.000    0.000    0.000    0.000 font_manager.py:679(get_family)
       82    0.000    0.000    0.000    0.000 transforms.py:376(intervalx)
       30    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
      148    0.000    0.000    0.000    0.000 font_manager.py:1030(get_default_size)
      912    0.000    0.000    0.000    0.000 font_manager.py:727(get_size_in_points)
      752    0.000    0.000    0.000    0.000 artist.py:868(get_rasterized)
        1    0.000    0.000    0.000    0.000 compile_utils.py:134(build)
      744    0.000    0.000    0.000    0.000 base_layer.py:2506(<genexpr>)
       45    0.000    0.000    0.000    0.000 ops.py:2519(_get_attr_bool)
       48    0.000    0.000    0.000    0.000 distribute_lib.py:1373(experimental_local_results)
       52    0.000    0.000    0.000    0.000 fractions.py:423(_div)
      356    0.000    0.000    0.000    0.000 base_layer.py:853(compute_mask)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
      700    0.000    0.000    0.000    0.000 {method 'join' of 'bytes' objects}
       32    0.000    0.000    0.000    0.000 scale.py:718(scale_factory)
       26    0.000    0.000    0.000    0.000 backend_pdf.py:1718(track_characters)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:879(from_config)
        6    0.000    0.000    0.000    0.000 iterator_ops.py:888(_component_specs)
      120    0.000    0.000    0.000    0.000 weakref.py:334(__new__)
      441    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        2    0.000    0.000    0.000    0.000 functional.py:760(_compute_tensor_usage_count)
       52    0.000    0.000    0.000    0.000 transforms.py:2736(get_affine)
       67    0.000    0.000    0.000    0.000 backend_pdf.py:1596(reserveObject)
      672    0.000    0.000    0.000    0.000 base.py:1032(_map_resources)
      120    0.000    0.000    0.000    0.000 utils.py:233(get_training_arg)
      288    0.000    0.000    0.000    0.000 initializers_v2.py:528(get_config)
       32    0.000    0.000    0.000    0.000 converter.py:184(uses)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2168(reduce_to)
       82    0.000    0.000    0.000    0.000 transforms.py:385(intervaly)
      170    0.000    0.000    0.000    0.000 def_function.py:431(__init__)
       72    0.000    0.000    0.000    0.000 serialized_attributes.py:157(__init__)
        1    0.000    0.000    0.000    0.000 rmsprop.py:98(__init__)
        3    0.000    0.000    0.000    0.000 def_function.py:102(called_with_tracing)
       16    0.000    0.000    0.000    0.000 inspect.py:643(getfile)
      104    0.000    0.000    0.000    0.000 statistics.py:159(<genexpr>)
       12    0.000    0.000    0.000    0.000 variable_scope.py:1400(__init__)
       18    0.000    0.000    0.000    0.000 backend_bases.py:2185(mpl_connect)
       48    0.000    0.000    0.000    0.000 lines.py:963(get_markerfacecolor)
       12    0.000    0.000    0.000    0.000 transforms.py:2221(__init__)
       12    0.000    0.000    0.000    0.000 save.py:103(add_object)
       12    0.000    0.000    0.000    0.000 io_utils.py:40(_path_to_string)
     10/8    0.000    0.000    0.000    0.000 transforms.py:2335(__eq__)
        2    0.000    0.000    0.000    0.000 _datasource.py:322(__init__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1679(__init__)
        7    0.000    0.000    0.000    0.000 data_adapter.py:1340(_expand_single_1d_tensor)
      120    0.000    0.000    0.000    0.000 nested_structure_coder.py:356(do_encode)
      169    0.000    0.000    0.000    0.000 enum.py:584(__reduce_ex__)
       48    0.000    0.000    0.000    0.000 saving_utils.py:305(<genexpr>)
       42    0.000    0.000    0.000    0.000 distribute_lib.py:340(_require_strategy_scope_strategy)
       32    0.000    0.000    0.000    0.000 ticker.py:1994(le)
       32    0.000    0.000    0.000    0.000 genericpath.py:117(_splitext)
        2    0.000    0.000    0.000    0.000 backend_bases.py:3360(new_figure_manager_given_figure)
       24    0.000    0.000    0.000    0.000 transforms.py:2451(get_matrix)
        4    0.000    0.000    0.000    0.000 transforms.py:2720(get_transformed_path_and_affine)
      354    0.000    0.000    0.000    0.000 stride_tricks.py:266(<genexpr>)
       58    0.000    0.000    0.000    0.000 _methods.py:44(_any)
       52    0.000    0.000    0.000    0.000 statistics.py:233(_convert)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:1016(with_rank)
      698    0.000    0.000    0.000    0.000 font_manager.py:698(get_variant)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:164(_normalize_outputs)
       52    0.000    0.000    0.000    0.000 tensor_shape.py:1203(__eq__)
       76    0.000    0.000    0.000    0.000 backend_bases.py:890(set_capstyle)
       67    0.000    0.000    0.000    0.000 backend_pdf.py:1606(recordXref)
        8    0.000    0.000    0.000    0.000 loss_scale.py:46(get)
      670    0.000    0.000    0.000    0.000 multiarray.py:707(dot)
       48    0.000    0.000    0.000    0.000 saving_utils.py:294(_has_name)
        4    0.000    0.000    0.000    0.000 transforms.py:1669(set)
       12    0.000    0.000    0.000    0.000 posixpath.py:154(dirname)
       36    0.000    0.000    0.000    0.000 {built-in method from_bytes}
       24    0.000    0.000    0.000    0.000 signature_serialization.py:64(<genexpr>)
      288    0.000    0.000    0.000    0.000 tf_utils.py:254(__init__)
       16    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
       24    0.000    0.000    0.000    0.000 type_spec.py:304(__reduce__)
       95    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:225(<dictcomp>)
       48    0.000    0.000    0.000    0.000 getlimits.py:365(__new__)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:596(aggregation)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:446(__exit__)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:83(__exit__)
       12    0.000    0.000    0.000    0.000 axis.py:1828(_get_ticks_position)
       48    0.000    0.000    0.000    0.000 lines.py:928(get_markeredgecolor)
        6    0.000    0.000    0.000    0.000 transforms.py:278(__array__)
       50    0.000    0.000    0.000    0.000 training_utils.py:1220(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:1423(_add_axes_internal)
        6    0.000    0.000    0.000    0.000 losses_utils.py:129(cast_losses_to_common_dtype)
        8    0.000    0.000    0.000    0.000 optimizer_v2.py:1173(_restore_slot_variable)
        8    0.000    0.000    0.000    0.000 transforms.py:1520(transform_path_affine)
        2    0.000    0.000    0.000    0.000 transforms.py:1639(__eq__)
       48    0.000    0.000    0.000    0.000 graph_view.py:67(_slot_variable_naming_for_optimizer)
      368    0.000    0.000    0.000    0.000 __init__.py:886(<listcomp>)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1804(nonzero)
       12    0.000    0.000    0.000    0.000 file_io.py:50(__init__)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:592(synchronization)
      377    0.000    0.000    0.000    0.000 backend_pdf.py:278(pdfRepr)
        2    0.000    0.000    0.000    0.000 transforms.py:2093(__eq__)
        6    0.000    0.000    0.000    0.000 numeric.py:2244(within_tol)
        3    0.000    0.000    0.000    0.000 confusion_matrix.py:34(remove_squeezable_dimensions)
       78    0.000    0.000    0.000    0.000 op_def_library.py:532(<genexpr>)
      624    0.000    0.000    0.000    0.000 device_spec.py:260(job)
      240    0.000    0.000    0.000    0.000 functional.py:1026(_should_skip_first_node)
        3    0.000    0.000    0.000    0.000 base_layer.py:1717(add_update)
        6    0.000    0.000    0.000    0.000 backend.py:984(unique_object_name)
      132    0.000    0.000    0.000    0.000 def_function.py:915(function_spec)
      398    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
      248    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
       45    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrBool}
       50    0.000    0.000    0.000    0.000 function_base.py:2115(<listcomp>)
       16    0.000    0.000    0.000    0.000 compile_utils.py:46(_conform_to_outputs)
       12    0.000    0.000    0.000    0.000 tf_logging.py:45(_get_caller)
        1    0.000    0.000    0.000    0.000 base_layer.py:1242(stateful)
        8    0.000    0.000    0.000    0.000 version_utils.py:84(should_use_v2)
       52    0.000    0.000    0.000    0.000 markers.py:240(__bool__)
      278    0.000    0.000    0.000    0.000 transforms.py:1689(<lambda>)
       60    0.000    0.000    0.000    0.000 weakref.py:288(update)
        8    0.000    0.000    0.000    0.000 loss_scale.py:421(get)
      752    0.000    0.000    0.000    0.000 artist.py:888(get_agg_filter)
      500    0.000    0.000    0.000    0.000 path.py:197(vertices)
        2    0.000    0.000    0.000    0.000 figure.py:976(set_dpi)
        8    0.000    0.000    0.000    0.000 transforms.py:1731(transform_path_affine)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:139(geterr)
      112    0.000    0.000    0.000    0.000 {built-in method math.log10}
      250    0.000    0.000    0.000    0.000 node.py:221(output_tensors)
       30    0.000    0.000    0.000    0.000 math_ops.py:3849(conj)
       36    0.000    0.000    0.000    0.000 uuid.py:280(hex)
        2    0.000    0.000    0.000    0.000 posixpath.py:376(abspath)
       24    0.000    0.000    0.000    0.000 spines.py:154(get_patch_transform)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1159(_dense_apply_args)
      312    0.000    0.000    0.000    0.000 _base.py:586(<genexpr>)
       78    0.000    0.000    0.000    0.000 op_def_library.py:416(<genexpr>)
      698    0.000    0.000    0.000    0.000 font_manager.py:704(get_weight)
      180    0.000    0.000    0.000    0.000 data_structures.py:1082(<lambda>)
       32    0.000    0.000    0.000    0.000 axis.py:864(reset_ticks)
      698    0.000    0.000    0.000    0.000 font_manager.py:730(get_file)
       12    0.000    0.000    0.000    0.000 save.py:354(<listcomp>)
      104    0.000    0.000    0.000    0.000 text.py:25(_wrap_text)
       37    0.000    0.000    0.000    0.000 {built-in method zlib.compressobj}
        8    0.000    0.000    0.000    0.000 policy.py:342(_parse_name)
      312    0.000    0.000    0.000    0.000 _base.py:588(<genexpr>)
       32    0.000    0.000    0.000    0.000 __init__.py:1891(method)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:276(__init__)
       24    0.000    0.000    0.000    0.000 optimizer_v2.py:860(get_config)
        8    0.000    0.000    0.000    0.000 parse.py:412(urlsplit)
       50    0.000    0.000    0.000    0.000 callbacks.py:1679(on_train_end)
       16    0.000    0.000    0.000    0.000 transforms.py:2622(get_matrix)
      120    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
      552    0.000    0.000    0.000    0.000 saveable_object.py:75(optional_restore)
       12    0.000    0.000    0.000    0.000 _base.py:4215(get_children)
      698    0.000    0.000    0.000    0.000 font_manager.py:691(get_style)
        4    0.000    0.000    0.000    0.000 _datasource.py:367(_possible_names)
       12    0.000    0.000    0.000    0.000 execute.py:283(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2249(alpha_cmd)
       22    0.000    0.000    0.000    0.000 patches.py:382(set_linewidth)
       32    0.000    0.000    0.000    0.000 ticker.py:2001(ge)
        6    0.000    0.000    0.000    0.000 _datasource.py:337(_iszip)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
       17    0.000    0.000    0.000    0.000 __init__.py:38(populate_deserializable_objects)
      624    0.000    0.000    0.000    0.000 device_spec.py:264(replica)
        8    0.000    0.000    0.000    0.000 _base.py:903(_set_artist_props)
        4    0.000    0.000    0.000    0.000 figure.py:199(update)
      312    0.000    0.000    0.000    0.000 function.py:2293(<genexpr>)
       12    0.000    0.000    0.000    0.000 posixpath.py:144(basename)
       50    0.000    0.000    0.000    0.000 training_utils.py:1241(__exit__)
       17    0.000    0.000    0.000    0.000 initializers_v2.py:747(_get_dtype)
       76    0.000    0.000    0.000    0.000 backend_bases.py:868(set_alpha)
       64    0.000    0.000    0.000    0.000 ticker.py:1984(closeto)
      120    0.000    0.000    0.000    0.000 save_impl.py:457(_maybe_wrap_with_training_arg)
       48    0.000    0.000    0.000    0.000 optimizer_v2.py:731(get_slot_names)
       84    0.000    0.000    0.000    0.000 variables.py:22(ld)
      156    0.000    0.000    0.000    0.000 base.py:569(_name_based_restores)
        2    0.000    0.000    0.000    0.000 gridspec.py:366(get_subplot_params)
      698    0.000    0.000    0.000    0.000 font_manager.py:713(get_stretch)
        4    0.000    0.000    0.000    0.000 transforms.py:1485(get_matrix)
        2    0.000    0.000    0.000    0.000 _datasource.py:458(abspath)
        7    0.000    0.000    0.000    0.000 layer_utils.py:105(<listcomp>)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1982(_get_output_canvas)
        4    0.000    0.000    0.000    0.000 activations.py:495(get)
        4    0.000    0.000    0.000    0.000 axis.py:2345(_update_offset_text_position)
        4    0.000    0.000    0.000    0.000 _base.py:2407(<listcomp>)
       73    0.000    0.000    0.000    0.000 {method 'tell' of '_io.BufferedWriter' objects}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2294(clip_cmd)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1613(writeXref)
        1    0.000    0.000    0.000    0.000 compile_utils.py:248(_get_loss_object)
      104    0.000    0.000    0.000    0.000 pickle.py:275(whichmodule)
       26    0.000    0.000    0.000    0.000 weakref.py:44(__new__)
      624    0.000    0.000    0.000    0.000 device_spec.py:276(device_index)
       20    0.000    0.000    0.000    0.000 patches.py:458(set_capstyle)
       50    0.000    0.000    0.000    0.000 callbacks.py:1042(on_train_begin)
        1    0.000    0.000    0.000    0.000 metrics_utils.py:63(update_state_wrapper)
       12    0.000    0.000    0.000    0.000 function.py:2487(signature_summary)
       12    0.000    0.000    0.000    0.000 patches.py:402(set_linestyle)
        6    0.000    0.000    0.000    0.000 losses_utils.py:152(<listcomp>)
        2    0.000    0.000    0.000    0.000 functional.py:623(_validate_graph_inputs_and_outputs)
       24    0.000    0.000    0.000    0.000 metrics.py:237(get_config)
        9    0.000    0.000    0.000    0.000 ops.py:4962(prevent_feeding)
       36    0.000    0.000    0.000    0.000 axis.py:1844(<genexpr>)
        2    0.000    0.000    0.000    0.000 figure.py:168(__init__)
      206    0.000    0.000    0.000    0.000 lines.py:547(set_markevery)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1200(alphaState)
      276    0.000    0.000    0.000    0.000 op_def_library.py:665(<listcomp>)
      502    0.000    0.000    0.000    0.000 fromnumeric.py:2232(_any_dispatcher)
       64    0.000    0.000    0.000    0.000 _methods.py:73(_clip_dep_is_byte_swapped)
       76    0.000    0.000    0.000    0.000 backend_bases.py:885(set_antialiased)
      524    0.000    0.000    0.000    0.000 artist.py:1052(sticky_edges)
        8    0.000    0.000    0.000    0.000 weakref.py:51(_cb)
      196    0.000    0.000    0.000    0.000 axis.py:662(formatter)
       12    0.000    0.000    0.000    0.000 save_options.py:39(__init__)
        6    0.000    0.000    0.000    0.000 backend.py:708(get_default_graph_uid_map)
       12    0.000    0.000    0.000    0.000 text.py:535(set_clip_box)
      222    0.000    0.000    0.000    0.000 cycler.py:227(<genexpr>)
       36    0.000    0.000    0.000    0.000 six.py:582(iterkeys)
        4    0.000    0.000    0.000    0.000 compile_utils.py:70(_maybe_broadcast_to_outputs)
      288    0.000    0.000    0.000    0.000 init_ops_v2.py:62(get_config)
      276    0.000    0.000    0.000    0.000 saveable_object_util.py:99(_read_variable_closure)
       12    0.000    0.000    0.000    0.000 variable_scope.py:1115(__init__)
      156    0.000    0.000    0.000    0.000 base.py:561(_unconditional_checkpoint_dependencies)
      624    0.000    0.000    0.000    0.000 device_spec.py:268(task)
       32    0.000    0.000    0.000    0.000 ticker.py:1973(__init__)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2405(cumsum)
      312    0.000    0.000    0.000    0.000 {method 'rstrip' of 'bytes' objects}
      156    0.000    0.000    0.000    0.000 base.py:553(_update_uid)
       96    0.000    0.000    0.000    0.000 lines.py:518(get_fillstyle)
        2    0.000    0.000    0.000    0.000 training.py:2401(_set_save_spec)
       50    0.000    0.000    0.000    0.000 training.py:2544(_maybe_load_initial_epoch_from_ckpt)
        3    0.000    0.000    0.000    0.000 metrics_utils.py:479(ragged_assert_compatible_and_get_flat_values)
        4    0.000    0.000    0.000    0.000 base_layer_utils.py:164(have_all_keras_metadata)
      156    0.000    0.000    0.000    0.000 base.py:565(_unconditional_dependency_names)
        2    0.000    0.000    0.000    0.000 __init__.py:1605(index_of)
      100    0.000    0.000    0.000    0.000 function_base.py:2116(<genexpr>)
        2    0.000    0.000    0.000    0.000 functional.py:947(_build_map)
      432    0.000    0.000    0.000    0.000 data_structures.py:475(_make_storage)
       30    0.000    0.000    0.000    0.000 resource_variable_ops.py:268(__init__)
       28    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        4    0.000    0.000    0.000    0.000 tf_utils.py:192(get_shapes)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:281(needs_keras_history)
      145    0.000    0.000    0.000    0.000 def_function.py:926(_initialize_uninitialized_variables)
        2    0.000    0.000    0.000    0.000 figure.py:111(add)
      372    0.000    0.000    0.000    0.000 __init__.py:836(<listcomp>)
       12    0.000    0.000    0.000    0.000 __init__.py:542(usesTime)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2172(switch_backends)
       24    0.000    0.000    0.000    0.000 __init__.py:809(acquire)
      125    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
       16    0.000    0.000    0.000    0.000 backend.py:887(name_scope)
       48    0.000    0.000    0.000    0.000 func_graph.py:664(captures)
       51    0.000    0.000    0.000    0.000 backprop.py:109(__init__)
        3    0.000    0.000    0.000    0.000 compile_utils.py:606(match_dtype_and_rank)
        6    0.000    0.000    0.000    0.000 backprop.py:846(__enter__)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2629(<listcomp>)
       64    0.000    0.000    0.000    0.000 axis.py:653(locator)
      388    0.000    0.000    0.000    0.000 text.py:856(get_text)
        4    0.000    0.000    0.000    0.000 transforms.py:1623(__init__)
        3    0.000    0.000    0.000    0.000 activations.py:457(deserialize)
       88    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       74    0.000    0.000    0.000    0.000 training.py:2563(_assert_compile_was_called)
      276    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:1217(<listcomp>)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:361(convert_n_to_tensor_or_indexed_slices)
       12    0.000    0.000    0.000    0.000 compat.py:125(as_str_any)
       24    0.000    0.000    0.000    0.000 figure.py:235(_update_this)
       32    0.000    0.000    0.000    0.000 ticker.py:707(<genexpr>)
        8    0.000    0.000    0.000    0.000 __init__.py:157(_remove_proxy)
      290    0.000    0.000    0.000    0.000 backend_pdf.py:292(pdfRepr)
        3    0.000    0.000    0.000    0.000 training.py:2750(_is_scalar)
      288    0.000    0.000    0.000    0.000 tf_utils.py:257(as_list)
        6    0.000    0.000    0.000    0.000 backprop.py:851(__exit__)
       32    0.000    0.000    0.000    0.000 tf_stack.py:71(__exit__)
       12    0.000    0.000    0.000    0.000 __init__.py:548(formatMessage)
        4    0.000    0.000    0.000    0.000 _bootlocale.py:23(getpreferredencoding)
       36    0.000    0.000    0.000    0.000 checkpoint_options.py:44(__init__)
       23    0.000    0.000    0.000    0.000 backend.py:976(track_variable)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:74(__enter__)
       16    0.000    0.000    0.000    0.000 axis.py:922(_translate_tick_kw)
       10    0.000    0.000    0.000    0.000 figure.py:453(_get_axes)
        4    0.000    0.000    0.000    0.000 backend_bases.py:151(__init__)
       74    0.000    0.000    0.000    0.000 backend_bases.py:994(get_hatch_path)
     10/2    0.000    0.000    0.000    0.000 functional.py:978(_build_map_helper)
      168    0.000    0.000    0.000    0.000 save_impl.py:574(<listcomp>)
        3    0.000    0.000    0.000    0.000 backprop.py:1051(<listcomp>)
        3    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:226(destroy_resource_op)
        2    0.000    0.000    0.000    0.000 _base.py:2691(set_axisbelow)
       64    0.000    0.000    0.000    0.000 enum.py:581(__hash__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1658(writeTrailer)
       50    0.000    0.000    0.000    0.000 callbacks.py:934(set_params)
        4    0.000    0.000    0.000    0.000 axis.py:1010(get_inverted)
        2    0.000    0.000    0.000    0.000 transforms.py:817(update_from_path)
       24    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsTensor}
        2    0.000    0.000    0.000    0.000 functional.py:659(<listcomp>)
        6    0.000    0.000    0.000    0.000 backprop.py:856(_push_tape)
       16    0.000    0.000    0.000    0.000 axis.py:1175(<listcomp>)
       40    0.000    0.000    0.000    0.000 __init__.py:118(__init__)
       12    0.000    0.000    0.000    0.000 __init__.py:329(getMessage)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2281(push)
      210    0.000    0.000    0.000    0.000 figure.py:463(_get_dpi)
      262    0.000    0.000    0.000    0.000 fromnumeric.py:2671(_amin_dispatcher)
       26    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
       48    0.000    0.000    0.000    0.000 saving_utils.py:306(<genexpr>)
        4    0.000    0.000    0.000    0.000 initializers_v2.py:521(__init__)
       24    0.000    0.000    0.000    0.000 patches.py:271(get_patch_transform)
       24    0.000    0.000    0.000    0.000 weakref.py:480(pop)
       14    0.000    0.000    0.000    0.000 util.py:1078(__init__)
       38    0.000    0.000    0.000    0.000 backprop.py:75(op_attr_type)
        8    0.000    0.000    0.000    0.000 ticker.py:644(get_offset)
       72    0.000    0.000    0.000    0.000 path.py:351(__len__)
       26    0.000    0.000    0.000    0.000 cp1252.py:11(encode)
      114    0.000    0.000    0.000    0.000 backend_pdf.py:2360(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1704(draw_event)
       32    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:217(<listcomp>)
        2    0.000    0.000    0.000    0.000 training_utils.py:1946(get_static_batch_size)
        8    0.000    0.000    0.000    0.000 base_layer.py:1300(input_spec)
       16    0.000    0.000    0.000    0.000 converter.py:188(call_options)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:261(__exit__)
        4    0.000    0.000    0.000    0.000 figure.py:651(get_children)
       12    0.000    0.000    0.000    0.000 figure.py:70(as_list)
        4    0.000    0.000    0.000    0.000 ticker.py:2222(view_limits)
        3    0.000    0.000    0.000    0.000 losses_utils.py:120(scale_loss_for_distribution)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:257(__enter__)
        6    0.000    0.000    0.000    0.000 backprop.py:869(_pop_tape)
        8    0.000    0.000    0.000    0.000 figure.py:913(get_size_inches)
        8    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.get_path_extents}
      254    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
       24    0.000    0.000    0.000    0.000 backprop.py:726(_handle_or_self)
        2    0.000    0.000    0.000    0.000 figure.py:1651(clf)
        8    0.000    0.000    0.000    0.000 figure.py:778(set_canvas)
      150    0.000    0.000    0.000    0.000 text.py:554(set_wrap)
      198    0.000    0.000    0.000    0.000 font_manager.py:839(set_file)
       18    0.000    0.000    0.000    0.000 __init__.py:185(process)
        2    0.000    0.000    0.000    0.000 __init__.py:1320(_check_1d)
       16    0.000    0.000    0.000    0.000 inspect.py:1495(currentframe)
       50    0.000    0.000    0.000    0.000 weakref.py:371(_commit_removals)
       38    0.000    0.000    0.000    0.000 backend_pdf.py:2208(fill)
       13    0.000    0.000    0.000    0.000 _dill.py:127(ndarraysubclassinstance)
       72    0.000    0.000    0.000    0.000 tf_inspect.py:40(_convert_maybe_argspec_to_fullargspec)
        2    0.000    0.000    0.000    0.000 {built-in method today}
        1    0.000    0.000    0.000    0.000 training.py:2472(_validate_compile)
        4    0.000    0.000    0.000    0.000 training.py:2650(_reduce)
       84    0.000    0.000    0.000    0.000 base_layer.py:2194(inbound_nodes)
        9    0.000    0.000    0.000    0.000 distribution_strategy_context.py:90(get_replica_context)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2624(<listcomp>)
       68    0.000    0.000    0.000    0.000 axis.py:215(get_tick_padding)
      192    0.000    0.000    0.000    0.000 artist.py:580(get_gid)
        9    0.000    0.000    0.000    0.000 {built-in method numpy.fromiter}
       12    0.000    0.000    0.000    0.000 training.py:677(<listcomp>)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:320(internal_convert_n_to_tensor_or_indexed_slices)
       76    0.000    0.000    0.000    0.000 backend_bases.py:963(set_linewidth)
        4    0.000    0.000    0.000    0.000 transforms.py:909(intervalx)
       12    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
       39    0.000    0.000    0.000    0.000 enum.py:347(__repr__)
      590    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        4    0.000    0.000    0.000    0.000 training.py:2760(_minimum_control_deps)
       23    0.000    0.000    0.000    0.000 base_layer_utils.py:754(v2_dtype_behavior_enabled)
        7    0.000    0.000    0.000    0.000 base_layer.py:2916(_call_fn_arg_defaults)
      120    0.000    0.000    0.000    0.000 def_function.py:906(python_function)
       64    0.000    0.000    0.000    0.000 axis.py:666(formatter)
       12    0.000    0.000    0.000    0.000 __init__.py:390(format)
        6    0.000    0.000    0.000    0.000 posixpath.py:338(normpath)
       10    0.000    0.000    0.000    0.000 tf_utils.py:339(is_symbolic_tensor)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:253(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:2383(<listcomp>)
      268    0.000    0.000    0.000    0.000 transforms.py:1740(get_affine)
       96    0.000    0.000    0.000    0.000 saving_utils.py:273(_serialize_fn)
        1    0.000    0.000    0.000    0.000 losses.py:1857(get)
       84    0.000    0.000    0.000    0.000 layer_serialization.py:144(objects_to_serialize)
        8    0.000    0.000    0.000    0.000 input_spec.py:57(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:3008(get_xbound)
        4    0.000    0.000    0.000    0.000 _datasource.py:503(_sanitize_relative_path)
       64    0.000    0.000    0.000    0.000 inspect.py:690(<genexpr>)
       32    0.000    0.000    0.000    0.000 scale.py:97(__init__)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2564(__init__)
        8    0.000    0.000    0.000    0.000 transforms.py:1652(_set)
       14    0.000    0.000    0.000    0.000 core.py:593(filled)
       10    0.000    0.000    0.000    0.000 backend_pdf.py:2253(hatch_cmd)
        8    0.000    0.000    0.000    0.000 axis.py:834(limit_range_for_scale)
      238    0.000    0.000    0.000    0.000 path.py:211(codes)
      104    0.000    0.000    0.000    0.000 {method 'get_width_height' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 warnings.py:119(filterwarnings)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:519(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend.py:217(get_uid)
        4    0.000    0.000    0.000    0.000 distribute_lib.py:2658(__init__)
      144    0.000    0.000    0.000    0.000 base.py:621(_object_identifier)
       15    0.000    0.000    0.000    0.000 base.py:763(_preload_simple_restoration)
        2    0.000    0.000    0.000    0.000 figure.py:1100(_process_projection_requirements)
       32    0.000    0.000    0.000    0.000 text.py:777(get_fontsize)
      128    0.000    0.000    0.000    0.000 ticker.py:220(set_axis)
      128    0.000    0.000    0.000    0.000 artist.py:688(get_path_effects)
       16    0.000    0.000    0.000    0.000 compile_utils.py:549(map_to_output_names)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:506(__init__)
        2    0.000    0.000    0.000    0.000 util.py:1354(saver_with_op_caching)
       24    0.000    0.000    0.000    0.000 function.py:3676(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:3064(get_xlim)
       48    0.000    0.000    0.000    0.000 inspect.py:687(<genexpr>)
       46    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        1    0.000    0.000    0.000    0.000 losses.py:1838(deserialize)
       12    0.000    0.000    0.000    0.000 tf_utils.py:467(<genexpr>)
      125    0.000    0.000    0.000    0.000 functional.py:791(_assert_weights_created)
        3    0.000    0.000    0.000    0.000 def_function.py:62(called_with_tracing)
       32    0.000    0.000    0.000    0.000 ticker.py:1663(raise_if_exceeds)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
       60    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
       74    0.000    0.000    0.000    0.000 {built-in method math.floor}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1688(finalize)
       65    0.000    0.000    0.000    0.000 activations.py:405(linear)
        7    0.000    0.000    0.000    0.000 base_layer.py:2929(_call_fn_arg_positions)
        2    0.000    0.000    0.000    0.000 _base.py:2994(xaxis_inverted)
        2    0.000    0.000    0.000    0.000 _base.py:3419(get_ybound)
      208    0.000    0.000    0.000    0.000 text.py:1241(get_usetex)
       28    0.000    0.000    0.000    0.000 artist.py:594(get_snap)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(unravel_index)
        2    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
      104    0.000    0.000    0.000    0.000 backend_pdf.py:2115(<genexpr>)
       38    0.000    0.000    0.000    0.000 backend_pdf.py:2197(stroke)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:203(__init__)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:498(<genexpr>)
        3    0.000    0.000    0.000    0.000 math_grad.py:143(_IsScalar)
        4    0.000    0.000    0.000    0.000 _base.py:2411(<listcomp>)
      128    0.000    0.000    0.000    0.000 axis.py:285(get_loc)
        2    0.000    0.000    0.000    0.000 _base.py:224(_getdefaults)
        2    0.000    0.000    0.000    0.000 figure.py:1959(sca)
       16    0.000    0.000    0.000    0.000 transforms.py:1768(is_separable)
       12    0.000    0.000    0.000    0.000 artist.py:719(set_clip_box)
       52    0.000    0.000    0.000    0.000 image.py:129(<genexpr>)
       12    0.000    0.000    0.000    0.000 re.py:324(_subx)
       26    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:37(get_canvas_width_height)
       32    0.000    0.000    0.000    0.000 distribute_lib.py:1991(_container_strategy)
        6    0.000    0.000    0.000    0.000 tpu.py:208(is_tpu_strategy)
      142    0.000    0.000    0.000    0.000 __init__.py:1760(<listcomp>)
        8    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.000    0.000 numbers.py:283(__float__)
       13    0.000    0.000    0.000    0.000 pickle.py:188(__init__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1297(writeHatches)
       69    0.000    0.000    0.000    0.000 backend_pdf.py:235(pdfRepr)
       84    0.000    0.000    0.000    0.000 base_layer.py:2200(outbound_nodes)
       24    0.000    0.000    0.000    0.000 meta_graph.py:171(<listcomp>)
      144    0.000    0.000    0.000    0.000 base.py:633(_tracking_metadata)
       24    0.000    0.000    0.000    0.000 __init__.py:816(release)
       64    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       96    0.000    0.000    0.000    0.000 layer_serialization.py:34(object_identifier)
        2    0.000    0.000    0.000    0.000 _base.py:3475(get_ylim)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:437(__init__)
       12    0.000    0.000    0.000    0.000 __init__.py:387(usesTime)
       28    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
      100    0.000    0.000    0.000    0.000 callbacks.py:758(on_train_end)
        2    0.000    0.000    0.000    0.000 functional.py:845(<setcomp>)
       48    0.000    0.000    0.000    0.000 tensor_shape.py:700(__reduce__)
        2    0.000    0.000    0.000    0.000 _base.py:3405(yaxis_inverted)
        4    0.000    0.000    0.000    0.000 _base.py:129(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:513(set_constrained_layout)
       20    0.000    0.000    0.000    0.000 transforms.py:2249(get_matrix)
        2    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.update_path_extents}
       24    0.000    0.000    0.000    0.000 cycler.py:225(__iter__)
       10    0.000    0.000    0.000    0.000 _datasource.py:206(keys)
       44    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        6    0.000    0.000    0.000    0.000 __init__.py:1286(debug)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:1256(_filter_grads)
      192    0.000    0.000    0.000    0.000 backend_bases.py:162(close_group)
       12    0.000    0.000    0.000    0.000 patches.py:475(set_joinstyle)
       12    0.000    0.000    0.000    0.000 __init__.py:120(getLevelName)
        5    0.000    0.000    0.000    0.000 copyreg.py:96(_slotnames)
       56    0.000    0.000    0.000    0.000 backend_pdf.py:2239(linewidth_cmd)
       67    0.000    0.000    0.000    0.000 backend_pdf.py:229(__init__)
        2    0.000    0.000    0.000    0.000 training_utils.py:1912(get_input_shape_and_dtype)
       84    0.000    0.000    0.000    0.000 base_layer.py:1223(supports_masking)
       16    0.000    0.000    0.000    0.000 base_layer.py:2489(_set_mask_keras_history_checked)
       60    0.000    0.000    0.000    0.000 data_structures.py:903(<dictcomp>)
        4    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
       28    0.000    0.000    0.000    0.000 text.py:347(<listcomp>)
        4    0.000    0.000    0.000    0.000 transforms.py:2342(_iter_break_from_left_to_right)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(iscomplexobj)
       16    0.000    0.000    0.000    0.000 backend_pdf.py:2273(fillcolor_cmd)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:91(ret)
        9    0.000    0.000    0.000    0.000 tensor_util.py:596(<listcomp>)
        3    0.000    0.000    0.000    0.000 tape.py:45(push_new_tape)
       30    0.000    0.000    0.000    0.000 context.py:1980(shared_name)
        2    0.000    0.000    0.000    0.000 _base.py:2389(<listcomp>)
       60    0.000    0.000    0.000    0.000 axis.py:649(locator)
        2    0.000    0.000    0.000    0.000 gridspec.py:246(__init__)
        2    0.000    0.000    0.000    0.000 text.py:1042(set_fontsize)
       94    0.000    0.000    0.000    0.000 markers.py:313(_set_nothing)
        4    0.000    0.000    0.000    0.000 transforms.py:1632(_init)
      144    0.000    0.000    0.000    0.000 path.py:251(should_simplify)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:837(sort)
       88    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2366(copy_properties)
        8    0.000    0.000    0.000    0.000 base_layer.py:3219(<genexpr>)
       60    0.000    0.000    0.000    0.000 data_structures.py:747(<dictcomp>)
        4    0.000    0.000    0.000    0.000 _base.py:2414(<listcomp>)
       16    0.000    0.000    0.000    0.000 parse.py:109(_coerce_args)
       12    0.000    0.000    0.000    0.000 threading.py:1230(current_thread)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1357(writeGouraudTriangles)
      168    0.000    0.000    0.000    0.000 markers.py:246(get_fillstyle)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:539(<listcomp>)
       36    0.000    0.000    0.000    0.000 training.py:2632(_compile_was_called)
        1    0.000    0.000    0.000    0.000 losses.py:213(__init__)
        4    0.000    0.000    0.000    0.000 base_layer.py:418(build)
        6    0.000    0.000    0.000    0.000 distribution_strategy_context.py:50(__init__)
       15    0.000    0.000    0.000    0.000 ops.py:2527(_get_attr_int)
       48    0.000    0.000    0.000    0.000 backend_agg.py:256(points_to_pixels)
        4    0.000    0.000    0.000    0.000 _base.py:142(set_prop_cycle)
        2    0.000    0.000    0.000    0.000 figure.py:1070(_make_key)
        2    0.000    0.000    0.000    0.000 figure.py:104(bubble)
       58    0.000    0.000    0.000    0.000 text.py:832(get_position)
        4    0.000    0.000    0.000    0.000 transforms.py:914(intervaly)
        4    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 decorators.py:41(wrapper)
       24    0.000    0.000    0.000    0.000 weakref.py:389(__delitem__)
      192    0.000    0.000    0.000    0.000 backend_bases.py:155(open_group)
        2    0.000    0.000    0.000    0.000 gridspec.py:200(__getitem__)
        4    0.000    0.000    0.000    0.000 transforms.py:2127(__init__)
        4    0.000    0.000    0.000    0.000 artist.py:1017(set_label)
        2    0.000    0.000    0.000    0.000 rcsetup.py:163(validate_axisbelow)
      224    0.000    0.000    0.000    0.000 fromnumeric.py:3126(_around_dispatcher)
        4    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
      204    0.000    0.000    0.000    0.000 fractions.py:278(denominator)
       14    0.000    0.000    0.000    0.000 graph_view.py:145(__init__)
       16    0.000    0.000    0.000    0.000 axis.py:1442(get_minor_ticks)
      140    0.000    0.000    0.000    0.000 axis.py:342(<genexpr>)
        2    0.000    0.000    0.000    0.000 figure.py:1907(_set_artist_props)
       76    0.000    0.000    0.000    0.000 backend_bases.py:975(set_snap)
       16    0.000    0.000    0.000    0.000 ticker.py:1819(__call__)
        2    0.000    0.000    0.000    0.000 transforms.py:768(null)
       24    0.000    0.000    0.000    0.000 cycler.py:138(keys)
        2    0.000    0.000    0.000    0.000 _datasource.py:354(_splitzipext)
      156    0.000    0.000    0.000    0.000 {built-in method math.gcd}
       26    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2265(rgb_cmd)
        7    0.000    0.000    0.000    0.000 base_layer.py:2937(_call_accepts_kwargs)
       52    0.000    0.000    0.000    0.000 text.py:550(get_wrap)
        8    0.000    0.000    0.000    0.000 patches.py:742(get_path)
       48    0.000    0.000    0.000    0.000 markers.py:310(get_snap_threshold)
        4    0.000    0.000    0.000    0.000 __init__.py:601(push)
       24    0.000    0.000    0.000    0.000 __init__.py:705(filter)
        2    0.000    0.000    0.000    0.000 backend_mixed.py:15(__init__)
       50    0.000    0.000    0.000    0.000 callbacks.py:944(on_train_begin)
        1    0.000    0.000    0.000    0.000 losses.py:84(__init__)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:242(get_update_replica_id)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:325(require_replica_context)
        4    0.000    0.000    0.000    0.000 distribution_strategy_context.py:56(__init__)
        2    0.000    0.000    0.000    0.000 errors_impl.py:297(__init__)
        8    0.000    0.000    0.000    0.000 axis.py:1048(_set_artist_props)
        8    0.000    0.000    0.000    0.000 transforms.py:336(p1)
      130    0.000    0.000    0.000    0.000 {method 'get_descent' of 'matplotlib.ft2font.FT2Font' objects}
      118    0.000    0.000    0.000    0.000 stride_tricks.py:202(_broadcast_arrays_dispatcher)
       12    0.000    0.000    0.000    0.000 process.py:146(name)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:215(__iter__)
       32    0.000    0.000    0.000    0.000 cache.py:74(_get_key)
        3    0.000    0.000    0.000    0.000 backprop.py:822(__init__)
        8    0.000    0.000    0.000    0.000 indexed_slices.py:283(internal_convert_to_tensor_or_indexed_slices)
       76    0.000    0.000    0.000    0.000 backend_bases.py:967(set_url)
      102    0.000    0.000    0.000    0.000 backend_bases.py:1013(get_sketch_params)
       14    0.000    0.000    0.000    0.000 patches.py:302(set_antialiased)
      120    0.000    0.000    0.000    0.000 markers.py:269(get_marker)
      118    0.000    0.000    0.000    0.000 __init__.py:1598(<lambda>)
       10    0.000    0.000    0.000    0.000 policy.py:433(should_cast_variables)
        3    0.000    0.000    0.000    0.000 array_ops.py:852(_check_index)
       24    0.000    0.000    0.000    0.000 tensor_shape.py:1223(__reduce__)
       12    0.000    0.000    0.000    0.000 axis.py:1412(get_major_locator)
        4    0.000    0.000    0.000    0.000 figure.py:1704(<lambda>)
       52    0.000    0.000    0.000    0.000 text.py:230(_get_multialignment)
        4    0.000    0.000    0.000    0.000 {method 'get_sfnt_table' of 'matplotlib.ft2font.FT2Font' objects}
       12    0.000    0.000    0.000    0.000 threading.py:1076(name)
       70    0.000    0.000    0.000    0.000 {method 'write' of '_io.BytesIO' objects}
       24    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
       38    0.000    0.000    0.000    0.000 backend_pdf.py:299(__init__)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2288(pop)
      104    0.000    0.000    0.000    0.000 statistics.py:170(_coerce)
        1    0.000    0.000    0.000    0.000 metrics_utils.py:98(result_wrapper)
       60    0.000    0.000    0.000    0.000 save_impl.py:113(<listcomp>)
        1    0.000    0.000    0.000    0.000 base_layer_utils.py:315(is_in_eager_or_tf_function)
        1    0.000    0.000    0.000    0.000 generic_utils.py:283(class_and_config_for_serialized_keras_object)
        3    0.000    0.000    0.000    0.000 tape.py:41(watched_variables)
        2    0.000    0.000    0.000    0.000 figure.py:1089(fixlist)
        2    0.000    0.000    0.000    0.000 backend_inline.py:55(draw_if_interactive)
      128    0.000    0.000    0.000    0.000 backend_bases.py:778(restore)
        2    0.000    0.000    0.000    0.000 text.py:1059(set_fontweight)
       32    0.000    0.000    0.000    0.000 ticker.py:276(set_locs)
        2    0.000    0.000    0.000    0.000 posixpath.py:64(isabs)
        2    0.000    0.000    0.000    0.000 warnings.py:159(_add_filter)
       15    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrInt}
        4    0.000    0.000    0.000    0.000 loss_reduction.py:65(validate)
       16    0.000    0.000    0.000    0.000 api.py:119(__init__)
       12    0.000    0.000    0.000    0.000 distribution_strategy_context.py:327(_get_default_replica_context)
       26    0.000    0.000    0.000    0.000 resource_variable_ops.py:460(_assign_dependencies)
        2    0.000    0.000    0.000    0.000 figure.py:66(__init__)
      142    0.000    0.000    0.000    0.000 __init__.py:1765(<listcomp>)
        4    0.000    0.000    0.000    0.000 codecs.py:185(__init__)
       56    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1177(<listcomp>)
       10    0.000    0.000    0.000    0.000 node.py:123(parent_nodes)
        2    0.000    0.000    0.000    0.000 functional.py:289(_set_output_names)
       24    0.000    0.000    0.000    0.000 backend.py:166(backend)
       10    0.000    0.000    0.000    0.000 distribution_strategy_context.py:42(__init__)
       55    0.000    0.000    0.000    0.000 variables.py:63(_make_getter)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:916(num_elements)
       64    0.000    0.000    0.000    0.000 backend_bases.py:817(get_dashes)
       24    0.000    0.000    0.000    0.000 text.py:350(<listcomp>)
       52    0.000    0.000    0.000    0.000 artist.py:793(get_alpha)
      134    0.000    0.000    0.000    0.000 path.py:230(simplify_threshold)
       16    0.000    0.000    0.000    0.000 {built-in method math.copysign}
      152    0.000    0.000    0.000    0.000 fractions.py:274(numerator)
       60    0.000    0.000    0.000    0.000 save_impl.py:117(<dictcomp>)
       36    0.000    0.000    0.000    0.000 functional.py:255(output)
        6    0.000    0.000    0.000    0.000 tape.py:145(pop_tape)
        2    0.000    0.000    0.000    0.000 backend_agg.py:108(_update_methods)
        6    0.000    0.000    0.000    0.000 _base.py:3241(get_xscale)
       68    0.000    0.000    0.000    0.000 axis.py:153(<dictcomp>)
       64    0.000    0.000    0.000    0.000 backend_bases.py:807(get_clip_path)
       28    0.000    0.000    0.000    0.000 backend_bases.py:912(set_dashes)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1265(__init__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2240(mpl_disconnect)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       13    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       12    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       72    0.000    0.000    0.000    0.000 distribute_lib.py:2970(_local_results)
        3    0.000    0.000    0.000    0.000 distribution_strategy_context.py:154(in_cross_replica_context)
       40    0.000    0.000    0.000    0.000 layer_utils.py:273(<listcomp>)
       30    0.000    0.000    0.000    0.000 resource_variable_ops.py:2042(op)
       16    0.000    0.000    0.000    0.000 tf_stack.py:95(reset)
        4    0.000    0.000    0.000    0.000 axis.py:2160(get_minpos)
        8    0.000    0.000    0.000    0.000 backend_bases.py:757(copy_properties)
        8    0.000    0.000    0.000    0.000 mathtext.py:3316(__init__)
       12    0.000    0.000    0.000    0.000 patches.py:491(set_hatch)
       12    0.000    0.000    0.000    0.000 text.py:528(_update_clip_properties)
       10    0.000    0.000    0.000    0.000 transforms.py:2377(transform_path_non_affine)
       76    0.000    0.000    0.000    0.000 artist.py:633(get_sketch_params)
        2    0.000    0.000    0.000    0.000 __init__.py:1294(get_backend)
        2    0.000    0.000    0.000    0.000 rcsetup.py:123(validate_bool)
       16    0.000    0.000    0.000    0.000 inspect.py:229(istraceback)
        2    0.000    0.000    0.000    0.000 __init__.py:517(__init__)
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetNew}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:512(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:2377(finalize)
        7    0.000    0.000    0.000    0.000 policy.py:517(policy_defaults_to_floatx)
        2    0.000    0.000    0.000    0.000 tf_utils.py:420(assert_no_legacy_layers)
       24    0.000    0.000    0.000    0.000 metric_serialization.py:28(object_identifier)
       16    0.000    0.000    0.000    0.000 conversion.py:251(_create_custom_vars)
        4    0.000    0.000    0.000    0.000 init_ops.py:1401(_compute_fans)
       24    0.000    0.000    0.000    0.000 array_ops.py:1407(<genexpr>)
        2    0.000    0.000    0.000    0.000 _base.py:2602(<listcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:155(__contains__)
       64    0.000    0.000    0.000    0.000 backend_bases.py:857(get_snap)
       64    0.000    0.000    0.000    0.000 backend_bases.py:1001(get_hatch_color)
       48    0.000    0.000    0.000    0.000 markers.py:263(get_joinstyle)
       48    0.000    0.000    0.000    0.000 markers.py:304(get_alt_path)
        2    0.000    0.000    0.000    0.000 transforms.py:2606(__init__)
        2    0.000    0.000    0.000    0.000 npyio.py:1339(WriteWrap)
        8    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
       38    0.000    0.000    0.000    0.000 backend_pdf.py:323(_paint_path)
       24    0.000    0.000    0.000    0.000 network_serialization.py:28(object_identifier)
       12    0.000    0.000    0.000    0.000 saving_utils.py:142(<dictcomp>)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:573(constraint)
       26    0.000    0.000    0.000    0.000 backend_agg.py:239(get_canvas_width_height)
       14    0.000    0.000    0.000    0.000 _base.py:2470(_get_axis_list)
       16    0.000    0.000    0.000    0.000 _base.py:2548(<genexpr>)
        8    0.000    0.000    0.000    0.000 figure.py:1703(<genexpr>)
        2    0.000    0.000    0.000    0.000 figure.py:544(set_constrained_layout_pads)
       64    0.000    0.000    0.000    0.000 backend_bases.py:845(get_rgb)
       52    0.000    0.000    0.000    0.000 text.py:255(get_rotation_mode)
       32    0.000    0.000    0.000    0.000 ticker.py:532(set_useOffset)
      8/4    0.000    0.000    0.000    0.000 transforms.py:2348(<lambda>)
        2    0.000    0.000    0.000    0.000 gridspec.py:31(__init__)
       40    0.000    0.000    0.000    0.000 cycler.py:371(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:170(disconnect)
        2    0.000    0.000    0.000    0.000 __init__.py:631(bubble)
        2    0.000    0.000    0.000    0.000 type_check.py:280(iscomplexobj)
        2    0.000    0.000    0.000    0.000 contextlib.py:338(__exit__)
       24    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
       12    0.000    0.000    0.000    0.000 tmpamx0glat.py:7(inner_factory)
       24    0.000    0.000    0.000    0.000 save.py:187(<dictcomp>)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:379(_clip_gradients)
       12    0.000    0.000    0.000    0.000 tpu.py:209(<lambda>)
        2    0.000    0.000    0.000    0.000 init_ops.py:105(__init__)
        4    0.000    0.000    0.000    0.000 array_ops.py:778(<genexpr>)
       32    0.000    0.000    0.000    0.000 scale.py:43(__init__)
        4    0.000    0.000    0.000    0.000 figure.py:78(get)
        9    0.000    0.000    0.000    0.000 _pylab_helpers.py:99(get_active)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:109(set_active)
       52    0.000    0.000    0.000    0.000 text.py:739(get_color)
       48    0.000    0.000    0.000    0.000 lines.py:896(get_drawstyle)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2017(_clip_dispatcher)
       36    0.000    0.000    0.000    0.000 fromnumeric.py:2838(_prod_dispatcher)
       34    0.000    0.000    0.000    0.000 shape_base.py:21(_atleast_1d_dispatcher)
       16    0.000    0.000    0.000    0.000 inspect.py:253(iscode)
        2    0.000    0.000    0.000    0.000 warnings.py:449(__enter__)
       26    0.000    0.000    0.000    0.000 {built-in method math.cos}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeWatchedVariables}
        2    0.000    0.000    0.000    0.000 compile_utils.py:416(_get_metric_objects)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:500(<genexpr>)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:656(_set_hyper)
        2    0.000    0.000    0.000    0.000 tf_utils.py:434(<listcomp>)
       10    0.000    0.000    0.000    0.000 generic_utils.py:772(validate_kwargs)
        8    0.000    0.000    0.000    0.000 base_layer.py:1000(<genexpr>)
        4    0.000    0.000    0.000    0.000 backend.py:360(global_learning_phase_is_set)
       48    0.000    0.000    0.000    0.000 transpiler.py:203(<genexpr>)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:1397(num_replicas_in_sync)
       12    0.000    0.000    0.000    0.000 math_ops.py:3500(<genexpr>)
        3    0.000    0.000    0.000    0.000 tape.py:51(push_tape)
       16    0.000    0.000    0.000    0.000 tf_stack.py:83(reset)
        4    0.000    0.000    0.000    0.000 axis.py:2460(get_minpos)
       24    0.000    0.000    0.000    0.000 spines.py:217(get_path)
        2    0.000    0.000    0.000    0.000 figure.py:487(set_tight_layout)
       74    0.000    0.000    0.000    0.000 backend_bases.py:990(get_hatch)
       60    0.000    0.000    0.000    0.000 ticker.py:295(_set_locator)
       48    0.000    0.000    0.000    0.000 lines.py:602(get_markevery)
       26    0.000    0.000    0.000    0.000 {method 'get_bitmap_offset' of 'matplotlib.ft2font.FT2Font' objects}
        4    0.000    0.000    0.000    0.000 core.py:677(getdata)
       72    0.000    0.000    0.000    0.000 fromnumeric.py:2320(_all_dispatcher)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2473(_ptp_dispatcher)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
       12    0.000    0.000    0.000    0.000 process.py:35(current_process)
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
       26    0.000    0.000    0.000    0.000 {built-in method math.sin}
        4    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:32(option_image_nocomposite)
        4    0.000    0.000    0.000    0.000 data_adapter.py:1412(unpack_x_y_sample_weight)
        2    0.000    0.000    0.000    0.000 training_utils.py:1926(_is_graph_model)
        3    0.000    0.000    0.000    0.000 losses.py:185(_get_reduction)
       24    0.000    0.000    0.000    0.000 layer_serialization.py:128(object_identifier)
       52    0.000    0.000    0.000    0.000 node.py:118(keras_inputs)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:997(_assert_float_dtype)
        8    0.000    0.000    0.000    0.000 functional.py:776(<setcomp>)
       18    0.000    0.000    0.000    0.000 constraints.py:299(get)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:61(all)
       28    0.000    0.000    0.000    0.000 axis.py:383(<dictcomp>)
       12    0.000    0.000    0.000    0.000 axis.py:822(get_scale)
        4    0.000    0.000    0.000    0.000 _base.py:232(<genexpr>)
        8    0.000    0.000    0.000    0.000 figure.py:140(current_key_axes)
       64    0.000    0.000    0.000    0.000 backend_bases.py:1009(get_hatch_linewidth)
        2    0.000    0.000    0.000    0.000 gridspec.py:508(__init__)
       32    0.000    0.000    0.000    0.000 ticker.py:556(set_useMathText)
       35    0.000    0.000    0.000    0.000 {method 'get_glyph_name' of 'matplotlib.ft2font.FT2Font' objects}
       35    0.000    0.000    0.000    0.000 {method 'get_char_index' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 pyplot.py:619(get_fignums)
        2    0.000    0.000    0.000    0.000 __init__.py:573(__init__)
       16    0.000    0.000    0.000    0.000 inspect.py:239(isframe)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:271(__hash__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:921(<listcomp>)
        1    0.000    0.000    0.000    0.000 Experiment.py:134(__init__)
       16    0.000    0.000    0.000    0.000 compile_utils.py:596(map_missing_dict_keys)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:212(__getitem__)
        5    0.000    0.000    0.000    0.000 node.py:116(<listcomp>)
       26    0.000    0.000    0.000    0.000 regularizers.py:360(get)
       16    0.000    0.000    0.000    0.000 base_layer_utils.py:303(<genexpr>)
        8    0.000    0.000    0.000    0.000 base_layer.py:2629(<genexpr>)
        2    0.000    0.000    0.000    0.000 functional.py:149(<lambda>)
       12    0.000    0.000    0.000    0.000 function.py:1969(inputs)
        8    0.000    0.000    0.000    0.000 axis.py:645(__init__)
       48    0.000    0.000    0.000    0.000 markers.py:298(get_path)
        8    0.000    0.000    0.000    0.000 transforms.py:296(y0)
        2    0.000    0.000    0.000    0.000 transforms.py:394(width)
       13    0.000    0.000    0.000    0.000 __init__.py:60(__hash__)
        6    0.000    0.000    0.000    0.000 __init__.py:626(clear)
        4    0.000    0.000    0.000    0.000 re.py:231(compile)
       26    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       35    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.BytesIO' objects}
       26    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:24(flipy)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2233(capstyle_cmd)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2236(joinstyle_cmd)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:635(<genexpr>)
        8    0.000    0.000    0.000    0.000 input_spec.py:75(<dictcomp>)
        4    0.000    0.000    0.000    0.000 dataset_ops.py:4595(<listcomp>)
       12    0.000    0.000    0.000    0.000 math_ops.py:1800(<genexpr>)
        8    0.000    0.000    0.000    0.000 axis.py:1559(have_units)
        6    0.000    0.000    0.000    0.000 _base.py:3635(get_yscale)
       28    0.000    0.000    0.000    0.000 axis.py:372(<dictcomp>)
       16    0.000    0.000    0.000    0.000 axis.py:788(get_remove_overlapping_locs)
        4    0.000    0.000    0.000    0.000 figure.py:152(__call__)
       48    0.000    0.000    0.000    0.000 backend_bases.py:660(points_to_pixels)
       48    0.000    0.000    0.000    0.000 markers.py:266(get_capstyle)
        6    0.000    0.000    0.000    0.000 transforms.py:931(minposx)
       28    0.000    0.000    0.000    0.000 transforms.py:2053(get_matrix)
        4    0.000    0.000    0.000    0.000 __init__.py:827(__init__)
       32    0.000    0.000    0.000    0.000 function_base.py:1137(_diff_dispatcher)
       50    0.000    0.000    0.000    0.000 nanfunctions.py:226(_nanmin_dispatcher)
        1    0.000    0.000    0.000    0.000 enum.py:312(__getattr__)
        2    0.000    0.000    0.000    0.000 warnings.py:428(__init__)
       24    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       52    0.000    0.000    0.000    0.000 {built-in method math.radians}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetAdd}
        6    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRemove}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2242(dash_cmd)
        2    0.000    0.000    0.000    0.000 training.py:2475(<genexpr>)
        4    0.000    0.000    0.000    0.000 compile_utils.py:98(<lambda>)
        1    0.000    0.000    0.000    0.000 compile_utils.py:280(__init__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:370(_create_ordered_metrics)
        4    0.000    0.000    0.000    0.000 training.py:152(is_functional_model_init_params)
       12    0.000    0.000    0.000    0.000 save_options.py:98(_validate_namespace_whitelist)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:206(_add_signature)
        5    0.000    0.000    0.000    0.000 node.py:115(<listcomp>)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:1020(__init__)
       12    0.000    0.000    0.000    0.000 functional.py:355(_should_compute_mask)
        8    0.000    0.000    0.000    0.000 distribute_lib.py:2901(variable_created_in_scope)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:664(<lambda>)
       15    0.000    0.000    0.000    0.000 tensor_shape.py:849(__bool__)
        7    0.000    0.000    0.000    0.000 ops.py:6423(<genexpr>)
       12    0.000    0.000    0.000    0.000 _base.py:535(get_window_extent)
        2    0.000    0.000    0.000    0.000 __init__.py:44(get_projection_class)
        2    0.000    0.000    0.000    0.000 figure.py:932(get_facecolor)
        2    0.000    0.000    0.000    0.000 figure.py:944(get_dpi)
        2    0.000    0.000    0.000    0.000 backend_bases.py:117(get_registered_canvas_class)
       26    0.000    0.000    0.000    0.000 backend_bases.py:637(flipy)
        2    0.000    0.000    0.000    0.000 gridspec.py:382(<dictcomp>)
        4    0.000    0.000    0.000    0.000 artist.py:1033(get_zorder)
        8    0.000    0.000    0.000    0.000 path.py:630(unit_rectangle)
        6    0.000    0.000    0.000    0.000 __init__.py:51(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:1997(__init__)
        4    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
       50    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
        2    0.000    0.000    0.000    0.000 os.py:794(fsencode)
        5    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        8    0.000    0.000    0.000    0.000 {built-in method sys.is_finalizing}
       38    0.000    0.000    0.000    0.000 backend_pdf.py:302(pdfRepr)
        1    0.000    0.000    0.000    0.000 training.py:2629(_get_distribution_strategy)
        2    0.000    0.000    0.000    0.000 compile_utils.py:419(<listcomp>)
        3    0.000    0.000    0.000    0.000 compile_utils.py:626(get_mask)
        2    0.000    0.000    0.000    0.000 functional.py:938(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:107(_set_name_scope)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1045(_init_set_name)
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:483(frozen)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:165(<genexpr>)
       20    0.000    0.000    0.000    0.000 base_layer.py:2821(<genexpr>)
        3    0.000    0.000    0.000    0.000 collective_util.py:50(__init__)
        1    0.000    0.000    0.000    0.000 data_structures.py:66(_should_wrap_tuple)
       24    0.000    0.000    0.000    0.000 axis.py:1579(set_units)
        8    0.000    0.000    0.000    0.000 _base.py:2432(tol)
        2    0.000    0.000    0.000    0.000 figure.py:96(_entry_from_axes)
       12    0.000    0.000    0.000    0.000 figure.py:74(<listcomp>)
        4    0.000    0.000    0.000    0.000 transforms.py:1271(_iter_break_from_left_to_right)
        4    0.000    0.000    0.000    0.000 __init__.py:1312(is_interactive)
        2    0.000    0.000    0.000    0.000 _datasource.py:332(__del__)
        2    0.000    0.000    0.000    0.000 py3k.py:50(asstr)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1800(_nonzero_dispatcher)
       16    0.000    0.000    0.000    0.000 parse.py:98(_noop)
        6    0.000    0.000    0.000    0.000 posixpath.py:135(splitdrive)
        5    0.000    0.000    0.000    0.000 weakref.py:73(__eq__)
        2    0.000    0.000    0.000    0.000 warnings.py:468(__exit__)
        4    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
        3    0.000    0.000    0.000    0.000 tmphwkujs8b.py:7(inner_factory)
        1    0.000    0.000    0.000    0.000 compile_utils.py:334(_set_metric_names)
       16    0.000    0.000    0.000    0.000 layer_utils.py:107(<listcomp>)
       12    0.000    0.000    0.000    0.000 layer_serialization.py:147(functions_to_serialize)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:1246(_distribution_strategy_scope)
        4    0.000    0.000    0.000    0.000 tf_utils.py:194(<lambda>)
        4    0.000    0.000    0.000    0.000 base_layer.py:2442(_handle_activity_regularization)
        4    0.000    0.000    0.000    0.000 functional.py:141(<genexpr>)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2947(_reduce_to)
        3    0.000    0.000    0.000    0.000 backprop.py:875(__del__)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:881(value_type)
        3    0.000    0.000    0.000    0.000 math_ops.py:1801(<listcomp>)
       16    0.000    0.000    0.000    0.000 axis.py:1364(<listcomp>)
       12    0.000    0.000    0.000    0.000 axis.py:1865(get_label_position)
       12    0.000    0.000    0.000    0.000 scale.py:79(limit_range_for_scale)
        2    0.000    0.000    0.000    0.000 _base.py:886(set_axes_locator)
        8    0.000    0.000    0.000    0.000 _base.py:897(get_axes_locator)
        2    0.000    0.000    0.000    0.000 _base.py:604(_request_autoscale_view)
        2    0.000    0.000    0.000    0.000 figure.py:2059(add_axobserver)
        2    0.000    0.000    0.000    0.000 figure.py:928(get_edgecolor)
        6    0.000    0.000    0.000    0.000 widgets.py:34(__init__)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1236(__init__)
       16    0.000    0.000    0.000    0.000 ticker.py:1822(tick_values)
        4    0.000    0.000    0.000    0.000 lines.py:1447(is_dashed)
        6    0.000    0.000    0.000    0.000 transforms.py:935(minposy)
        4    0.000    0.000    0.000    0.000 transforms.py:286(x0)
        2    0.000    0.000    0.000    0.000 __init__.py:2148(_check_getitem)
       13    0.000    0.000    0.000    0.000 pickle.py:195(end_framing)
        2    0.000    0.000    0.000    0.000 contextlib.py:271(__init__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1493(writeImages)
        1    0.000    0.000    0.000    0.000 tmpzo79h315.py:7(inner_factory)
        2    0.000    0.000    0.000    0.000 compile_utils.py:37(__init__)
        1    0.000    0.000    0.000    0.000 layer_utils.py:168(<listcomp>)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:514(<listcomp>)
        4    0.000    0.000    0.000    0.000 functional.py:768(<genexpr>)
        1    0.000    0.000    0.000    0.000 generic_utils.py:199(get_registered_object)
        2    0.000    0.000    0.000    0.000 functional.py:626(<setcomp>)
        3    0.000    0.000    0.000    0.000 tape.py:38(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:3884(set_navigate)
       28    0.000    0.000    0.000    0.000 axis.py:361(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2582(notify_axes_change)
       12    0.000    0.000    0.000    0.000 _datasource.py:173(_load)
        2    0.000    0.000    0.000    0.000 _datasource.py:225(__getitem__)
        2    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
        2    0.000    0.000    0.000    0.000 __init__.py:586(update)
        8    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
        6    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:268(__lt__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:508(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1273(_write_soft_mask_groups)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1533(writeMarkers)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1629(is_string_like)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1632(is_date)
        2    0.000    0.000    0.000    0.000 compile_utils.py:40(build)
        4    0.000    0.000    0.000    0.000 compile_utils.py:93(_broadcast_fn)
        1    0.000    0.000    0.000    0.000 compile_utils.py:151(_create_metrics)
        2    0.000    0.000    0.000    0.000 compile_utils.py:270(_should_broadcast)
        6    0.000    0.000    0.000    0.000 compile_utils.py:398(<genexpr>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:480(_should_broadcast)
        5    0.000    0.000    0.000    0.000 base_layer.py:2825(<genexpr>)
        4    0.000    0.000    0.000    0.000 distribute_lib.py:2745(strategy)
        3    0.000    0.000    0.000    0.000 def_function.py:80(get_tracing_count)
        8    0.000    0.000    0.000    0.000 _base.py:1202(get_aspect)
        2    0.000    0.000    0.000    0.000 _base.py:2133(use_sticky_edges)
        4    0.000    0.000    0.000    0.000 _base.py:2405(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:2971(set_axis_on)
        2    0.000    0.000    0.000    0.000 _base.py:3900(set_navigate_mode)
        2    0.000    0.000    0.000    0.000 _base.py:242(_setdefaults)
        2    0.000    0.000    0.000    0.000 __init__.py:19(get_projection_class)
        2    0.000    0.000    0.000    0.000 _subplots.py:117(get_subplotspec)
        8    0.000    0.000    0.000    0.000 figure.py:505(get_constrained_layout)
        2    0.000    0.000    0.000    0.000 figure.py:97(<dictcomp>)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1679(_idle_draw_cntx)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1687(is_saving)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1929(draw)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:29(get_fig_manager)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:115(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:93(set_width_ratios)
        2    0.000    0.000    0.000    0.000 gridspec.py:204(_normalize)
        6    0.000    0.000    0.000    0.000 gridspec.py:67(get_geometry)
        8    0.000    0.000    0.000    0.000 artist.py:1201(mouseover)
        2    0.000    0.000    0.000    0.000 transforms.py:400(height)
        2    0.000    0.000    0.000    0.000 type_check.py:207(_is_type_dispatcher)
        6    0.000    0.000    0.000    0.000 multiarray.py:635(result_type)
        2    0.000    0.000    0.000    0.000 parse.py:394(_checknetloc)
        2    0.000    0.000    0.000    0.000 contextlib.py:17(__enter__)
        1    0.000    0.000    0.000    0.000 enum.py:28(_is_dunder)
        2    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        1    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:521(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:529(<genexpr>)
        4    0.000    0.000    0.000    0.000 fractions.py:504(__trunc__)
        3    0.000    0.000    0.000    0.000 compile_utils.py:631(apply_mask)
        2    0.000    0.000    0.000    0.000 distributed_training_utils.py:439(is_tpu_strategy)
       10    0.000    0.000    0.000    0.000 functional.py:905(<lambda>)
        1    0.000    0.000    0.000    0.000 policy.py:444(loss_scale)
        5    0.000    0.000    0.000    0.000 node.py:74(<lambda>)
        1    0.000    0.000    0.000    0.000 function.py:3127(<listcomp>)
       12    0.000    0.000    0.000    0.000 file_io.py:193(__enter__)
        4    0.000    0.000    0.000    0.000 backend_agg.py:272(option_image_nocomposite)
        8    0.000    0.000    0.000    0.000 axis.py:1486(<dictcomp>)
        4    0.000    0.000    0.000    0.000 _base.py:321(<genexpr>)
        2    0.000    0.000    0.000    0.000 figure.py:1073(fixitems)
        4    0.000    0.000    0.000    0.000 figure.py:483(get_tight_layout)
       12    0.000    0.000    0.000    0.000 figure.py:76(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:532(num2)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:78(has_fignum)
        2    0.000    0.000    0.000    0.000 gridspec.py:113(set_height_ratios)
        2    0.000    0.000    0.000    0.000 patches.py:286(get_edgecolor)
        2    0.000    0.000    0.000    0.000 patches.py:290(get_facecolor)
        4    0.000    0.000    0.000    0.000 transforms.py:2085(inverted)
        2    0.000    0.000    0.000    0.000 artist.py:961(set_in_layout)
        2    0.000    0.000    0.000    0.000 artist.py:1013(get_label)
        2    0.000    0.000    0.000    0.000 npyio.py:1205(_savetxt_dispatcher)
        2    0.000    0.000    0.000    0.000 _iotools.py:46(_is_string_like)
        2    0.000    0.000    0.000    0.000 multiarray.py:990(unravel_index)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
       10    0.000    0.000    0.000    0.000 __init__.py:537(__missing__)
        2    0.000    0.000    0.000    0.000 {method 'utcoffset' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:525(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:601(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1556(writePathCollectionTemplates)
        6    0.000    0.000    0.000    0.000 compile_utils.py:399(<genexpr>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:421(_get_metric_object)
        4    0.000    0.000    0.000    0.000 node.py:72(<lambda>)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2976(_num_replicas_in_sync)
        3    0.000    0.000    0.000    0.000 tensor_util.py:499(<listcomp>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2597(destroy)
        4    0.000    0.000    0.000    0.000 backend_bases.py:895(set_clip_rectangle)
        2    0.000    0.000    0.000    0.000 gridspec.py:528(num2)
        2    0.000    0.000    0.000    0.000 gridspec.py:549(get_gridspec)
       12    0.000    0.000    0.000    0.000 transforms.py:1284(depth)
        8    0.000    0.000    0.000    0.000 artist.py:350(is_transform_set)
        2    0.000    0.000    0.000    0.000 artist.py:827(get_clip_path)
        4    0.000    0.000    0.000    0.000 __init__.py:828(<dictcomp>)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2401(_cumsum_dispatcher)
        6    0.000    0.000    0.000    0.000 numeric.py:2163(_isclose_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:833(_sort_dispatcher)


