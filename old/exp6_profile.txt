         1949307078 function calls (1910843969 primitive calls) in 6151.562 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001 6161.381 6161.381 Experiment.py:187(run)
    90967    4.191    0.000 4622.384    0.051 training.py:126(_method_wrapper)
    90967   10.808    0.000 4538.137    0.050 training.py:1486(predict)
       50    0.004    0.000 3738.426   74.769 Experiment.py:180(train)
       50    2.116    0.042 3738.422   74.768 Experiment.py:113(train)
    91017    3.387    0.000 2683.106    0.029 data_adapter.py:1073(__init__)
    91017    3.858    0.000 2648.901    0.029 data_adapter.py:254(__init__)
       50    0.003    0.000 2397.963   47.959 function_base.py:2063(__call__)
       50    1.256    0.025 2397.960   47.959 function_base.py:2154(_vectorize_call)
    46745    3.230    0.000 2396.698    0.051 Experiment.py:101(Q)
       51    1.654    0.032 2366.292   46.398 Experiment.py:167(play_episode)
    47043    2.131    0.000 2342.478    0.050 Experiment.py:82(move)
   273051   10.891    0.000 2286.804    0.008 dataset_ops.py:3186(__init__)
506581/505833    8.962    0.000 2247.829    0.004 function.py:3147(_maybe_define_function)
277836/277660    5.372    0.000 2208.719    0.008 function.py:2870(_get_concrete_function_garbage_collected)
   273051    1.119    0.000 2207.704    0.008 function.py:2931(get_concrete_function)
273385/273275    6.095    0.000 2164.831    0.008 function.py:3047(_create_graph_function)
228612/228524    6.205    0.000 2132.814    0.009 def_function.py:757(__call__)
228612/228524    2.220    0.000 2115.600    0.009 def_function.py:798(_call)
228589/228501    1.692    0.000 2111.485    0.009 function.py:2825(__call__)
   228612    2.033    0.000 2054.690    0.009 function.py:1827(_filtered_call)
   228634    4.977    0.000 2047.212    0.009 function.py:1850(_call_flat)
   228634   11.166    0.000 2023.857    0.009 function.py:509(call)
   228304    2.343    0.000 2010.210    0.009 execute.py:33(quick_execute)
   228304 2007.008    0.009 2007.008    0.009 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
273385/273275   18.635    0.000 1991.070    0.007 func_graph.py:801(func_graph_from_py_func)
       50    0.001    0.000 1314.279   26.286 training.py:106(_method_wrapper)
       50    2.002    0.040 1314.277   26.286 training.py:824(fit)
   182034    0.832    0.000 1275.718    0.007 dataset_ops.py:1557(map)
    91017    0.321    0.000 1201.853    0.013 dataset_ops.py:1704(flat_map)
    91017    3.707    0.000 1201.531    0.013 dataset_ops.py:4119(__init__)
  1552450 1106.330    0.001 1111.925    0.001 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
   273051    1.859    0.000 1061.436    0.004 dataset_ops.py:3358(wrapper_fn)
   273051    3.727    0.000 1047.980    0.004 dataset_ops.py:3292(_wrapper_helper)
273094/273055    2.637    0.000 1010.234    0.004 api.py:247(wrapper)
273138/273066    5.165    0.000 1004.987    0.004 api.py:417(converted_call)
273120/273077    1.225    0.000  940.948    0.003 api.py:330(_call_unconverted)
   183985    1.933    0.000  885.091    0.005 data_adapter.py:1135(enumerate_epochs)
  3573687    1.386    0.000  883.461    0.000 {built-in method builtins.iter}
    91017    0.625    0.000  882.075    0.010 dataset_ops.py:403(__iter__)
    91026    1.253    0.000  881.310    0.010 iterator_ops.py:648(__init__)
    91017    3.499    0.000  877.443    0.010 iterator_ops.py:700(_create_iterator)
1201579/914829    2.235    0.000  841.145    0.001 dispatch.py:198(wrapper)
1004567/1004268   78.911    0.000  838.605    0.001 op_def_library.py:299(_apply_op_helper)
    91017    0.751    0.000  824.473    0.009 gen_dataset_ops.py:2987(make_iterator)
    91017    1.526    0.000  682.275    0.007 data_adapter.py:373(slice_inputs)
2190200/2189683   20.261    0.000  669.639    0.000 func_graph.py:528(_create_op_internal)
    91017    3.670    0.000  664.960    0.007 dataset_ops.py:4031(__init__)
  2190783   26.341    0.000  642.564    0.000 ops.py:3418(_create_op_internal)
    91017    1.981    0.000  611.591    0.007 data_adapter.py:330(slice_batch_indices)
    91017    3.734    0.000  609.926    0.007 dataset_ops.py:4069(__init__)
  2190783   51.594    0.000  435.104    0.000 ops.py:1839(__init__)
4401223/4400669   14.065    0.000  417.738    0.000 ops.py:1448(convert_to_tensor)
  1652336    2.990    0.000  375.976    0.000 constant_op.py:166(constant)
  1652336   16.100    0.000  372.986    0.000 constant_op.py:267(_constant_impl)
   273385   18.406    0.000  370.918    0.001 auto_control_deps.py:301(__exit__)
1465258/1453708    8.746    0.000  327.642    0.000 nest.py:573(map_structure)
  2192017   11.997    0.000  319.280    0.000 auto_control_deps.py:519(_get_resource_inputs)
   182033    0.578    0.000  293.447    0.002 array_ops.py:1028(slice)
   182033    1.737    0.000  292.869    0.002 gen_array_ops.py:9212(_slice)
1465258/1453708    2.122    0.000  289.741    0.000 nest.py:635(<listcomp>)
  2190172   12.437    0.000  269.437    0.000 auto_control_deps_utils.py:89(get_read_write_resource_inputs)
   546770   12.534    0.000  205.429    0.000 func_graph.py:1148(_get_defun_inputs)
   455174    0.441    0.000  201.985    0.000 constant_op.py:335(_constant_tensor_conversion_function)
   273385    0.579    0.000  200.085    0.001 func_graph.py:1136(_get_defun_inputs_from_args)
  2924275   17.173    0.000  198.344    0.000 ops.py:2471(get_attr)
  2190783   31.175    0.000  193.179    0.000 ops.py:1764(_create_c_op)
    91017    0.532    0.000  188.849    0.002 data_adapter.py:315(permutation)
    91020    1.658    0.000  188.043    0.002 math_ops.py:1731(range)
  1105974    1.571    0.000  173.848    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
   273385    6.238    0.000  165.907    0.001 function.py:1460(__init__)
   366467    8.497    0.000  159.934    0.000 graph_only_ops.py:29(graph_placeholder)
  2924275  135.782    0.000  144.925    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
23649276/15013704   13.825    0.000  141.202    0.000 {built-in method builtins.next}
    91017    0.301    0.000  134.965    0.001 data_adapter.py:393(grab_batch)
   273435    1.597    0.000  133.321    0.000 func_graph.py:930(convert)
    91067    0.457    0.000  133.087    0.001 data_adapter.py:394(<lambda>)
    91067    1.247    0.000  132.361    0.001 array_ops.py:4589(gather)
   273385    2.318    0.000  130.973    0.000 function.py:597(__init__)
    91067    1.925    0.000  130.407    0.001 gen_array_ops.py:3790(gather_v2)
   273435    1.955    0.000  128.773    0.000 auto_control_deps.py:182(mark_as_return)
   273385   17.062    0.000  127.126    0.000 function.py:412(__init__)
   374952    2.278    0.000  126.876    0.000 array_ops.py:244(identity)
   374952    2.052    0.000  121.211    0.000 gen_array_ops.py:3973(identity)
12737289/8421712    5.780    0.000  106.775    0.000 contextlib.py:79(__enter__)
   182033    0.458    0.000  101.266    0.001 dataset_ops.py:569(from_tensors)
   182033    2.188    0.000  100.808    0.001 dataset_ops.py:2980(__init__)
   819397   25.718    0.000   95.652    0.000 tensor_util.py:360(make_tensor_proto)
  2555032   17.011    0.000   86.452    0.000 func_graph.py:365(inner_cm)
    91034    0.358    0.000   86.026    0.001 array_ops.py:59(reshape)
  1274236   15.055    0.000   85.681    0.000 dataset_ops.py:186(__init__)
    91034    0.714    0.000   83.078    0.001 gen_array_ops.py:8143(reshape)
    91017    0.379    0.000   81.340    0.001 dataset_ops.py:606(from_tensor_slices)
    91017    2.079    0.000   80.961    0.001 dataset_ops.py:2999(__init__)
    91017    1.588    0.000   77.207    0.001 iterator_ops.py:531(__del__)
    91016    0.384    0.000   75.496    0.001 dataset_ops.py:1002(concatenate)
    91016    1.820    0.000   75.112    0.001 dataset_ops.py:3504(__init__)
163679050/163677357   41.707    0.000   70.345    0.000 {built-in method builtins.isinstance}
    91017    0.344    0.000   69.061    0.001 gen_dataset_ops.py:1262(delete_iterator)
    91020    0.950    0.000   67.543    0.001 gen_math_ops.py:7268(_range)
  1277516    5.695    0.000   61.556    0.000 func_graph.py:362(as_default)
12737289/8426038   19.300    0.000   60.656    0.000 contextlib.py:85(__exit__)
   182033    1.326    0.000   59.435    0.000 gen_dataset_ops.py:6595(tensor_dataset)
  3506921    2.775    0.000   56.834    0.000 nest.py:536(pack_sequence_as)
  2190783   56.712    0.000   56.712    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
  2190783   17.170    0.000   56.651    0.000 ops.py:3521(_create_op_helper)
13708637/13521250   35.781    0.000   56.341    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
  3597942    9.186    0.000   55.634    0.000 nest.py:496(_pack_sequence_as)
  2190783   33.484    0.000   55.297    0.000 ops.py:1737(_NodeDef)
       11    0.038    0.003   55.094    5.009 Experiment.py:220(save_status)
   728136    1.430    0.000   55.005    0.000 dataset_ops.py:2956(__init__)
   273553    8.368    0.000   54.807    0.000 func_graph.py:165(__init__)
    91017    0.399    0.000   54.327    0.001 gen_dataset_ops.py:2003(flat_map_dataset)
  2738826    4.782    0.000   54.135    0.000 tf_stack.py:131(extract_stack)
    91016    1.103    0.000   53.865    0.001 gen_dataset_ops.py:853(concatenate_dataset)
    91017    1.104    0.000   53.341    0.001 gen_dataset_ops.py:6664(tensor_slice_dataset)
   273363    2.359    0.000   48.559    0.000 function.py:3632(decorated)
       12    0.106    0.009   48.502    4.042 _dill.py:253(dump)
       12    0.000    0.000   48.395    4.033 _dill.py:414(dump)
       12    0.000    0.000   48.395    4.033 pickle.py:398(dump)
9713624/12   15.513    0.000   48.394    4.033 pickle.py:457(save)
 84337/34    0.120    0.000   48.391    1.423 pickle.py:774(save_list)
 84337/34    0.397    0.000   48.391    1.423 pickle.py:787(_batch_appends)
477662/359    2.217    0.000   48.382    0.135 _dill.py:903(save_module_dict)
477662/359    0.795    0.000   48.379    0.135 pickle.py:814(save_dict)
477662/359    5.481    0.000   48.376    0.135 pickle.py:827(_batch_setitems)
  2738826   48.273    0.000   48.284    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
380213/6971    1.512    0.000   48.211    0.007 pickle.py:539(save_reduce)
   546968    2.115    0.000   45.947    0.000 func_graph.py:69(convert_structure_to_signature)
  2560708   14.006    0.000   45.557    0.000 ops.py:5580(get_controller)
  1277530    4.146    0.000   42.491    0.000 tf_contextlib.py:25(contextmanager)
   111908    0.288    0.000   42.084    0.000 callbacks.py:281(_call_batch_hook)
12737289/12737285   12.360    0.000   41.899    0.000 contextlib.py:157(helper)
  1275153    9.086    0.000   41.871    0.000 base.py:800(_track_trackable)
 12924692    6.399    0.000   41.711    0.000 <__array_function__ internals>:2(concatenate)
    91017    0.388    0.000   41.216    0.000 gen_dataset_ops.py:3036(map_dataset)
    91017    0.384    0.000   41.110    0.000 gen_dataset_ops.py:5057(parallel_map_dataset_v2)
   111908    0.934    0.000   40.974    0.000 callbacks.py:332(_call_batch_hook_helper)
  2195269   21.806    0.000   40.524    0.000 ops.py:2312(inputs)
    55954    0.364    0.000   39.631    0.001 callbacks.py:432(on_train_batch_end)
    55954    0.265    0.000   39.067    0.001 callbacks.py:302(_call_batch_end_hook)
   510431    7.864    0.000   37.962    0.000 function.py:2977(_cache_key)
  3955831    9.733    0.000   37.775    0.000 Hanabi.py:159(toarray)
 13673496    7.107    0.000   37.270    0.000 nest.py:274(flatten)
   273565   18.322    0.000   37.226    0.000 ops.py:2862(__init__)
5846273/4479245    8.235    0.000   36.677    0.000 {built-in method builtins.any}
   273363    3.440    0.000   36.093    0.000 function.py:2767(__init__)
  1186216    7.468    0.000   35.825    0.000 ops.py:3868(_get_op_def)
  1554331   34.943    0.000   34.943    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
    91017    1.149    0.000   34.594    0.000 dataset_ops.py:356(_apply_options)
 33045180   11.340    0.000   34.177    0.000 ops.py:2376(type)
   273385   34.078    0.000   34.078    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
    91017    0.428    0.000   33.655    0.000 dataset_ops.py:920(range)
   182034    0.519    0.000   33.353    0.000 dataset_ops.py:1128(repeat)
  1922076    2.761    0.000   33.298    0.000 Experiment.py:93(<lambda>)
    91017    1.737    0.000   33.226    0.000 dataset_ops.py:3570(__init__)
   182034    1.848    0.000   32.834    0.000 dataset_ops.py:3552(__init__)
  6570197    9.689    0.000   32.488    0.000 object_identity.py:195(update)
   455085    0.758    0.000   31.933    0.000 dataset_ops.py:2967(__init__)
    57955    2.775    0.000   31.752    0.001 generic_utils.py:528(update)
    55954    0.138    0.000   31.462    0.001 callbacks.py:960(on_train_batch_end)
    55954    0.603    0.000   31.325    0.001 callbacks.py:999(_batch_update_progbar)
 13673496   29.467    0.000   30.163    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
 14363932   24.903    0.000   30.160    0.000 dtypes.py:606(as_dtype)
   273050    5.923    0.000   29.775    0.000 structure.py:70(normalize_element)
  1277530    4.286    0.000   29.401    0.000 contextlib.py:129(contextmanager)
12737289/12737285   23.880    0.000   28.985    0.000 contextlib.py:59(__init__)
  9309730   16.119    0.000   28.694    0.000 abc.py:180(__instancecheck__)
44955924/44951846   23.509    0.000   28.537    0.000 {built-in method builtins.getattr}
  3094592    2.907    0.000   28.154    0.000 {built-in method _functools.reduce}
   273519    2.091    0.000   28.147    0.000 function.py:2299(from_function_and_signature)
  2190683    2.437    0.000   27.292    0.000 ops.py:386(_create_with_tf_output)
    91017    1.045    0.000   26.964    0.000 dataset_ops.py:4375(__init__)
  1279571    3.767    0.000   26.832    0.000 ops.py:6458(__enter__)
   138808    0.634    0.000   26.636    0.000 Hanabi.py:371(save)
   137662    1.765    0.000   26.204    0.000 Hanabi.py:259(toarray)
  2190783    1.748    0.000   25.809    0.000 lock_util.py:123(__enter__)
   910169    2.227    0.000   25.436    0.000 dataset_ops.py:546(_flat_structure)
62138443/62137563   23.645    0.000   25.168    0.000 {built-in method builtins.hasattr}
  2190683    8.241    0.000   24.855    0.000 ops.py:359(__init__)
   546968    0.385    0.000   24.819    0.000 func_graph.py:130(<listcomp>)
  1987060    1.685    0.000   24.687    0.000 Experiment.py:108(<lambda>)
  1824942   11.582    0.000   24.650    0.000 tf_decorator.py:67(make_decorator)
   364870    3.070    0.000   24.435    0.000 func_graph.py:82(encode_arg)
    91017    0.282    0.000   24.206    0.000 dataset_ops.py:1031(prefetch)
  2190783    5.432    0.000   24.061    0.000 lock_util.py:86(acquire)
    91017    1.749    0.000   23.924    0.000 dataset_ops.py:4289(__init__)
   446866    1.163    0.000   23.113    0.000 tf_utils.py:513(to_numpy_or_python_type)
 33045180   22.837    0.000   22.837    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
  9748855   22.411    0.000   22.420    0.000 {built-in method numpy.array}
  4381566   22.299    0.000   22.299    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
4679690/2605620    7.454    0.000   22.066    0.000 {built-in method builtins.hash}
   546101    2.171    0.000   21.790    0.000 structure.py:299(_to_tensor_list_helper)
    23415    0.238    0.000   21.782    0.001 iostream.py:334(flush)
  7085996   21.587    0.000   21.587    0.000 {method 'acquire' of '_thread.lock' objects}
4018484/4018444    5.364    0.000   21.113    0.000 base.py:453(_method_wrapper)
 17988700    9.840    0.000   21.055    0.000 compat.py:114(as_str)
  2190783    1.991    0.000   21.033    0.000 lock_util.py:126(__exit__)
    95065    1.583    0.000   20.889    0.000 resource_variable_ops.py:838(assign)
  3145424    9.691    0.000   20.565    0.000 Hanabi.py:111(save)
  4199401   20.538    0.000   20.538    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
  2536243   11.371    0.000   20.479    0.000 nest.py:129(_sequence_like)
  6570197   12.375    0.000   20.473    0.000 object_identity.py:196(<listcomp>)
   138808    0.334    0.000   20.354    0.000 Hanabi.py:379(<listcomp>)
1588405/510431    3.667    0.000   20.237    0.000 function.py:95(_make_input_signature_hashable)
  4844498   20.189    0.000   20.189    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
   694040    0.929    0.000   20.020    0.000 Hanabi.py:245(save)
   274401    1.127    0.000   19.797    0.000 tf_inspect.py:238(getfullargspec)
   696404    0.860    0.000   19.579    0.000 type_spec.py:301(__hash__)
    23415    0.162    0.000   19.204    0.001 threading.py:533(wait)
   273363    0.708    0.000   19.062    0.000 context.py:2346(add_function)
   172330    0.605    0.000   19.047    0.000 nest.py:1061(map_structure_up_to)
  2190783    6.294    0.000   19.041    0.000 lock_util.py:96(release)
    23088    0.214    0.000   18.972    0.001 threading.py:263(wait)
  1550635    8.233    0.000   18.931    0.000 functools.py:44(update_wrapper)
819401/819201    1.441    0.000   18.869    0.000 structure.py:407(type_spec_from_value)
2535979/2523593    4.605    0.000   18.825    0.000 nest.py:461(_packed_nest_with_indices)
    91017    0.229    0.000   18.814    0.000 dataset_ops.py:957(zip)
   694040    0.945    0.000   18.693    0.000 Hanabi.py:246(<listcomp>)
  2548491    3.590    0.000   18.593    0.000 structure.py:257(get_flat_tensor_specs)
    91017    1.125    0.000   18.585    0.000 dataset_ops.py:3472(__init__)
   172330    1.487    0.000   18.442    0.000 nest.py:1142(map_structure_with_tuple_paths_up_to)
    91107    0.530    0.000   18.391    0.000 resource_variable_ops.py:606(numpy)
  2559852    6.809    0.000   18.367    0.000 ops.py:4091(name_scope)
   273363    0.995    0.000   18.326    0.000 context.py:1085(add_function)
   455084    0.699    0.000   18.161    0.000 structure.py:355(to_tensor_list)
  1168358    1.979    0.000   18.107    0.000 type_spec.py:337(__get_cmp_key)
 31067653    7.898    0.000   18.093    0.000 {method 'get' of 'dict' objects}
   274335    3.327    0.000   18.043    0.000 inspect.py:1089(getfullargspec)
  2190172    3.168    0.000   17.928    0.000 tpu.py:223(tpu_replicated_input_resolver)
    91017    0.852    0.000   17.769    0.000 callbacks.py:202(__init__)
   688310    2.284    0.000   17.628    0.000 Hanabi.py:212(toarray)
   819401    2.704    0.000   17.428    0.000 type_spec.py:555(_type_spec_from_value)
  1183219    1.582    0.000   17.112    0.000 dataset_ops.py:2927(merge)
  1275143    4.859    0.000   17.095    0.000 base.py:854(_handle_deferred_dependencies)
   273363   17.077    0.000   17.077    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
  3934630    7.793    0.000   16.924    0.000 dtypes.py:172(is_compatible_with)
   273079    5.618    0.000   16.913    0.000 conversion.py:129(is_whitelisted)
  2190783   16.744    0.000   16.744    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
  2190783   12.113    0.000   16.725    0.000 lock_util.py:106(_another_group_active)
  5028171   16.571    0.000   16.571    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
 12080006    9.850    0.000   16.528    0.000 ops.py:5989(get_default_graph)
    91360    1.091    0.000   16.475    0.000 resource_variable_ops.py:668(read_value)
  2104060    1.837    0.000   16.221    0.000 ops.py:421(shape)
   546201    0.464    0.000   15.746    0.000 structure.py:321(reduce_fn)
  2749148    2.596    0.000   15.741    0.000 {built-in method builtins.all}
2950154/1168358    4.636    0.000   15.728    0.000 type_spec.py:342(__make_cmp_key)
    93398    0.087    0.000   15.687    0.000 <__array_function__ internals>:2(vstack)
   273139    0.725    0.000   15.594    0.000 <__array_function__ internals>:2(array_equal)
  1381479    5.373    0.000   15.587    0.000 tensor_spec.py:39(__init__)
   273385    0.954    0.000   15.536    0.000 function.py:1549(_set_function_spec)
  1183219    5.071    0.000   15.530    0.000 options.py:89(merge_options)
    91017    0.384    0.000   15.509    0.000 data_adapter.py:995(_process_tensorlike)
  2190783    5.199    0.000   15.447    0.000 ops.py:4439(_apply_device_functions)
  1464902   11.001    0.000   15.427    0.000 tensor_shape.py:1193(as_proto)
   910169    2.362    0.000   15.281    0.000 dataset_ops.py:528(_flat_shapes)
   228634    5.599    0.000   15.263    0.000 function.py:2151(_build_call_outputs)
    93398    0.187    0.000   15.222    0.000 shape_base.py:224(vstack)
  1638564    0.964    0.000   15.194    0.000 api.py:519(<genexpr>)
  1274245    1.903    0.000   14.495    0.000 structure.py:273(get_flat_tensor_shapes)
    91017    0.299    0.000   14.480    0.000 gen_dataset_ops.py:5296(range_dataset)
  6406024   14.461    0.000   14.470    0.000 _collections_abc.py:742(__iter__)
   273385    6.782    0.000   14.403    0.000 function.py:1562(_initialize_function_spec)
  3965773    7.081    0.000   14.391    0.000 tensor_shape.py:746(__init__)
  1005162    4.542    0.000   14.384    0.000 ops.py:444(_c_api_shape)
  1365470    1.791    0.000   14.230    0.000 api.py:343(_is_of_known_loaded_module)
   273139    5.223    0.000   14.196    0.000 numeric.py:2287(array_equal)
   273097    2.434    0.000   14.102    0.000 api.py:157(tf_convert)
  7488686    5.678    0.000   13.734    0.000 c_api_util.py:157(tf_buffer)
   172330    0.208    0.000   13.726    0.000 nest.py:1234(<listcomp>)
    91017    0.456    0.000   13.640    0.000 callbacks.py:274(set_model)
467971/94665    1.466    0.000   13.638    0.000 training.py:322(__setattr__)
  5767633   11.817    0.000   13.599    0.000 object_identity.py:174(__init__)
   172330    0.243    0.000   13.518    0.000 nest.py:1137(<lambda>)
275475/274619    1.878    0.000   13.504    0.000 inspect.py:2183(_signature_from_callable)
  3431813    7.013    0.000   13.147    0.000 Hanabi.py:70(toarray)
    90967    0.888    0.000   13.131    0.000 training.py:2667(concat)
  9870528    4.970    0.000   12.961    0.000 dtypes.py:84(base_dtype)
  9803156   11.152    0.000   12.820    0.000 dtypes.py:192(__eq__)
  4380344    5.390    0.000   12.814    0.000 tpu.py:239(replace_with_unreplicated_resources)
  4669401    2.864    0.000   12.648    0.000 nest.py:198(_yield_value)
 15857423   12.634    0.000   12.634    0.000 _weakrefset.py:70(__contains__)
   137662    0.485    0.000   12.628    0.000 Hanabi.py:272(<listcomp>)
  6498313    6.937    0.000   12.572    0.000 nest.py:203(_yield_sorted_items)
   273055    0.430    0.000   12.519    0.000 structure.py:210(from_compatible_tensor_list)
    47043    0.382    0.000   12.358    0.000 Experiment.py:39(availableActions)
   273094    1.624    0.000   12.356    0.000 inspect_utils.py:82(isbuiltin)
  6755548    6.979    0.000   12.243    0.000 compat.py:64(as_bytes)
  5584838    6.416    0.000   12.097    0.000 context.py:1851(executing_eagerly)
   273055    1.860    0.000   12.089    0.000 structure.py:175(_from_tensor_list_helper)
   455184    0.730    0.000   12.071    0.000 structure.py:376(<lambda>)
   832939    0.907    0.000   11.894    0.000 constant_op.py:298(_constant_eager_impl)
   455184    1.075    0.000   11.786    0.000 type_spec.py:211(_to_tensor_list)
  2190783   10.779    0.000   11.496    0.000 ops.py:6880(_reconstruct_sequence_inputs)
   273557    0.183    0.000   11.418    0.000 c_api_util.py:53(__del__)
   274615    4.751    0.000   11.396    0.000 inspect.py:2102(_signature_from_function)
  1917301    5.022    0.000   11.339    0.000 ops.py:3848(_get_tensor_by_tf_output)
    91903    0.437    0.000   11.311    0.000 resource_variable_ops.py:643(_read_variable_op)
   273557   11.234    0.000   11.234    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteGraph}
 17989217    7.581    0.000   11.216    0.000 compat.py:90(as_text)
481021/103657    2.727    0.000   11.192    0.000 base_layer.py:2756(__setattr__)
  1365470   11.153    0.000   11.153    0.000 api.py:347(<genexpr>)
   832939    9.535    0.000   10.987    0.000 constant_op.py:70(convert_to_eager_tensor)
   182034    0.483    0.000   10.947    0.000 gen_dataset_ops.py:5498(repeat_dataset)
  2828141    5.517    0.000   10.897    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
  3145424   10.694    0.000   10.842    0.000 <string>:1(__init__)
  2190783    2.685    0.000   10.740    0.000 threading.py:357(notify_all)
   553216    1.603    0.000   10.681    0.000 nest.py:1379(flatten_with_tuple_paths)
    91017    0.283    0.000   10.571    0.000 gen_dataset_ops.py:3266(model_dataset)
  2373122    5.957    0.000   10.494    0.000 ops.py:4206(unique_name)
   273095    1.860    0.000   10.317    0.000 api.py:244(decorator)
   273565    1.185    0.000   10.235    0.000 c_api_util.py:45(__init__)
  3831801    6.602    0.000   10.225    0.000 base.py:577(_maybe_initialize_trackable)
    90967    0.659    0.000   10.225    0.000 array_ops.py:1562(concat)
  3287075    2.419    0.000   10.187    0.000 ops.py:1925(<genexpr>)
   455184    1.336    0.000    9.834    0.000 tensor_spec.py:155(_to_components)
  2190683    9.812    0.000    9.812    0.000 c_api_util.py:190(tf_output)
  2190783    7.687    0.000    9.732    0.000 ops.py:3052(_add_op)
  2822156    2.500    0.000    9.493    0.000 structure.py:269(<lambda>)
   546904    6.333    0.000    9.236    0.000 function.py:2388(__init__)
  2190067    3.474    0.000    9.144    0.000 errors_impl.py:264(__init__)
   206927    1.722    0.000    9.095    0.000 tf_utils.py:531(_to_single_numpy_or_python_type)
    42122    0.447    0.000    9.020    0.000 Experiment.py:52(<listcomp>)
   273565    8.970    0.000    8.970    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
   344453    8.399    0.000    8.921    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   550648    0.922    0.000    8.915    0.000 Hanabi.py:219(<listcomp>)
  4380395    4.132    0.000    8.868    0.000 registry.py:82(lookup)
  1460274    3.483    0.000    8.825    0.000 op_def_library.py:173(_MakeType)
       11    0.000    0.000    8.799    0.800 training.py:1918(save)
       11    0.000    0.000    8.799    0.800 save.py:47(save_model)
       11    0.039    0.004    8.798    0.800 save.py:40(save)
       11    0.005    0.000    8.713    0.792 save.py:788(save)
  1472603    4.579    0.000    8.641    0.000 ops.py:6385(name_scope)
  2348102    2.896    0.000    8.510    0.000 tensor_spec.py:87(__hash__)
    95075    0.840    0.000    8.497    0.000 resource_variable_ops.py:830(_lazy_read)
   273381    0.478    0.000    8.352    0.000 c_api_util.py:94(__del__)
    91903    0.545    0.000    8.223    0.000 resource_variable_ops.py:646(read_and_set_handle)
   273051    0.955    0.000    8.212    0.000 data_adapter.py:1011(_convert_numpy_and_scipy)
    91017    0.555    0.000    8.209    0.000 gen_dataset_ops.py:106(anonymous_iterator_v2)
    91017    0.296    0.000    8.203    0.000 gen_dataset_ops.py:5189(prefetch_dataset)
    91017    0.273    0.000    8.198    0.000 data_adapter.py:963(select_data_adapter)
   546279    0.618    0.000    8.134    0.000 ag_logging.py:138(log)
  1277542    7.104    0.000    8.130    0.000 functools.py:74(wraps)
  1280354    3.450    0.000    8.119    0.000 context.py:2001(graph_mode)
  9870576    7.991    0.000    7.991    0.000 dtypes.py:71(_is_ref_dtype)
  1280354    1.515    0.000    7.971    0.000 ops.py:3886(as_default)
   273385    7.970    0.000    7.970    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
   910169    1.170    0.000    7.927    0.000 dataset_ops.py:537(_flat_types)
    91017    1.237    0.000    7.912    0.000 data_adapter.py:965(<listcomp>)
   273381    7.874    0.000    7.874    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteFunction}
  3186281    3.588    0.000    7.855    0.000 type_spec.py:262(_flat_tensor_specs)
   546770    1.947    0.000    7.825    0.000 func_graph.py:1061(check_mutation)
    81361    0.342    0.000    7.819    0.000 gen_array_ops.py:1183(concat_v2)
   819380    1.569    0.000    7.814    0.000 tensor_util.py:309(_AssertCompatible)
  5978679    7.772    0.000    7.777    0.000 {built-in method builtins.sorted}
   273156    0.576    0.000    7.773    0.000 {method 'all' of 'numpy.ndarray' objects}
  2190783    2.197    0.000    7.736    0.000 ops.py:5153(_mutation_lock)
  5825146    7.709    0.000    7.715    0.000 {built-in method tensorflow.python._pywrap_utils.FlattenForData}
   455196    0.479    0.000    7.585    0.000 array_ops.py:1489(_autopacking_conversion_function)
  2190172    2.667    0.000    7.546    0.000 dataset_ops.py:4572(_resource_resolver)
   546297    0.534    0.000    7.516    0.000 ag_logging.py:121(has_verbosity)
   546672    7.507    0.000    7.507    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
  2190783    5.175    0.000    7.486    0.000 threading.py:334(notify)
   923498    0.860    0.000    7.408    0.000 nest.py:1310(yield_flat_paths)
  2190783    3.303    0.000    7.367    0.000 ops.py:1995(_control_flow_post_processing)
   637113    1.631    0.000    7.365    0.000 nest.py:195(map_structure)
  8829099    4.636    0.000    7.305    0.000 options.py:74(get_fn)
   365468    1.301    0.000    7.219    0.000 ops.py:2422(_set_attr)
       11    0.022    0.002    7.213    0.656 save.py:1030(_build_meta_graph)
   273168    0.311    0.000    7.197    0.000 _methods.py:47(_all)
  1001195    0.979    0.000    7.193    0.000 structure.py:286(get_flat_tensor_types)
    92180    0.266    0.000    7.178    0.000 gen_resource_variable_ops.py:452(read_variable_op)
  4380344    2.997    0.000    7.174    0.000 auto_control_deps.py:125(op_is_stateful)
   455196    3.339    0.000    7.097    0.000 array_ops.py:1479(_should_not_autopack)
   228279    1.870    0.000    7.091    0.000 def_function.py:97(called_without_tracing)
   546297    1.447    0.000    6.982    0.000 ag_logging.py:114(get_verbosity)
2507085/1775596    3.581    0.000    6.974    0.000 nest.py:720(_yield_flat_up_to)
  1274236    2.954    0.000    6.934    0.000 dataset_ops.py:3795(__init__)
  1733699    6.883    0.000    6.883    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
  2190783    2.929    0.000    6.859    0.000 ops.py:5059(_snapshot_colocation_stack_metadata)
  1456267    2.589    0.000    6.812    0.000 nest.py:157(pack_sequence_as)
   753332    1.792    0.000    6.795    0.000 ops.py:5639(init_scope)
   233399    1.521    0.000    6.763    0.000 function.py:2513(canonicalize_function_inputs)
   235977    0.783    0.000    6.732    0.000 type_spec.py:293(__eq__)
 12080006    6.668    0.000    6.678    0.000 ops.py:5557(get_default)
    46245    0.719    0.000    6.645    0.000 Experiment.py:58(availableActionsData)
  2202602    2.078    0.000    6.633    0.000 tensor_shape.py:1230(as_shape)
  3471702    6.572    0.000    6.572    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
    91017    0.242    0.000    6.554    0.000 dataset_ops.py:2112(with_options)
    91017    0.262    0.000    6.547    0.000 gen_dataset_ops.py:7053(zip_dataset)
 16606128    6.345    0.000    6.489    0.000 enum.py:332(<genexpr>)
   169268    0.650    0.000    6.487    0.000 iostream.py:195(schedule)
  9964824    6.470    0.000    6.470    0.000 context.py:791(executing_eagerly)
    91017    0.552    0.000    6.438    0.000 dataset_ops.py:3581(_parse_args)
   298034    0.979    0.000    6.423    0.000 ops.py:1039(numpy)
  2189612    2.743    0.000    6.410    0.000 auto_control_deps_utils.py:112(<genexpr>)
 42602664    6.328    0.000    6.328    0.000 inspect_utils.py:84(<genexpr>)
    91017    0.376    0.000    6.312    0.000 dataset_ops.py:4358(__init__)
1475077/1168358    1.628    0.000    6.304    0.000 type_spec.py:357(<listcomp>)
   273385    0.377    0.000    6.301    0.000 func_graph.py:1258(_get_defun_inputs_from_kwargs)
  7952914    4.094    0.000    6.106    0.000 ops.py:4998(_device_function_stack)
  2190431    3.580    0.000    6.025    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
   364125    0.505    0.000    5.992    0.000 structure.py:229(<lambda>)
  1465258    1.239    0.000    5.965    0.000 nest.py:631(<listcomp>)
  3195305    5.713    0.000    5.898    0.000 traceable_stack.py:119(peek_objs)
95388/95358    0.520    0.000    5.878    0.000 variables.py:258(__call__)
  1004567    1.933    0.000    5.875    0.000 op_def_library.py:84(_Flatten)
   273051    0.351    0.000    5.871    0.000 dataset_ops.py:3602(_build_tensor)
  4915422    2.094    0.000    5.867    0.000 config_lib.py:50(get_action)
  1917301    1.824    0.000    5.807    0.000 ops.py:3823(_get_operation_by_tf_operation)
  3744343    5.794    0.000    5.794    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
  2738655    2.266    0.000    5.720    0.000 ops.py:216(uid)
  7233092    5.708    0.000    5.708    0.000 {built-in method numpy.zeros}
  2192130    2.523    0.000    5.698    0.000 func_graph.py:595(capture)
  3019656    2.309    0.000    5.695    0.000 nest.py:96(_sorted)
  4394566    3.341    0.000    5.676    0.000 ops.py:5075(_control_dependencies_stack)
  2190069    5.295    0.000    5.670    0.000 errors_impl.py:64(__init__)
  1684880    5.380    0.000    5.634    0.000 Hanabi.py:196(__init__)
  1915771    1.542    0.000    5.580    0.000 op_def_library.py:510(<listcomp>)
  2190783    3.366    0.000    5.539    0.000 lock_util.py:74(group)
   546299    1.159    0.000    5.535    0.000 os.py:760(getenv)
    97978    0.462    0.000    5.517    0.000 iostream.py:382(write)
   364125    0.712    0.000    5.487    0.000 tensor_spec.py:169(_from_compatible_tensor_list)
  9311221    5.258    0.000    5.476    0.000 object_identity.py:211(__iter__)
  1824942    4.510    0.000    5.475    0.000 tf_decorator.py:236(__init__)
   273385    2.455    0.000    5.448    0.000 auto_control_deps.py:178(__init__)
  1374502    2.939    0.000    5.416    0.000 context.py:219(push)
  2190172    1.897    0.000    5.410    0.000 auto_control_deps.py:136(collective_manager_ids_from_op)
   365309    0.843    0.000    5.344    0.000 ops.py:5202(device)
28232398/28232313    5.330    0.000    5.330    0.000 {built-in method builtins.len}
   466732    1.349    0.000    5.236    0.000 function.py:2646(_convert_numpy_inputs)
  4823895    5.109    0.000    5.228    0.000 options.py:33(__init__)
   728297    1.398    0.000    5.212    0.000 tensor_util.py:194(GetNumpyAppendFn)
   550944    2.508    0.000    5.211    0.000 tensor_shape.py:1074(is_compatible_with)
  1004192    1.513    0.000    5.207    0.000 func_graph.py:1055(device_stack_has_callable)
   819397    3.320    0.000    5.203    0.000 tensor_util.py:339(_is_array_like)
   651528    1.475    0.000    5.171    0.000 _collections_abc.py:657(get)
   273053    0.255    0.000    5.046    0.000 op_def_library.py:700(<listcomp>)
 12090930    2.993    0.000    5.018    0.000 pickle.py:213(write)
  1646898    1.928    0.000    4.999    0.000 Hanabi.py:200(save)
  4708615    3.047    0.000    4.991    0.000 ops.py:5094(_distribution_strategy_stack)
  2672768    2.627    0.000    4.962    0.000 tensor_shape.py:756(<listcomp>)
   546820    0.398    0.000    4.949    0.000 function.py:1529(<genexpr>)
   169268    4.920    0.000    4.920    0.000 socket.py:357(send)
   638940    2.494    0.000    4.910    0.000 distribution_strategy_context.py:79(_get_per_thread_mode)
   187946    0.914    0.000    4.902    0.000 resource_variable_ops.py:329(variable_accessed)
    90967    0.683    0.000    4.872    0.000 callbacks.py:571(on_predict_end)
   546102    2.105    0.000    4.862    0.000 options.py:37(__eq__)
   546223    0.878    0.000    4.826    0.000 tensor_util.py:263(inner)
   273332    0.643    0.000    4.795    0.000 op_def_library.py:184(_MakeShape)
  2190117    1.480    0.000    4.778    0.000 {method 'throw' of 'generator' objects}
  5188501    3.886    0.000    4.777    0.000 config_lib.py:33(matches)
   138808    2.114    0.000    4.750    0.000 Hanabi.py:365(count_discarded)
   364562    1.833    0.000    4.744    0.000 ops.py:616(set_shape)
   273051    1.337    0.000    4.735    0.000 function_utils.py:89(get_func_name)
   237215    3.525    0.000    4.699    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_EncodeArg}
   554468    1.666    0.000    4.690    0.000 tf_logging.py:210(vlog)
  2919264    3.111    0.000    4.684    0.000 six.py:588(iteritems)
    95075    0.468    0.000    4.676    0.000 resource_variable_ops.py:1924(__init__)
   273363    0.605    0.000    4.652    0.000 function.py:3595(defun_with_attributes)
    95348    0.286    0.000    4.610    0.000 gen_resource_variable_ops.py:123(assign_variable_op)
  2190783    1.792    0.000    4.606    0.000 ops.py:4603(_control_dependencies_for_inputs)
  1279571    1.272    0.000    4.566    0.000 ops.py:6498(__exit__)
  1730167    2.903    0.000    4.532    0.000 tensor_shape.py:866(__getitem__)
  2749004    3.419    0.000    4.524    0.000 context.py:773(_mode)
  1920866    1.998    0.000    4.523    0.000 tf_decorator.py:200(unwrap)
    91017    0.161    0.000    4.490    0.000 structure.py:329(to_batched_tensor_list)
  2190783    2.061    0.000    4.432    0.000 ops.py:5019(_snapshot_device_function_stack_metadata)
  1462801    4.070    0.000    4.425    0.000 tensor_shape.py:1199(<listcomp>)
  2190783    1.556    0.000    4.421    0.000 ops.py:4637(_record_op_seen_by_control_dependencies)
  7022885    4.402    0.000    4.404    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
    91017    0.681    0.000    4.401    0.000 dataset_ops.py:2889(_graph_rewrites)
  2190683    4.394    0.000    4.394    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
  5757257    2.722    0.000    4.385    0.000 ops.py:4079(_name_stack)
   455169    0.562    0.000    4.372    0.000 distribution_strategy_context.py:179(get_strategy)
   820375    3.219    0.000    4.343    0.000 ops.py:3761(get_operations)
  5848014    4.340    0.000    4.340    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
  7910092    2.778    0.000    4.303    0.000 pickle.py:448(get)
   298034    0.438    0.000    4.302    0.000 ops.py:1027(_numpy)
  4250630    4.294    0.000    4.296    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceOrComposite}
   228282    1.938    0.000    4.292    0.000 def_function.py:91(_get_counter)
   273385    1.028    0.000    4.279    0.000 auto_control_deps.py:225(__enter__)
  2560708    2.893    0.000    4.180    0.000 ops.py:5387(get_controller)
  334/224    0.003    0.000    4.064    0.018 def_function.py:583(wrapped_fn)
    95358    1.457    0.000    4.046    0.000 resource_variable_ops.py:341(__init__)
 18237481    4.044    0.000    4.044    0.000 context.py:1826(context_safe)
   273128    0.879    0.000    3.998    0.000 function.py:3245(validate_signature)
4785/4433    0.016    0.000    3.996    0.001 def_function.py:1052(_get_concrete_function_garbage_collected)
  1274236    3.099    0.000    3.971    0.000 tracking.py:215(__init__)
  2190425    3.964    0.000    3.964    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
     2001    0.023    0.000    3.947    0.002 callbacks.py:397(on_epoch_end)
   364693    0.653    0.000    3.920    0.000 context.py:2016(device)
   298034    3.865    0.000    3.865    0.000 {method '_numpy_internal' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   728297    2.535    0.000    3.814    0.000 tensor_util.py:186(GetFromNumpyDTypeDict)
4763/4411    0.008    0.000    3.811    0.001 def_function.py:1091(get_concrete_function)
  1005162    3.804    0.000    3.804    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
  2193742    2.442    0.000    3.791    0.000 _collections_abc.py:676(items)
    90967    0.422    0.000    3.785    0.000 callbacks.py:554(on_predict_begin)
  1917966    2.089    0.000    3.716    0.000 control_flow_util.py:266(CheckInputFromValidContext)
  4382733    2.136    0.000    3.626    0.000 ops.py:5044(_colocation_stack)
4642/1122    0.012    0.000    3.609    0.003 save_impl.py:546(get_concrete_function)
    93260    0.855    0.000    3.607    0.000 base_layer.py:2714(__delattr__)
   548383    0.444    0.000    3.586    0.000 nest.py:357(assert_same_structure)
   365468    0.546    0.000    3.519    0.000 ops.py:2431(_set_attr_with_buf)
1254/1078    0.008    0.000    3.507    0.003 save_impl.py:401(add_trace)
   186597    0.595    0.000    3.486    0.000 base_layer.py:2690(_obj_reference_counts)
   273565    1.449    0.000    3.481    0.000 lock_util.py:54(__init__)
  2738655    3.454    0.000    3.454    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
   282699    2.276    0.000    3.443    0.000 inspect.py:2452(__init__)
   502070    1.650    0.000    3.424    0.000 function.py:2008(captured_inputs)
   137662    0.731    0.000    3.346    0.000 Hanabi.py:215(<listcomp>)
   273079    0.721    0.000    3.326    0.000 conversion.py:242(cache_whitelisted)
   273138    0.675    0.000    3.308    0.000 conversion.py:234(is_in_whitelist_cache)
  1300117    0.801    0.000    3.306    0.000 nest.py:104(_is_namedtuple)
  2190172    2.274    0.000    3.298    0.000 control_flow_util.py:82(IsInWhileLoop)
   183624    1.179    0.000    3.261    0.000 tape.py:104(variable_accessed)
     2001    0.005    0.000    3.252    0.002 callbacks.py:971(on_epoch_end)
     2001    0.022    0.000    3.247    0.002 callbacks.py:1019(_finalize_progbar)
    91017    0.157    0.000    3.211    0.000 structure.py:351(<lambda>)
   637113    0.516    0.000    3.206    0.000 nest.py:245(<listcomp>)
 18238294    3.183    0.000    3.183    0.000 {method 'append' of 'list' objects}
   273553    1.908    0.000    3.181    0.000 ops.py:4037(get_all_collection_keys)
  1367892    3.164    0.000    3.164    0.000 op_def_library.py:38(_Attr)
   546300    2.036    0.000    3.159    0.000 os.py:664(__getitem__)
    91017    0.844    0.000    3.146    0.000 optimization_options.py:215(_graph_rewrites)
   548383    3.141    0.000    3.142    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructure}
  6115831    3.135    0.000    3.137    0.000 {method 'encode' of 'str' objects}
  1655610    1.475    0.000    3.062    0.000 tensor_shape.py:1180(as_list)
    91017    0.242    0.000    3.054    0.000 type_spec.py:498(_to_batched_tensor_list)
  4093743    3.020    0.000    3.048    0.000 {built-in method __new__ of type object at 0x9d12c0}
   156/68    0.003    0.000    3.044    0.045 def_function.py:663(_initialize)
    91016    0.621    0.000    3.028    0.000 structure.py:119(convert_legacy_structure)
 10319139    2.473    0.000    3.026    0.000 {built-in method builtins.setattr}
  2767688    2.824    0.000    3.018    0.000 enum.py:331(__iter__)
   156/68    0.001    0.000    3.000    0.044 function.py:2850(_get_concrete_function_internal_garbage_collected)
   273385    2.578    0.000    2.999    0.000 function.py:229(_parse_func_attrs)
  1004570    1.256    0.000    2.969    0.000 ops.py:6051(_get_graph_from_inputs)
   274687    2.230    0.000    2.949    0.000 inspect.py:2732(__init__)
   364672    0.373    0.000    2.939    0.000 func_graph.py:1142(_get_composite_tensor_spec)
    55954    0.112    0.000    2.929    0.000 callbacks.py:418(on_train_batch_begin)
   273435    0.444    0.000    2.900    0.000 ops.py:1602(convert_to_tensor_or_composite)
  1004567    1.346    0.000    2.890    0.000 op_def_library.py:87(<listcomp>)
   942931    1.442    0.000    2.879    0.000 pickle.py:413(memoize)
    91017    0.548    0.000    2.873    0.000 training.py:2626(_in_multi_worker_mode)
    47043    0.479    0.000    2.864    0.000 Hanabi.py:312(move)
  1279571    2.716    0.000    2.850    0.000 ops.py:6439(__init__)
   550343    1.271    0.000    2.848    0.000 ag_ctx.py:61(__exit__)
   182032    0.427    0.000    2.829    0.000 dataset_ops.py:2796(get_legacy_output_types)
   365468    2.811    0.000    2.811    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetAttr}
   455223    2.806    0.000    2.806    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
     2178    0.009    0.000    2.804    0.001 save_impl.py:415(trace_with_training)
   470410    1.061    0.000    2.796    0.000 ops.py:1160(shape)
   819282    1.792    0.000    2.778    0.000 api.py:352(_is_known_loaded_type)
     2618    0.004    0.000    2.730    0.001 save.py:141(list_functions)
    55954    0.159    0.000    2.729    0.000 callbacks.py:293(_call_batch_begin_hook)
   182058    0.480    0.000    2.728    0.000 training.py:679(distribute_strategy)
  2197223    1.384    0.000    2.726    0.000 ag_ctx.py:29(_control_ctx)
   182100    0.617    0.000    2.708    0.000 variable_scope.py:2738(variable_creator_scope)
     3850    0.064    0.000    2.687    0.001 function.py:3085(_define_function_with_shape_relaxation)
    91176    0.575    0.000    2.680    0.000 monitoring.py:335(get_cell)
       77    0.000    0.000    2.642    0.034 base_layer.py:3017(_list_functions_for_serialization)
       77    0.001    0.000    2.641    0.034 base_serialization.py:76(list_functions_for_serialization)
   273156    1.243    0.000    2.634    0.000 cache.py:43(has)
       50    0.002    0.000    2.627    0.053 function_base.py:2093(_get_ufunc_and_otypes)
        1    0.002    0.002    2.618    2.618 Experiment.py:200(save)
  1288914    0.793    0.000    2.613    0.000 dtypes.py:205(__ne__)
    91050    0.339    0.000    2.612    0.000 distribute_lib.py:2863(__enter__)
   364693    1.547    0.000    2.603    0.000 context.py:827(device)
   273051    1.168    0.000    2.598    0.000 data_adapter.py:235(can_handle)
    91056    0.456    0.000    2.590    0.000 tensor_util.py:1036(maybe_set_static_shape)
   138808    0.609    0.000    2.582    0.000 Hanabi.py:366(<dictcomp>)
   137662    1.391    0.000    2.582    0.000 Hanabi.py:266(<listcomp>)
   182424    2.548    0.000    2.548    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInputList}
   820077    1.379    0.000    2.544    0.000 function.py:3763(__del__)
   273205    0.601    0.000    2.541    0.000 function.py:1494(<listcomp>)
   185936    0.311    0.000    2.538    0.000 data_adapter.py:1164(catch_stop_iteration)
    41337    0.860    0.000    2.532    0.000 Experiment.py:66(<listcomp>)
    46473    0.147    0.000    2.526    0.000 <__array_function__ internals>:2(amax)
  5299696    2.525    0.000    2.525    0.000 ops.py:3071(_c_graph)
   364693    1.817    0.000    2.506    0.000 context.py:1738(__enter__)
  1300117    2.505    0.000    2.505    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
   283081    0.785    0.000    2.500    0.000 object_identity.py:192(add)
   182084    0.422    0.000    2.490    0.000 data_adapter.py:275(<genexpr>)
  2502149    2.110    0.000    2.485    0.000 tensor_shape.py:185(__init__)
   554468    0.902    0.000    2.480    0.000 __init__.py:1359(log)
   273363    1.972    0.000    2.474    0.000 function.py:2728(__init__)
   273435    0.607    0.000    2.456    0.000 ops.py:1625(internal_convert_to_tensor_or_composite)
   273385    0.608    0.000    2.454    0.000 variable_scope.py:1433(get_variable_scope)
  4109811    2.448    0.000    2.448    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
       22    0.008    0.000    2.423    0.110 save.py:168(__init__)
   182034    0.602    0.000    2.403    0.000 data_adapter.py:1549(_is_distributed_dataset)
  1004206    1.017    0.000    2.388    0.000 backprop.py:170(_must_record_gradient)
  1918614    2.384    0.000    2.384    0.000 ops.py:3800(_get_operation_by_name_unsafe)
       11    0.000    0.000    2.366    0.215 signature_serialization.py:71(find_function_to_export)
       11    0.000    0.000    2.366    0.215 training.py:2581(_list_functions_for_serialization)
   546101    0.640    0.000    2.363    0.000 nest.py:104(assert_same_structure)
  2213871    1.393    0.000    2.345    0.000 threading.py:254(_is_owned)
  6572349    2.336    0.000    2.336    0.000 lock_util.py:110(_validate_group_id)
   364562    2.312    0.000    2.312    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
  2190783    2.312    0.000    2.312    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
    91017    0.347    0.000    2.290    0.000 data_adapter.py:681(can_handle)
  2190067    1.764    0.000    2.264    0.000 errors_impl.py:117(__str__)
    46473    0.277    0.000    2.249    0.000 fromnumeric.py:2551(amax)
    41337    0.592    0.000    2.230    0.000 Experiment.py:71(<listcomp>)
    92979    0.251    0.000    2.227    0.000 context.py:2310(async_wait)
  1510117    1.613    0.000    2.215    0.000 __init__.py:1544(isEnabledFor)
    42122    0.548    0.000    2.214    0.000 Experiment.py:47(<listcomp>)
   182072    1.281    0.000    2.213    0.000 ops.py:1523(internal_convert_n_to_tensor)
  286/176    0.007    0.000    2.212    0.013 save_impl.py:511(wrapper)
   754036    1.177    0.000    2.198    0.000 tape.py:150(stop_recording)
  583/539    0.002    0.000    2.196    0.004 layer_serialization.py:81(_get_serialized_attributes)
   296980    2.184    0.000    2.194    0.000 threading.py:215(__init__)
       66    0.000    0.000    2.192    0.033 layer_serialization.py:77(functions_to_serialize)
       11    0.000    0.000    2.186    0.199 model_serialization.py:45(_get_serialized_attributes_internal)
   184708    0.305    0.000    2.183    0.000 Hanabi.py:183(save)
  343/283    0.012    0.000    2.181    0.008 base_layer.py:875(__call__)
     2001    0.016    0.000    2.125    0.001 training.py:1617(reset_metrics)
   273057    1.058    0.000    2.111    0.000 tf_inspect.py:370(isfunction)
  1561713    1.406    0.000    2.104    0.000 tensor_conversion_registry.py:114(get)
  2555032    1.392    0.000    2.058    0.000 ops.py:5117(_auto_cast_variable_read_dtype)
  1927021    0.805    0.000    2.056    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
    91017    1.010    0.000    2.047    0.000 iterator_ops.py:525(__init__)
  2286117    1.466    0.000    2.044    0.000 ops.py:402(graph)
  2118766    1.455    0.000    2.040    0.000 function.py:2840(input_signature)
  4108749    1.653    0.000    2.036    0.000 ops.py:3472(<genexpr>)
 12091748    2.025    0.000    2.025    0.000 {method 'write' of '_io.BufferedWriter' objects}
   364693    1.548    0.000    2.019    0.000 context.py:1772(__exit__)
    91176    0.543    0.000    2.017    0.000 monitoring.py:136(get_cell)
   228627    2.005    0.000    2.005    0.000 weakref.py:431(__contains__)
  3197709    1.999    0.000    2.001    0.000 op_def_registry.py:34(get)
  3276808    2.000    0.000    2.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceForData}
  3102498    1.349    0.000    1.999    0.000 op_def_library.py:80(_IsListValue)
  8225091    1.997    0.000    1.997    0.000 ops.py:397(dtype)
     2000    0.024    0.000    1.988    0.001 metrics.py:241(reset_states)
    47375    0.353    0.000    1.986    0.000 fromnumeric.py:73(_wrapreduction)
      715    0.009    0.000    1.986    0.003 def_function.py:1024(_list_all_concrete_functions_for_serialization)
  1232840    1.982    0.000    1.982    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
   637323    0.476    0.000    1.960    0.000 function.py:3246(<genexpr>)
    91017    0.349    0.000    1.958    0.000 dataset_ops.py:3147(_to_tensor_list)
    92979    0.277    0.000    1.954    0.000 context.py:645(sync_executors)
  1374502    1.500    0.000    1.942    0.000 context.py:239(pop)
   273385    1.929    0.000    1.929    0.000 function.py:474(<listcomp>)
    91021    0.168    0.000    1.924    0.000 nest.py:1403(list_to_tuple)
    91050    0.438    0.000    1.922    0.000 distribute_lib.py:2872(__exit__)
  2845465    0.940    0.000    1.915    0.000 {method 'extend' of 'list' objects}
  3933152    1.910    0.000    1.910    0.000 ops.py:796(_as_tf_output)
   110/88    0.001    0.000    1.897    0.022 utils.py:153(wrap_with_training_arg)
   110/88    0.001    0.000    1.883    0.021 tf_utils.py:42(smart_cond)
   110/88    0.001    0.000    1.882    0.021 smart_cond.py:27(smart_cond)
   110/88    0.001    0.000    1.882    0.021 utils.py:163(replace_training_and_call)
  1023627    1.875    0.000    1.875    0.000 {method 'format' of 'str' objects}
   172330    0.218    0.000    1.865    0.000 nest.py:1226(<listcomp>)
  9266412    1.858    0.000    1.860    0.000 {built-in method _struct.pack}
   273261    1.858    0.000    1.858    0.000 {method 'astype' of 'numpy.ndarray' objects}
    23402    0.065    0.000    1.857    0.000 <__array_function__ internals>:2(mean)
   273385    0.551    0.000    1.846    0.000 variable_scope.py:1420(get_variable_scope_store)
   273051    1.827    0.000    1.827    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionSetAttrValueProto}
       81    0.008    0.000    1.827    0.023 functional.py:367(call)
   182032    0.236    0.000    1.823    0.000 dataset_ops.py:2762(get_legacy_output_classes)
    55/11    0.000    0.000    1.822    0.166 layer_serialization.py:101(_get_serialized_attributes_internal)
       81    0.007    0.000    1.810    0.022 functional.py:464(_run_internal_graph)
   273075    0.227    0.000    1.807    0.000 op_def_library.py:695(<listcomp>)
    55/11    0.001    0.000    1.805    0.164 save_impl.py:134(wrap_layer_functions)
       11    0.004    0.000    1.801    0.164 save.py:594(_fill_meta_graph_def)
  1019619    1.187    0.000    1.796    0.000 ops.py:1033(dtype)
   273094    0.852    0.000    1.793    0.000 cache.py:50(__getitem__)
  4381566    1.791    0.000    1.791    0.000 traceable_stack.py:123(peek_traceable_objs)
     2000    0.071    0.000    1.788    0.001 backend.py:3565(batch_set_value)
  2190172    1.324    0.000    1.784    0.000 registry.py:74(list)
   184556    0.243    0.000    1.780    0.000 Hanabi.py:191(save)
  2646446    1.125    0.000    1.770    0.000 ops.py:3015(_variable_creator_stack)
   273359    0.289    0.000    1.765    0.000 function.py:384(__del__)
   273079    0.752    0.000    1.755    0.000 config_lib.py:62(get_action)
  2190431    1.744    0.000    1.744    0.000 context.py:1204(op_callbacks)
    23402    0.326    0.000    1.734    0.000 fromnumeric.py:3231(mean)
  1004567    1.732    0.000    1.732    0.000 op_def_library.py:737(<listcomp>)
      110    0.001    0.000    1.732    0.016 save_impl.py:495(add_function)
  4381566    1.731    0.000    1.731    0.000 lock_util.py:108(<genexpr>)
   273577    1.652    0.000    1.729    0.000 weakref.py:354(__init__)
   206991    0.554    0.000    1.724    0.000 <__array_function__ internals>:2(ndim)
   546101    1.719    0.000    1.723    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructureForData}
   273058    1.717    0.000    1.717    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}
    91016    0.196    0.000    1.702    0.000 dataset_ops.py:3523(<listcomp>)
    91017    0.161    0.000    1.678    0.000 dataset_ops.py:3005(<lambda>)
    92979    1.677    0.000    1.677    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextSyncExecutors}
  154/110    0.002    0.000    1.669    0.015 save_impl.py:567(call_and_return_conditional_losses)
   551221    1.280    0.000    1.650    0.000 func_graph.py:740(internal_captures)
    98721    0.747    0.000    1.648    0.000 tensor_shape.py:1136(most_specific_compatible_shape)
   306618    0.894    0.000    1.648    0.000 tensor_spec.py:90(__eq__)
   253719    0.879    0.000    1.648    0.000 nest.py:873(flatten_up_to)
1274528/819380    1.348    0.000    1.648    0.000 tensor_util.py:219(_GetDenseDimensions)
  308/176    0.002    0.000    1.647    0.009 save_impl.py:541(__call__)
  3269125    1.617    0.000    1.617    0.000 {method 'pop' of 'list' objects}
   693009    1.026    0.000    1.614    0.000 object_identity.py:183(_wrap_key)
  1918819    1.603    0.000    1.603    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
  1274245    1.038    0.000    1.600    0.000 structure.py:283(<listcomp>)
   383232    0.657    0.000    1.592    0.000 object_identity.py:186(__contains__)
  1655566    1.196    0.000    1.584    0.000 tensor_shape.py:1191(<listcomp>)
1365255/1092204    0.948    0.000    1.575    0.000 dataset_ops.py:2972(element_spec)
  6669844    1.568    0.000    1.568    0.000 ops.py:2381(graph)
   464324    1.016    0.000    1.553    0.000 iterator_ops.py:766(_type_spec)
       51    0.035    0.001    1.550    0.030 Experiment.py:160(create_episode)
   546770    0.764    0.000    1.529    0.000 variable_scope.py:1202(set_use_resource)
6937412/6936752    1.515    0.000    1.520    0.000 {method 'update' of 'set' objects}
   182032    0.217    0.000    1.517    0.000 dataset_ops.py:2779(get_legacy_output_shapes)
  2185038    1.247    0.000    1.517    0.000 tensor_shape.py:843(__len__)
  1803532    0.923    0.000    1.517    0.000 _dill.py:380(get)
    91017    0.347    0.000    1.517    0.000 tensor_spec.py:190(_unbatch)
    91607    0.144    0.000    1.515    0.000 ops.py:5314(colocate_with)
   729355    0.989    0.000    1.513    0.000 tensor_shape.py:252(is_compatible_with)
  2214578    1.510    0.000    1.510    0.000 {built-in method builtins.max}
  2281402    0.925    0.000    1.500    0.000 ops.py:2245(_add_control_inputs)
  3467377    1.432    0.000    1.499    0.000 {method 'values' of 'dict' objects}
  2246029    1.290    0.000    1.490    0.000 context.py:514(ensure_initialized)
   273189    0.693    0.000    1.487    0.000 math_ops.py:866(cast)
  7020004    1.485    0.000    1.485    0.000 {method 'startswith' of 'str' objects}
  7202089    1.485    0.000    1.485    0.000 {method 'pop' of 'dict' objects}
  2536243    1.483    0.000    1.484    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
   273385    0.796    0.000    1.482    0.000 function.py:356(_inference_name)
   273359    0.240    0.000    1.476    0.000 context.py:2351(remove_function)
    91020    1.453    0.000    1.453    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
  1367765    1.029    0.000    1.448    0.000 ops.py:3972(get_collection_ref)
   638060    0.896    0.000    1.446    0.000 context.py:1831(ensure_initialized)
  8000064    1.444    0.000    1.444    0.000 tensor_shape.py:247(value)
    91050    0.188    0.000    1.428    0.000 distribute_lib.py:791(scope)
2664896/2645936    0.935    0.000    1.422    0.000 {built-in method builtins.issubclass}
   560418    0.837    0.000    1.422    0.000 training.py:328(<genexpr>)
   273157    0.529    0.000    1.420    0.000 tensor_util.py:280(_check_not_tensor)
   273055    0.520    0.000    1.419    0.000 structure.py:196(<listcomp>)
   273094    0.413    0.000    1.415    0.000 tf_inspect.py:335(getmodule)
    23402    0.478    0.000    1.408    0.000 _methods.py:134(_mean)
   318696    0.585    0.000    1.395    0.000 object_identity.py:131(__getitem__)
  6268964    1.384    0.000    1.384    0.000 {method 'items' of 'dict' objects}
    91607    0.210    0.000    1.371    0.000 ops.py:5291(_colocate_with_for_gradient)
  1915771    1.368    0.000    1.368    0.000 op_def_library.py:64(_IsListParameter)
  2193742    1.349    0.000    1.349    0.000 _collections_abc.py:698(__init__)
    91017    0.536    0.000    1.346    0.000 data_adapter.py:117(__init__)
   546194    0.648    0.000    1.342    0.000 ag_ctx.py:35(control_status_ctx)
   550343    0.594    0.000    1.334    0.000 ag_ctx.py:53(__enter__)
  2555032    1.325    0.000    1.325    0.000 ops.py:5101(_distribution_strategy_stack)
 12924692    1.320    0.000    1.320    0.000 multiarray.py:145(concatenate)
  3813084    1.313    0.000    1.313    0.000 tensor_spec.py:68(dtype)
   182768    0.886    0.000    1.312    0.000 ops.py:2979(_variable_creator_scope)
   183624    0.213    0.000    1.312    0.000 distribution_strategy_context.py:215(get_strategy_and_replica_context)
   642997    0.927    0.000    1.308    0.000 weakref.py:428(get)
 13233601    1.305    0.000    1.305    0.000 {built-in method builtins.id}
182137/182087    0.648    0.000    1.296    0.000 nest.py:126(_packed_nest_with_indices)
    91017    0.700    0.000    1.296    0.000 training.py:2453(_check_call_args)
   273385    0.407    0.000    1.294    0.000 ops.py:6351(get_collection)
    55/44    0.000    0.000    1.291    0.029 utils.py:169(<lambda>)
  9713624    1.266    0.000    1.266    0.000 pickle.py:200(commit_frame)
  5795373    1.248    0.000    1.263    0.000 object_identity.py:175(<genexpr>)
   273385    0.556    0.000    1.260    0.000 object_identity.py:223(__len__)
   825141    0.383    0.000    1.259    0.000 _asarray.py:16(asarray)
  2200625    0.917    0.000    1.241    0.000 traceable_stack.py:127(__len__)
    91050    0.267    0.000    1.241    0.000 distribute_lib.py:2892(_scope)
  1917966    0.959    0.000    1.239    0.000 control_flow_util.py:180(GetOutputContext)
  1095434    1.075    0.000    1.221    0.000 inspect.py:159(isfunction)
  4382612    1.214    0.000    1.214    0.000 ops.py:3043(_check_not_finalized)
  1275153    0.909    0.000    1.191    0.000 base.py:677(_lookup_dependency)
  1001195    0.816    0.000    1.188    0.000 structure.py:296(<listcomp>)
  6026104    1.185    0.000    1.185    0.000 ops.py:2036(_get_control_flow_context)
   273359    0.364    0.000    1.185    0.000 context.py:1154(remove_function)
   238910    0.306    0.000    1.183    0.000 function.py:2632(_is_ndarray)
    91017    0.249    0.000    1.182    0.000 data_adapter.py:529(can_handle)
367155/367074    0.813    0.000    1.181    0.000 <frozen importlib._bootstrap>:997(_handle_fromlist)
  2559852    1.180    0.000    1.180    0.000 ops.py:4086(_name_stack)
   273332    0.474    0.000    1.173    0.000 execute.py:201(make_shape)
  5212114    1.163    0.000    1.172    0.000 {method 'keys' of 'dict' objects}
  4633266    1.161    0.000    1.161    0.000 {method 'release' of '_thread.lock' objects}
   273799    1.161    0.000    1.161    0.000 {built-in method tensorflow.python._pywrap_tf_session.AddControlInput}
   641474    0.730    0.000    1.158    0.000 {method 'join' of 'str' objects}
      176    0.002    0.000    1.157    0.007 utils.py:66(return_outputs_and_add_losses)
  1554276    1.157    0.000    1.157    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
  2190783    1.155    0.000    1.155    0.000 lock_util.py:119(__init__)
  5396731    1.145    0.000    1.145    0.000 ops.py:392(op)
   274116    0.553    0.000    1.143    0.000 tf_inspect.py:390(ismethod)
  3155713    1.141    0.000    1.141    0.000 ops.py:3354(building_function)
  1913097    0.836    0.000    1.139    0.000 inspect.py:81(ismethod)
   273553    0.898    0.000    1.133    0.000 ops.py:4040(<listcomp>)
  2190119    1.126    0.000    1.126    0.000 {built-in method sys.exc_info}
       22    0.001    0.000    1.124    0.051 functional_saver.py:202(save)
       11    0.001    0.000    1.118    0.102 util.py:1152(save)
   273385    0.471    0.000    1.117    0.000 func_graph.py:1081(flatten)
       11    0.000    0.000    1.111    0.101 util.py:1117(_save_cached_when_graph_building)
   955527    0.364    0.000    1.104    0.000 __init__.py:1298(info)
   457224    1.101    0.000    1.101    0.000 def_function.py:752(_get_tracing_count)
  1880411    0.888    0.000    1.095    0.000 tensor_shape.py:819(rank)
   546300    0.646    0.000    1.091    0.000 os.py:742(encode)
   734208    1.089    0.000    1.089    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
  2639489    1.075    0.000    1.075    0.000 dataset_ops.py:216(_variant_tensor)
       22    0.001    0.000    1.073    0.049 functional_saver.py:252(save_fn)
  2739026    1.069    0.000    1.069    0.000 {built-in method _thread.get_ident}
   273201    0.446    0.000    1.059    0.000 options.py:51(__setattr__)
  2376124    1.055    0.000    1.055    0.000 {method 'lower' of 'str' objects}
    44722    0.119    0.000    1.050    0.000 <__array_function__ internals>:2(argmax)
  4111560    1.049    0.000    1.049    0.000 ops.py:2307(outputs)
  3119605    1.044    0.000    1.044    0.000 tensor_spec.py:63(shape)
       15    0.000    0.000    1.035    0.069 func_graph.py:958(wrapper)
    91017    0.545    0.000    1.034    0.000 callbacks.py:247(_add_default_callbacks)
    91016    0.261    0.000    1.023    0.000 ops.py:2263(_add_control_input)
   182084    0.152    0.000    1.021    0.000 callbacks.py:235(<genexpr>)
   546217    0.588    0.000    1.020    0.000 cache.py:92(_get_key)
  1004567    0.915    0.000    1.013    0.000 op_def_library.py:89(<listcomp>)
  1274236    1.003    0.000    1.003    0.000 {built-in method _weakref.proxy}
   273100    0.554    0.000    1.002    0.000 inspect.py:714(getmodule)
    91730    0.996    0.000    0.996    0.000 {method 'copy' of 'numpy.ndarray' objects}
   273385    0.805    0.000    0.981    0.000 func_graph.py:735(external_captures)
   546820    0.344    0.000    0.974    0.000 func_graph.py:1023(<genexpr>)
    91050    0.486    0.000    0.974    0.000 distribute_lib.py:2853(__init__)
   228634    0.358    0.000    0.969    0.000 tape.py:220(could_possibly_record)
  1154377    0.646    0.000    0.965    0.000 {method 'add' of 'set' objects}
   546102    0.918    0.000    0.961    0.000 tracking.py:154(resource_tracker_scope)
   728528    0.955    0.000    0.955    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   637113    0.338    0.000    0.946    0.000 nest.py:241(<listcomp>)
       51    0.944    0.019    0.944    0.019 {method 'clear' of 'list' objects}
   321250    0.933    0.000    0.933    0.000 data_adapter.py:1184(steps)
   228279    0.929    0.000    0.929    0.000 def_function.py:72(called_without_tracing)
   273385    0.345    0.000    0.924    0.000 function.py:1581(<listcomp>)
    47043    0.465    0.000    0.920    0.000 Hanabi.py:340(is_ended)
  1211881    0.716    0.000    0.916    0.000 object_identity.py:63(__hash__)
  1005366    0.667    0.000    0.912    0.000 func_graph.py:1057(<genexpr>)
       11    0.000    0.000    0.910    0.083 functional_saver.py:172(to_proto)
  1097067    0.910    0.000    0.910    0.000 ops.py:2801(name_from_scope_name)
  1607979    0.906    0.000    0.906    0.000 context.py:813(device_name)
      240    0.001    0.000    0.903    0.004 core.py:1192(call)
   273139    0.898    0.000    0.903    0.000 converter.py:153(__init__)
      240    0.003    0.000    0.902    0.004 core.py:30(dense)
   365468    0.892    0.000    0.892    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
   546915    0.632    0.000    0.889    0.000 traceable_stack.py:131(copy)
    93398    0.066    0.000    0.886    0.000 <__array_function__ internals>:2(atleast_2d)
  2105313    0.886    0.000    0.886    0.000 {method 'update' of 'dict' objects}
  1274236    0.872    0.000    0.872    0.000 tracking.py:186(__init__)
   278696    0.870    0.000    0.870    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
    91067    0.432    0.000    0.870    0.000 callbacks.py:815(_implements_train_batch_hooks)
   228612    0.782    0.000    0.865    0.000 function.py:1844(<listcomp>)
  9713624    0.857    0.000    0.857    0.000 pickle.py:523(persistent_id)
   207067    0.856    0.000    0.856    0.000 {method 'item' of 'numpy.generic' objects}
      352    0.018    0.000    0.853    0.002 functional_ops.py:1112(partitioned_call)
    94148    0.236    0.000    0.849    0.000 context.py:2006(eager_mode)
  2754398    0.845    0.000    0.845    0.000 context.py:1718(context_switches)
   820715    0.691    0.000    0.838    0.000 memory.py:24(dismantle_ordered_dict)
     3850    0.013    0.000    0.831    0.000 function.py:177(_shape_relaxed_type_for_composite_tensor)
      132    0.001    0.000    0.829    0.006 save_impl.py:585(call)
  1654396    0.825    0.000    0.825    0.000 {method 'replace' of 'str' objects}
    44722    0.122    0.000    0.821    0.000 fromnumeric.py:1112(argmax)
  1607969    0.814    0.000    0.814    0.000 context.py:749(_handle)
   273147    0.483    0.000    0.812    0.000 converter.py:174(__hash__)
   137662    0.585    0.000    0.808    0.000 Hanabi.py:263(<listcomp>)
       22    0.001    0.000    0.806    0.037 functional_saver.py:57(save)
11550/3850    0.040    0.000    0.805    0.000 type_spec.py:134(_with_tensor_ranks_only)
   283035    0.629    0.000    0.800    0.000 enum.py:267(__call__)
  3199386    0.797    0.000    0.797    0.000 traceable_stack.py:121(<genexpr>)
    95318    0.113    0.000    0.786    0.000 tensor_shape.py:1121(assert_is_compatible_with)
       22    0.000    0.000    0.780    0.035 gen_io_ops.py:1694(save_v2)
   546194    0.343    0.000    0.779    0.000 api.py:153(is_autograph_artifact)
        4    0.000    0.000    0.778    0.194 distribute_lib.py:1130(run)
        4    0.000    0.000    0.777    0.194 distribute_lib.py:2537(call_for_each_replica)
        4    0.000    0.000    0.777    0.194 distribute_lib.py:2941(_call_for_each_replica)
  3319987    0.774    0.000    0.774    0.000 tensor_shape.py:826(dims)
  2555032    0.768    0.000    0.768    0.000 ops.py:3039(_variable_creator_stack)
   192683    0.384    0.000    0.759    0.000 threading.py:1104(is_alive)
        3    0.000    0.000    0.758    0.253 tmphwkujs8b.py:9(tf__train_function)
        3    0.000    0.000    0.757    0.252 training.py:785(step_function)
     2137    0.012    0.000    0.748    0.000 func_graph.py:644(_capture_helper)
  2393497    0.747    0.000    0.747    0.000 function.py:2463(input_signature)
        3    0.000    0.000    0.747    0.249 training.py:788(run_step)
    93398    0.282    0.000    0.741    0.000 shape_base.py:83(atleast_2d)
        3    0.000    0.000    0.739    0.246 training.py:716(train_step)
  1211881    0.738    0.000    0.738    0.000 object_identity.py:35(__init__)
    46245    0.283    0.000    0.736    0.000 Experiment.py:61(<listcomp>)
  1095157    0.729    0.000    0.730    0.000 traceable_stack.py:83(__init__)
  1370802    0.730    0.000    0.730    0.000 func_graph.py:427(outer_graph)
  2555032    0.726    0.000    0.726    0.000 ops.py:5133(_auto_cast_variable_read_dtype)
     2011    0.013    0.000    0.720    0.000 func_graph.py:1123(_create_substitute_placeholder)
  2190783    0.715    0.000    0.718    0.000 ops.py:5061(<dictcomp>)
   942931    0.465    0.000    0.713    0.000 pickle.py:436(put)
   195754    0.708    0.000    0.708    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
    44902    0.085    0.000    0.701    0.000 fromnumeric.py:55(_wrapfunc)
    91017    0.228    0.000    0.694    0.000 data_adapter.py:448(can_handle)
   735673    0.694    0.000    0.694    0.000 {method 'decode' of 'bytes' objects}
   273359    0.689    0.000    0.689    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextRemoveFunction}
   273385    0.560    0.000    0.688    0.000 ops.py:3997(get_collection)
   273094    0.451    0.000    0.684    0.000 inspect_utils.py:96(isconstructor)
    91017    0.160    0.000    0.684    0.000 dataset_ops.py:2920(_autotune_settings)
   556632    0.535    0.000    0.681    0.000 inspect.py:2781(<genexpr>)
   182084    0.076    0.000    0.681    0.000 data_adapter.py:550(<genexpr>)
    91017    0.221    0.000    0.680    0.000 dataset_ops.py:565(_type_spec)
    91078    0.209    0.000    0.679    0.000 tensor_util.py:804(constant_value)
   728544    0.220    0.000    0.679    0.000 generic_utils.py:792(is_default)
       11    0.000    0.000    0.674    0.061 gen_io_ops.py:1743(save_v2_eager_fallback)
    91017    0.165    0.000    0.673    0.000 version_utils.py:114(disallow_legacy_graph)
    91017    0.101    0.000    0.672    0.000 nest.py:1417(sequence_fn)
   273385    0.194    0.000    0.667    0.000 object_identity.py:225(<listcomp>)
   464571    0.292    0.000    0.666    0.000 layer_utils.py:43(has_weights)
  4219290    0.666    0.000    0.666    0.000 {built-in method builtins.callable}
   275031    0.466    0.000    0.653    0.000 function.py:1959(name)
    96685    0.196    0.000    0.645    0.000 ops.py:5744(executing_eagerly_outside_functions)
30800/7700    0.055    0.000    0.636    0.000 type_spec.py:148(relax)
507436/507414    0.272    0.000    0.635    0.000 nest.py:750(assert_shallow_structure)
   273385    0.631    0.000    0.631    0.000 function.py:3061(<listcomp>)
95790/94888    0.226    0.000    0.626    0.000 data_structures.py:103(sticky_attribute_assignment)
  2009134    0.625    0.000    0.625    0.000 op_def_library.py:235(_MaybeColocateWith)
    91017    0.212    0.000    0.622    0.000 dataset_ops.py:2907(_graph_rewrite_configs)
   100773    0.086    0.000    0.621    0.000 _collections_abc.py:664(__contains__)
    92180    0.346    0.000    0.615    0.000 resource_variable_ops.py:317(_maybe_set_handle_data)
   549736    0.610    0.000    0.611    0.000 object_identity.py:227(__iter__)
  1019883    0.609    0.000    0.609    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
    91067    0.281    0.000    0.605    0.000 data_adapter.py:535(_is_composite)
  1510117    0.602    0.000    0.602    0.000 __init__.py:1530(getEffectiveLevel)
        3    0.000    0.000    0.601    0.200 training.py:2696(_minimize)
   380297    0.498    0.000    0.594    0.000 _dill.py:386(__missing__)
    55/44    0.000    0.000    0.591    0.013 utils.py:170(<lambda>)
   507438    0.301    0.000    0.590    0.000 nest.py:954(<genexpr>)
92363/92327    0.257    0.000    0.581    0.000 tracking.py:440(wrapped)
      543    0.001    0.000    0.576    0.001 resource_variable_ops.py:1908(_dense_var_to_tensor)
       22    0.000    0.000    0.575    0.026 function.py:3718(bound_method_wrapper)
      543    0.002    0.000    0.575    0.001 resource_variable_ops.py:1317(_dense_var_to_tensor)
   273051    0.299    0.000    0.572    0.000 dataset_ops.py:3366(<listcomp>)
       51    0.001    0.000    0.571    0.011 Experiment.py:165(<listcomp>)
    91059    0.130    0.000    0.571    0.000 distribution_strategy_context.py:199(has_strategy)
      510    0.004    0.000    0.570    0.001 Hanabi.py:290(__init__)
   273385    0.493    0.000    0.570    0.000 func_graph.py:750(deferred_internal_captures)
   377018    0.568    0.000    0.568    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
   210796    0.094    0.000    0.567    0.000 _asarray.py:88(asanyarray)
    97978    0.106    0.000    0.564    0.000 iostream.py:320(_schedule_flush)
   546096    0.413    0.000    0.563    0.000 dataset_ops.py:2738(get_structure)
      543    0.003    0.000    0.562    0.001 resource_variable_ops.py:550(value)
  1280260    0.559    0.000    0.559    0.000 ops.py:5035(_device_function_stack)
    22969    0.116    0.000    0.559    0.000 Hanabi.py:237(getHint)
  1300372    0.556    0.000    0.556    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
     7698    0.008    0.000    0.554    0.000 function.py:3110(<genexpr>)
   729386    0.552    0.000    0.552    0.000 context.py:823(_set_device)
    46745    0.183    0.000    0.552    0.000 Hanabi.py:277(score)
     3849    0.015    0.000    0.547    0.000 function.py:169(_is_type_subset)
    44722    0.546    0.000    0.546    0.000 {method 'argmax' of 'numpy.ndarray' objects}
   554481    0.544    0.000    0.544    0.000 tf_logging.py:93(get_logger)
  2195423    0.541    0.000    0.541    0.000 ops.py:3148(_get_control_flow_context)
  3186281    0.540    0.000    0.540    0.000 tensor_spec.py:37(<lambda>)
      510    0.026    0.000    0.538    0.001 Hanabi.py:129(__init__)
   455085    0.414    0.000    0.538    0.000 dataset_ops.py:4108(element_spec)
   228634    0.537    0.000    0.537    0.000 function.py:271(__exit__)
    91017    0.149    0.000    0.534    0.000 gen_dataset_ops.py:6697(<listcomp>)
   273385    0.454    0.000    0.534    0.000 func_graph.py:745(deferred_external_captures)
  1002933    0.529    0.000    0.529    0.000 array_ops.py:1485(<genexpr>)
   546634    0.528    0.000    0.528    0.000 {method 'SetInParent' of 'google.protobuf.pyext._message.CMessage' objects}
  1639150    0.527    0.000    0.527    0.000 tensor_shape.py:790(_v2_behavior)
    91017    0.139    0.000    0.525    0.000 training.py:2772(_disallow_inside_tf_function)
    91016    0.140    0.000    0.521    0.000 gen_dataset_ops.py:890(<listcomp>)
   400807    0.274    0.000    0.520    0.000 pickle.py:652(save_long)
    91016    0.110    0.000    0.516    0.000 gen_dataset_ops.py:6628(<listcomp>)
   364695    0.457    0.000    0.514    0.000 device.py:45(is_device_spec)
      143    0.033    0.000    0.512    0.004 tracking.py:103(_list_functions_for_serialization)
  2190172    0.506    0.000    0.506    0.000 control_flow_util.py:191(GetContainingWhileContext)
  1300161    0.504    0.000    0.505    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
     2001    0.027    0.000    0.504    0.000 callbacks.py:1045(on_epoch_end)
99297/91286    0.272    0.000    0.502    0.000 abc.py:196(__subclasscheck__)
   820403    0.502    0.000    0.502    0.000 context.py:818(device_spec)
   273565    0.501    0.000    0.501    0.000 threading.py:74(RLock)
  2190067    0.500    0.000    0.500    0.000 errors_impl.py:86(message)
   182137    0.301    0.000    0.497    0.000 nest.py:53(_sequence_like)
     2001    0.024    0.000    0.483    0.000 callbacks.py:377(on_epoch_begin)
   546233    0.474    0.000    0.474    0.000 dtypes.py:103(as_numpy_dtype)
  1300381    0.473    0.000    0.473    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
   455085    0.358    0.000    0.472    0.000 dataset_ops.py:4058(element_spec)
    91017    0.274    0.000    0.472    0.000 callbacks.py:1038(__init__)
  1300123    0.470    0.000    0.470    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
  1004643    0.466    0.000    0.466    0.000 ops.py:452(<listcomp>)
   456979    0.232    0.000    0.466    0.000 tensor_shape.py:838(ndims)
   190662    0.186    0.000    0.462    0.000 resource_variable_ops.py:246(_handle_graph)
    91017    0.298    0.000    0.460    0.000 optimization_options.py:196(_autotune_settings)
    25500    0.138    0.000    0.457    0.000 Hanabi.py:90(__init__)
    91016    0.076    0.000    0.455    0.000 gen_dataset_ops.py:895(<listcomp>)
  1274236    0.455    0.000    0.455    0.000 tracking.py:199(__del__)
   380172    0.452    0.000    0.453    0.000 {method '__reduce_ex__' of 'object' objects}
  1300108    0.451    0.000    0.451    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
      261    0.004    0.000    0.450    0.002 gen_math_ops.py:5591(mat_mul)
    95375    0.449    0.000    0.450    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
   182032    0.182    0.000    0.449    0.000 dataset_ops.py:2775(<lambda>)
   273565    0.447    0.000    0.447    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
   138808    0.258    0.000    0.445    0.000 Hanabi.py:377(<dictcomp>)
   273603    0.445    0.000    0.445    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
   516951    0.295    0.000    0.443    0.000 object_identity.py:128(_wrap_key)
    91876    0.254    0.000    0.443    0.000 Hanabi.py:99(receive_hint)
   273385    0.379    0.000    0.442    0.000 func_graph.py:491(variables)
   820089    0.433    0.000    0.442    0.000 function.py:3760(__init__)
   546411    0.374    0.000    0.440    0.000 nest.py:81(_yield_value)
   273385    0.440    0.000    0.440    0.000 c_api_util.py:86(__init__)
   835955    0.350    0.000    0.438    0.000 tensor_shape.py:704(as_dimension)
    37392    0.327    0.000    0.434    0.000 Experiment.py:44(<listcomp>)
    91017    0.170    0.000    0.434    0.000 dataset_ops.py:3122(__init__)
    93099    0.309    0.000    0.432    0.000 tensor_util.py:986(is_tensor)
    91115    0.163    0.000    0.428    0.000 tensor_shape.py:1166(is_fully_defined)
   364693    0.425    0.000    0.425    0.000 context.py:1733(__init__)
   228634    0.424    0.000    0.424    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
        3    0.000    0.000    0.422    0.141 optimizer_v2.py:473(apply_gradients)
   637166    0.419    0.000    0.419    0.000 distribution_strategy_context.py:337(_get_default_replica_mode)
   729094    0.419    0.000    0.419    0.000 func_graph.py:97(<genexpr>)
   314547    0.234    0.000    0.406    0.000 object_identity.py:54(__eq__)
  3822964    0.406    0.000    0.406    0.000 options.py:59(<lambda>)
   639844    0.314    0.000    0.403    0.000 function.py:422(<genexpr>)
       11    0.000    0.000    0.402    0.037 functional_saver.py:193(_traced_restore)
   456697    0.402    0.000    0.402    0.000 function.py:484(<genexpr>)
   182084    0.116    0.000    0.400    0.000 callbacks.py:237(<genexpr>)
   183624    0.400    0.000    0.400    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
   593709    0.398    0.000    0.398    0.000 {built-in method _thread.allocate_lock}
       11    0.000    0.000    0.391    0.036 functional_saver.py:297(restore)
       11    0.000    0.000    0.391    0.036 functional_saver.py:310(restore_fn)
   206991    0.391    0.000    0.391    0.000 fromnumeric.py:3037(ndim)
       11    0.001    0.000    0.390    0.035 functional_saver.py:80(restore)
   273385    0.273    0.000    0.389    0.000 function.py:475(<listcomp>)
    92407    0.177    0.000    0.387    0.000 execute.py:191(make_type)
        6    0.000    0.000    0.386    0.064 distribute_lib.py:2683(merge_call)
   380213    0.199    0.000    0.386    0.000 pickle.py:723(save_tuple)
    91099    0.196    0.000    0.386    0.000 ops.py:5777(inside_function)
        6    0.000    0.000    0.386    0.064 distribute_lib.py:2717(_merge_call)
  1179914    0.384    0.000    0.384    0.000 iterator_ops.py:885(_serialize)
   546252    0.207    0.000    0.384    0.000 data_adapter.py:252(<genexpr>)
        3    0.001    0.000    0.384    0.128 optimizer_v2.py:588(_distributed_apply)
     3853    0.014    0.000    0.382    0.000 type_spec.py:110(most_specific_compatible_type)
    91017    0.148    0.000    0.382    0.000 data_adapter.py:617(can_handle)
       11    0.004    0.000    0.380    0.035 save.py:703(_serialize_object_graph)
       11    0.005    0.000    0.375    0.034 save.py:276(map_resources)
      240    0.003    0.000    0.373    0.002 nn_ops.py:3307(bias_add)
    91017    0.091    0.000    0.373    0.000 dataset_ops.py:3493(_inputs)
   546904    0.371    0.000    0.372    0.000 function.py:2421(<dictcomp>)
  1001185    0.370    0.000    0.370    0.000 dataset_ops.py:348(options)
   284577    0.370    0.000    0.370    0.000 trace.py:52(__init__)
   273374    0.369    0.000    0.369    0.000 func_graph.py:127(<listcomp>)
       24    0.000    0.000    0.369    0.015 distribute_lib.py:2233(update)
    23415    0.086    0.000    0.367    0.000 threading.py:498(__init__)
       24    0.000    0.000    0.366    0.015 distribute_lib.py:2952(_update)
       24    0.000    0.000    0.366    0.015 distribute_lib.py:2957(_update_non_slot)
        4    0.000    0.000    0.366    0.091 base_layer.py:996(_functional_construction_call)
       11    0.000    0.000    0.364    0.033 save_impl.py:202(default_save_signature)
15410/3853    0.064    0.000    0.363    0.000 type_spec.py:395(__most_specific_compatible_type_serialization)
   546190    0.263    0.000    0.363    0.000 api.py:148(autograph_artifact)
   182084    0.115    0.000    0.360    0.000 callbacks.py:239(<genexpr>)
       24    0.000    0.000    0.359    0.015 optimizer_v2.py:591(apply_grad_to_update_var)
       24    0.002    0.000    0.358    0.015 rmsprop.py:175(_resource_apply_dense)
      253    0.002    0.000    0.356    0.001 saveable_object_util.py:119(restore)
      253    0.001    0.000    0.354    0.001 resource_variable_ops.py:636(_map_resources)
      352    0.002    0.000    0.353    0.001 functional_ops.py:1175(<listcomp>)
    91017    0.088    0.000    0.351    0.000 data_adapter.py:756(can_handle)
    91176    0.202    0.000    0.351    0.000 monitoring.py:303(set)
   228605    0.349    0.000    0.349    0.000 weakref.py:393(__getitem__)
95792/95790    0.309    0.000    0.346    0.000 data_structures.py:80(wrap_or_unwrap)
  1275301    0.345    0.000    0.345    0.000 base.py:662(_deferred_dependencies)
   273385    0.289    0.000    0.343    0.000 func_graph.py:919(<listcomp>)
       15    0.000    0.000    0.341    0.023 base.py:691(_add_variable_with_custom_getter)
        4    0.000    0.000    0.341    0.085 base_layer.py:2614(_maybe_build)
19262/7706    0.014    0.000    0.341    0.000 type_spec.py:429(<genexpr>)
        4    0.000    0.000    0.340    0.085 core.py:1159(build)
       17    0.000    0.000    0.340    0.020 resource_variable_ops.py:1419(__init__)
       17    0.001    0.000    0.340    0.020 resource_variable_ops.py:1520(_init_from_args)
       15    0.000    0.000    0.339    0.023 base_layer_utils.py:55(make_variable)
       15    0.000    0.000    0.339    0.023 variables.py:182(_variable_v1_call)
       10    0.000    0.000    0.338    0.034 base_layer.py:477(add_weight)
       10    0.000    0.000    0.337    0.034 variables.py:199(<lambda>)
       10    0.000    0.000    0.337    0.034 variable_scope.py:2557(default_variable_creator)
      253    0.002    0.000    0.336    0.001 resource_variable_ops.py:2133(copy_to_graph_uninitialized)
   282193    0.335    0.000    0.335    0.000 weakref.py:406(__setitem__)
  1374848    0.334    0.000    0.334    0.000 {method 'values' of 'collections.OrderedDict' objects}
      266    0.005    0.000    0.334    0.001 resource_variable_ops.py:1821(__init__)
   182424    0.185    0.000    0.333    0.000 ops.py:1794(<listcomp>)
   273271    0.234    0.000    0.332    0.000 function.py:2845(flat_input_signature)
     2178    0.016    0.000    0.331    0.000 {built-in method builtins.print}
      357    0.005    0.000    0.331    0.001 deprecation.py:473(new_func)
    97978    0.132    0.000    0.329    0.000 iostream.py:307(_is_master_process)
   283817    0.328    0.000    0.328    0.000 {method 'isidentifier' of 'str' objects}
   228282    0.327    0.000    0.327    0.000 data_adapter.py:1232(should_sync)
   273385    0.226    0.000    0.326    0.000 function.py:442(<listcomp>)
     2001    0.019    0.000    0.325    0.000 callbacks.py:955(on_epoch_begin)
    91119    0.159    0.000    0.325    0.000 object_identity.py:137(__delitem__)
   182032    0.232    0.000    0.318    0.000 dataset_ops.py:2809(<lambda>)
   273385    0.258    0.000    0.317    0.000 func_graph.py:1093(<listcomp>)
  1432986    0.317    0.000    0.317    0.000 _dill.py:1515(is_dill)
   273385    0.317    0.000    0.317    0.000 function.py:423(<listcomp>)
   274162    0.316    0.000    0.316    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
   273385    0.313    0.000    0.313    0.000 function.py:441(<listcomp>)
    91526    0.224    0.000    0.311    0.000 types.py:135(__get__)
   182034    0.180    0.000    0.310    0.000 type_spec.py:501(<genexpr>)
   192683    0.154    0.000    0.308    0.000 threading.py:1062(_wait_for_tstate_lock)
   728136    0.306    0.000    0.306    0.000 dataset_ops.py:2960(_inputs)
   546904    0.301    0.000    0.305    0.000 function.py:2427(<dictcomp>)
   274335    0.304    0.000    0.304    0.000 {method 'values' of 'mappingproxy' objects}
        4    0.000    0.000    0.303    0.076 initializers_v2.py:387(__call__)
        4    0.000    0.000    0.303    0.076 init_ops_v2.py:528(__call__)
        4    0.000    0.000    0.303    0.076 init_ops_v2.py:1037(random_uniform)
        4    0.001    0.000    0.303    0.076 random_ops.py:207(random_uniform)
  1092204    0.298    0.000    0.298    0.000 dataset_ops.py:3387(output_structure)
   730876    0.297    0.000    0.297    0.000 op_def_library.py:46(_AttrValue)
   228634    0.296    0.000    0.296    0.000 context.py:1056(function_call_options)
    91017    0.143    0.000    0.296    0.000 optimization_options.py:259(_graph_rewrite_configs)
    91017    0.178    0.000    0.290    0.000 data_adapter.py:1239(_infer_steps)
      202    0.001    0.000    0.284    0.001 math_ops.py:1122(binary_op_wrapper)
   273051    0.284    0.000    0.284    0.000 tracking.py:143(__init__)
    91067    0.166    0.000    0.284    0.000 callbacks.py:822(_implements_test_batch_hooks)
    91503    0.246    0.000    0.284    0.000 {method 'sort' of 'list' objects}
    37150    0.081    0.000    0.283    0.000 Experiment.py:63(<listcomp>)
   376924    0.278    0.000    0.278    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
   273094    0.274    0.000    0.276    0.000 weakref.py:356(remove)
   472027    0.276    0.000    0.276    0.000 iterator_ops.py:878(__init__)
   547001    0.275    0.000    0.275    0.000 function.py:2447(fullargspec)
   319858    0.266    0.000    0.275    0.000 {built-in method builtins.sum}
   273385    0.218    0.000    0.271    0.000 object_identity.py:208(__len__)
   273095    0.270    0.000    0.270    0.000 api.py:217(convert)
      352    0.001    0.000    0.270    0.001 ops.py:3360(create_op)
   182032    0.192    0.000    0.267    0.000 tensor_spec.py:116(_to_legacy_output_classes)
   273157    0.204    0.000    0.265    0.000 tensor_util.py:281(<listcomp>)
    91017    0.236    0.000    0.264    0.000 distribute_lib.py:943(experimental_distribute_dataset)
    47043    0.136    0.000    0.264    0.000 Hanabi.py:341(<listcomp>)
   464324    0.264    0.000    0.264    0.000 iterator_ops.py:820(element_spec)
   277250    0.263    0.000    0.263    0.000 ag_ctx.py:49(__init__)
     7705    0.038    0.000    0.262    0.000 tensor_spec.py:100(most_specific_compatible_type)
    91029    0.262    0.000    0.262    0.000 {built-in method math.ceil}
   172330    0.123    0.000    0.261    0.000 nest.py:1232(<listcomp>)
   228317    0.259    0.000    0.259    0.000 iterator_ops.py:895(_to_components)
   273385    0.258    0.000    0.258    0.000 function.py:2479(vararg_name)
   107136    0.131    0.000    0.258    0.000 object_identity.py:134(__setitem__)
    46745    0.166    0.000    0.257    0.000 Hanabi.py:278(<listcomp>)
    91017    0.150    0.000    0.255    0.000 dataset_ops.py:3487(<listcomp>)
   106432    0.165    0.000    0.252    0.000 tensor_shape.py:215(__eq__)
     1001    0.009    0.000    0.251    0.000 save.py:725(_write_object_proto)
    91017    0.147    0.000    0.250    0.000 iterator_ops.py:71(_device_stack_is_empty)
   182032    0.152    0.000    0.246    0.000 dataset_ops.py:2792(<lambda>)
    47043    0.146    0.000    0.246    0.000 Experiment.py:42(<listcomp>)
   228634    0.245    0.000    0.245    0.000 function.py:265(__init__)
    91067    0.122    0.000    0.245    0.000 callbacks.py:827(_implements_predict_batch_hooks)
       22    0.000    0.000    0.244    0.011 gen_io_ops.py:466(merge_v2_checkpoints)
   457268    0.243    0.000    0.243    0.000 context.py:135(config_proto_serialized)
        2    0.000    0.000    0.241    0.121 pyplot.py:720(savefig)
   183624    0.239    0.000    0.239    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
   182034    0.139    0.000    0.238    0.000 optimization_options.py:189(_autotune_buffers)
   690860    0.237    0.000    0.237    0.000 Hanabi.py:16(handSize)
   819749    0.234    0.000    0.236    0.000 ops.py:1922(<listcomp>)
   273363    0.236    0.000    0.236    0.000 function.py:381(__init__)
   548706    0.236    0.000    0.236    0.000 function.py:1974(structured_input_signature)
       11    0.000    0.000    0.236    0.021 saving_utils.py:125(_wrapped_model)
   195555    0.235    0.000    0.235    0.000 resource_variable_ops.py:498(dtype)
    91067    0.137    0.000    0.234    0.000 data_adapter.py:625(_is_list_of_scalars)
   273185    0.200    0.000    0.233    0.000 inspect.py:73(isclass)
       22    0.002    0.000    0.233    0.011 graph_view.py:336(_serialize_gathered_objects)
   273137    0.195    0.000    0.232    0.000 inspect.py:64(ismodule)
       11    0.000    0.000    0.228    0.021 gen_io_ops.py:521(merge_v2_checkpoints_eager_fallback)
   273102    0.192    0.000    0.227    0.000 inspect.py:277(isbuiltin)
   372744    0.227    0.000    0.227    0.000 tensor_spec.py:73(name)
   548966    0.227    0.000    0.227    0.000 function.py:763(forward)
   273385    0.226    0.000    0.226    0.000 function.py:3777(__init__)
      253    0.001    0.000    0.224    0.001 resource_variable_ops.py:307(shape_safe_assign_variable_handle)
    91017    0.203    0.000    0.223    0.000 data_adapter.py:884(can_handle)
    42834    0.025    0.000    0.220    0.000 __init__.py:340(set_verbosity)
   550627    0.219    0.000    0.219    0.000 function.py:501(name)
   280265    0.219    0.000    0.219    0.000 object_identity.py:38(unwrapped)
   111908    0.180    0.000    0.217    0.000 callbacks.py:675(on_train_batch_end)
   273315    0.186    0.000    0.216    0.000 context.py:1841(global_seed)
   273201    0.173    0.000    0.214    0.000 options.py:80(set_fn)
    91017    0.164    0.000    0.213    0.000 callbacks.py:269(set_params)
   273051    0.212    0.000    0.212    0.000 def_function.py:423(functions_run_eagerly)
    91017    0.140    0.000    0.211    0.000 optimization_options.py:55(_graph_rewrites)
       11    0.000    0.000    0.207    0.019 file_io.py:549(atomic_write_string_to_file)
   273051    0.207    0.000    0.207    0.000 tracking.py:146(resources)
   182072    0.158    0.000    0.206    0.000 op_def_library.py:447(<listcomp>)
   273385    0.204    0.000    0.204    0.000 function.py:2836(function_spec)
       11    0.000    0.000    0.201    0.018 signature_serialization.py:96(canonicalize_signatures)
        8    0.000    0.000    0.201    0.025 tensor_util.py:1017(shape_tensor)
   478142    0.200    0.000    0.200    0.000 {method 'split' of 'str' objects}
   228612    0.200    0.000    0.200    0.000 trace.py:89(set_metadata)
   273385    0.155    0.000    0.199    0.000 function.py:443(<listcomp>)
    91117    0.198    0.000    0.198    0.000 callbacks.py:607(__init__)
   273283    0.198    0.000    0.198    0.000 converter.py:170(as_tuple)
    97994    0.197    0.000    0.197    0.000 {built-in method posix.getpid}
    42834    0.045    0.000    0.195    0.000 _flagvalues.py:500(__setattr__)
   273051    0.194    0.000    0.194    0.000 dataset_ops.py:4023(_should_unpack_args)
     2970    0.009    0.000    0.194    0.000 base_layer.py:1347(weights)
   273627    0.191    0.000    0.191    0.000 function.py:2451(is_method)
   502070    0.190    0.000    0.190    0.000 function.py:2014(<listcomp>)
       44    0.012    0.000    0.189    0.004 graph_view.py:89(_serialize_slot_variables)
   273343    0.189    0.000    0.189    0.000 ops.py:3112(seed)
   167862    0.161    0.000    0.188    0.000 callbacks.py:659(on_train_batch_begin)
    412/4    0.001    0.000    0.187    0.047 artist.py:30(draw_wrapper)
        4    0.000    0.000    0.187    0.047 figure.py:1688(draw)
   564025    0.185    0.000    0.185    0.000 inspect.py:2502(name)
      8/4    0.000    0.000    0.184    0.046 image.py:119(_draw_list_compositing_images)
        4    0.000    0.000    0.184    0.046 _base.py:2555(draw)
   273385    0.182    0.000    0.182    0.000 variable_scope.py:1166(use_resource)
   273051    0.140    0.000    0.181    0.000 base.py:1192(isspmatrix)
   169268    0.179    0.000    0.179    0.000 iostream.py:93(_event_pipe)
     2143    0.005    0.000    0.178    0.000 base_layer.py:2235(variables)
   546102    0.178    0.000    0.178    0.000 dataset_ops.py:3409(function)
        3    0.000    0.000    0.178    0.059 backprop.py:983(gradient)
   273201    0.119    0.000    0.177    0.000 data_adapter.py:247(_is_tensor)
        3    0.000    0.000    0.177    0.059 imperative_grad.py:33(imperative_grad)
        3    0.002    0.001    0.177    0.059 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeGradient}
   551221    0.176    0.000    0.176    0.000 func_graph.py:743(<listcomp>)
   376924    0.176    0.000    0.176    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
       15    0.000    0.000    0.175    0.012 conversion.py:109(convert)
       15    0.000    0.000    0.175    0.012 transpiler.py:384(transform_function)
       22    0.002    0.000    0.174    0.008 graph_view.py:412(objects_ids_and_slot_variables)
       15    0.000    0.000    0.174    0.012 transpiler.py:362(_transformed_factory)
    91017    0.098    0.000    0.174    0.000 dataset_ops.py:3489(<listcomp>)
   314547    0.131    0.000    0.173    0.000 object_identity.py:42(_assert_type)
       51    0.001    0.000    0.173    0.003 backprop.py:132(_gradient_function)
       11    0.000    0.000    0.173    0.016 functional_saver.py:184(_traced_save)
        2    0.000    0.000    0.172    0.086 figure.py:2063(savefig)
        2    0.000    0.000    0.172    0.086 backend_bases.py:2001(print_figure)
     3268    0.171    0.000    0.171    0.000 {built-in method builtins.dir}
   555947    0.171    0.000    0.171    0.000 function.py:1964(graph)
   274038    0.170    0.000    0.170    0.000 tf2.py:42(enabled)
       11    0.000    0.000    0.169    0.015 graph_view.py:389(frozen_saveable_objects)
    90967    0.166    0.000    0.169    0.000 training.py:1420(make_predict_function)
    91193    0.146    0.000    0.168    0.000 execute.py:166(make_int)
   283034    0.167    0.000    0.167    0.000 enum.py:517(__new__)
      283    0.002    0.000    0.166    0.001 resource_variable_ops.py:146(_variable_handle_from_shape_and_dtype)
   279974    0.164    0.000    0.164    0.000 distribute_lib.py:771(extended)
      154    0.000    0.000    0.163    0.001 base_layer.py:3009(_tracking_metadata)
      154    0.001    0.000    0.163    0.001 base_serialization.py:45(tracking_metadata)
   273565    0.161    0.000    0.161    0.000 ops.py:4981(switch_to_thread_local)
   188172    0.160    0.000    0.160    0.000 Hanabi.py:304(availableActions)
   186645    0.094    0.000    0.159    0.000 base_layer.py:2697(_maybe_create_attribute)
   228282    0.158    0.000    0.158    0.000 data_adapter.py:1212(step_increment)
    57955    0.111    0.000    0.158    0.000 callbacks.py:985(_maybe_init_progbar)
   284577    0.158    0.000    0.158    0.000 trace.py:123(__exit__)
    47043    0.085    0.000    0.157    0.000 Hanabi.py:354(next_player)
   273381    0.130    0.000    0.156    0.000 function.py:3784(__del__)
       11    0.000    0.000    0.156    0.014 ops.py:3268(as_graph_def)
       11    0.041    0.004    0.156    0.014 ops.py:3178(_as_graph_def)
   273199    0.122    0.000    0.156    0.000 tensor_shape.py:1169(<genexpr>)
   101571    0.154    0.000    0.154    0.000 ops.py:1217(graph)
        8    0.000    0.000    0.154    0.019 axis.py:1219(draw)
   546770    0.153    0.000    0.153    0.000 function.py:2475(arg_names)
      103    0.001    0.000    0.153    0.001 gen_math_ops.py:6143(mul)
        2    0.000    0.000    0.151    0.076 backend_pdf.py:2532(print_pdf)
      121    0.001    0.000    0.151    0.001 function_serialization.py:94(serialize_function)
       97    0.000    0.000    0.150    0.002 math_ops.py:463(multiply)
    93430    0.051    0.000    0.150    0.000 shape_base.py:220(_vhstack_dispatcher)
    23402    0.143    0.000    0.150    0.000 _methods.py:50(_count_reduce_items)
    91176    0.149    0.000    0.149    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
    91218    0.125    0.000    0.149    0.000 op_def_library.py:148(_MakeInt)
   172328    0.149    0.000    0.149    0.000 callbacks.py:476(on_predict_batch_end)
   188462    0.149    0.000    0.149    0.000 resource_variable_ops.py:588(trainable)
       91    0.000    0.000    0.148    0.002 math_ops.py:1450(_mul_dispatch)
    15403    0.017    0.000    0.145    0.000 type_spec.py:286(_deserialize)
   273553    0.145    0.000    0.145    0.000 ops.py:3117(seed)
       11    0.001    0.000    0.145    0.013 util.py:1100(_gather_saveables)
    81361    0.112    0.000    0.144    0.000 training.py:1609(<lambda>)
   138735    0.144    0.000    0.144    0.000 Hanabi.py:280(availableActions)
        2    0.000    0.000    0.143    0.071 context.py:902(config)
   182034    0.142    0.000    0.142    0.000 data_adapter.py:1147(_truncate_execution_to_epoch)
        4    0.000    0.000    0.142    0.036 context.py:1216(_initialize_physical_devices)
        1    0.142    0.142    0.142    0.142 {built-in method tensorflow.python._pywrap_tfe.TF_ListPhysicalDevices}
       11    0.000    0.000    0.138    0.013 graph_view.py:364(serialize_object_graph)
      132    0.000    0.000    0.137    0.001 layer_serialization.py:38(python_properties)
   277814    0.134    0.000    0.134    0.000 function.py:3780(release)
      240    0.002    0.000    0.134    0.001 gen_nn_ops.py:648(bias_add)
   546099    0.134    0.000    0.134    0.000 dataset_ops.py:2991(element_spec)
    15829    0.025    0.000    0.134    0.000 save.py:108(list_dependencies)
       11    0.000    0.000    0.133    0.012 file_io.py:323(write_string_to_file)
   228634    0.129    0.000    0.129    0.000 context.py:127(executor_type)
   172328    0.129    0.000    0.129    0.000 callbacks.py:464(on_predict_batch_begin)
     4378    0.019    0.000    0.128    0.000 backend.py:489(deprecated_internal_learning_phase_scope)
      283    0.003    0.000    0.127    0.000 gen_resource_variable_ops.py:1163(var_handle_op)
     9606    0.015    0.000    0.127    0.000 ops.py:1173(get_shape)
        3    0.000    0.000    0.126    0.042 transpiler.py:300(_transform_function)
   273385    0.125    0.000    0.125    0.000 function.py:2471(is_pure)
     2087    0.041    0.000    0.124    0.000 training.py:589(metrics)
   455085    0.123    0.000    0.123    0.000 dataset_ops.py:3605(element_spec)
       44    0.014    0.000    0.122    0.003 graph_view.py:185(_breadth_first_traversal)
   274335    0.118    0.000    0.118    0.000 inspect.py:2821(return_annotation)
       11    0.018    0.002    0.118    0.011 file_io.py:99(write)
 7676/144    0.006    0.000    0.116    0.001 ast.py:249(visit)
    91017    0.074    0.000    0.115    0.000 data_adapter.py:1474(pack_x_y_sample_weight)
   282008    0.112    0.000    0.112    0.000 inspect.py:2514(kind)
    91017    0.112    0.000    0.112    0.000 data_adapter.py:413(get_size)
   284577    0.111    0.000    0.111    0.000 trace.py:85(__enter__)
   364067    0.111    0.000    0.111    0.000 dataset_ops.py:2949(_inputs)
   273139    0.110    0.000    0.110    0.000 numeric.py:2283(_array_equal_dispatcher)
   274335    0.110    0.000    0.110    0.000 inspect.py:2817(parameters)
   186861    0.107    0.000    0.107    0.000 object_identity.py:125(__init__)
    94504    0.066    0.000    0.105    0.000 ops.py:535(get_shape)
     3331    0.016    0.000    0.104    0.000 base_layer.py:1311(trainable_weights)
       22    0.000    0.000    0.104    0.005 model_serialization.py:34(_python_properties_internal)
   281326    0.103    0.000    0.103    0.000 inspect.py:2510(annotation)
    42834    0.014    0.000    0.103    0.000 __init__.py:174(value)
   191035    0.103    0.000    0.103    0.000 resource_variable_ops.py:545(handle)
    91023    0.099    0.000    0.099    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
       11    0.099    0.009    0.099    0.009 file_io.py:81(_prewrite_check)
    93561    0.051    0.000    0.099    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)
     3316    0.010    0.000    0.099    0.000 base_layer.py:1326(non_trainable_weights)
   273385    0.096    0.000    0.099    0.000 func_graph.py:1016(<listcomp>)
   273271    0.098    0.000    0.098    0.000 function.py:2467(flat_input_signature)
    91615    0.098    0.000    0.098    0.000 device_spec.py:272(device_type)
     6647    0.035    0.000    0.097    0.000 base_layer.py:2835(_gather_children_attribute)
   194767    0.097    0.000    0.097    0.000 ops.py:167(__init__)
     2363    0.026    0.000    0.097    0.000 custom_gradient.py:45(copy_handle_data)
        3    0.000    0.000    0.096    0.032 conversion.py:63(transform_ast)
   550648    0.095    0.000    0.095    0.000 Hanabi.py:220(<listcomp>)
   182032    0.094    0.000    0.094    0.000 tensor_spec.py:113(_to_legacy_output_shapes)
   273385    0.094    0.000    0.094    0.000 func_graph.py:738(<listcomp>)
    91017    0.075    0.000    0.093    0.000 dataset_ops.py:3150(<lambda>)
    60269    0.093    0.000    0.093    0.000 {built-in method time.time}
   188172    0.092    0.000    0.092    0.000 Hanabi.py:188(__init__)
   206991    0.091    0.000    0.091    0.000 fromnumeric.py:3033(_ndim_dispatcher)
   273051    0.091    0.000    0.091    0.000 dataset_ops.py:4139(element_spec)
 6182/330    0.010    0.000    0.090    0.000 generic_utils.py:235(serialize_keras_object)
      180    0.001    0.000    0.089    0.000 activations.py:190(softplus)
    42834    0.038    0.000    0.089    0.000 __init__.py:179(_update_logging_levels)
      180    0.001    0.000    0.088    0.000 gen_nn_ops.py:10917(softplus)
    91176    0.088    0.000    0.088    0.000 monitoring.py:295(__init__)
    91526    0.088    0.000    0.088    0.000 enum.py:599(value)
   273048    0.087    0.000    0.087    0.000 dataset_ops.py:3544(element_spec)
       44    0.000    0.000    0.087    0.002 functional.py:597(get_config)
   182032    0.086    0.000    0.086    0.000 tensor_spec.py:110(_to_legacy_output_types)
    47375    0.085    0.000    0.085    0.000 fromnumeric.py:74(<dictcomp>)
   194767    0.085    0.000    0.085    0.000 ops.py:173(__exit__)
    91075    0.084    0.000    0.084    0.000 backend_config.py:67(floatx)
    57243    0.069    0.000    0.084    0.000 Hanabi.py:147(numberOfTiles)
   273049    0.083    0.000    0.083    0.000 dataset_ops.py:3018(element_spec)
   273385    0.083    0.000    0.083    0.000 function.py:445(<listcomp>)
     4000    0.033    0.000    0.082    0.000 backend.py:1341(dtype)
 5242/201    0.014    0.000    0.082    0.000 ast.py:302(generic_visit)
      352    0.002    0.000    0.082    0.000 functional_ops.py:1217(_set_read_only_resource_inputs_attr)
  3304/66    0.008    0.000    0.082    0.001 transformer.py:421(visit)
       16    0.001    0.000    0.081    0.005 axis.py:1098(_update_ticks)
    91017    0.047    0.000    0.081    0.000 optimization_options.py:60(_graph_rewrite_configs)
      110    0.002    0.000    0.080    0.001 layer_serialization.py:43(_python_properties_internal)
      550    0.003    0.000    0.079    0.000 function.py:489(add_to_graph)
     6751    0.027    0.000    0.078    0.000 base_layer.py:2958(_dedup_weights)
      198    0.003    0.000    0.078    0.000 function_serialization.py:52(serialize_concrete_function)
   273396    0.077    0.000    0.077    0.000 function.py:1586(<genexpr>)
    91029    0.063    0.000    0.077    0.000 tensor_shape.py:97(dimension_value)
   273051    0.076    0.000    0.076    0.000 dataset_ops.py:3496(element_spec)
    55/11    0.000    0.000    0.076    0.007 save_impl.py:210(_replace_child_layer_functions)
    92968    0.075    0.000    0.075    0.000 data_adapter.py:425(should_recreate_iterator)
   182109    0.075    0.000    0.075    0.000 tensor_spec.py:153(<lambda>)
        9    0.000    0.000    0.074    0.008 math_grad.py:147(_SumGrad)
        3    0.000    0.000    0.074    0.025 math_grad.py:249(_MeanGrad)
       11    0.000    0.000    0.073    0.007 file_io.py:516(rename)
       11    0.001    0.000    0.072    0.007 file_io.py:532(rename_v2)
      781    0.005    0.000    0.072    0.000 ops.py:3319(_add_function)
       11    0.071    0.006    0.071    0.006 {built-in method tensorflow.python._pywrap_file_io.RenameFile}
      132    0.001    0.000    0.071    0.001 layer_serialization.py:113(get_config)
       11    0.003    0.000    0.070    0.006 meta_graph.py:457(strip_graph_default_valued_attrs)
        2    0.000    0.000    0.069    0.034 backend_bases.py:1932(draw_idle)
        2    0.000    0.000    0.069    0.034 backend_agg.py:384(draw)
       22    0.011    0.001    0.068    0.003 graph_view.py:318(_fill_object_graph_proto)
   182034    0.067    0.000    0.067    0.000 dataset_ops.py:4368(options)
   192683    0.067    0.000    0.067    0.000 threading.py:506(is_set)
     2904    0.016    0.000    0.067    0.000 meta_graph.py:474(_strip_node_default_valued_attrs)
        3    0.000    0.000    0.066    0.022 compile_utils.py:164(__call__)
       44    0.002    0.000    0.066    0.001 functional.py:1244(get_network_config)
       71    0.002    0.000    0.065    0.001 axis.py:56(__init__)
    91061    0.065    0.000    0.065    0.000 distribution_strategy_context.py:312(_get_default_strategy)
     5742    0.006    0.000    0.065    0.000 graph_view.py:158(list_dependencies)
      781    0.065    0.000    0.065    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
       11    0.000    0.000    0.065    0.006 tmpamx0glat.py:9(tf__signature_wrapper)
    91017    0.065    0.000    0.065    0.000 training_utils.py:643(handle_partial_sample_weights)
   228634    0.064    0.000    0.064    0.000 function.py:268(__enter__)
   273385    0.064    0.000    0.064    0.000 func_graph.py:493(<listcomp>)
      352    0.008    0.000    0.063    0.000 auto_control_deps_utils.py:36(get_read_only_resource_input_indices_graph)
      312    0.002    0.000    0.063    0.000 def_function.py:579(_defun_with_scope)
       24    0.062    0.003    0.062    0.003 {built-in method io.open}
      638    0.001    0.000    0.062    0.000 nested_structure_coder.py:86(encode_structure)
       11    0.000    0.000    0.061    0.006 function.py:1605(__call__)
       11    0.000    0.000    0.061    0.006 function.py:1657(_call_impl)
       11    0.000    0.000    0.061    0.006 function.py:1675(_call_with_flat_signature)
    91117    0.060    0.000    0.060    0.000 callbacks.py:619(set_model)
    20744    0.036    0.000    0.059    0.000 base_layer.py:2847(_flatten_layers)
 3586/638    0.010    0.000    0.059    0.000 nested_structure_coder.py:78(_map_structure)
    47208    0.059    0.000    0.059    0.000 {method 'reshape' of 'numpy.ndarray' objects}
    91017    0.058    0.000    0.058    0.000 data_adapter.py:1272(_validate_data_handler)
    92918    0.058    0.000    0.058    0.000 data_adapter.py:227(on_epoch_end)
        1    0.058    0.058    0.058    0.058 {built-in method tensorflow.python._pywrap_tfe.TFE_NewContext}
       48    0.000    0.000    0.057    0.001 state_ops.py:198(assign)
     6647    0.014    0.000    0.057    0.000 base_layer.py:2844(<genexpr>)
   149568    0.054    0.000    0.056    0.000 Hanabi.py:180(__init__)
12934/2114    0.007    0.000    0.056    0.000 typing.py:1145(__subclasscheck__)
       77    0.000    0.000    0.055    0.001 module.py:171(submodules)
       22    0.001    0.000    0.055    0.003 saving_utils.py:147(model_metadata)
  187/132    0.008    0.000    0.055    0.000 module.py:317(_flatten_module)
       51    0.000    0.000    0.055    0.001 math_ops.py:1419(_add_dispatch)
  220/198    0.021    0.000    0.055    0.000 ops.py:6267(dismantle_graph)
       51    0.000    0.000    0.054    0.001 gen_math_ops.py:463(add_v2)
      355    0.005    0.000    0.054    0.000 tf_inspect.py:260(getcallargs)
     2001    0.041    0.000    0.053    0.000 callbacks.py:1660(on_epoch_end)
   195436    0.053    0.000    0.053    0.000 {method 'append' of 'collections.deque' objects}
    37/25    0.000    0.000    0.052    0.002 <frozen importlib._bootstrap>:966(_find_and_load)
       24    0.000    0.000    0.052    0.002 math_ops.py:4739(sqrt)
      312    0.002    0.000    0.052    0.000 def_function.py:629(_defun)
     16/7    0.000    0.000    0.052    0.007 <frozen importlib._bootstrap_external>:672(exec_module)
   273385    0.052    0.000    0.052    0.000 func_graph.py:748(<listcomp>)
       24    0.000    0.000    0.052    0.002 gen_math_ops.py:10161(sqrt)
     16/4    0.000    0.000    0.052    0.013 <frozen importlib._bootstrap>:936(_find_and_load_unlocked)
   183576    0.051    0.000    0.051    0.000 distribute_lib.py:2973(value_container)
    91017    0.051    0.000    0.051    0.000 data_adapter.py:1034(broadcast_sample_weight_modes)
       24    0.000    0.000    0.051    0.002 __init__.py:108(import_module)
    25/24    0.000    0.000    0.051    0.002 <frozen importlib._bootstrap>:982(_gcd_import)
      264    0.003    0.000    0.051    0.000 core.py:1209(get_config)
    90967    0.051    0.000    0.051    0.000 training.py:1604(<lambda>)
     15/4    0.000    0.000    0.050    0.013 <frozen importlib._bootstrap>:651(_load_unlocked)
       22    0.011    0.000    0.050    0.002 graph_view.py:209(_add_attributes_to_object_graph)
    53670    0.026    0.000    0.050    0.000 pickle.py:641(save_none)
    23088    0.034    0.000    0.049    0.000 threading.py:251(_acquire_restore)
  1813/33    0.002    0.000    0.049    0.001 converter.py:313(visit)
    47043    0.049    0.000    0.049    0.000 {method 'random' of '_random.Random' objects}
    32/10    0.000    0.000    0.049    0.005 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
    91067    0.048    0.000    0.048    0.000 callbacks.py:616(set_params)
       34    0.000    0.000    0.048    0.001 math_ops.py:524(subtract)
       34    0.000    0.000    0.048    0.001 gen_math_ops.py:10433(sub)
   194767    0.048    0.000    0.048    0.000 ops.py:170(__enter__)
      308    0.002    0.000    0.047    0.000 ops.py:2013(colocation_groups)
     7747    0.026    0.000    0.047    0.000 layer_utils.py:234(filter_empty_layer_containers)
        3    0.000    0.000    0.047    0.016 transpiler.py:167(create)
        1    0.000    0.000    0.046    0.046 input_layer.py:210(Input)
    91016    0.046    0.000    0.046    0.000 dataset_ops.py:3541(_inputs)
    91017    0.046    0.000    0.046    0.000 data_adapter.py:410(get_dataset)
   273385    0.046    0.000    0.046    0.000 func_graph.py:753(<listcomp>)
     17/7    0.000    0.000    0.045    0.006 {built-in method builtins.exec}
       11    0.008    0.001    0.045    0.004 save.py:247(fill_object_graph_proto)
     2001    0.029    0.000    0.045    0.000 generic_utils.py:497(__init__)
   137662    0.044    0.000    0.044    0.000 Hanabi.py:216(<listcomp>)
      352    0.006    0.000    0.044    0.000 save_impl.py:309(_reset_layer_losses)
    91017    0.043    0.000    0.043    0.000 data_adapter.py:1217(inferred_steps)
        2    0.000    0.000    0.043    0.022 pyplot.py:2759(plot)
    91017    0.043    0.000    0.043    0.000 dataset_ops.py:4143(_transformation_name)
        1    0.000    0.000    0.043    0.043 input_layer.py:91(__init__)
     3850    0.006    0.000    0.042    0.000 function.py:3103(<listcomp>)
        4    0.000    0.000    0.041    0.010 pyplot.py:861(gca)
      120    0.001    0.000    0.041    0.000 text.py:867(get_window_extent)
    91017    0.041    0.000    0.041    0.000 distribute_lib.py:2993(_in_multi_worker_mode)
       54    0.001    0.000    0.040    0.001 axis.py:289(draw)
    42834    0.016    0.000    0.040    0.000 _flagvalues.py:525(_assert_validators)
       32    0.000    0.000    0.039    0.001 ticker.py:2201(__call__)
    90967    0.039    0.000    0.039    0.000 callbacks.py:804(on_predict_end)
       55    0.001    0.000    0.039    0.001 save_impl.py:83(wrap_layer_objects)
       37    0.000    0.000    0.038    0.001 templates.py:234(replace)
       32    0.000    0.000    0.038    0.001 ticker.py:2205(tick_values)
    91614    0.038    0.000    0.038    0.000 ops.py:3003(<lambda>)
     5394    0.023    0.000    0.038    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
    23415    0.028    0.000    0.038    0.000 threading.py:239(__enter__)
       24    0.000    0.000    0.038    0.002 variables.py:1072(_run_op)
       32    0.002    0.000    0.037    0.001 ticker.py:2141(_raw_ticks)
     4195    0.007    0.000    0.037    0.000 ops.py:5325(control_dependencies)
      264    0.002    0.000    0.037    0.000 base_layer.py:640(get_config)
   111908    0.037    0.000    0.037    0.000 callbacks.py:627(on_batch_end)
        3    0.000    0.000    0.037    0.012 math_ops.py:3894(reduced_shape)
    90967    0.036    0.000    0.036    0.000 callbacks.py:793(on_predict_begin)
        4    0.000    0.000    0.036    0.009 gen_random_ops.py:695(random_uniform)
    27335    0.025    0.000    0.036    0.000 random.py:223(_randbelow)
     3850    0.012    0.000    0.036    0.000 function.py:157(_type_spec_for)
     2189    0.008    0.000    0.036    0.000 backend.py:429(deprecated_internal_set_learning_phase)
      215    0.005    0.000    0.036    0.000 lines.py:269(__init__)
    91017    0.036    0.000    0.036    0.000 dataset_ops.py:4062(_transformation_name)
      510    0.011    0.000    0.035    0.000 random.py:263(shuffle)
    91017    0.035    0.000    0.035    0.000 dataset_ops.py:4112(_transformation_name)
      170    0.004    0.000    0.034    0.000 text.py:272(_get_layout)
        4    0.000    0.000    0.034    0.009 figure.py:1913(gca)
        2    0.000    0.000    0.034    0.017 figure.py:1259(add_subplot)
       11    0.000    0.000    0.034    0.003 save.py:481(_generate_signatures)
        2    0.000    0.000    0.034    0.017 _subplots.py:18(__init__)
       23    0.000    0.000    0.034    0.001 lazy_loader.py:61(__getattr__)
       23    0.000    0.000    0.034    0.001 lazy_loader.py:42(_load)
       34    0.000    0.000    0.033    0.001 axis.py:1938(_get_tick)
    23415    0.028    0.000    0.033    0.000 threading.py:242(__exit__)
        2    0.000    0.000    0.033    0.017 _base.py:378(__init__)
      209    0.001    0.000    0.033    0.000 func_graph.py:1269(dismantle_func_graph)
       37    0.000    0.000    0.033    0.001 axis.py:2225(_get_tick)
        3    0.000    0.000    0.032    0.011 loader.py:70(load_ast)
        1    0.000    0.000    0.031    0.031 tmpzo79h315.py:9(tf__predict_function)
     9606    0.020    0.000    0.031    0.000 tensor_shape.py:1004(assert_has_rank)
        1    0.000    0.000    0.031    0.031 training.py:1441(step_function)
     9746    0.018    0.000    0.031    0.000 meta_graph.py:443(_is_default_attr_value)
     3285    0.002    0.000    0.030    0.000 def_function.py:1042(<genexpr>)
     4224    0.005    0.000    0.030    0.000 base.py:498(no_automatic_dependency_tracking_scope)
  495/297    0.003    0.000    0.030    0.000 nested_structure_coder.py:179(do_encode)
       17    0.000    0.000    0.030    0.002 resource_variable_ops.py:198(eager_safe_variable_handle)
     1056    0.004    0.000    0.030    0.000 auto_control_deps_utils.py:63(_get_read_only_resource_input_indices_op)
     2321    0.003    0.000    0.030    0.000 ops.py:3264(<listcomp>)
   217/69    0.000    0.000    0.029    0.000 transformer.py:282(visit_block)
  105/101    0.000    0.000    0.029    0.000 {built-in method builtins.__import__}
     8190    0.014    0.000    0.029    0.000 _weakrefset.py:58(__iter__)
    21417    0.014    0.000    0.029    0.000 __init__.py:335(get_verbosity)
     1613    0.005    0.000    0.029    0.000 function.py:211(is_same_structure)
    91017    0.028    0.000    0.028    0.000 distribute_lib.py:2904(_experimental_distribute_dataset)
        3    0.000    0.000    0.028    0.009 losses.py:117(__call__)
      121    0.001    0.000    0.028    0.000 function_serialization.py:29(_serialize_function_spec)
   167862    0.028    0.000    0.028    0.000 callbacks.py:622(on_batch_begin)
       16    0.000    0.000    0.028    0.002 axis.py:1428(get_major_ticks)
    42834    0.013    0.000    0.027    0.000 __init__.py:1280(setLevel)
      352    0.004    0.000    0.027    0.000 save_impl.py:321(_restore_layer_losses)
     1260    0.002    0.000    0.027    0.000 ops.py:4368(device)
        3    0.000    0.000    0.026    0.009 control_flow.py:402(transform)
       11    0.000    0.000    0.026    0.002 save.py:468(_call_function_with_mapped_captures)
      510    0.002    0.000    0.026    0.000 Hanabi.py:301(<listcomp>)
       24    0.000    0.000    0.026    0.001 resource_variable_ops.py:1953(value)
        3    0.000    0.000    0.026    0.009 parser.py:190(parse_entity)
       24    0.000    0.000    0.026    0.001 resource_variable_ops.py:1959(_read_variable_op)
        1    0.000    0.000    0.026    0.026 __init__.py:20(<module>)
       16    0.000    0.000    0.026    0.002 axis.py:1171(_get_tick_bboxes)
       16    0.000    0.000    0.026    0.002 axis.py:1173(<listcomp>)
        2    0.000    0.000    0.026    0.013 <__array_function__ internals>:2(savetxt)
    23088    0.019    0.000    0.026    0.000 threading.py:248(_release_save)
        1    0.000    0.000    0.026    0.026 training.py:1444(run_step)
        2    0.011    0.005    0.025    0.013 npyio.py:1211(savetxt)
    91017    0.025    0.000    0.025    0.000 {method 'pop' of 'set' objects}
        3    0.000    0.000    0.025    0.008 metrics_utils.py:73(decorated)
     7700    0.011    0.000    0.025    0.000 function.py:3087(<genexpr>)
       11    0.000    0.000    0.025    0.002 gen_io_ops.py:1463(restore_v2)
    46473    0.025    0.000    0.025    0.000 fromnumeric.py:2546(_amax_dispatcher)
       13    0.000    0.000    0.025    0.002 resource_variable_ops.py:806(assign_add)
     2550    0.006    0.000    0.025    0.000 Hanabi.py:226(__init__)
     2087    0.012    0.000    0.025    0.000 compile_utils.py:123(metrics)
       27    0.000    0.000    0.024    0.001 math_ops.py:1267(truediv)
       27    0.000    0.000    0.024    0.001 math_ops.py:1220(_truediv_python3)
        2    0.000    0.000    0.024    0.012 _base.py:948(cla)
      154    0.001    0.000    0.024    0.000 json_utils.py:43(encode)
       50    0.000    0.000    0.024    0.000 random_ops.py:319(random_shuffle)
 10868/66    0.011    0.000    0.024    0.000 copy.py:132(deepcopy)
    42834    0.020    0.000    0.024    0.000 converter.py:138(absl_to_standard)
     1569    0.004    0.000    0.024    0.000 func_graph.py:265(watch_variable)
    44722    0.024    0.000    0.024    0.000 fromnumeric.py:1108(_argmax_dispatcher)
        3    0.000    0.000    0.024    0.008 optimizer_v2.py:778(_prepare)
       11    0.000    0.000    0.023    0.002 builder_impl.py:757(copy_assets_to_destination_dir)
      528    0.000    0.000    0.023    0.000 saveable_object.py:53(tensor)
        3    0.000    0.000    0.023    0.008 math_grad.py:1424(_DivNoNanGrad)
       23    0.000    0.000    0.023    0.001 array_ops.py:3058(placeholder)
       20    0.000    0.000    0.023    0.001 math_ops.py:1921(reduce_sum)
       23    0.000    0.000    0.023    0.001 gen_array_ops.py:6769(placeholder)
       50    0.000    0.000    0.023    0.000 gen_random_ops.py:528(random_shuffle)
        3    0.001    0.000    0.023    0.008 origin_info.py:89(create_source_map)
      491    0.002    0.000    0.023    0.000 typing.py:875(__extrahook__)
       27    0.001    0.000    0.023    0.001 gen_math_ops.py:7416(real_div)
        3    0.000    0.000    0.023    0.008 inspect_utils.py:143(getimmediatesource)
        3    0.000    0.000    0.023    0.008 rmsprop.py:163(_prepare_local)
      253    0.001    0.000    0.023    0.000 saveable_object_util.py:100(f)
        3    0.000    0.000    0.023    0.008 metrics.py:173(update_state_fn)
      704    0.007    0.000    0.023    0.000 ops.py:6937(set_int_list_attr)
3880/1680    0.005    0.000    0.022    0.000 tracking.py:80(__setattr__)
      166    0.002    0.000    0.022    0.000 lines.py:751(draw)
        1    0.000    0.000    0.022    0.022 training.py:1396(predict_step)
        2    0.000    0.000    0.022    0.011 backend_pdf.py:592(finalize)
      715    0.003    0.000    0.022    0.000 def_function.py:1009(_list_all_concrete_functions)
        3    0.000    0.000    0.022    0.007 metrics.py:336(update_state)
      630    0.002    0.000    0.022    0.000 ops.py:4361(_add_device_to_stack)
        3    0.004    0.001    0.021    0.007 inspect_utils.py:116(_fix_linecache_record)
        3    0.000    0.000    0.021    0.007 losses_utils.py:71(compute_weighted_loss)
        2    0.000    0.000    0.021    0.011 backend_pdf.py:711(writeFonts)
        2    0.000    0.000    0.021    0.011 backend_pdf.py:896(embedTTF)
        2    0.000    0.000    0.021    0.011 backend_pdf.py:913(embedTTFType3)
        1    0.000    0.000    0.021    0.021 Experiment.py:33(__init__)
        1    0.000    0.000    0.021    0.021 training.py:462(compile)
      136    0.002    0.000    0.021    0.000 text.py:670(draw)
       16    0.000    0.000    0.021    0.001 axis.py:1346(get_majorticklocs)
       11    0.021    0.002    0.021    0.002 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToGraphDef}
     5742    0.005    0.000    0.021    0.000 save.py:137(list_extra_dependencies)
     2403    0.004    0.000    0.021    0.000 func_graph.py:321(control_dependencies)
        3    0.000    0.000    0.021    0.007 return_statements.py:392(transform)
  814/154    0.001    0.000    0.020    0.000 copy.py:210(_deepcopy_list)
      156    0.002    0.000    0.020    0.000 def_function.py:451(__init__)
       24    0.000    0.000    0.020    0.001 gen_math_ops.py:10278(square)
  1364/44    0.003    0.000    0.020    0.000 copy.py:236(_deepcopy_dict)
      176    0.002    0.000    0.020    0.000 node.py:162(serialize)
       99    0.001    0.000    0.020    0.000 functional.py:332(_checkpoint_dependencies)
     2345    0.007    0.000    0.020    0.000 random.py:255(choice)
9515/5115    0.013    0.000    0.020    0.000 data_structures.py:756(__getattribute__)
        4    0.000    0.000    0.019    0.005 axis.py:2011(_update_label_position)
       16    0.000    0.000    0.019    0.001 axis.py:1350(get_minorticklocs)
       66    0.001    0.000    0.019    0.000 serialized_attributes.py:205(set_and_validate_objects)
      111    0.002    0.000    0.019    0.000 functional.py:308(_layer_checkpoint_dependencies)
      198    0.001    0.000    0.019    0.000 function.py:2041(add_to_graph)
    23130    0.019    0.000    0.019    0.000 {method 'index' of 'list' objects}
      407    0.004    0.000    0.019    0.000 nested_structure_coder.py:428(do_encode)
      165    0.001    0.000    0.019    0.000 utils.py:202(get_training_arg_index)
      134    0.000    0.000    0.018    0.000 templates.py:197(visit_Name)
       21    0.000    0.000    0.018    0.001 activity.py:704(resolve)
    23415    0.018    0.000    0.018    0.000 {built-in method _imp.lock_held}
    10200    0.009    0.000    0.018    0.000 Hanabi.py:233(draw)
       12    0.000    0.000    0.018    0.001 math_grad.py:1672(_MatMulGrad)
        2    0.000    0.000    0.018    0.009 backend_bases.py:1982(_get_output_canvas)
     3250    0.008    0.000    0.018    0.000 ops.py:4557(__enter__)
    13964    0.012    0.000    0.018    0.000 pickle.py:645(save_bool)
      396    0.001    0.000    0.018    0.000 data_structures.py:414(__init__)
        2    0.000    0.000    0.018    0.009 backend_bases.py:117(get_registered_canvas_class)
        3    0.000    0.000    0.018    0.006 math_grad.py:1554(_SquaredDifferenceGrad)
        4    0.000    0.000    0.018    0.004 axis.py:1992(_get_tick_boxes_siblings)
       16    0.000    0.000    0.017    0.001 axis.py:2187(get_tick_space)
        3    0.000    0.000    0.017    0.006 losses_utils.py:59(reduce_weighted_loss)
       22    0.000    0.000    0.017    0.001 string_ops.py:48(regex_full_match)
     3250    0.005    0.000    0.017    0.000 ops.py:4567(__exit__)
      121    0.004    0.000    0.017    0.000 nested_structure_coder.py:229(do_encode)
       16    0.000    0.000    0.017    0.001 <frozen importlib._bootstrap_external>:743(get_code)
       21    0.000    0.000    0.017    0.001 activity.py:565(visit_FunctionDef)
        4    0.000    0.000    0.017    0.004 _base.py:2491(_update_title_position)
       22    0.000    0.000    0.017    0.001 gen_string_ops.py:586(static_regex_full_match)
      396    0.001    0.000    0.017    0.000 data_structures.py:309(__init__)
       13    0.000    0.000    0.017    0.001 __init__.py:1421(_log)
        4    0.000    0.000    0.017    0.004 axis.py:2303(_update_label_position)
        1    0.000    0.000    0.016    0.016 backend_pdf.py:4(<module>)
      109    0.000    0.000    0.016    0.000 templates.py:129(_prepare_replacement)
       58    0.000    0.000    0.016    0.000 _backend_pdf_ps.py:41(get_text_width_height_descent)
       74    0.000    0.000    0.016    0.000 qual_names.py:251(resolve)
      109    0.000    0.000    0.016    0.000 ast_util.py:64(copy_clean)
     7397    0.006    0.000    0.016    0.000 backend.py:639(get_graph)
      506    0.001    0.000    0.016    0.000 variables.py:1079(__hash__)
     3250    0.005    0.000    0.016    0.000 ops.py:4646(control_dependencies)
       20    0.000    0.000    0.016    0.001 math_ops.py:1987(reduce_sum_with_dims)
 1794/109    0.006    0.000    0.016    0.000 ast_util.py:38(copy)
       58    0.000    0.000    0.016    0.000 parser.py:228(parse)
       58    0.001    0.000    0.016    0.000 gast.py:297(parse)
     1747    0.016    0.000    0.016    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
       20    0.000    0.000    0.016    0.001 gen_math_ops.py:10493(_sum)
       22    0.000    0.000    0.015    0.001 array_ops.py:4314(where)
       24    0.000    0.000    0.015    0.001 array_ops.py:631(shape_internal)
       22    0.000    0.000    0.015    0.001 gen_math_ops.py:8744(select)
       13    0.000    0.000    0.015    0.001 __init__.py:1446(handle)
  2612/82    0.002    0.000    0.015    0.000 astn.py:9(_visit)
       87    0.000    0.000    0.015    0.000 _backend_pdf_ps.py:79(_get_font_ttf)
    93398    0.015    0.000    0.015    0.000 shape_base.py:79(_atleast_2d_dispatcher)
       13    0.000    0.000    0.015    0.001 __init__.py:1500(callHandlers)
       34    0.000    0.000    0.015    0.000 templates.py:146(visit_Expr)
       13    0.000    0.000    0.015    0.001 __init__.py:852(handle)
   543/73    0.000    0.000    0.015    0.000 astn.py:11(<listcomp>)
      110    0.000    0.000    0.015    0.000 save_impl.py:535(__init__)
       13    0.000    0.000    0.015    0.001 __init__.py:982(emit)
    23948    0.015    0.000    0.015    0.000 {built-in method builtins.abs}
        3    0.000    0.000    0.015    0.005 transpiler.py:38(_wrap_into_factory)
       88    0.000    0.000    0.015    0.000 deprecation.py:311(new_func)
       11    0.000    0.000    0.015    0.001 tf_logging.py:166(info)
       16    0.000    0.000    0.015    0.001 axis.py:2487(get_tick_space)
       16    0.000    0.000    0.015    0.001 axis.py:884(set_tick_params)
       13    0.000    0.000    0.015    0.001 file_io.py:453(recursive_create_dir)
       13    0.000    0.000    0.015    0.001 file_io.py:468(recursive_create_dir_v2)
    42835    0.011    0.000    0.015    0.000 __init__.py:190(_checkLevel)
        4    0.000    0.000    0.015    0.004 axis.py:2284(_get_tick_boxes_siblings)
       13    0.014    0.001    0.014    0.001 {built-in method tensorflow.python._pywrap_file_io.RecursivelyCreateDir}
      656    0.002    0.000    0.014    0.000 traceable_stack.py:92(push_obj)
       11    0.000    0.000    0.014    0.001 file_io.py:197(__exit__)
       11    0.014    0.001    0.014    0.001 file_io.py:223(close)
10802/154    0.007    0.000    0.014    0.000 json_utils.py:47(_encode_tuple)
 1012/352    0.003    0.000    0.014    0.000 utils.py:124(list_all_layers_and_sublayers)
        9    0.001    0.000    0.014    0.002 origin_info.py:226(resolve)
 2354/154    0.003    0.000    0.014    0.000 json_utils.py:54(<dictcomp>)
    12103    0.006    0.000    0.014    0.000 pickle.py:680(save_float)
      347    0.004    0.000    0.014    0.000 input_spec.py:132(assert_input_compatibility)
       13    0.000    0.000    0.014    0.001 gen_resource_variable_ops.py:23(assign_add_variable_op)
     3751    0.007    0.000    0.014    0.000 weakref.py:242(values)
     1138    0.002    0.000    0.014    0.000 ops.py:4275(_colocate_with_for_gradient)
      550    0.001    0.000    0.013    0.000 base_layer.py:3013(_list_extra_dependencies_for_serialization)
        4    0.000    0.000    0.013    0.003 gen_math_ops.py:314(add)
     2321    0.002    0.000    0.013    0.000 ops.py:3779(get_operation_by_name)
      440    0.000    0.000    0.013    0.000 data_structures.py:635(_track_value)
  787/158    0.003    0.000    0.013    0.000 astn.py:17(generic_visit)
     1012    0.001    0.000    0.013    0.000 saveable_object_util.py:134(saveable_objects_for_op)
       58    0.000    0.000    0.013    0.000 ast3.py:398(ast_to_gast)
        1    0.000    0.000    0.013    0.013 np_random.py:15(<module>)
      440    0.001    0.000    0.013    0.000 data_structures.py:173(_track_value)
       15    0.000    0.000    0.013    0.001 math_ops.py:1327(div_no_nan)
    55/16    0.000    0.000    0.013    0.001 variables.py:66(getter)
       58    0.000    0.000    0.013    0.000 ast3.py:10(visit_Module)
    42/16    0.000    0.000    0.013    0.001 distribute_lib.py:2855(creator)
        9    0.000    0.000    0.013    0.001 nn_grad.py:473(_SoftplusGrad)
       13    0.000    0.000    0.013    0.001 __init__.py:971(flush)
       55    0.001    0.000    0.013    0.000 save_impl.py:339(__init__)
        4    0.000    0.000    0.013    0.003 _base.py:2727(grid)
     3124    0.002    0.000    0.013    0.000 graph_view.py:61(_object_prefix_from_path)
        8    0.000    0.000    0.013    0.002 axis.py:1456(grid)
        4    0.000    0.000    0.013    0.003 core.py:1131(__init__)
     2668    0.003    0.000    0.013    0.000 ops.py:3636(as_graph_element)
        3    0.000    0.000    0.012    0.004 optimizer_v2.py:689(_create_all_weights)
     12/8    0.000    0.000    0.012    0.002 axis.py:687(__get__)
       20    0.000    0.000    0.012    0.001 array_ops.py:604(shape)
       11    0.000    0.000    0.012    0.001 utils_impl.py:210(get_or_create_variables_dir)
       15    0.000    0.000    0.012    0.001 variables.py:223(_variable_v2_call)
      869    0.002    0.000    0.012    0.000 _collections_abc.py:824(update)
   209/56    0.000    0.000    0.012    0.000 ast_util.py:42(<listcomp>)
     1921    0.003    0.000    0.012    0.000 object_identity.py:220(_wrap_key)
        3    0.000    0.000    0.012    0.004 return_statements.py:341(visit_FunctionDef)
    11300    0.006    0.000    0.012    0.000 anno.py:121(hasanno)
       77    0.001    0.000    0.012    0.000 base_layer.py:1356(updates)
      506    0.002    0.000    0.012    0.000 resource_variable_ops.py:64(get_resource_handle_data)
     7273    0.008    0.000    0.012    0.000 _weakrefset.py:26(__exit__)
        1    0.000    0.000    0.012    0.012 backend.py:1141(placeholder)
    21417    0.008    0.000    0.012    0.000 _flagvalues.py:468(__getitem__)
     1430    0.006    0.000    0.012    0.000 function.py:2748(all_values)
     1265    0.004    0.000    0.011    0.000 utils.py:116(list_all_layers)
     1308    0.004    0.000    0.011    0.000 ops.py:6601(__enter__)
       22    0.000    0.000    0.011    0.001 rmsprop.py:288(get_config)
      656    0.006    0.000    0.011    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
      132    0.000    0.000    0.011    0.000 base_layer.py:2252(non_trainable_variables)
       18    0.000    0.000    0.011    0.001 <frozen importlib._bootstrap>:564(module_from_spec)
      341    0.000    0.000    0.011    0.000 ops.py:819(__hash__)
       75    0.000    0.000    0.011    0.000 activity.py:338(_process_statement)
       19    0.001    0.000    0.011    0.001 <frozen importlib._bootstrap_external>:830(get_data)
     1583    0.002    0.000    0.011    0.000 ops.py:158(string_merge)
      506    0.003    0.000    0.011    0.000 saveable_object_util.py:224(op_list_to_dict)
      506    0.003    0.000    0.011    0.000 saveable_object_util.py:91(__init__)
       88    0.000    0.000    0.011    0.000 optimizer_v2.py:904(_serialize_hyperparameter)
        9    0.000    0.000    0.011    0.001 optimizer_v2.py:673(_get_hyper)
        1    0.000    0.000    0.011    0.011 training.py:2332(summary)
        1    0.000    0.000    0.011    0.011 layer_utils.py:112(print_summary)
      550    0.000    0.000    0.011    0.000 base_serialization.py:56(list_extra_dependencies_for_serialization)
      330    0.001    0.000    0.011    0.000 encoder.py:182(encode)
    64251    0.011    0.000    0.011    0.000 _flagvalues.py:148(_flags)
        3    0.000    0.000    0.011    0.004 linecache.py:82(updatecache)
       13    0.000    0.000    0.010    0.001 def_function.py:681(variable_capturing_scope)
        2    0.000    0.000    0.010    0.005 <frozen importlib._bootstrap_external>:919(create_module)
        2    0.010    0.005    0.010    0.005 {built-in method _imp.create_dynamic}
     1313    0.002    0.000    0.010    0.000 ops.py:762(consumers)
       13    0.000    0.000    0.010    0.001 def_function.py:136(__init__)
       88    0.000    0.000    0.010    0.000 backend.py:3469(get_value)
    23402    0.010    0.000    0.010    0.000 fromnumeric.py:3227(_mean_dispatcher)
       22    0.001    0.000    0.010    0.000 functional_saver.py:137(__init__)
      473    0.001    0.000    0.010    0.000 layer_serialization.py:73(objects_to_serialize)
      176    0.010    0.000    0.010    0.000 font_manager.py:1325(get_font)
       15    0.000    0.000    0.010    0.001 activity.py:645(visit_With)
       16    0.010    0.001    0.010    0.001 {method 'read' of '_io.FileIO' objects}
      572    0.001    0.000    0.010    0.000 saveable_object_util.py:54(set_cpu0)
       22    0.000    0.000    0.010    0.000 file_io.py:235(file_exists)
        1    0.000    0.000    0.010    0.010 compile_utils.py:110(__init__)
       22    0.000    0.000    0.010    0.000 file_io.py:252(file_exists_v2)
       22    0.000    0.000    0.010    0.000 functional_saver.py:115(sharded_filename)
        3    0.000    0.000    0.010    0.003 training.py:760(<dictcomp>)
       18    0.000    0.000    0.010    0.001 array_ops.py:200(fill)
        3    0.000    0.000    0.010    0.003 functions.py:134(transform)
        3    0.000    0.000    0.010    0.003 metrics_utils.py:117(decorated)
     2668    0.005    0.000    0.010    0.000 ops.py:3672(_as_graph_element_locked)
        1    0.000    0.000    0.010    0.010 np_math_ops.py:15(<module>)
       22    0.000    0.000    0.010    0.000 gen_io_ops.py:1756(sharded_filename)
        5    0.000    0.000    0.010    0.002 layer_utils.py:197(print_layer_summary)
     2001    0.008    0.000    0.010    0.000 {method 'isatty' of '_io._IOBase' objects}
       22    0.010    0.000    0.010    0.000 {built-in method tensorflow.python._pywrap_file_io.FileExists}
    23415    0.010    0.000    0.010    0.000 {method '__enter__' of '_thread.lock' objects}
     1138    0.005    0.000    0.010    0.000 ops.py:4288(colocate_with)
       14    0.000    0.000    0.010    0.001 gen_array_ops.py:8994(shape)
     3250    0.004    0.000    0.010    0.000 ops.py:4592(_pop_control_dependencies_controller)
     1583    0.002    0.000    0.010    0.000 device.py:133(shortcut_string_merge)
      296    0.000    0.000    0.010    0.000 markers.py:205(__init__)
        3    0.000    0.000    0.010    0.003 gen_data_flow_ops.py:704(dynamic_stitch)
        3    0.000    0.000    0.010    0.003 rmsprop.py:153(_create_slots)
      330    0.008    0.000    0.009    0.000 encoder.py:204(iterencode)
       24    0.000    0.000    0.009    0.000 optimizer_v2.py:735(add_slot)
      127    0.002    0.000    0.009    0.000 lines.py:667(recache)
     2000    0.009    0.000    0.009    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
       18    0.000    0.000    0.009    0.001 gen_array_ops.py:3357(fill)
      519    0.002    0.000    0.009    0.000 artist.py:974(update)
       36    0.000    0.000    0.009    0.000 <__array_function__ internals>:2(prod)
      6/3    0.000    0.000    0.009    0.003 templates.py:172(visit_FunctionDef)
     1921    0.008    0.000    0.009    0.000 object_identity.py:75(__init__)
     2772    0.004    0.000    0.009    0.000 data_structures.py:497(_checkpoint_dependencies)
     2680    0.002    0.000    0.009    0.000 tape.py:177(record_operation)
        2    0.000    0.000    0.009    0.005 backend_pdf.py:954(<listcomp>)
        7    0.000    0.000    0.009    0.001 version_utils.py:63(__new__)
       36    0.000    0.000    0.009    0.000 fromnumeric.py:2843(prod)
      512    0.000    0.000    0.009    0.000 backend_pdf.py:943(get_char_width)
       30    0.000    0.000    0.009    0.000 gen_resource_variable_ops.py:1265(var_is_initialized_op)
        3    0.000    0.000    0.009    0.003 array_ops.py:872(_slice_helper)
      253    0.001    0.000    0.009    0.000 resource_variable_ops.py:110(_combine_handle_data)
        5    0.000    0.000    0.009    0.002 base_layer.py:2141(count_params)
     1475    0.004    0.000    0.009    0.000 tokenize.py:492(_tokenize)
       22    0.000    0.000    0.009    0.000 array_ops.py:1393(_autopacking_helper)
      258    0.001    0.000    0.009    0.000 transforms.py:1986(scale)
      918    0.001    0.000    0.009    0.000 ops.py:521(_shape_tuple)
    12045    0.009    0.000    0.009    0.000 {method 'add' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
       27    0.001    0.000    0.009    0.000 math_ops.py:1826(_ReductionDims)
        7    0.000    0.000    0.009    0.001 layer_utils.py:95(count_params)
    21414    0.006    0.000    0.008    0.000 ast.py:166(iter_fields)
    10076    0.003    0.000    0.008    0.000 graph_view.py:63(<genexpr>)
       11    0.000    0.000    0.008    0.001 utils_impl.py:232(get_or_create_assets_dir)
        3    0.000    0.000    0.008    0.003 math_grad.py:35(_safe_shape_div)
       23    0.000    0.000    0.008    0.000 layer_utils.py:109(<genexpr>)
      296    0.001    0.000    0.008    0.000 markers.py:272(set_marker)
        8    0.000    0.000    0.008    0.001 gen_math_ops.py:1837(cast)
       81    0.002    0.000    0.008    0.000 functional.py:556(_conform_to_reference_input)
        1    0.000    0.000    0.008    0.008 np_array_ops.py:15(<module>)
       34    0.000    0.000    0.008    0.000 axis.py:459(_get_tick1line)
    40707    0.008    0.000    0.008    0.000 {method 'getrandbits' of '_random.Random' objects}
     4224    0.003    0.000    0.008    0.000 base.py:549(_setattr_tracking)
     2006    0.006    0.000    0.008    0.000 copy.py:66(copy)
      512    0.008    0.000    0.008    0.000 {method 'load_char' of 'matplotlib.ft2font.FT2Font' objects}
10006/8428    0.005    0.000    0.008    0.000 artist.py:217(stale)
       22    0.000    0.000    0.008    0.000 gen_array_ops.py:6416(pack)
       37    0.000    0.000    0.008    0.000 axis.py:603(_get_gridline)
       29    0.000    0.000    0.008    0.000 backend_pdf.py:2090(draw_text)
       34    0.000    0.000    0.008    0.000 axis.py:485(_get_gridline)
       15    0.000    0.000    0.008    0.001 gen_math_ops.py:3113(div_no_nan)
        3    0.000    0.000    0.008    0.003 functions.py:81(visit_FunctionDef)
      343    0.002    0.000    0.008    0.000 base_layer.py:3208(_in_functional_construction_mode)
        3    0.000    0.000    0.008    0.003 losses_utils.py:38(_safe_mean)
       37    0.000    0.000    0.008    0.000 axis.py:574(_get_tick1line)
  792/132    0.000    0.000    0.008    0.000 json_utils.py:52(<listcomp>)
     3250    0.006    0.000    0.008    0.000 ops.py:4522(__init__)
        3    0.000    0.000    0.008    0.003 variables.py:100(transform)
      284    0.000    0.000    0.008    0.000 inspect.py:3063(signature)
      411    0.005    0.000    0.008    0.000 base_layer.py:2528(_get_call_arg_value)
        4    0.000    0.000    0.008    0.002 iterator_ops.py:735(__next__)
        4    0.000    0.000    0.008    0.002 iterator_ops.py:770(next)
      186    0.000    0.000    0.008    0.000 np_utils.py:287(np_doc)
        4    0.000    0.000    0.008    0.002 iterator_ops.py:738(_next_internal)
     3148    0.002    0.000    0.008    0.000 optimizer_v2.py:773(get_slot)
      264    0.000    0.000    0.008    0.000 tf_utils.py:261(convert_inner_node_data)
      918    0.003    0.000    0.008    0.000 ops.py:515(_shape_as_list)
        3    0.000    0.000    0.008    0.003 call_trees.py:211(transform)
      284    0.000    0.000    0.007    0.000 inspect.py:2811(from_callable)
      385    0.001    0.000    0.007    0.000 data_structures.py:793(_checkpoint_dependencies)
       37    0.000    0.000    0.007    0.000 templates.py:275(<listcomp>)
   826/51    0.002    0.000    0.007    0.000 ast.py:255(generic_visit)
       16    0.000    0.000    0.007    0.000 templates.py:279(replace_as_expression)
    65/49    0.000    0.000    0.007    0.000 activity.py:457(visit_Call)
        3    0.000    0.000    0.007    0.002 tokenize.py:448(open)
      203    0.001    0.000    0.007    0.000 font_manager.py:1166(findfont)
      718    0.001    0.000    0.007    0.000 <__array_function__ internals>:2(dot)
  528/264    0.003    0.000    0.007    0.000 tf_utils.py:157(map_structure_with_atomic)
        6    0.000    0.000    0.007    0.001 pyplot.py:600(gcf)
       25    0.000    0.000    0.007    0.000 gen_control_flow_ops.py:470(no_op)
        2    0.000    0.000    0.007    0.004 pyplot.py:427(figure)
        3    0.000    0.000    0.007    0.002 tokenize.py:355(detect_encoding)
      186    0.001    0.000    0.007    0.000 np_utils.py:172(_np_signature)
        2    0.000    0.000    0.007    0.004 _datasource.py:231(open)
        4    0.000    0.000    0.007    0.002 axis.py:967(set_clip_path)
      470    0.001    0.000    0.007    0.000 qual_names.py:216(visit_Name)
        2    0.000    0.000    0.007    0.004 functional.py:108(__init__)
     2087    0.007    0.000    0.007    0.000 compile_utils.py:291(metrics)
     2680    0.006    0.000    0.007    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
        6    0.000    0.000    0.007    0.001 tokenize.py:379(read_or_stop)
        2    0.000    0.000    0.007    0.003 _datasource.py:577(open)
        6    0.007    0.001    0.007    0.001 {method 'readline' of '_io.BufferedReader' objects}
        2    0.000    0.000    0.007    0.003 backend_bases.py:3351(new_figure_manager)
     2001    0.007    0.000    0.007    0.000 callbacks.py:981(_reset_progbar)
      154    0.000    0.000    0.007    0.000 def_function.py:434(__del__)
        3    0.000    0.000    0.007    0.002 metrics.py:188(result_fn)
     7273    0.005    0.000    0.007    0.000 _weakrefset.py:20(__enter__)
       12    0.000    0.000    0.007    0.001 nn_grad.py:327(_BiasAddGrad)
      186    0.000    0.000    0.007    0.000 np_utils.py:302(decorator)
        6    0.000    0.000    0.007    0.001 reaching_definitions.py:279(resolve)
    247/6    0.000    0.000    0.007    0.001 reaching_definitions.py:267(visit)
       11    0.000    0.000    0.007    0.001 saving_utils.py:100(trace_model_call)
      156    0.001    0.000    0.007    0.000 text.py:121(__init__)
     3767    0.002    0.000    0.007    0.000 resource_variable_ops.py:2127(is_resource_variable)
        3    0.000    0.000    0.007    0.002 losses_utils.py:53(_num_elements)
       15    0.000    0.000    0.007    0.000 array_ops.py:2746(wrapped)
       24    0.000    0.000    0.007    0.000 patches.py:585(draw)
        6    0.000    0.000    0.007    0.001 reaching_definitions.py:189(visit_FunctionDef)
     2907    0.005    0.000    0.007    0.000 traceable_stack.py:75(copy_metadata)
        2    0.000    0.000    0.007    0.003 figure.py:275(__init__)
       15    0.000    0.000    0.007    0.000 array_ops.py:2754(zeros)
     1747    0.007    0.000    0.007    0.000 custom_gradient.py:75(<listcomp>)
       12    0.000    0.000    0.007    0.001 gen_nn_ops.py:725(bias_add_grad)
        5    0.000    0.000    0.007    0.001 node.py:54(__init__)
     7810    0.004    0.000    0.007    0.000 graph_view.py:51(_escape_local_name)
6455/6192    0.005    0.000    0.007    0.000 optimizer_v2.py:706(__getattribute__)
       13    0.000    0.000    0.007    0.001 initializers_v2.py:127(__call__)
       13    0.000    0.000    0.006    0.000 init_ops_v2.py:118(__call__)
      630    0.003    0.000    0.006    0.000 ops.py:121(__init__)
      145    0.006    0.000    0.006    0.000 {method 'set_text' of 'matplotlib.ft2font.FT2Font' objects}
       32    0.000    0.000    0.006    0.000 ticker.py:672(set_locs)
      390    0.001    0.000    0.006    0.000 training.py:2361(layers)
       37    0.000    0.000    0.006    0.000 axis.py:589(_get_tick2line)
       34    0.000    0.000    0.006    0.000 axis.py:470(_get_tick2line)
     1870    0.005    0.000    0.006    0.000 gast.py:15(create_node)
       22    0.000    0.000    0.006    0.000 string_ops.py:540(string_join)
        9    0.000    0.000    0.006    0.001 array_ops.py:1328(stack)
       22    0.000    0.000    0.006    0.000 gen_string_ops.py:819(string_join)
       22    0.001    0.000    0.006    0.000 saving_utils.py:57(model_input_signature)
     18/9    0.000    0.000    0.006    0.001 ast3.py:50(visit_FunctionDef)
        1    0.000    0.000    0.006    0.006 metrics.py:481(__init__)
        1    0.000    0.000    0.006    0.006 metrics.py:326(__init__)
       41    0.000    0.000    0.006    0.000 backend_pdf.py:1768(draw_path)
      253    0.000    0.000    0.006    0.000 resource_variable_ops.py:74(get_eager_safe_handle_data)
      135    0.000    0.000    0.006    0.000 base_layer.py:2247(trainable_variables)
       30    0.000    0.000    0.006    0.000 gen_math_ops.py:5437(logical_not)
      616    0.001    0.000    0.006    0.000 revived_types.py:140(serialize)
       44    0.000    0.000    0.006    0.000 training.py:2322(_undeduplicated_weights)
      182    0.001    0.000    0.006    0.000 transforms.py:1388(transform)
    460/9    0.001    0.000    0.006    0.001 origin_info.py:212(visit)
        3    0.000    0.000    0.006    0.002 metrics.py:394(result)
        2    0.000    0.000    0.006    0.003 backend_pdf.py:435(__init__)
     3234    0.001    0.000    0.006    0.000 nested_structure_coder.py:176(can_encode)
     1182    0.003    0.000    0.006    0.000 device_spec.py:111(__init__)
     3180    0.002    0.000    0.006    0.000 optimizer_v2.py:1279(_var_key)
      352    0.003    0.000    0.006    0.000 function.py:2071(_select_forward_and_backward_functions)
       11    0.000    0.000    0.006    0.001 save.py:399(_map_function_arguments_to_created_inputs)
        4    0.000    0.000    0.006    0.001 math_ops.py:1153(r_binary_op_wrapper)
      770    0.002    0.000    0.006    0.000 function.py:361(_enclosing_xla_context)
        3    0.000    0.000    0.006    0.002 call_trees.py:108(visit_FunctionDef)
        2    0.000    0.000    0.006    0.003 math_grad.py:189(EvaluateAsTuple)
     7722    0.006    0.000    0.006    0.000 tensor_spec.py:107(_serialize)
       30    0.000    0.000    0.006    0.000 gen_logging_ops.py:23(_assert)
 1546/695    0.003    0.000    0.006    0.000 backend_pdf.py:134(pdfRepr)
        3    0.000    0.000    0.006    0.002 optimizer_v2.py:797(_prepare_local)
     5792    0.005    0.000    0.006    0.000 _weakrefset.py:81(add)
        2    0.006    0.003    0.006    0.003 {built-in method tensorflow.python._pywrap_tf_session.TF_TryEvaluateConstant_wrapper}
     4092    0.001    0.000    0.006    0.000 anno.py:143(copyanno)
        3    0.000    0.000    0.006    0.002 losses.py:239(call)
       22    0.000    0.000    0.006    0.000 def_function.py:1171(__get__)
       50    0.000    0.000    0.006    0.000 callbacks.py:503(on_train_end)
       22    0.001    0.000    0.006    0.000 save.py:224(_add_saveable_objects)
        4    0.000    0.000    0.006    0.001 gen_dataset_ops.py:2588(iterator_get_next)
        6    0.000    0.000    0.006    0.001 array_ops.py:713(size)
        3    0.000    0.000    0.005    0.002 call_trees.py:126(visit_With)
        6    0.000    0.000    0.005    0.001 array_ops.py:745(size_internal)
      520    0.000    0.000    0.005    0.000 <__array_function__ internals>:2(any)
      592    0.001    0.000    0.005    0.000 markers.py:227(_recache)
       58    0.000    0.000    0.005    0.000 backend_agg.py:196(get_text_width_height_descent)
       28    0.000    0.000    0.005    0.000 axis.py:334(_apply_params)
    61/45    0.000    0.000    0.005    0.000 ast3.py:114(visit_Call)
       55    0.000    0.000    0.005    0.000 save_impl.py:367(_generate_input_signature)
       27    0.000    0.000    0.005    0.000 backend_pdf.py:1847(draw_markers)
     7614    0.005    0.000    0.005    0.000 base_layer.py:1246(trainable)
      237    0.000    0.000    0.005    0.000 backend_pdf.py:641(output)
    23415    0.005    0.000    0.005    0.000 {method '__exit__' of '_thread.lock' objects}
       96    0.005    0.000    0.005    0.000 {built-in method posix.stat}
      210    0.001    0.000    0.005    0.000 font_manager.py:623(__init__)
        3    0.000    0.000    0.005    0.002 losses.py:1162(mean_squared_error)
       73    0.000    0.000    0.005    0.000 lines.py:1021(get_path)
      407    0.001    0.000    0.005    0.000 nested_structure_coder.py:379(do_encode)
       33    0.000    0.000    0.005    0.000 training.py:2313(weights)
1672/1012    0.001    0.000    0.005    0.000 utils.py:127(<genexpr>)
       27    0.000    0.000    0.005    0.000 backend_bases.py:173(draw_markers)
       22    0.000    0.000    0.005    0.000 function.py:3700(class_method_to_instance_method)
     1313    0.002    0.000    0.005    0.000 ops.py:772(<listcomp>)
     21/8    0.005    0.000    0.005    0.001 version_utils.py:98(swap_class)
    10526    0.005    0.000    0.005    0.000 __init__.py:815(__getitem__)
      283    0.002    0.000    0.005    0.000 resource_variable_ops.py:84(_set_handle_shapes_and_types)
     2398    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tf_session.EqualAttrValueWrapper}
        3    0.000    0.000    0.005    0.002 gen_math_ops.py:5752(maximum)
        2    0.000    0.000    0.005    0.002 __init__.py:359(to_filehandle)
       27    0.000    0.000    0.005    0.000 axis.py:1398(_copy_tick_props)
        9    0.000    0.000    0.005    0.001 math_ops.py:3594(sigmoid)
      286    0.001    0.000    0.005    0.000 save_impl.py:453(get_input_arg_value)
      343    0.002    0.000    0.005    0.000 base_layer.py:2457(_set_mask_metadata)
     3250    0.003    0.000    0.005    0.000 ops.py:4589(_push_control_dependencies_controller)
      528    0.000    0.000    0.005    0.000 __init__.py:133(serialize)
       97    0.000    0.000    0.005    0.000 backprop.py:174(_record_gradient)
      140    0.000    0.000    0.005    0.000 artist.py:1095(set)
       70    0.000    0.000    0.005    0.000 backend_pdf.py:1691(check_gc)
      574    0.002    0.000    0.005    0.000 device_spec.py:236(replace)
     3234    0.001    0.000    0.005    0.000 nested_structure_coder.py:153(_is_tuple)
        2    0.000    0.000    0.005    0.002 training.py:246(__init__)
       11    0.000    0.000    0.005    0.000 function_serialization.py:110(wrap_cached_variables)
        1    0.000    0.000    0.005    0.005 Experiment.py:210(<listcomp>)
        9    0.000    0.000    0.005    0.001 gen_math_ops.py:8903(sigmoid)
     1801    0.003    0.000    0.005    0.000 anno.py:125(setanno)
      352    0.001    0.000    0.005    0.000 nested_structure_coder.py:136(do_encode)
       28    0.000    0.000    0.005    0.000 tf_utils.py:484(get_tensor_spec)
     1308    0.002    0.000    0.005    0.000 ops.py:6635(__exit__)
       29    0.000    0.000    0.005    0.000 backend_agg.py:170(draw_text)
        3    0.000    0.000    0.005    0.002 break_statements.py:183(transform)
      597    0.001    0.000    0.005    0.000 device_spec.py:142(from_string)
       24    0.000    0.000    0.005    0.000 def_function.py:1423(decorated)
       15    0.000    0.000    0.005    0.000 activity.py:651(visit_withitem)
     2980    0.003    0.000    0.005    0.000 ops.py:4579(add_op)
      520    0.001    0.000    0.005    0.000 fromnumeric.py:2236(any)
        3    0.000    0.000    0.005    0.002 continue_statements.py:163(transform)
     5610    0.002    0.000    0.005    0.000 nested_structure_coder.py:157(_is_named_tuple)
       32    0.000    0.000    0.005    0.000 ticker.py:253(format_ticks)
       37    0.000    0.000    0.005    0.000 training.py:1890(trainable_weights)
       22    0.000    0.000    0.005    0.000 base_layer.py:2993(_get_save_spec)
       16    0.000    0.000    0.005    0.000 transforms.py:695(union)
       10    0.000    0.000    0.005    0.000 call_trees.py:160(visit_Call)
      110    0.000    0.000    0.005    0.000 save_impl.py:600(_create_call_fn_decorator)
      234    0.002    0.000    0.005    0.000 base_layer.py:1378(losses)
      6/3    0.000    0.000    0.004    0.001 return_statements.py:277(_visit_statement_block)
     1253    0.001    0.000    0.004    0.000 ops.py:2180(_set_device_from_string)
       32    0.000    0.000    0.004    0.000 axis.py:825(_set_scale)
    10200    0.003    0.000    0.004    0.000 Hanabi.py:144(draw)
       50    0.001    0.000    0.004    0.000 training_utils.py:1226(__enter__)
       50    0.000    0.000    0.004    0.000 <__array_function__ internals>:2(nanmin)
        7    0.000    0.000    0.004    0.001 gen_math_ops.py:6318(neg)
       61    0.000    0.000    0.004    0.000 variables.py:55(visit_Name)
        3    0.000    0.000    0.004    0.001 return_statements.py:319(visit_With)
       50    0.000    0.000    0.004    0.000 nanfunctions.py:230(nanmin)
      2/1    0.000    0.000    0.004    0.004 training.py:237(__new__)
        3    0.000    0.000    0.004    0.001 parser.py:271(unparse)
       37    0.000    0.000    0.004    0.000 axis.py:544(_get_text1)
       32    0.000    0.000    0.004    0.000 scale.py:105(set_default_locators_and_formatters)
  156/148    0.000    0.000    0.004    0.000 _base.py:583(_unstale_viewLim)
      374    0.000    0.000    0.004    0.000 policy.py:615(serialize)
     2011    0.004    0.000    0.004    0.000 func_graph.py:669(add_capture)
      339    0.001    0.000    0.004    0.000 base_layer_utils.py:310(is_in_keras_graph)
        7    0.000    0.000    0.004    0.001 gen_array_ops.py:11337(tile)
        2    0.000    0.000    0.004    0.002 _base.py:553(_init_axis)
        3    0.000    0.000    0.004    0.001 liveness.py:206(resolve)
       34    0.000    0.000    0.004    0.000 axis.py:427(_get_text1)
       97    0.002    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_RecordGradient}
    271/3    0.000    0.000    0.004    0.001 liveness.py:121(visit)
        3    0.000    0.000    0.004    0.001 optimizer_v2.py:848(_decayed_lr)
        3    0.000    0.000    0.004    0.001 loader.py:50(load_source)
        3    0.000    0.000    0.004    0.001 reaching_fndefs.py:170(resolve)
        3    0.000    0.000    0.004    0.001 liveness.py:145(visit_FunctionDef)
       22    0.000    0.000    0.004    0.000 base_layer.py:2998(<lambda>)
        3    0.000    0.000    0.004    0.001 liveness.py:131(_analyze_function)
    271/3    0.000    0.000    0.004    0.001 reaching_fndefs.py:153(visit)
     2665    0.002    0.000    0.004    0.000 ops.py:2062(device)
      302    0.002    0.000    0.004    0.000 tf_decorator.py:128(rewrap)
        3    0.000    0.000    0.004    0.001 reaching_fndefs.py:147(visit_FunctionDef)
        3    0.000    0.000    0.004    0.001 reaching_fndefs.py:128(_proces_function)
        2    0.000    0.000    0.004    0.002 math_grad.py:67(SmartBroadcastGradientArgs)
  126/125    0.000    0.000    0.004    0.000 qual_names.py:221(visit_Attribute)
      506    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetHandleShapeAndType}
      473    0.001    0.000    0.004    0.000 serialized_attributes.py:180(objects_to_serialize)
      462    0.003    0.000    0.004    0.000 artist.py:74(__init__)
      363    0.001    0.000    0.004    0.000 nested_structure_coder.py:202(do_encode)
       62    0.000    0.000    0.004    0.000 patches.py:260(get_transform)
     1098    0.001    0.000    0.004    0.000 __init__.py:1956(_setattr_cm)
     2772    0.003    0.000    0.004    0.000 data_structures.py:479(_check_external_modification)
       33    0.004    0.000    0.004    0.000 {method 'get_glyph_name' of 'matplotlib.ft2font.FT2Font' objects}
        4    0.000    0.000    0.004    0.001 math_ops.py:2426(reduce_prod)
        3    0.000    0.000    0.004    0.001 gen_math_ops.py:3851(floor_mod)
        1    0.000    0.000    0.004    0.004 metrics.py:162(__new__)
       12    0.000    0.000    0.004    0.000 cfg.py:221(_visit_internal)
     2001    0.003    0.000    0.004    0.000 callbacks.py:1683(get_monitor_value)
     1001    0.001    0.000    0.004    0.000 _collections_abc.py:851(setdefault)
      110    0.000    0.000    0.004    0.000 save_impl.py:446(get_training_arg_value)
       30    0.000    0.000    0.004    0.000 artist.py:731(set_clip_path)
     9793    0.003    0.000    0.004    0.000 enum.py:581(__hash__)
     4335    0.001    0.000    0.004    0.000 ops.py:193(_as_graph_element)
     2169    0.002    0.000    0.004    0.000 ops.py:4258(get_name_scope)
       66    0.000    0.000    0.004    0.000 base_layer.py:2108(input_shape)
      100    0.000    0.000    0.004    0.000 structure.py:452(<listcomp>)
      406    0.003    0.000    0.004    0.000 ast_util.py:284(parallel_walk)
       24    0.000    0.000    0.004    0.000 axis.py:841(cla)
     6202    0.004    0.000    0.004    0.000 {method '__subclasses__' of 'type' objects}
      374    0.001    0.000    0.004    0.000 policy.py:593(_policy_equivalent_to_dtype)
      227    0.000    0.000    0.004    0.000 ast3.py:162(visit_Name)
      343    0.001    0.000    0.004    0.000 base_layer.py:2395(_name_scope)
      182    0.000    0.000    0.004    0.000 transforms.py:2363(transform_affine)
      506    0.004    0.000    0.004    0.000 {built-in method FromString}
        6    0.000    0.000    0.004    0.001 ast3.py:96(visit_With)
       12    0.000    0.000    0.004    0.000 ops.py:1319(convert_to_tensor_v2)
     1518    0.001    0.000    0.004    0.000 ops.py:2052(name)
       11    0.000    0.000    0.004    0.000 signature_serialization.py:265(validate_saveable_view)
     1747    0.003    0.000    0.004    0.000 custom_gradient.py:77(<listcomp>)
        3    0.000    0.000    0.004    0.001 logical_expressions.py:135(transform)
        8    0.000    0.000    0.004    0.000 base_layer.py:297(__init__)
      216    0.000    0.000    0.004    0.000 text.py:170(update)
       27    0.001    0.000    0.004    0.000 {built-in method builtins.__build_class__}
        2    0.004    0.002    0.004    0.002 {built-in method matplotlib.ttconv.get_pdf_charprocs}
       34    0.000    0.000    0.004    0.000 axis.py:444(_get_text2)
       55    0.001    0.000    0.004    0.000 data_structures.py:735(__init__)
        7    0.000    0.000    0.003    0.000 variables.py:237(<lambda>)
     2661    0.002    0.000    0.003    0.000 anno.py:114(getanno)
      328    0.001    0.000    0.003    0.000 base_layer.py:2312(_maybe_cast_inputs)
      215    0.000    0.000    0.003    0.000 lines.py:1243(set_markerfacecolor)
       32    0.001    0.000    0.003    0.000 ticker.py:759(_set_format)
        7    0.000    0.000    0.003    0.000 variable_scope.py:2616(default_variable_creator_v2)
        3    0.000    0.000    0.003    0.001 backend.py:2245(mean)
       37    0.000    0.000    0.003    0.000 axis.py:559(_get_text2)
        3    0.000    0.000    0.003    0.001 math_ops.py:2255(reduce_mean)
       38    0.000    0.000    0.003    0.000 patches.py:776(get_patch_transform)
       61    0.003    0.000    0.003    0.000 {built-in method builtins.compile}
       77    0.000    0.000    0.003    0.000 tensor_spec.py:130(is_compatible_with)
       38    0.000    0.000    0.003    0.000 patches.py:746(_update_patch_transform)
  234/194    0.001    0.000    0.003    0.000 transforms.py:2387(get_affine)
        3    0.000    0.000    0.003    0.001 gen_math_ops.py:5832(mean)
    25/16    0.000    0.000    0.003    0.000 version_utils.py:110(<genexpr>)
        3    0.000    0.000    0.003    0.001 return_statements.py:227(visit_Return)
     7273    0.003    0.000    0.003    0.000 _weakrefset.py:16(__init__)
        2    0.000    0.000    0.003    0.002 training.py:312(_init_batch_counters)
       11    0.000    0.000    0.003    0.000 base.py:97(restore)
       85    0.001    0.000    0.003    0.000 tensor_shape.py:926(merge_with)
      572    0.001    0.000    0.003    0.000 ops.py:3221(<listcomp>)
     2903    0.003    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
       77    0.001    0.000    0.003    0.000 tensor_spec.py:78(is_compatible_with)
       37    0.000    0.000    0.003    0.000 layer_utils.py:254(gather_trainable_weights)
        3    0.000    0.000    0.003    0.001 origin_info.py:263(resolve_entity)
      385    0.001    0.000    0.003    0.000 data_structures.py:824(_check_self_external_modification)
       27    0.000    0.000    0.003    0.000 genericpath.py:16(exists)
       11    0.000    0.000    0.003    0.000 save.py:367(_map_captures_to_created_tensors)
     7659    0.003    0.000    0.003    0.000 {built-in method from_iterable}
        9    0.000    0.000    0.003    0.000 cfg.py:245(visit_forward)
       87    0.000    0.000    0.003    0.000 backend_agg.py:243(_get_agg_font)
     1899    0.002    0.000    0.003    0.000 base_layer.py:2942(_eager_losses)
   115/27    0.001    0.000    0.003    0.000 copy.py:268(_reconstruct)
       15    0.000    0.000    0.003    0.000 <frozen importlib._bootstrap>:870(_find_spec)
       13    0.000    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:485(_compile_bytecode)
        3    0.000    0.000    0.003    0.001 control_flow.py:54(visit_FunctionDef)
        3    0.000    0.000    0.003    0.001 conditional_expressions.py:48(transform)
    27335    0.003    0.000    0.003    0.000 {method 'bit_length' of 'int' objects}
     1100    0.001    0.000    0.003    0.000 ops.py:3297(_is_function)
      264    0.000    0.000    0.003    0.000 activations.py:426(serialize)
     1747    0.003    0.000    0.003    0.000 custom_gradient.py:78(<listcomp>)
      458    0.001    0.000    0.003    0.000 colors.py:157(to_rgba)
      751    0.002    0.000    0.003    0.000 font_manager.py:663(__hash__)
       61    0.000    0.000    0.003    0.000 functional.py:237(input_shape)
        6    0.000    0.000    0.003    0.000 cfg.py:964(build)
        3    0.000    0.000    0.003    0.001 converter.py:196(to_ast)
       71    0.000    0.000    0.003    0.000 base_layer.py:2162(output_shape)
      279    0.001    0.000    0.003    0.000 origin_info.py:197(_attach_origin_info)
      342    0.001    0.000    0.003    0.000 base_layer_utils.py:490(in_keras_graph)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:1609(writeObject)
       77    0.001    0.000    0.003    0.000 tensor_util.py:548(<listcomp>)
       81    0.000    0.000    0.003    0.000 lines.py:1330(update_from)
    21417    0.003    0.000    0.003    0.000 __init__.py:170(value)
       13    0.003    0.000    0.003    0.000 {built-in method marshal.loads}
       22    0.000    0.000    0.003    0.000 activity.py:384(visit_Assign)
       50    0.000    0.000    0.003    0.000 nanfunctions.py:70(_replace_nan)
      110    0.000    0.000    0.003    0.000 node.py:227(input_shapes)
        6    0.000    0.000    0.003    0.000 ast3.py:402(gast_to_ast)
        3    0.000    0.000    0.003    0.001 liveness.py:193(visit_With)
        2    0.001    0.000    0.003    0.001 font_manager.py:1227(_findfont_cached)
      483    0.001    0.000    0.003    0.000 transforms.py:126(invalidate)
      263    0.002    0.000    0.003    0.000 activity.py:97(__init__)
        6    0.000    0.000    0.003    0.000 cfg.py:767(visit_FunctionDef)
        6    0.000    0.000    0.003    0.000 cfg.py:742(_process_function_def)
        2    0.000    0.000    0.003    0.001 backend_pdf.py:624(close)
        2    0.003    0.001    0.003    0.001 {method 'close' of '_io.BufferedWriter' objects}
       53    0.001    0.000    0.003    0.000 base_layer.py:2673(_get_trainable_state)
      443    0.001    0.000    0.003    0.000 ops.py:6013(get_name_scope)
        5    0.000    0.000    0.003    0.001 optimizer_v2.py:1003(add_weight)
       12    0.000    0.000    0.003    0.000 axis.py:229(set_clip_path)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:238(write)
       16    0.000    0.000    0.003    0.000 spines.py:374(draw)
      695    0.001    0.000    0.003    0.000 base_layer_utils.py:508(__enter__)
      635    0.001    0.000    0.003    0.000 base_layer.py:1232(dynamic)
       50    0.000    0.000    0.003    0.000 callbacks.py:486(on_train_begin)
        3    0.003    0.001    0.003    0.001 {method 'readlines' of '_io._IOBase' objects}
      176    0.002    0.000    0.003    0.000 base_layer.py:1438(add_loss)
        2    0.003    0.001    0.003    0.001 {built-in method posix.mkdir}
      170    0.001    0.000    0.003    0.000 text.py:838(get_prop_tup)
        3    0.000    0.000    0.003    0.001 backprop.py:697(_ones)
      9/3    0.000    0.000    0.003    0.001 ast3.py:310(visit_FunctionDef)
        3    0.000    0.000    0.003    0.001 math_ops.py:570(scalar_mul)
       22    0.002    0.000    0.003    0.000 meta_graph.py:138(ops_used_by_graph_def)
        3    0.000    0.000    0.003    0.001 array_ops.py:3007(ones)
      467    0.001    0.000    0.003    0.000 pickle.py:705(save_str)
       24    0.000    0.000    0.003    0.000 def_function.py:1199(function)
      195    0.001    0.000    0.003    0.000 np_utils.py:266(_np_doc_helper)
       55    0.001    0.000    0.003    0.000 base_layer.py:2129(<listcomp>)
      938    0.001    0.000    0.003    0.000 artist.py:49(_stale_axes_callback)
      265    0.001    0.000    0.003    0.000 activity.py:267(_track_symbol)
       39    0.000    0.000    0.003    0.000 reaching_definitions.py:123(visit_node)
     1866    0.001    0.000    0.003    0.000 re.py:286(_compile)
      629    0.002    0.000    0.003    0.000 ops.py:5175(__init__)
       44    0.000    0.000    0.003    0.000 save_impl.py:237(replace_layer_functions)
       21    0.000    0.000    0.003    0.000 activity.py:381(visit_Return)
     1253    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequestedDevice}
        3    0.000    0.000    0.003    0.001 array_ops.py:2730(_constant_if_small)
       11    0.000    0.000    0.003    0.000 signature_serialization.py:39(_get_signature)
      242    0.000    0.000    0.003    0.000 activity.py:324(_enter_scope)
     2665    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
      110    0.000    0.000    0.003    0.000 function.py:2899(<genexpr>)
        5    0.000    0.000    0.003    0.001 gen_array_ops.py:722(broadcast_gradient_args)
      237    0.000    0.000    0.003    0.000 backend_pdf.py:642(<listcomp>)
       28    0.000    0.000    0.003    0.000 ops.py:5225(combined)
   264/88    0.000    0.000    0.003    0.000 copy.py:273(<genexpr>)
      396    0.001    0.000    0.003    0.000 data_structures.py:649(_list_functions_for_serialization)
        3    0.000    0.000    0.003    0.001 array_ops.py:1084(strided_slice)
       15    0.000    0.000    0.003    0.000 <frozen importlib._bootstrap_external>:1149(find_spec)
        4    0.000    0.000    0.003    0.001 axis.py:744(__init__)
       88    0.000    0.000    0.003    0.000 layer_serialization.py:63(<lambda>)
        3    0.000    0.000    0.002    0.001 math_grad.py:1656(_MatMulGradAgainstSecondOnly)
        3    0.000    0.000    0.002    0.001 gen_array_ops.py:10170(strided_slice)
       55    0.000    0.000    0.002    0.000 save_impl.py:581(_extract_outputs_from_fn)
       15    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1117(_get_spec)
     1313    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
      374    0.002    0.000    0.002    0.000 __init__.py:2096(_check_isinstance)
      539    0.001    0.000    0.002    0.000 serialized_attributes.py:168(checkpointable_objects)
     5628    0.002    0.000    0.002    0.000 ops.py:5087(_control_dependencies_stack)
        2    0.000    0.000    0.002    0.001 _base.py:2332(autoscale_view)
       96    0.001    0.000    0.002    0.000 _dill.py:1327(save_type)
     1118    0.001    0.000    0.002    0.000 auto_control_deps_utils.py:105(<genexpr>)
       32    0.000    0.000    0.002    0.000 ticker.py:2817(__init__)
      142    0.002    0.000    0.002    0.000 __init__.py:1663(normalize_kwargs)
      120    0.000    0.000    0.002    0.000 node.py:234(output_shapes)
       11    0.001    0.000    0.002    0.000 meta_graph.py:174(stripped_op_list_for_graph)
       96    0.000    0.000    0.002    0.000 transforms.py:1940(rotate_deg)
      451    0.001    0.000    0.002    0.000 data_structures.py:152(__init__)
      825    0.001    0.000    0.002    0.000 data_structures.py:818(_dirty)
  915/483    0.002    0.000    0.002    0.000 transforms.py:136(_invalidate_internal)
      695    0.002    0.000    0.002    0.000 base_layer_utils.py:441(enter)
       32    0.000    0.000    0.002    0.000 ticker.py:2020(__init__)
        4    0.000    0.000    0.002    0.001 gen_math_ops.py:6696(prod)
        2    0.000    0.000    0.002    0.001 tf_logging.py:176(warning)
      132    0.000    0.000    0.002    0.000 axis.py:1891(getter)
        1    0.000    0.000    0.002    0.002 Experiment.py:216(<listcomp>)
       22    0.000    0.000    0.002    0.000 function.py:2672(_convert_inputs_to_signature)
      216    0.000    0.000    0.002    0.000 activity.py:413(visit_Name)
        2    0.000    0.000    0.002    0.001 __init__.py:1310(warning)
      780    0.001    0.000    0.002    0.000 execute.py:177(make_str)
      290    0.001    0.000    0.002    0.000 transforms.py:727(__init__)
       55    0.000    0.000    0.002    0.000 save_impl.py:552(_wrap_call_and_conditional_losses)
      675    0.001    0.000    0.002    0.000 transforms.py:1831(__init__)
       15    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:1233(find_spec)
       51    0.000    0.000    0.002    0.000 statistics.py:291(mean)
    16651    0.002    0.000    0.002    0.000 {method 'popleft' of 'collections.deque' objects}
       32    0.000    0.000    0.002    0.000 ticker.py:2095(set_params)
    12008    0.002    0.000    0.002    0.000 tf_decorator.py:262(decorated_target)
        7    0.002    0.000    0.002    0.000 {method 'close' of '_io.TextIOWrapper' objects}
     2376    0.001    0.000    0.002    0.000 nested_structure_coder.py:226(can_encode)
        4    0.000    0.000    0.002    0.001 _base.py:2884(tick_params)
      343    0.001    0.000    0.002    0.000 base_layer.py:2495(_get_input_masks)
     4774    0.002    0.000    0.002    0.000 def_function.py:1036(<genexpr>)
      287    0.000    0.000    0.002    0.000 transforms.py:1247(__add__)
        3    0.000    0.000    0.002    0.001 parser.py:127(_attempt_to_parse_normal_source)
        2    0.000    0.000    0.002    0.001 functional.py:117(_init_graph_network)
      131    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(column_stack)
      176    0.001    0.000    0.002    0.000 __init__.py:183(dumps)
       58    0.000    0.000    0.002    0.000 ast.py:30(parse)
        2    0.000    0.000    0.002    0.001 gen_array_ops.py:785(broadcast_to)
     2288    0.002    0.000    0.002    0.000 utils.py:223(set_training_arg)
        4    0.000    0.000    0.002    0.001 _base.py:2398(handle_single_axis)
     1166    0.001    0.000    0.002    0.000 device_spec.py:376(__eq__)
      339    0.001    0.000    0.002    0.000 base_layer.py:1200(_autographed_call)
      239    0.000    0.000    0.002    0.000 activity.py:333(_exit_and_record_scope)
       49    0.000    0.000    0.002    0.000 activity.py:432(visit_Attribute)
      302    0.001    0.000    0.002    0.000 backend.py:1283(int_shape)
       70    0.001    0.000    0.002    0.000 backend_pdf.py:2328(delta)
        3    0.000    0.000    0.002    0.001 ast3.py:353(visit_With)
     2001    0.002    0.000    0.002    0.000 iostream.py:316(closed)
      274    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(amin)
        1    0.000    0.000    0.002    0.002 base_layer_v1.py:16(<module>)
        2    0.000    0.000    0.002    0.001 _axes.py:1414(plot)
        4    0.000    0.000    0.002    0.001 base_layer.py:2556(_set_connectivity_metadata)
     5930    0.002    0.000    0.002    0.000 _weakrefset.py:52(_commit_removals)
     3117    0.002    0.000    0.002    0.000 __init__.py:2131(_check_in_list)
      215    0.000    0.000    0.002    0.000 lines.py:1257(set_markerfacecoloralt)
     4642    0.001    0.000    0.002    0.000 module.py:302(_is_module)
     1323    0.000    0.000    0.002    0.000 re.py:231(compile)
      215    0.001    0.000    0.002    0.000 lines.py:1147(set_linestyle)
     1434    0.001    0.000    0.002    0.000 transforms.py:1701(__init__)
      396    0.001    0.000    0.002    0.000 data_structures.py:650(<dictcomp>)
      319    0.001    0.000    0.002    0.000 func_graph.py:468(variables)
       29    0.000    0.000    0.002    0.000 backend_pdf.py:2085(encode_string)
     1232    0.001    0.000    0.002    0.000 saveable_object_util.py:365(trace_save_restore_functions)
       34    0.000    0.000    0.002    0.000 training.py:1899(non_trainable_weights)
      638    0.001    0.000    0.002    0.000 nested_structure_coder.py:70(_get_encoders)
      287    0.000    0.000    0.002    0.000 transforms.py:2462(composite_transform_factory)
     2255    0.001    0.000    0.002    0.000 base.py:543(_setattr_tracking)
      847    0.002    0.000    0.002    0.000 <string>:35(_asdict)
       66    0.000    0.000    0.002    0.000 serialized_attributes.py:188(set_and_validate_functions)
        6    0.000    0.000    0.002    0.000 figure.py:466(_set_dpi)
     1225    0.001    0.000    0.002    0.000 def_function.py:911(input_signature)
        3    0.000    0.000    0.002    0.001 math_ops.py:1380(floordiv)
     1308    0.002    0.000    0.002    0.000 ops.py:6583(__init__)
       96    0.001    0.000    0.002    0.000 transforms.py:1924(rotate)
      473    0.002    0.000    0.002    0.000 revived_types.py:73(to_proto)
      532    0.000    0.000    0.002    0.000 __init__.py:1309(_to_unmasked_float_array)
      152    0.000    0.000    0.002    0.000 _base.py:597(viewLim)
       54    0.000    0.000    0.002    0.000 text.py:259(update_from)
      519    0.000    0.000    0.002    0.000 artist.py:1006(<listcomp>)
       57    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap_external>:75(_path_stat)
       32    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(clip)
        2    0.000    0.000    0.002    0.001 metrics.py:279(add_weight)
      780    0.001    0.000    0.002    0.000 op_def_library.py:159(_MakeStr)
      146    0.001    0.000    0.002    0.000 backend_bases.py:737(__init__)
     3168    0.001    0.000    0.002    0.000 object_identity.py:143(__iter__)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:3773(floor_div)
      154    0.000    0.000    0.002    0.000 utils.py:131(maybe_add_training_arg)
      352    0.001    0.000    0.002    0.000 functional_ops.py:1178(<listcomp>)
        2    0.000    0.000    0.002    0.001 gen_array_ops.py:9139(size)
       12    0.000    0.000    0.002    0.000 axis.py:1504(update_units)
      110    0.000    0.000    0.002    0.000 save_impl.py:509(layer_call_wrapper)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:10355(squared_difference)
      242    0.000    0.000    0.002    0.000 base_layer.py:1237(stateful)
      451    0.001    0.000    0.002    0.000 layer_utils.py:179(__init__)
        1    0.000    0.000    0.002    0.002 __init__.py:71(search_function)
    24/12    0.000    0.000    0.002    0.000 units.py:197(get_converter)
      770    0.000    0.000    0.002    0.000 ops.py:416(device)
       44    0.000    0.000    0.002    0.000 save_impl.py:385(to_tensor_spec_or_none)
        3    0.000    0.000    0.002    0.001 directives.py:177(transform)
        3    0.000    0.000    0.002    0.001 util.py:123(scale_losses_by_sample_weight)
       32    0.000    0.000    0.002    0.000 fromnumeric.py:2021(clip)
      407    0.000    0.000    0.002    0.000 nested_structure_coder.py:423(can_encode)
       41    0.000    0.000    0.002    0.000 backend_pdf.py:1585(writePath)
      630    0.001    0.000    0.002    0.000 device.py:67(merge_device)
     1221    0.001    0.000    0.002    0.000 base_layer_utils.py:399(call_context)
       39    0.000    0.000    0.002    0.000 backend_pdf.py:649(endStream)
        3    0.000    0.000    0.002    0.001 optimizer_v2.py:808(_create_hypers)
     3586    0.001    0.000    0.002    0.000 nested_structure_coder.py:133(can_encode)
       12    0.000    0.000    0.002    0.000 patches.py:42(__init__)
     5264    0.002    0.000    0.002    0.000 function.py:223(<genexpr>)
      274    0.000    0.000    0.002    0.000 fromnumeric.py:2676(amin)
      127    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(broadcast_arrays)
      112    0.001    0.000    0.002    0.000 transforms.py:669(translated)
      131    0.001    0.000    0.002    0.000 shape_base.py:612(column_stack)
        3    0.000    0.000    0.002    0.001 return_statements.py:153(visit_FunctionDef)
  292/284    0.001    0.000    0.002    0.000 spines.py:424(get_spine_transform)
       32    0.001    0.000    0.002    0.000 ticker.py:683(_compute_offset)
    71/63    0.000    0.000    0.002    0.000 backend_pdf.py:183(<listcomp>)
     3563    0.002    0.000    0.002    0.000 traceable_stack.py:30(__init__)
       35    0.000    0.000    0.002    0.000 backend_pdf.py:398(end)
       60    0.000    0.000    0.002    0.000 base_layer.py:2182(<listcomp>)
      360    0.000    0.000    0.002    0.000 transforms.py:1714(transform)
     1455    0.001    0.000    0.002    0.000 base_layer.py:1235(<genexpr>)
       55    0.000    0.000    0.002    0.000 data_structures.py:832(_update_snapshot)
       38    0.000    0.000    0.002    0.000 transforms.py:1960(rotate_deg_around)
        4    0.000    0.000    0.002    0.000 _base.py:3104(set_xlim)
      225    0.000    0.000    0.002    0.000 artist.py:978(_update_property)
       51    0.000    0.000    0.002    0.000 Experiment.py:176(<listcomp>)
       36    0.000    0.000    0.002    0.000 fromnumeric.py:42(_wrapit)
      510    0.001    0.000    0.002    0.000 Hanabi.py:298(<dictcomp>)
     2266    0.001    0.000    0.002    0.000 copy.py:252(_keep_alive)
      792    0.000    0.000    0.002    0.000 regularizers.py:342(serialize)
      810    0.001    0.000    0.002    0.000 _weakrefset.py:36(__init__)
      639    0.000    0.000    0.002    0.000 backend_pdf.py:635(write)
        2    0.000    0.000    0.002    0.001 _base.py:930(_gen_axes_spines)
     6237    0.001    0.000    0.002    0.000 base.py:649(_checkpoint_dependencies)
       11    0.000    0.000    0.002    0.000 metric_serialization.py:42(_get_serialized_attributes_internal)
      209    0.001    0.000    0.002    0.000 func_graph.py:697(clear_captures)
       24    0.000    0.000    0.002    0.000 __init__.py:1633(safe_first_element)
       34    0.000    0.000    0.002    0.000 layer_utils.py:277(gather_non_trainable_weights)
      458    0.000    0.000    0.002    0.000 colors.py:123(_is_nth_color)
       10    0.000    0.000    0.002    0.000 _base.py:945(<genexpr>)
        3    0.000    0.000    0.002    0.001 cfg.py:956(visit_With)
      140    0.000    0.000    0.002    0.000 artist.py:858(_set_gc_clip)
        8    0.000    0.000    0.002    0.000 spines.py:517(linear_spine)
       11    0.000    0.000    0.002    0.000 save.py:677(_verify_ops)
      328    0.001    0.000    0.002    0.000 base_layer.py:2340(_should_cast_single_input)
      198    0.001    0.000    0.002    0.000 json_utils.py:37(default)
      286    0.001    0.000    0.002    0.000 save_impl.py:438(training_arg_was_passed)
      616    0.001    0.000    0.002    0.000 base_layer.py:3001(_trackable_saved_model_saver)
      347    0.001    0.000    0.002    0.000 base_layer_utils.py:541(is_subclassed)
       66    0.000    0.000    0.002    0.000 serialized_attributes.py:142(new)
    11738    0.002    0.000    0.002    0.000 {built-in method sys._getframe}
       30    0.000    0.000    0.002    0.000 cfg.py:687(_process_basic_statement)
       38    0.000    0.000    0.002    0.000 patches.py:341(_set_facecolor)
      110    0.000    0.000    0.002    0.000 transforms.py:782(from_extents)
       96    0.001    0.000    0.002    0.000 pickle.py:905(save_global)
       14    0.000    0.000    0.002    0.000 backend_agg.py:125(draw_path)
        1    0.000    0.000    0.002    0.002 compile_utils.py:134(build)
     5628    0.002    0.000    0.002    0.000 ops.py:3156(_set_control_flow_context)
       99    0.001    0.000    0.002    0.000 functional.py:335(<listcomp>)
      318    0.001    0.000    0.002    0.000 weakref.py:102(__init__)
   154/69    0.000    0.000    0.002    0.000 templates.py:46(visit)
        3    0.000    0.000    0.002    0.001 training.py:2754(write_scalar_summaries)
     4002    0.002    0.000    0.002    0.000 callbacks.py:632(on_epoch_begin)
      695    0.002    0.000    0.002    0.000 base_layer_utils.py:524(__exit__)
      569    0.001    0.000    0.001    0.000 transforms.py:163(set_children)
      649    0.001    0.000    0.001    0.000 nested_structure_coder.py:333(do_encode)
       14    0.001    0.000    0.001    0.000 {method 'draw_path' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
       11    0.000    0.000    0.001    0.000 tensor_util.py:674(_ConstantValue)
      368    0.001    0.000    0.001    0.000 transforms.py:1793(transform_affine)
      390    0.000    0.000    0.001    0.000 np_utils.py:160(_has_docstring)
      336    0.001    0.000    0.001    0.000 backend_pdf.py:96(fill)
    29/13    0.000    0.000    0.001    0.000 ast3.py:369(visit_Call)
      352    0.001    0.000    0.001    0.000 forwardprop_util.py:34(__new__)
      638    0.001    0.000    0.001    0.000 nested_structure_coder.py:72(<listcomp>)
       44    0.000    0.000    0.001    0.000 utils.py:40(use_wrapped_call)
     5192    0.001    0.000    0.001    0.000 base.py:984(_list_extra_dependencies_for_serialization)
        3    0.000    0.000    0.001    0.000 base_layer.py:1717(add_update)
       33    0.000    0.000    0.001    0.000 uuid.py:621(uuid4)
      140    0.000    0.000    0.001    0.000 backend_bases.py:901(set_clip_path)
      189    0.000    0.000    0.001    0.000 font_manager.py:673(__eq__)
      514    0.001    0.000    0.001    0.000 variables.py:1132(_shared_name)
       48    0.000    0.000    0.001    0.000 patches.py:526(_bind_draw_path_function)
        3    0.000    0.000    0.001    0.000 math_grad.py:1304(_MulGrad)
        6    0.000    0.000    0.001    0.000 inspect.py:935(getblock)
      374    0.000    0.000    0.001    0.000 policy.py:585(_is_convertible_to_dtype)
      290    0.000    0.000    0.001    0.000 text.py:824(get_unitless_position)
       24    0.000    0.000    0.001    0.000 inspect.py:680(getsourcefile)
        1    0.000    0.000    0.001    0.001 training.py:2472(_validate_compile)
     2024    0.001    0.000    0.001    0.000 base_layer.py:2954(_eager_losses)
      144    0.000    0.000    0.001    0.000 path.py:96(__init__)
        3    0.000    0.000    0.001    0.000 optimizer_v2.py:552(_aggregate_gradients)
      513    0.000    0.000    0.001    0.000 backend_pdf.py:414(write)
      113    0.000    0.000    0.001    0.000 axis.py:618(update_position)
        8    0.000    0.000    0.001    0.000 spines.py:36(__init__)
    13277    0.001    0.000    0.001    0.000 inspect.py:2506(default)
     3349    0.001    0.000    0.001    0.000 typing.py:1089(__eq__)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:792(scalar)
    10030    0.001    0.000    0.001    0.000 artist.py:804(get_animated)
     1307    0.001    0.000    0.001    0.000 tokenize.py:152(_compile)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:739(summary_writer_function)
       32    0.000    0.000    0.001    0.000 {method 'clip' of 'numpy.ndarray' objects}
      127    0.000    0.000    0.001    0.000 stride_tricks.py:206(broadcast_arrays)
        8    0.000    0.000    0.001    0.000 base_layer.py:2884(_init_call_fn_args)
      616    0.001    0.000    0.001    0.000 auto_control_deps_utils.py:66(<listcomp>)
       26    0.000    0.000    0.001    0.000 patches.py:348(set_facecolor)
      176    0.001    0.000    0.001    0.000 node.py:188(serialize_first_arg_tensor)
       52    0.000    0.000    0.001    0.000 markers.py:713(_set_tickleft)
     2255    0.001    0.000    0.001    0.000 nested_structure_coder.py:280(can_encode)
       51    0.000    0.000    0.001    0.000 statistics.py:105(_sum)
       58    0.000    0.000    0.001    0.000 font_manager.py:859(copy)
       72    0.000    0.000    0.001    0.000 np_utils.py:217(<listcomp>)
        6    0.000    0.000    0.001    0.000 __init__.py:11(unparse)
       32    0.000    0.000    0.001    0.000 _methods.py:97(_clip)
       98    0.000    0.000    0.001    0.000 axis.py:501(update_position)
        3    0.000    0.000    0.001    0.000 continue_statements.py:145(visit_With)
        8    0.000    0.000    0.001    0.000 sre_compile.py:557(compile)
       42    0.000    0.000    0.001    0.000 activity.py:555(_visit_arg_declarations)
      287    0.001    0.000    0.001    0.000 inspect.py:485(unwrap)
       54    0.000    0.000    0.001    0.000 transforms.py:2709(get_transformed_points_and_affine)
      918    0.001    0.000    0.001    0.000 ops.py:517(<listcomp>)
     1218    0.001    0.000    0.001    0.000 font_manager.py:1220(<genexpr>)
     1056    0.001    0.000    0.001    0.000 base_serialization.py:33(__init__)
      368    0.001    0.000    0.001    0.000 __init__.py:882(get_siblings)
      630    0.001    0.000    0.001    0.000 device.py:172(is_null_merge)
        6    0.000    0.000    0.001    0.000 unparser.py:32(__init__)
      539    0.001    0.000    0.001    0.000 serialized_attributes.py:171(<dictcomp>)
        2    0.000    0.000    0.001    0.001 _datasource.py:427(_findfile)
        1    0.000    0.000    0.001    0.001 np_arrays.py:15(<module>)
3278/1166    0.001    0.000    0.001    0.000 tensor_util.py:229(_FlattenToStrings)
     1936    0.001    0.000    0.001    0.000 artist.py:336(pchanged)
      6/3    0.000    0.000    0.001    0.000 return_statements.py:93(_visit_statement_block)
       22    0.000    0.000    0.001    0.000 save.py:360(_tensor_dict_to_tensorinfo)
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(round_)
       10    0.000    0.000    0.001    0.000 _base.py:2045(_process_unit_info)
      648    0.001    0.000    0.001    0.000 base_layer.py:2515(_call_arg_was_passed)
     2095    0.001    0.000    0.001    0.000 typing.py:1019(_abc_negative_cache)
       13    0.000    0.000    0.001    0.000 __init__.py:1406(makeRecord)
        1    0.001    0.001    0.001    0.001 base_layer_v1.py:77(Layer)
        3    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:735(source_to_code)
      649    0.000    0.000    0.001    0.000 base_layer.py:1240(<genexpr>)
     2286    0.001    0.000    0.001    0.000 ops.py:4584(op_in_group)
       32    0.000    0.000    0.001    0.000 ticker.py:256(<listcomp>)
      236    0.000    0.000    0.001    0.000 transforms.py:2290(__init__)
      510    0.001    0.000    0.001    0.000 Hanabi.py:359(score)
       20    0.000    0.000    0.001    0.000 _base.py:2048(_process_single_axis)
    296/6    0.000    0.000    0.001    0.000 unparser.py:59(dispatch)
       37    0.000    0.000    0.001    0.000 textwrap.py:414(dedent)
       32    0.000    0.000    0.001    0.000 ticker.py:2072(_validate_steps)
       46    0.000    0.000    0.001    0.000 markers.py:733(_set_tickdown)
     2000    0.001    0.000    0.001    0.000 metrics.py:247(<listcomp>)
       22    0.000    0.000    0.001    0.000 save.py:361(<dictcomp>)
        3    0.000    0.000    0.001    0.000 optimizer_v2.py:826(iterations)
       14    0.000    0.000    0.001    0.000 activity.py:375(visit_Expr)
        1    0.000    0.000    0.001    0.001 type1font.py:23(<module>)
     2464    0.001    0.000    0.001    0.000 base.py:951(_gather_saveables_for_checkpoint)
      357    0.000    0.000    0.001    0.000 context.py:2390(_tmp_in_graph_mode)
     2072    0.001    0.000    0.001    0.000 transforms.py:82(__init__)
       15    0.000    0.000    0.001    0.000 tf_stack.py:105(__init__)
        8    0.000    0.000    0.001    0.000 base_layer.py:1300(input_spec)
      265    0.000    0.000    0.001    0.000 ops.py:6287(add_to_collection)
       58    0.000    0.000    0.001    0.000 transforms.py:2696(_revalidate)
       70    0.000    0.000    0.001    0.000 transforms.py:773(from_bounds)
        4    0.000    0.000    0.001    0.000 _base.py:153(__call__)
        8    0.000    0.000    0.001    0.000 spines.py:226(register_axis)
      242    0.000    0.000    0.001    0.000 activity.py:327(_exit_scope)
       13    0.001    0.000    0.001    0.000 __init__.py:251(__init__)
       72    0.000    0.000    0.001    0.000 backend_pdf.py:2177(new_gc)
      474    0.000    0.000    0.001    0.000 re.py:169(match)
      544    0.000    0.000    0.001    0.000 artist.py:168(convert_xunits)
       69    0.000    0.000    0.001    0.000 templates.py:72(visit_Name)
        2    0.000    0.000    0.001    0.001 _base.py:310(_plot_args)
     1019    0.001    0.000    0.001    0.000 api.py:122(get_effective_source_map)
       23    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:85(_path_is_mode_type)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:190(<listcomp>)
       55    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._op_def_registry.get}
       22    0.000    0.000    0.001    0.000 utils_impl.py:70(build_tensor_info_internal)
     4731    0.001    0.000    0.001    0.000 device_spec.py:431(to_string)
      536    0.001    0.000    0.001    0.000 tensor_shape.py:1238(unknown_shape)
        3    0.000    0.000    0.001    0.000 liveness.py:183(visit_Try)
       18    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:94(_path_isfile)
      460    0.001    0.000    0.001    0.000 artist.py:695(set_figure)
     2086    0.001    0.000    0.001    0.000 compile_utils.py:129(<listcomp>)
      264    0.000    0.000    0.001    0.000 {method 'max' of 'numpy.ndarray' objects}
      436    0.001    0.000    0.001    0.000 ops.py:4596(_current_control_dependencies)
      836    0.001    0.000    0.001    0.000 _collections_abc.py:879(__iter__)
     1226    0.001    0.000    0.001    0.000 typing.py:1033(_abc_negative_cache_version)
       41    0.000    0.000    0.001    0.000 backend_pdf.py:1577(pathOperations)
        8    0.000    0.000    0.001    0.000 spines.py:238(cla)
       76    0.000    0.000    0.001    0.000 backend_pdf.py:2184(__init__)
      166    0.000    0.000    0.001    0.000 tensor_shape.py:282(merge_with)
        3    0.000    0.000    0.001    0.000 reaching_definitions.py:257(visit_Try)
       32    0.000    0.000    0.001    0.000 ticker.py:722(_set_order_of_magnitude)
      640    0.001    0.000    0.001    0.000 figure.py:45(_stale_figure_callback)
       55    0.000    0.000    0.001    0.000 save_impl.py:296(_restore_child_layer_functions)
      9/3    0.000    0.000    0.001    0.000 unparser.py:346(_FunctionDef)
      165    0.000    0.000    0.001    0.000 optimizer_v2.py:1333(<lambda>)
      9/3    0.000    0.000    0.001    0.000 unparser.py:352(__FunctionDef_helper)
      140    0.001    0.000    0.001    0.000 ticker.py:573(__call__)
       37    0.000    0.000    0.001    0.000 axis.py:523(_get_text1_transform)
        4    0.000    0.000    0.001    0.000 axis.py:2054(_update_offset_text_position)
  337/185    0.000    0.000    0.001    0.000 _base.py:724(get_yaxis_transform)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3590(round_)
       34    0.000    0.000    0.001    0.000 axis.py:407(_get_text1_transform)
        3    0.000    0.000    0.001    0.000 return_statements.py:113(visit_With)
       44    0.000    0.000    0.001    0.000 function.py:2709(<genexpr>)
        6    0.000    0.000    0.001    0.000 transforms.py:1915(clear)
       69    0.000    0.000    0.001    0.000 re.py:184(sub)
     7289    0.001    0.000    0.001    0.000 {method 'remove' of 'set' objects}
      339    0.001    0.000    0.001    0.000 base_layer.py:1157(_set_training_mode)
       27    0.001    0.000    0.001    0.000 {method 'draw_markers' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      154    0.001    0.000    0.001    0.000 base_layer.py:3005(_object_identifier)
       50    0.001    0.000    0.001    0.000 function_base.py:2031(__init__)
     1293    0.001    0.000    0.001    0.000 weakref.py:125(_commit_removals)
  310/170    0.000    0.000    0.001    0.000 _base.py:648(get_xaxis_transform)
      242    0.001    0.000    0.001    0.000 activity.py:182(finalize)
       44    0.000    0.000    0.001    0.000 input_spec.py:230(to_tensor_spec)
        3    0.000    0.000    0.001    0.000 tf_inspect.py:355(getsourcelines)
      103    0.000    0.000    0.001    0.000 transforms.py:1972(translate)
      355    0.000    0.000    0.001    0.000 axis.py:325(_set_artist_props)
      253    0.001    0.000    0.001    0.000 resource_variable_ops.py:97(<listcomp>)
       37    0.000    0.000    0.001    0.000 _base.py:748(get_yaxis_text1_transform)
     2739    0.001    0.000    0.001    0.000 nested_structure_coder.py:199(can_encode)
        3    0.000    0.000    0.001    0.000 inspect.py:946(getsourcelines)
      215    0.000    0.000    0.001    0.000 lines.py:648(set_data)
        8    0.000    0.000    0.001    0.000 base_layer.py:2907(_call_fn_args)
       22    0.000    0.000    0.001    0.000 metric_serialization.py:32(_python_properties_internal)
      528    0.000    0.000    0.001    0.000 constraints.py:285(serialize)
       78    0.000    0.000    0.001    0.000 transforms.py:1532(transform_path_non_affine)
        8    0.000    0.000    0.001    0.000 base_layer.py:2261(_set_dtype_policy)
      292    0.000    0.000    0.001    0.000 _internal.py:784(_ufunc_doc_signature_formatter)
       34    0.000    0.000    0.001    0.000 _base.py:672(get_xaxis_text1_transform)
      106    0.000    0.000    0.001    0.000 transforms.py:361(ymax)
       22    0.000    0.000    0.001    0.000 saving_utils.py:270(_serialize_nested_config)
      135    0.001    0.000    0.001    0.000 artist.py:1074(update_from)
      430    0.001    0.000    0.001    0.000 lines.py:1114(_split_drawstyle_linestyle)
      264    0.000    0.000    0.001    0.000 _methods.py:28(_amax)
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(around)
      156    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
       52    0.000    0.000    0.001    0.000 markers.py:719(_set_tickright)
     1019    0.001    0.000    0.001    0.000 tf_stack.py:123(get_filtered_filenames)
      561    0.000    0.000    0.001    0.000 data_structures.py:1059(<lambda>)
       16    0.000    0.000    0.001    0.000 transforms.py:703(<listcomp>)
      953    0.001    0.000    0.001    0.000 ops.py:6625(_restore_name_scope)
     1287    0.001    0.000    0.001    0.000 func_graph.py:489(<genexpr>)
       70    0.000    0.000    0.001    0.000 backend_bases.py:656(new_gc)
        4    0.000    0.000    0.001    0.000 figure.py:966(set_facecolor)
       35    0.000    0.000    0.001    0.000 backend_pdf.py:387(_writeHeader)
      152    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
       17    0.000    0.000    0.001    0.000 cfg.py:785(visit_Assign)
       48    0.001    0.000    0.001    0.000 transforms.py:2779(nonsingular)
        8    0.000    0.000    0.001    0.000 base_layer.py:2900(_call_full_argspec)
     2765    0.001    0.000    0.001    0.000 base_layer.py:1218(name)
       41    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.convert_to_string}
       50    0.001    0.000    0.001    0.000 callbacks.py:1610(__init__)
      168    0.000    0.000    0.001    0.000 activity.py:544(_visit_node_list)
      397    0.000    0.000    0.001    0.000 artist.py:358(set_transform)
        2    0.000    0.000    0.001    0.000 _base.py:1842(add_line)
      352    0.001    0.000    0.001    0.000 function.py:1430(forward)
       58    0.000    0.000    0.001    0.000 lines.py:724(_get_transformed_path)
       46    0.000    0.000    0.001    0.000 markers.py:727(_set_tickup)
       90    0.000    0.000    0.001    0.000 transforms.py:346(xmin)
      403    0.001    0.000    0.001    0.000 ast.py:118(copy_location)
     1056    0.001    0.000    0.001    0.000 auto_control_deps_utils.py:54(<listcomp>)
       37    0.000    0.000    0.001    0.000 axis.py:526(_get_text2_transform)
      140    0.000    0.000    0.001    0.000 axis.py:301(set_label1)
       77    0.000    0.000    0.001    0.000 posixpath.py:75(join)
        3    0.000    0.000    0.001    0.000 parser.py:59(dedent_block)
      146    0.000    0.000    0.001    0.000 transforms.py:2644(__init__)
        4    0.000    0.000    0.001    0.000 patches.py:704(__init__)
       34    0.000    0.000    0.001    0.000 axis.py:410(_get_text2_transform)
       27    0.000    0.000    0.001    0.000 __init__.py:149(get)
        1    0.000    0.000    0.001    0.001 type1font.py:39(Type1Font)
      695    0.001    0.000    0.001    0.000 base_layer_utils.py:503(__init__)
       15    0.000    0.000    0.001    0.000 parser.py:252(parse_expression)
      528    0.001    0.000    0.001    0.000 saveable_object.py:24(__init__)
        1    0.001    0.001    0.001    0.001 Experiment.py:207(<listcomp>)
       18    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:504(_init_module_attrs)
      339    0.000    0.000    0.001    0.000 backend_pdf.py:251(__init__)
1536/1487    0.001    0.000    0.001    0.000 qual_names.py:155(__hash__)
      629    0.001    0.000    0.001    0.000 ops.py:5185(__enter__)
     1457    0.001    0.000    0.001    0.000 <string>:12(__new__)
      222    0.000    0.000    0.001    0.000 base_layer.py:2578(_get_node_attribute_at_index)
     2332    0.001    0.000    0.001    0.000 generic_utils.py:167(get_registered_name)
       32    0.000    0.000    0.001    0.000 ticker.py:2087(_staircase)
      507    0.001    0.000    0.001    0.000 {method 'compress' of 'zlib.Compress' objects}
        9    0.000    0.000    0.001    0.000 tensor_util.py:569(MakeNdarray)
      131    0.000    0.000    0.001    0.000 weakref.py:165(__setitem__)
     2966    0.001    0.000    0.001    0.000 object_identity.py:78(unwrapped)
      569    0.000    0.000    0.001    0.000 ops.py:6769(_op_to_colocate_with)
      111    0.000    0.000    0.001    0.000 reaching_definitions.py:91(__or__)
      528    0.000    0.000    0.001    0.000 tf_utils.py:281(_is_atomic_nested)
      656    0.001    0.000    0.001    0.000 traceable_stack.py:111(pop_obj)
       50    0.000    0.000    0.001    0.000 training.py:762(make_train_function)
        3    0.000    0.000    0.001    0.000 cfg.py:248(visit_reverse)
      161    0.000    0.000    0.001    0.000 path.py:159(_fast_from_codes_and_verts)
       29    0.000    0.000    0.001    0.000 backend_pdf.py:1929(_setup_textpos)
     2255    0.001    0.000    0.001    0.000 nested_structure_coder.py:257(can_encode)
       56    0.000    0.000    0.001    0.000 lines.py:709(_transform_path)
      240    0.000    0.000    0.001    0.000 transforms.py:2194(get_affine)
     2703    0.001    0.000    0.001    0.000 ops.py:4575(control_inputs)
      324    0.001    0.000    0.001    0.000 node.py:147(map_arguments)
      102    0.000    0.000    0.001    0.000 transforms.py:351(ymin)
       64    0.000    0.000    0.001    0.000 _methods.py:63(_clip_dep_is_scalar_nan)
       21    0.000    0.000    0.001    0.000 activity.py:237(__init__)
      616    0.001    0.000    0.001    0.000 qual_names.py:60(__init__)
      474    0.001    0.000    0.001    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
      264    0.000    0.000    0.001    0.000 tf_utils.py:187(<listcomp>)
      296    0.000    0.000    0.001    0.000 markers.py:249(set_fillstyle)
        3    0.000    0.000    0.001    0.000 tempfile.py:663(NamedTemporaryFile)
        1    0.000    0.000    0.001    0.001 training.py:578(_configure_steps_per_execution)
      456    0.000    0.000    0.001    0.000 artist.py:937(set_visible)
       34    0.000    0.000    0.001    0.000 _base.py:698(get_xaxis_text2_transform)
      152    0.000    0.000    0.001    0.000 _methods.py:32(_amin)
        8    0.000    0.000    0.001    0.000 sre_parse.py:844(parse)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3130(around)
     1182    0.001    0.000    0.001    0.000 device_spec.py:350(_components_to_string)
       37    0.000    0.000    0.001    0.000 _base.py:774(get_yaxis_text2_transform)
      168    0.000    0.000    0.001    0.000 activity.py:545(<listcomp>)
       54    0.000    0.000    0.001    0.000 path.py:354(iter_segments)
      407    0.001    0.000    0.001    0.000 nested_structure_coder.py:403(do_encode)
      125    0.000    0.000    0.001    0.000 ops.py:2510(_get_attr_type)
        9    0.000    0.000    0.001    0.000 iterator_ops.py:898(_from_components)
      215    0.000    0.000    0.001    0.000 lines.py:1401(set_dash_capstyle)
      212    0.001    0.000    0.001    0.000 font_manager.py:778(set_weight)
       17    0.000    0.000    0.001    0.000 __init__.py:138(deserialize)
      678    0.001    0.000    0.001    0.000 base_layer.py:932(<genexpr>)
        2    0.000    0.000    0.001    0.000 _base.py:3024(set_xbound)
      600    0.001    0.000    0.001    0.000 module_wrapper.py:154(__getattribute__)
     5544    0.001    0.000    0.001    0.000 data_structures.py:447(_external_modification)
        3    0.000    0.000    0.001    0.000 cfg.py:914(visit_Try)
     3546    0.001    0.000    0.001    0.000 device_spec.py:38(_as_int_or_none)
        1    0.000    0.000    0.001    0.001 backend.py:217(get_uid)
      215    0.000    0.000    0.001    0.000 lines.py:733(set_transform)
        3    0.000    0.000    0.001    0.000 unparser.py:435(_With)
     5544    0.001    0.000    0.001    0.000 data_structures.py:431(_non_append_mutation)
      509    0.000    0.000    0.001    0.000 lines.py:1285(set_xdata)
        3    0.000    0.000    0.001    0.000 unparser.py:422(_generic_With)
        3    0.000    0.000    0.001    0.000 anno.py:152(dup)
      154    0.001    0.000    0.001    0.000 functional.py:816(_trackable_saved_model_saver)
      134    0.000    0.000    0.001    0.000 base_layer.py:2070(input)
      212    0.001    0.000    0.001    0.000 font_manager.py:814(set_size)
      350    0.000    0.000    0.001    0.000 weakref.py:438(items)
       66    0.000    0.000    0.001    0.000 serialized_attributes.py:174(functions_to_serialize)
        2    0.000    0.000    0.001    0.000 backend_agg.py:398(get_renderer)
     1936    0.001    0.000    0.001    0.000 nested_structure_coder.py:170(<genexpr>)
       32    0.000    0.000    0.001    0.000 transforms.py:1015(get_points)
      110    0.000    0.000    0.001    0.000 font_manager.py:1045(score_family)
       16    0.000    0.000    0.001    0.000 transforms.py:704(<listcomp>)
      368    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.affine_transform}
     1906    0.001    0.000    0.001    0.000 context.py:808(scope_name)
      210    0.000    0.000    0.001    0.000 optimizer_v2.py:721(__setattr__)
     2684    0.001    0.000    0.001    0.000 function.py:2566(<genexpr>)
      116    0.000    0.000    0.001    0.000 text.py:236(get_rotation)
       12    0.000    0.000    0.001    0.000 tf_utils.py:464(graph_context_for_symbolic_tensors)
      586    0.001    0.000    0.001    0.000 function_base.py:257(iterable)
      104    0.001    0.000    0.001    0.000 {method 'write' of '_io.TextIOWrapper' objects}
      121    0.001    0.000    0.001    0.000 base_layer.py:2299(_compute_dtype)
       15    0.000    0.000    0.001    0.000 constant_op.py:347(_tensor_shape_tensor_conversion_function)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
       11    0.000    0.000    0.001    0.000 gen_io_ops.py:1520(<listcomp>)
        2    0.000    0.000    0.001    0.000 _datasource.py:517(exists)
        6    0.000    0.000    0.001    0.000 inspect.py:760(findsource)
      156    0.000    0.000    0.001    0.000 def_function.py:556(_get_key_for_call_stats)
      140    0.000    0.000    0.001    0.000 axis.py:314(set_label2)
       16    0.000    0.000    0.001    0.000 transforms.py:705(<listcomp>)
      473    0.001    0.000    0.001    0.000 serialized_attributes.py:183(<dictcomp>)
      678    0.000    0.000    0.001    0.000 base_layer.py:3234(<genexpr>)
       90    0.000    0.000    0.001    0.000 transforms.py:356(xmax)
      629    0.001    0.000    0.001    0.000 ops.py:5193(__exit__)
     8536    0.001    0.000    0.001    0.000 copy.py:190(_deepcopy_atomic)
       11    0.000    0.000    0.001    0.000 save.py:527(_trace_resource_initializers)
     2255    0.000    0.000    0.001    0.000 nested_structure_coder.py:307(can_encode)
     1182    0.000    0.000    0.001    0.000 device_spec.py:42(_as_device_str_or_none)
       56    0.000    0.000    0.001    0.000 transforms.py:2681(__init__)
      215    0.000    0.000    0.001    0.000 lines.py:1096(set_linewidth)
     1845    0.001    0.000    0.001    0.000 ops.py:113(tensor_id)
       15    0.000    0.000    0.001    0.000 function_wrappers.py:83(__exit__)
      345    0.000    0.000    0.001    0.000 reaching_definitions.py:69(__init__)
      823    0.001    0.000    0.001    0.000 resource_variable_ops.py:503(device)
       36    0.000    0.000    0.001    0.000 transforms.py:986(__init__)
       50    0.000    0.000    0.001    0.000 function_base.py:2144(<listcomp>)
      554    0.000    0.000    0.001    0.000 lines.py:1297(set_ydata)
        8    0.000    0.000    0.001    0.000 policy.py:296(__init__)
      253    0.000    0.000    0.001    0.000 resource_variable_ops.py:100(<listcomp>)
       82    0.000    0.000    0.001    0.000 ast3.py:250(visit_Name)
      374    0.000    0.000    0.001    0.000 policy.py:461(get_config)
      121    0.000    0.000    0.001    0.000 <string>:24(_replace)
      9/8    0.000    0.000    0.001    0.000 sre_parse.py:407(_parse_sub)
      112    0.000    0.000    0.001    0.000 transforms.py:1764(frozen)
       29    0.000    0.000    0.001    0.000 backend_pdf.py:654(fontName)
      184    0.000    0.000    0.001    0.000 transforms.py:2367(transform_non_affine)
       35    0.000    0.000    0.001    0.000 backend_pdf.py:423(_flush)
       16    0.000    0.000    0.001    0.000 transforms.py:706(<listcomp>)
     1587    0.001    0.000    0.001    0.000 device_spec.py:426(__hash__)
     1769    0.001    0.000    0.001    0.000 {method 'copy' of 'dict' objects}
        4    0.000    0.000    0.001    0.000 training.py:2637(reduce_per_replica)
  214/160    0.000    0.000    0.001    0.000 transforms.py:2319(_invalidate_internal)
        2    0.000    0.000    0.001    0.000 _subplots.py:129(update_params)
       99    0.000    0.000    0.001    0.000 utils.py:99(layer_uses_training_bool)
      382    0.000    0.000    0.001    0.000 inspect.py:505(_is_wrapper)
     3050    0.001    0.000    0.001    0.000 ops.py:4634(<genexpr>)
     4108    0.001    0.000    0.001    0.000 artist.py:192(axes)
        2    0.000    0.000    0.001    0.000 backend_pdf.py:553(newPage)
      154    0.001    0.000    0.001    0.000 version_utils.py:125(is_v1_layer_or_model)
      215    0.000    0.000    0.001    0.000 lines.py:1355(set_dash_joinstyle)
      352    0.000    0.000    0.001    0.000 tape.py:163(should_record_backprop)
      547    0.000    0.000    0.001    0.000 artist.py:180(convert_yunits)
        2    0.000    0.000    0.001    0.000 gridspec.py:586(get_position)
      116    0.001    0.000    0.001    0.000 text.py:41(get_rotation)
       33    0.000    0.000    0.001    0.000 uuid.py:106(__init__)
      352    0.001    0.000    0.001    0.000 function.py:1413(__init__)
        4    0.000    0.000    0.001    0.000 _base.py:800(_update_transScale)
       29    0.001    0.000    0.001    0.000 {method 'draw_glyphs_to_bitmap' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.001    0.000 backend_agg.py:86(__init__)
       51    0.001    0.000    0.001    0.000 statistics.py:233(_convert)
      110    0.000    0.000    0.001    0.000 font_manager.py:1124(score_weight)
        3    0.000    0.000    0.001    0.000 tempfile.py:390(_mkstemp_inner)
      9/8    0.000    0.000    0.001    0.000 sre_parse.py:470(_parse)
      110    0.000    0.000    0.001    0.000 function.py:2292(_deterministic_dict_values)
      464    0.000    0.000    0.001    0.000 lines.py:59(_scale_dashes)
      110    0.000    0.000    0.001    0.000 base_layer.py:1569(metrics)
        7    0.000    0.000    0.001    0.000 policy.py:488(global_policy)
       11    0.000    0.000    0.001    0.000 file_io.py:631(has_atomic_move)
      656    0.000    0.000    0.001    0.000 base_layer.py:2468(<genexpr>)
      265    0.000    0.000    0.001    0.000 ops.py:3933(add_to_collection)
      144    0.000    0.000    0.001    0.000 path.py:188(_update_values)
       77    0.000    0.000    0.001    0.000 reaching_definitions.py:204(visit_Name)
        6    0.000    0.000    0.001    0.000 figure.py:874(set_size_inches)
  638/340    0.000    0.000    0.001    0.000 transforms.py:2349(<lambda>)
      352    0.000    0.000    0.001    0.000 graph_view.py:80(_name_slot_variable)
        8    0.000    0.000    0.001    0.000 _base.py:1436(apply_aspect)
     1328    0.001    0.000    0.001    0.000 ops.py:5066(_colocation_stack)
       32    0.000    0.000    0.001    0.000 distribute_lib.py:2896(colocate_vars_with)
      110    0.000    0.000    0.001    0.000 function.py:2893(<genexpr>)
      167    0.000    0.000    0.001    0.000 gast.py:321(copy_location)
       27    0.000    0.000    0.001    0.000 path.py:419(cleaned)
      154    0.000    0.000    0.001    0.000 artist.py:1037(set_zorder)
      470    0.000    0.000    0.001    0.000 transformer.py:194(__getitem__)
     1221    0.000    0.000    0.001    0.000 nested_structure_coder.py:376(can_encode)
       12    0.000    0.000    0.001    0.000 _dill.py:400(__init__)
        1    0.000    0.000    0.001    0.001 metrics.py:153(__init__)
      215    0.000    0.000    0.001    0.000 lines.py:1416(set_solid_capstyle)
      112    0.001    0.000    0.001    0.000 {method 'round' of 'numpy.ndarray' objects}
      704    0.001    0.000    0.001    0.000 ops.py:4888(_override_gradient_function)
       33    0.001    0.000    0.001    0.000 {built-in method posix.urandom}
        3    0.000    0.000    0.001    0.000 continue_statements.py:119(_visit_non_loop_body)
        3    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:845(_cache_bytecode)
       35    0.001    0.000    0.001    0.000 {method 'flush' of 'zlib.Compress' objects}
      116    0.000    0.000    0.001    0.000 text.py:1193(_preprocess_math)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(ptp)
       55    0.000    0.000    0.001    0.000 layer_utils.py:224(invalidate_all)
       22    0.000    0.000    0.001    0.000 generic_utils.py:334(deserialize_keras_object)
       12    0.000    0.000    0.001    0.000 templates.py:154(visit_keyword)
      597    0.000    0.000    0.001    0.000 device_spec.py:300(_string_to_components)
       50    0.000    0.000    0.001    0.000 function_base.py:2164(<listcomp>)
      140    0.001    0.000    0.001    0.000 transforms.py:2859(_interval_contains_close)
        1    0.000    0.000    0.001    0.001 __init__.py:357(namedtuple)
    24/22    0.000    0.000    0.001    0.000 transforms.py:412(bounds)
       88    0.000    0.000    0.001    0.000 serialization.py:28(get_json_type)
       72    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(all)
       32    0.000    0.000    0.001    0.000 shape_base.py:286(hstack)
       29    0.000    0.000    0.001    0.000 {method 'draw_text_image' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
       35    0.000    0.000    0.001    0.000 backend_pdf.py:645(beginStream)
       18    0.000    0.000    0.001    0.000 ast3.py:149(visit_arguments)
       37    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:147(__enter__)
      694    0.001    0.000    0.001    0.000 {method 'find' of 'str' objects}
      347    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddControlInput}
      176    0.000    0.000    0.001    0.000 serialized_attributes.py:162(functions)
      714    0.001    0.000    0.001    0.000 functional.py:821(_make_node_key)
      210    0.000    0.000    0.001    0.000 font_manager.py:759(set_style)
     2364    0.001    0.000    0.001    0.000 device_spec.py:34(_as_str_or_none)
      330    0.001    0.000    0.001    0.000 encoder.py:104(__init__)
       25    0.000    0.000    0.001    0.000 directives.py:117(visit_Name)
       54    0.000    0.000    0.001    0.000 random_seed.py:41(get_seed)
        6    0.000    0.000    0.001    0.000 layer_utils.py:182(print_row)
        6    0.000    0.000    0.001    0.000 math_ops.py:3458(add_n)
     2210    0.001    0.000    0.001    0.000 _collections_abc.py:392(__subclasshook__)
       22    0.000    0.000    0.001    0.000 utils_impl.py:218(get_variables_dir)
      215    0.000    0.000    0.001    0.000 lines.py:1061(set_drawstyle)
      132    0.000    0.000    0.001    0.000 base_layer.py:2089(output)
     2040    0.001    0.000    0.001    0.000 resource_variable_ops.py:513(name)
       68    0.000    0.000    0.001    0.000 axis.py:1562(convert_units)
        6    0.000    0.000    0.000    0.000 cfg.py:599(build)
    29/13    0.000    0.000    0.000    0.000 unparser.py:716(_Call)
       13    0.000    0.000    0.000    0.000 training.py:684(run_eagerly)
        4    0.000    0.000    0.000    0.000 transforms.py:1669(set)
      210    0.000    0.000    0.000    0.000 font_manager.py:796(set_stretch)
      506    0.000    0.000    0.000    0.000 saveable_object_util.py:249(<lambda>)
        2    0.000    0.000    0.000    0.000 _base.py:1868(_update_line_limits)
      212    0.000    0.000    0.000    0.000 transforms.py:2057(transform)
       32    0.000    0.000    0.000    0.000 ticker.py:1955(scale_range)
       51    0.000    0.000    0.000    0.000 liveness.py:50(visit_node)
       28    0.000    0.000    0.000    0.000 templates.py:185(visit_Attribute)
       35    0.000    0.000    0.000    0.000 backend_pdf.py:348(__init__)
       11    0.000    0.000    0.000    0.000 execute.py:281(convert_to_mixed_eager_tensors)
       78    0.000    0.000    0.000    0.000 reaching_definitions.py:101(__sub__)
      215    0.000    0.000    0.000    0.000 lines.py:1370(set_solid_joinstyle)
       17    0.000    0.000    0.000    0.000 __init__.py:38(populate_deserializable_objects)
       32    0.000    0.000    0.000    0.000 axis.py:1648(set_major_locator)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:850(set_data)
     1166    0.000    0.000    0.000    0.000 meta_graph.py:159(mark_op_as_used)
       42    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:416(parent)
       13    0.000    0.000    0.000    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
        8    0.000    0.000    0.000    0.000 tf_utils.py:445(maybe_init_scope)
      127    0.000    0.000    0.000    0.000 stride_tricks.py:185(_broadcast_shape)
       33    0.000    0.000    0.000    0.000 posixpath.py:121(splitext)
       77    0.000    0.000    0.000    0.000 base_layer.py:1948(input_mask)
      814    0.000    0.000    0.000    0.000 nested_structure_coder.py:400(can_encode)
       11    0.000    0.000    0.000    0.000 utils_impl.py:242(get_assets_dir)
        6    0.000    0.000    0.000    0.000 backend_bases.py:1635(__init__)
        1    0.000    0.000    0.000    0.000 training.py:557(_get_optimizer)
     1260    0.000    0.000    0.000    0.000 traceable_stack.py:115(peek_top_obj)
      210    0.000    0.000    0.000    0.000 font_manager.py:769(set_variant)
       38    0.000    0.000    0.000    0.000 patches.py:315(_set_edgecolor)
        6    0.000    0.000    0.000    0.000 {built-in method posix.open}
        9    0.000    0.000    0.000    0.000 cfg.py:691(_process_exit_statement)
      174    0.000    0.000    0.000    0.000 {method 'clear' of 'matplotlib.ft2font.FT2Font' objects}
      143    0.000    0.000    0.000    0.000 metrics.py:312(_trackable_saved_model_saver)
      519    0.000    0.000    0.000    0.000 base_layer.py:2968(_split_out_first_arg)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2477(ptp)
      158    0.000    0.000    0.000    0.000 text.py:1137(set_verticalalignment)
       68    0.000    0.000    0.000    0.000 units.py:58(_is_natively_supported)
      162    0.000    0.000    0.000    0.000 transforms.py:2154(<lambda>)
       50    0.000    0.000    0.000    0.000 callbacks.py:914(__init__)
     1331    0.000    0.000    0.000    0.000 nested_structure_coder.py:353(can_encode)
      154    0.000    0.000    0.000    0.000 signature_serialization.py:233(<lambda>)
       21    0.000    0.000    0.000    0.000 activity.py:547(_visit_arg_annotations)
      549    0.000    0.000    0.000    0.000 __init__.py:1961(<listcomp>)
        1    0.000    0.000    0.000    0.000 training.py:560(_get_single_optimizer)
       11    0.000    0.000    0.000    0.000 signature_def_utils_impl.py:350(op_signature_def)
      148    0.000    0.000    0.000    0.000 ticker.py:564(fix_minus)
      162    0.000    0.000    0.000    0.000 lines.py:953(_get_markerfacecolor)
       81    0.000    0.000    0.000    0.000 functional.py:522(_flatten_to_reference_inputs)
      110    0.000    0.000    0.000    0.000 font_manager.py:1106(score_stretch)
  183/180    0.000    0.000    0.000    0.000 qual_names.py:158(__eq__)
       72    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
      125    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrType}
       22    0.000    0.000    0.000    0.000 signature_def_utils_impl.py:32(build_signature_def)
      216    0.000    0.000    0.000    0.000 __init__.py:1296(is_math_text)
       54    0.000    0.000    0.000    0.000 ast3.py:139(visit_NameConstant)
       38    0.000    0.000    0.000    0.000 backprop.py:116(get_attr)
      514    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
        1    0.000    0.000    0.000    0.000 optimizers.py:872(get)
        2    0.000    0.000    0.000    0.000 pyplot.py:3029(title)
       54    0.000    0.000    0.000    0.000 markers.py:301(get_transform)
      236    0.000    0.000    0.000    0.000 text.py:1104(set_x)
       34    0.000    0.000    0.000    0.000 axis.py:413(apply_tickdir)
        8    0.000    0.000    0.000    0.000 base_layer.py:2409(_init_set_name)
        6    0.000    0.000    0.000    0.000 ast3.py:187(visit_ExceptHandler)
       27    0.000    0.000    0.000    0.000 math_ops.py:1855(_may_reduce_to_scalar)
       26    0.000    0.000    0.000    0.000 patches.py:330(set_edgecolor)
        2    0.000    0.000    0.000    0.000 gridspec.py:133(get_grid_positions)
      118    0.000    0.000    0.000    0.000 weakref.py:109(remove)
       22    0.000    0.000    0.000    0.000 generic_utils.py:745(to_snake_case)
        1    0.000    0.000    0.000    0.000 np_dtypes.py:15(<module>)
      355    0.000    0.000    0.000    0.000 tf_inspect.py:283(<listcomp>)
       72    0.000    0.000    0.000    0.000 fromnumeric.py:2324(all)
        4    0.000    0.000    0.000    0.000 base_layer.py:2985(_set_save_spec)
        8    0.000    0.000    0.000    0.000 sre_compile.py:542(_code)
      143    0.000    0.000    0.000    0.000 input_layer.py:205(_trackable_saved_model_saver)
      526    0.000    0.000    0.000    0.000 backend_mixed.py:67(__getattr__)
      343    0.000    0.000    0.000    0.000 base_layer.py:2505(<listcomp>)
       22    0.000    0.000    0.000    0.000 unparser.py:115(_Assign)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:361(convert_n_to_tensor_or_indexed_slices)
      568    0.000    0.000    0.000    0.000 op_def_library.py:166(_MakeBool)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
      506    0.000    0.000    0.000    0.000 resource_variable_ops.py:583(op)
      372    0.000    0.000    0.000    0.000 __init__.py:833(clean)
      121    0.000    0.000    0.000    0.000 <string>:16(_make)
       22    0.000    0.000    0.000    0.000 saving_utils.py:291(_enforce_names_consistency)
       40    0.000    0.000    0.000    0.000 text.py:1093(set_position)
       32    0.000    0.000    0.000    0.000 transforms.py:763(unit)
      253    0.000    0.000    0.000    0.000 resource_variable_ops.py:99(<listcomp>)
        2    0.000    0.000    0.000    0.000 _axes.py:148(set_title)
        3    0.000    0.000    0.000    0.000 unsupported_features_checker.py:60(verify)
       37    0.000    0.000    0.000    0.000 axis.py:529(apply_tickdir)
     1878    0.000    0.000    0.000    0.000 policy.py:453(name)
      968    0.000    0.000    0.000    0.000 generic_utils.py:113(serialize_keras_class_and_config)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:320(internal_convert_n_to_tensor_or_indexed_slices)
      572    0.000    0.000    0.000    0.000 {built-in method builtins.round}
        6    0.000    0.000    0.000    0.000 cfg.py:773(visit_Return)
       60    0.000    0.000    0.000    0.000 ast.py:215(walk)
  120/103    0.000    0.000    0.000    0.000 templates.py:218(_convert_to_ast)
        4    0.000    0.000    0.000    0.000 _base.py:3498(set_ylim)
        2    0.000    0.000    0.000    0.000 _base.py:563(set_figure)
       59    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
      318    0.000    0.000    0.000    0.000 weakref.py:288(update)
        4    0.000    0.000    0.000    0.000 tensor_util.py:842(constant_value_as_shape)
        4    0.000    0.000    0.000    0.000 training.py:2650(_reduce)
      253    0.000    0.000    0.000    0.000 meta_graph.py:230(_op_name)
      156    0.000    0.000    0.000    0.000 text.py:240(set_rotation_mode)
      536    0.000    0.000    0.000    0.000 backend_pdf.py:902(cvt)
       27    0.000    0.000    0.000    0.000 math_ops.py:1850(_has_fully_defined_shape)
      104    0.000    0.000    0.000    0.000 transforms.py:2564(get_matrix)
      579    0.000    0.000    0.000    0.000 execute.py:184(make_bool)
      440    0.000    0.000    0.000    0.000 data_structures.py:1033(_is_function)
      132    0.000    0.000    0.000    0.000 transforms.py:2162(transform_non_affine)
        2    0.000    0.000    0.000    0.000 _base.py:363(<listcomp>)
       71    0.000    0.000    0.000    0.000 artist.py:923(set_alpha)
       34    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
      836    0.000    0.000    0.000    0.000 data_structures.py:377(__getitem__)
      487    0.000    0.000    0.000    0.000 transforms.py:177(<lambda>)
       51    0.000    0.000    0.000    0.000 fractions.py:386(reverse)
       11    0.000    0.000    0.000    0.000 training.py:2288(state_updates)
       11    0.000    0.000    0.000    0.000 utils_impl.py:225(get_variables_path)
      166    0.000    0.000    0.000    0.000 tensor_shape.py:268(assert_is_compatible_with)
      158    0.000    0.000    0.000    0.000 text.py:949(set_horizontalalignment)
       11    0.000    0.000    0.000    0.000 execute.py:282(<listcomp>)
       15    0.000    0.000    0.000    0.000 function_wrappers.py:47(__init__)
       77    0.000    0.000    0.000    0.000 base_layer.py:1970(output_mask)
       39    0.000    0.000    0.000    0.000 cfg.py:77(freeze)
       11    0.000    0.000    0.000    0.000 tensor_spec.py:144(from_tensor)
        2    0.000    0.000    0.000    0.000 _base.py:251(_makeline)
        2    0.000    0.000    0.000    0.000 init_ops.py:111(__call__)
       27    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.cleanup_path}
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
      168    0.000    0.000    0.000    0.000 axis.py:819(get_transform)
        8    0.000    0.000    0.000    0.000 _base.py:859(_set_position)
        2    0.000    0.000    0.000    0.000 functional.py:149(<lambda>)
      266    0.000    0.000    0.000    0.000 text.py:1115(set_y)
        1    0.000    0.000    0.000    0.000 functools.py:193(total_ordering)
    13/10    0.000    0.000    0.000    0.000 unparser.py:14(interleave)
      783    0.000    0.000    0.000    0.000 resource_variable_ops.py:518(shape)
       69    0.000    0.000    0.000    0.000 transformer.py:116(__init__)
        2    0.000    0.000    0.000    0.000 axis.py:1945(_get_label)
       29    0.000    0.000    0.000    0.000 backend_pdf.py:1718(track_characters)
        1    0.000    0.000    0.000    0.000 context.py:487(_initialize_logical_devices)
        3    0.000    0.000    0.000    0.000 resource_variable_ops.py:280(__del__)
       85    0.000    0.000    0.000    0.000 tensor_shape.py:988(assert_same_rank)
      209    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
      195    0.000    0.000    0.000    0.000 np_utils.py:236(_prepare_np_fun_name_and_fun)
       50    0.000    0.000    0.000    0.000 callbacks.py:1650(on_train_begin)
      606    0.000    0.000    0.000    0.000 keras_tensor.py:43(keras_tensors_enabled)
        8    0.000    0.000    0.000    0.000 text.py:223(_get_xy_display)
        2    0.000    0.000    0.000    0.000 training.py:2401(_set_save_spec)
       32    0.000    0.000    0.000    0.000 _methods.py:228(_ptp)
       39    0.000    0.000    0.000    0.000 cfg.py:348(_add_new_node)
      240    0.000    0.000    0.000    0.000 nn_ops.py:3294(_tf_deterministic_ops)
      210    0.000    0.000    0.000    0.000 font_manager.py:746(set_family)
        6    0.000    0.000    0.000    0.000 numeric.py:2167(isclose)
       44    0.000    0.000    0.000    0.000 copy.py:219(_deepcopy_tuple)
        2    0.000    0.000    0.000    0.000 functional.py:825(_map_graph_network)
       16    0.000    0.000    0.000    0.000 spines.py:266(_adjust_location)
       49    0.000    0.000    0.000    0.000 templates.py:111(__init__)
      220    0.000    0.000    0.000    0.000 save_impl.py:634(_get_layer_call_method)
       32    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:263(cache_from_source)
       12    0.000    0.000    0.000    0.000 patches.py:436(set_fill)
       24    0.000    0.000    0.000    0.000 optimizer_v2.py:621(_assume_mirrored)
       44    0.000    0.000    0.000    0.000 ops.py:407(name)
      227    0.000    0.000    0.000    0.000 lines.py:31(_get_dash_pattern)
        2    0.000    0.000    0.000    0.000 _base.py:913(_gen_axes_patch)
        3    0.000    0.000    0.000    0.000 activity.py:693(visit_ExceptHandler)
       32    0.000    0.000    0.000    0.000 function_base.py:1141(diff)
        3    0.000    0.000    0.000    0.000 inspect_utils.py:339(getfutureimports)
       15    0.000    0.000    0.000    0.000 distribute_lib.py:2677(__exit__)
      184    0.000    0.000    0.000    0.000 scale.py:117(get_transform)
       72    0.000    0.000    0.000    0.000 np_utils.py:201(<listcomp>)
        4    0.000    0.000    0.000    0.000 data_adapter.py:1337(expand_1d)
        7    0.000    0.000    0.000    0.000 directives.py:126(visit_Attribute)
       30    0.000    0.000    0.000    0.000 cfg.py:391(add_ordinary_node)
      616    0.000    0.000    0.000    0.000 data_structures.py:1039(<lambda>)
       34    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:403(cached)
      704    0.000    0.000    0.000    0.000 function.py:2067(_get_gradient_function)
      215    0.000    0.000    0.000    0.000 lines.py:1228(set_markeredgewidth)
       20    0.000    0.000    0.000    0.000 cycler.py:349(by_key)
       11    0.000    0.000    0.000    0.000 signature_serialization.py:63(_validate_inputs)
      710    0.000    0.000    0.000    0.000 base_layer.py:1265(input_spec)
       12    0.000    0.000    0.000    0.000 cfg.py:174(__init__)
      275    0.000    0.000    0.000    0.000 nested_structure_coder.py:310(do_encode)
       32    0.000    0.000    0.000    0.000 axis.py:1664(set_minor_locator)
       32    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
      264    0.000    0.000    0.000    0.000 base_layer.py:672(<listcomp>)
       21    0.000    0.000    0.000    0.000 activity.py:204(mark_param)
       66    0.000    0.000    0.000    0.000 input_layer.py:195(get_config)
        8    0.000    0.000    0.000    0.000 policy.py:342(_parse_name)
      215    0.000    0.000    0.000    0.000 lines.py:1038(set_antialiased)
        1    0.000    0.000    0.000    0.000 functional.py:340(_lookup_dependency)
     1980    0.000    0.000    0.000    0.000 nested_structure_coder.py:330(can_encode)
        6    0.000    0.000    0.000    0.000 transforms.py:904(p1)
      153    0.000    0.000    0.000    0.000 fractions.py:84(__new__)
      156    0.000    0.000    0.000    0.000 text.py:933(set_color)
        4    0.000    0.000    0.000    0.000 _datasource.py:367(_possible_names)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:39(seterr)
       27    0.000    0.000    0.000    0.000 inspect.py:643(getfile)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:430(_validate_bytecode_header)
        3    0.000    0.000    0.000    0.000 unparser.py:245(_Try)
       38    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:136(<genexpr>)
       32    0.000    0.000    0.000    0.000 axis.py:1620(set_major_formatter)
     10/8    0.000    0.000    0.000    0.000 transforms.py:1709(__eq__)
       42    0.000    0.000    0.000    0.000 transforms.py:2544(__init__)
       54    0.000    0.000    0.000    0.000 tf_inspect.py:365(isclass)
      217    0.000    0.000    0.000    0.000 lines.py:635(axes)
       57    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
        5    0.000    0.000    0.000    0.000 base_layer.py:1228(supports_masking)
        6    0.000    0.000    0.000    0.000 _datasource.py:337(_iszip)
       22    0.000    0.000    0.000    0.000 base.py:92(__init__)
        4    0.000    0.000    0.000    0.000 _base.py:1116(_set_title_offset_trans)
      374    0.000    0.000    0.000    0.000 __init__.py:2113(type_name)
      105    0.000    0.000    0.000    0.000 _internal.py:830(npy_ctypes_check)
      110    0.000    0.000    0.000    0.000 save_impl.py:426(fn_input_signature)
      156    0.000    0.000    0.000    0.000 text.py:1227(set_usetex)
       50    0.000    0.000    0.000    0.000 {built-in method numpy.frompyfunc}
      136    0.000    0.000    0.000    0.000 transforms.py:1705(__array__)
      168    0.000    0.000    0.000    0.000 base_layer.py:1213(dtype)
       12    0.000    0.000    0.000    0.000 cfg.py:201(reset)
       13    0.000    0.000    0.000    0.000 __init__.py:829(format)
       11    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.HasAtomicMove}
      215    0.000    0.000    0.000    0.000 lines.py:1271(set_markersize)
      140    0.000    0.000    0.000    0.000 base_layer.py:2383(_dtype)
       15    0.000    0.000    0.000    0.000 transpiler.py:190(instantiate)
       12    0.000    0.000    0.000    0.000 inspect_utils.py:350(<genexpr>)
       71    0.000    0.000    0.000    0.000 axis.py:197(_set_labelrotation)
      352    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetShouldRecordBackprop}
      264    0.000    0.000    0.000    0.000 tf_utils.py:289(_convert_object_or_list)
      110    0.000    0.000    0.000    0.000 smart_cond.py:62(smart_constant_value)
      517    0.000    0.000    0.000    0.000 func_graph.py:779(saveable)
       35    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:194(_lock_unlock_module)
        2    0.000    0.000    0.000    0.000 _base.py:3435(set_ybound)
       58    0.000    0.000    0.000    0.000 __init__.py:557(__setitem__)
       34    0.000    0.000    0.000    0.000 shape_base.py:25(atleast_1d)
       22    0.000    0.000    0.000    0.000 layer_serialization.py:132(python_properties)
       16    0.000    0.000    0.000    0.000 _base.py:3087(_validate_converted_limits)
  292/284    0.000    0.000    0.000    0.000 spines.py:220(_ensure_position_is_set)
        3    0.000    0.000    0.000    0.000 compile_utils.py:382(update_state)
       18    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:361(_get_cached)
      648    0.000    0.000    0.000    0.000 functional.py:504(<genexpr>)
        8    0.000    0.000    0.000    0.000 transforms.py:1509(transform_path)
      388    0.000    0.000    0.000    0.000 __init__.py:1850(_str_equal)
      110    0.000    0.000    0.000    0.000 font_manager.py:1068(<listcomp>)
      528    0.000    0.000    0.000    0.000 saveable_object.py:80(device)
      174    0.000    0.000    0.000    0.000 {method 'set_size' of 'matplotlib.ft2font.FT2Font' objects}
      178    0.000    0.000    0.000    0.000 transforms.py:2658(get_matrix)
       32    0.000    0.000    0.000    0.000 axis.py:1634(set_minor_formatter)
      111    0.000    0.000    0.000    0.000 ast.py:178(iter_child_nodes)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:106(_write_atomic)
      222    0.000    0.000    0.000    0.000 backend_bases.py:938(set_foreground)
       11    0.000    0.000    0.000    0.000 function.py:1724(_call_with_structured_signature)
      968    0.000    0.000    0.000    0.000 func_graph.py:478(deref)
       32    0.000    0.000    0.000    0.000 _methods.py:78(_clip_dep_invoke_with_casting)
       77    0.000    0.000    0.000    0.000 module.py:132(name_scope)
      121    0.000    0.000    0.000    0.000 graph_view.py:176(root)
       22    0.000    0.000    0.000    0.000 dtypes.py:215(__reduce__)
       77    0.000    0.000    0.000    0.000 save_impl.py:72(should_skip_serialization)
      953    0.000    0.000    0.000    0.000 context.py:803(scope_name)
       32    0.000    0.000    0.000    0.000 _methods.py:36(_sum)
        1    0.000    0.000    0.000    0.000 enum.py:366(_create_)
      189    0.000    0.000    0.000    0.000 reaching_definitions.py:72(<dictcomp>)
       30    0.000    0.000    0.000    0.000 reaching_fndefs.py:88(visit_node)
      132    0.000    0.000    0.000    0.000 base.py:621(_object_identifier)
      298    0.000    0.000    0.000    0.000 artist.py:371(get_transform)
        2    0.000    0.000    0.000    0.000 genericpath.py:27(isfile)
       22    0.000    0.000    0.000    0.000 save.py:196(<dictcomp>)
        9    0.000    0.000    0.000    0.000 util.py:34(squeeze_or_expand_dimensions)
        7    0.000    0.000    0.000    0.000 templates.py:64(visit_Tuple)
      264    0.000    0.000    0.000    0.000 tf_utils.py:273(_is_serialized_node_data)
       15    0.000    0.000    0.000    0.000 distribute_lib.py:2665(__enter__)
       11    0.000    0.000    0.000    0.000 functional.py:272(output_shape)
       55    0.000    0.000    0.000    0.000 data_structures.py:902(_list_functions_for_serialization)
      440    0.000    0.000    0.000    0.000 data_structures.py:330(_name_element)
       13    0.000    0.000    0.000    0.000 __init__.py:564(format)
       77    0.000    0.000    0.000    0.000 templates.py:54(_apply_override)
      819    0.000    0.000    0.000    0.000 transforms.py:1868(get_matrix)
      131    0.000    0.000    0.000    0.000 weakref.py:339(__init__)
       39    0.000    0.000    0.000    0.000 _weakrefset.py:116(update)
       11    0.000    0.000    0.000    0.000 training.py:639(metrics_names)
       22    0.000    0.000    0.000    0.000 functional_saver.py:168(<dictcomp>)
       32    0.000    0.000    0.000    0.000 ticker.py:508(__init__)
       26    0.000    0.000    0.000    0.000 __init__.py:138(connect)
       12    0.000    0.000    0.000    0.000 _dill.py:145(numpyufunc)
       11    0.000    0.000    0.000    0.000 utils_impl.py:101(build_tensor_info_from_op)
      264    0.000    0.000    0.000    0.000 json_utils.py:50(<genexpr>)
     1192    0.000    0.000    0.000    0.000 tf_decorator.py:278(decorator_argspec)
       18    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:524(spec_from_file_location)
      561    0.000    0.000    0.000    0.000 statistics.py:201(_exact_ratio)
       51    0.000    0.000    0.000    0.000 fractions.py:401(_add)
       55    0.000    0.000    0.000    0.000 distribute_lib.py:296(_require_cross_replica_or_default_context_extended)
       88    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:57(_path_join)
        1    0.000    0.000    0.000    0.000 optimizers.py:835(deserialize)
      100    0.000    0.000    0.000    0.000 callbacks.py:988(<genexpr>)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(nonzero)
      111    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:441(__enter__)
        8    0.000    0.000    0.000    0.000 path.py:526(get_extents)
        3    0.000    0.000    0.000    0.000 liveness.py:188(visit_ExceptHandler)
        8    0.000    0.000    0.000    0.000 loss_scale.py:46(get)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:563(all_reduce_fn)
       12    0.000    0.000    0.000    0.000 ticker.py:1681(nonsingular)
       10    0.000    0.000    0.000    0.000 _datasource.py:206(keys)
       87    0.000    0.000    0.000    0.000 backend_agg.py:55(get_hinting_flag)
      388    0.000    0.000    0.000    0.000 typing.py:889(__extrahook__)
      215    0.000    0.000    0.000    0.000 lines.py:1213(set_markeredgecolor)
        6    0.000    0.000    0.000    0.000 _datasource.py:376(_isurl)
      131    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)
        4    0.000    0.000    0.000    0.000 call_trees.py:149(_kwargs_to_dict)
      215    0.000    0.000    0.000    0.000 lines.py:1050(set_color)
        1    0.000    0.000    0.000    0.000 version_utils.py:54(__new__)
       21    0.000    0.000    0.000    0.000 distribution_strategy_context.py:64(_pop_per_thread_mode)
      328    0.000    0.000    0.000    0.000 base_layer_utils.py:475(training)
       38    0.000    0.000    0.000    0.000 patches.py:768(_convert_units)
       12    0.000    0.000    0.000    0.000 transpiler.py:356(_cached_factory)
        8    0.000    0.000    0.000    0.000 transforms.py:957(set)
      218    0.000    0.000    0.000    0.000 __init__.py:1860(_str_lower_equal)
      209    0.000    0.000    0.000    0.000 function.py:2003(structured_outputs)
       12    0.000    0.000    0.000    0.000 pickle.py:347(__init__)
      406    0.000    0.000    0.000    0.000 unparser.py:46(write)
       66    0.000    0.000    0.000    0.000 transformer.py:251(__init__)
       72    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
       96    0.000    0.000    0.000    0.000 pickle.py:262(_getattribute)
     13/8    0.000    0.000    0.000    0.000 sre_compile.py:64(_compile)
        4    0.000    0.000    0.000    0.000 array_ops.py:778(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1626(writeInfoDict)
        3    0.000    0.000    0.000    0.000 unparser.py:859(_withitem)
        1    0.000    0.000    0.000    0.000 pyplot.py:658(close)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2199(batch_reduce_to)
      264    0.000    0.000    0.000    0.000 initializers_v2.py:528(get_config)
        1    0.000    0.000    0.000    0.000 deprecation.py:426(deprecated_wrapper)
      420    0.000    0.000    0.000    0.000 font_manager.py:940(_normalize_font_family)
      100    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1679(__init__)
        1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:74(__init__)
      352    0.000    0.000    0.000    0.000 function.py:1436(record)
       27    0.000    0.000    0.000    0.000 transforms.py:2408(__init__)
      528    0.000    0.000    0.000    0.000 saveable_object.py:61(__init__)
      253    0.000    0.000    0.000    0.000 ops.py:6008(has_default_graph)
       38    0.000    0.000    0.000    0.000 backprop.py:86(make_attr)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:2223(paint)
        8    0.000    0.000    0.000    0.000 loss_scale.py:421(get)
       96    0.000    0.000    0.000    0.000 transformer.py:131(enter)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:40(destroy)
       11    0.000    0.000    0.000    0.000 io_utils.py:57(path_to_string)
       11    0.000    0.000    0.000    0.000 signature_serialization.py:224(_list_functions_for_serialization)
      470    0.000    0.000    0.000    0.000 text.py:1151(set_text)
       18    0.000    0.000    0.000    0.000 naming.py:31(new_symbol)
      832    0.000    0.000    0.000    0.000 artist.py:800(get_visible)
       12    0.000    0.000    0.000    0.000 ast3.py:172(visit_arg)
        2    0.000    0.000    0.000    0.000 axis.py:2232(_get_label)
       16    0.000    0.000    0.000    0.000 transforms.py:2266(blended_transform_factory)
        3    0.000    0.000    0.000    0.000 reaching_definitions.py:261(visit_ExceptHandler)
        6    0.000    0.000    0.000    0.000 reaching_definitions.py:115(__init__)
        3    0.000    0.000    0.000    0.000 converter.py:216(list_of_features)
       33    0.000    0.000    0.000    0.000 converter.py:258(__init__)
        2    0.000    0.000    0.000    0.000 context.py:1008(_compute_gpu_options)
       51    0.000    0.000    0.000    0.000 fractions.py:374(forward)
      180    0.000    0.000    0.000    0.000 node.py:276(is_keras_tensor)
      553    0.000    0.000    0.000    0.000 artist.py:197(axes)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1264(writeExtGSTates)
      506    0.000    0.000    0.000    0.000 variables.py:1182(_gather_saveables_for_checkpoint)
       22    0.000    0.000    0.000    0.000 array_ops.py:1443(_get_dtype_from_nested_lists)
      127    0.000    0.000    0.000    0.000 stride_tricks.py:262(<listcomp>)
      120    0.000    0.000    0.000    0.000 __init__.py:1286(debug)
       27    0.000    0.000    0.000    0.000 transforms.py:2451(get_matrix)
        3    0.000    0.000    0.000    0.000 weights_broadcast_ops.py:136(broadcast_weights)
        3    0.000    0.000    0.000    0.000 cfg.py:900(visit_ExceptHandler)
       13    0.000    0.000    0.000    0.000 tf_logging.py:75(_logger_find_caller)
      824    0.000    0.000    0.000    0.000 artist.py:868(get_rasterized)
       50    0.000    0.000    0.000    0.000 function_base.py:2120(<listcomp>)
       50    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
      397    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
        1    0.000    0.000    0.000    0.000 generic_utils.py:797(populate_dict_with_module_objects)
       12    0.000    0.000    0.000    0.000 _datasource.py:173(_load)
       82    0.000    0.000    0.000    0.000 backend_bases.py:958(set_joinstyle)
       50    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        2    0.000    0.000    0.000    0.000 abc.py:132(__new__)
       37    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
       45    0.000    0.000    0.000    0.000 ops.py:2519(_get_attr_bool)
       16    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:840(path_stats)
       88    0.000    0.000    0.000    0.000 input_spec.py:95(get_config)
      352    0.000    0.000    0.000    0.000 function.py:505(stateful_ops)
       22    0.000    0.000    0.000    0.000 functional_saver.py:44(__init__)
       34    0.000    0.000    0.000    0.000 ops.py:4760(_attr_scope)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1228(_get_spec)
       72    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
      507    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        3    0.000    0.000    0.000    0.000 np_array_ops.py:990(_split_on_axis)
       22    0.000    0.000    0.000    0.000 training.py:2609(_get_compile_args)
       54    0.000    0.000    0.000    0.000 lines.py:928(get_markeredgecolor)
        2    0.000    0.000    0.000    0.000 transforms.py:1318(contains_branch_seperately)
        2    0.000    0.000    0.000    0.000 backend_bases.py:3360(new_figure_manager_given_figure)
       21    0.000    0.000    0.000    0.000 distribution_strategy_context.py:60(_push_per_thread_mode)
        8    0.000    0.000    0.000    0.000 _base.py:810(get_position)
        4    0.000    0.000    0.000    0.000 figure.py:956(set_edgecolor)
       44    0.000    0.000    0.000    0.000 copy.py:220(<listcomp>)
        1    0.000    0.000    0.000    0.000 cp1252.py:3(<module>)
       39    0.000    0.000    0.000    0.000 reaching_definitions.py:88(__ne__)
       10    0.000    0.000    0.000    0.000 transforms.py:274(frozen)
       45    0.000    0.000    0.000    0.000 weakref.py:208(items)
        1    0.000    0.000    0.000    0.000 compile_utils.py:298(build)
       27    0.000    0.000    0.000    0.000 backprop_util.py:25(IsTrainable)
        2    0.000    0.000    0.000    0.000 _base.py:612(_set_lim_and_transforms)
       82    0.000    0.000    0.000    0.000 backend_bases.py:890(set_capstyle)
      102    0.000    0.000    0.000    0.000 statistics.py:159(<genexpr>)
       11    0.000    0.000    0.000    0.000 signature_serialization.py:245(create_signature_map)
        3    0.000    0.000    0.000    0.000 backend_bases.py:1653(_fix_ipython_backend2gui)
      861    0.000    0.000    0.000    0.000 font_manager.py:679(get_family)
      606    0.000    0.000    0.000    0.000 transforms.py:939(get_points)
        8    0.000    0.000    0.000    0.000 parse.py:361(urlparse)
        6    0.000    0.000    0.000    0.000 posixpath.py:376(abspath)
      103    0.000    0.000    0.000    0.000 sre_parse.py:232(__next)
        8    0.000    0.000    0.000    0.000 spines.py:381(set_position)
       54    0.000    0.000    0.000    0.000 lines.py:963(get_markerfacecolor)
        3    0.000    0.000    0.000    0.000 training.py:569(_reset_compile_cache)
        6    0.000    0.000    0.000    0.000 transforms.py:278(__array__)
       82    0.000    0.000    0.000    0.000 transforms.py:376(intervalx)
       44    0.000    0.000    0.000    0.000 input_spec.py:109(to_tensor_shape)
        2    0.000    0.000    0.000    0.000 axis.py:1963(_get_offset_text)
        8    0.000    0.000    0.000    0.000 sre_compile.py:482(_compile_info)
       68    0.000    0.000    0.000    0.000 converter.py:177(__eq__)
       30    0.000    0.000    0.000    0.000 tf_stack.py:53(__enter__)
      131    0.000    0.000    0.000    0.000 weakref.py:334(__new__)
       35    0.000    0.000    0.000    0.000 codecs.py:318(decode)
        1    0.000    0.000    0.000    0.000 {built-in method gc.collect}
       66    0.000    0.000    0.000    0.000 serialized_attributes.py:177(<dictcomp>)
       12    0.000    0.000    0.000    0.000 axis.py:2147(get_ticks_position)
        2    0.000    0.000    0.000    0.000 axis.py:2252(_get_offset_text)
        2    0.000    0.000    0.000    0.000 transforms.py:1298(contains_branch)
      748    0.000    0.000    0.000    0.000 __init__.py:2111(<genexpr>)
        2    0.000    0.000    0.000    0.000 functional.py:760(_compute_tensor_usage_count)
        6    0.000    0.000    0.000    0.000 iterator_ops.py:888(_component_specs)
       11    0.000    0.000    0.000    0.000 device_spec.py:212(make_merged_spec)
       65    0.000    0.000    0.000    0.000 backend_pdf.py:1596(reserveObject)
       55    0.000    0.000    0.000    0.000 data_structures.py:161(_attribute_sentinel)
       18    0.000    0.000    0.000    0.000 backend_bases.py:2185(mpl_connect)
      890    0.000    0.000    0.000    0.000 _collections_abc.py:252(__subclasshook__)
       17    0.000    0.000    0.000    0.000 sre_parse.py:294(_class_escape)
      738    0.000    0.000    0.000    0.000 {method 'join' of 'bytes' objects}
        2    0.000    0.000    0.000    0.000 _datasource.py:458(abspath)
       36    0.000    0.000    0.000    0.000 converter.py:184(uses)
        1    0.000    0.000    0.000    0.000 enum.py:124(__new__)
        2    0.000    0.000    0.000    0.000 np_math_ops.py:809(_make_nan_reduction)
       11    0.000    0.000    0.000    0.000 save.py:89(__init__)
       11    0.000    0.000    0.000    0.000 function_serialization.py:78(serialize_bare_concrete_function)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2225(_batch_reduce_to)
       51    0.000    0.000    0.000    0.000 fractions.py:423(_div)
      861    0.000    0.000    0.000    0.000 font_manager.py:704(get_weight)
     1299    0.000    0.000    0.000    0.000 {method 'span' of '_sre.SRE_Match' objects}
        3    0.000    0.000    0.000    0.000 ast3.py:258(visit_ExceptHandler)
       11    0.000    0.000    0.000    0.000 io_utils.py:40(_path_to_string)
      154    0.000    0.000    0.000    0.000 font_manager.py:1030(get_default_size)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2228(<listcomp>)
        2    0.000    0.000    0.000    0.000 device.py:50(canonical_name)
       48    0.000    0.000    0.000    0.000 getlimits.py:365(__new__)
      110    0.000    0.000    0.000    0.000 function.py:2583(<dictcomp>)
      384    0.000    0.000    0.000    0.000 _internal.py:795(<genexpr>)
      718    0.000    0.000    0.000    0.000 multiarray.py:707(dot)
       58    0.000    0.000    0.000    0.000 _methods.py:44(_any)
       65    0.000    0.000    0.000    0.000 backend_pdf.py:1606(recordXref)
      176    0.000    0.000    0.000    0.000 serialized_attributes.py:165(<dictcomp>)
      328    0.000    0.000    0.000    0.000 policy.py:392(variable_dtype)
      986    0.000    0.000    0.000    0.000 font_manager.py:727(get_size_in_points)
        1    0.000    0.000    0.000    0.000 __init__.py:486(get_realpath_and_stat)
      244    0.000    0.000    0.000    0.000 transformer.py:149(__iter__)
        6    0.000    0.000    0.000    0.000 device.py:115(__init__)
       77    0.000    0.000    0.000    0.000 module.py:195(_flatten)
       45    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrBool}
       39    0.000    0.000    0.000    0.000 reaching_definitions.py:82(__eq__)
       32    0.000    0.000    0.000    0.000 ticker.py:1994(le)
       33    0.000    0.000    0.000    0.000 genericpath.py:117(_splitext)
     1318    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
      222    0.000    0.000    0.000    0.000 node.py:215(input_tensors)
       33    0.000    0.000    0.000    0.000 __init__.py:88(<lambda>)
       12    0.000    0.000    0.000    0.000 axis.py:1828(_get_ticks_position)
       82    0.000    0.000    0.000    0.000 transforms.py:385(intervaly)
       22    0.000    0.000    0.000    0.000 signature_serialization.py:64(<genexpr>)
      328    0.000    0.000    0.000    0.000 base_layer.py:853(compute_mask)
       16    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
       13    0.000    0.000    0.000    0.000 tf_logging.py:45(_get_caller)
       32    0.000    0.000    0.000    0.000 scale.py:718(scale_factory)
       16    0.000    0.000    0.000    0.000 posixpath.py:144(basename)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:1670(RendererPdf)
      548    0.000    0.000    0.000    0.000 path.py:197(vertices)
      308    0.000    0.000    0.000    0.000 transforms.py:1689(<lambda>)
       32    0.000    0.000    0.000    0.000 distribute_lib.py:347(_require_strategy_scope_extended)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2168(reduce_to)
       12    0.000    0.000    0.000    0.000 transforms.py:2221(__init__)
        7    0.000    0.000    0.000    0.000 data_adapter.py:1340(_expand_single_1d_tensor)
        3    0.000    0.000    0.000    0.000 tempfile.py:641(__exit__)
        1    0.000    0.000    0.000    0.000 posixpath.py:391(realpath)
        3    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:226(destroy_resource_op)
       58    0.000    0.000    0.000    0.000 transforms.py:2736(get_affine)
    29/28    0.000    0.000    0.000    0.000 unparser.py:706(_Attribute)
       15    0.000    0.000    0.000    0.000 api.py:119(__init__)
       48    0.000    0.000    0.000    0.000 tensor_shape.py:1203(__eq__)
      264    0.000    0.000    0.000    0.000 generic_utils.py:188(skip_failed_serialization)
      109    0.000    0.000    0.000    0.000 ast_util.py:34(__init__)
        8    0.000    0.000    0.000    0.000 transforms.py:1520(transform_path_affine)
    40/20    0.000    0.000    0.000    0.000 typing.py:1164(__setattr__)
        8    0.000    0.000    0.000    0.000 sre_compile.py:223(_compile_charset)
       59    0.000    0.000    0.000    0.000 {built-in method from_bytes}
       37    0.000    0.000    0.000    0.000 {method 'findall' of '_sre.SRE_Pattern' objects}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2249(alpha_cmd)
       12    0.000    0.000    0.000    0.000 cfg.py:202(<dictcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:1423(_add_axes_internal)
      824    0.000    0.000    0.000    0.000 artist.py:888(get_agg_filter)
      302    0.000    0.000    0.000    0.000 tf_decorator.py:266(decorated_target)
       30    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
        3    0.000    0.000    0.000    0.000 tempfile.py:296(__next__)
        2    0.000    0.000    0.000    0.000 _datasource.py:322(__init__)
        4    0.000    0.000    0.000    0.000 base_layer.py:1560(_clear_losses)
        9    0.000    0.000    0.000    0.000 ast3.py:378(visit_arguments)
       58    0.000    0.000    0.000    0.000 markers.py:240(__bool__)
      381    0.000    0.000    0.000    0.000 stride_tricks.py:266(<genexpr>)
      257    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:318(__exit__)
      156    0.000    0.000    0.000    0.000 def_function.py:431(__init__)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:446(__exit__)
        6    0.000    0.000    0.000    0.000 numeric.py:2244(within_tol)
       35    0.000    0.000    0.000    0.000 {built-in method zlib.compressobj}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:539(<listcomp>)
       35    0.000    0.000    0.000    0.000 ast3.py:218(visit_Constant)
      616    0.000    0.000    0.000    0.000 base.py:1032(_map_resources)
       12    0.000    0.000    0.000    0.000 variable_scope.py:1400(__init__)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:1016(with_rank)
       55    0.000    0.000    0.000    0.000 metrics.py:233(dtype)
       48    0.000    0.000    0.000    0.000 distribute_lib.py:1373(experimental_local_results)
       57    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
       11    0.000    0.000    0.000    0.000 signature_serialization.py:164(_normalize_outputs)
        1    0.000    0.000    0.000    0.000 directives.py:134(visit_Assign)
     10/8    0.000    0.000    0.000    0.000 transforms.py:2335(__eq__)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1804(nonzero)
        6    0.000    0.000    0.000    0.000 backend.py:984(unique_object_name)
      279    0.000    0.000    0.000    0.000 origin_info.py:194(_absolute_col_offset)
       45    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:861(_find_spec_legacy)
      110    0.000    0.000    0.000    0.000 utils.py:233(get_training_arg)
        3    0.000    0.000    0.000    0.000 math_grad.py:1225(_ShapesFullySpecifiedAndEqual)
        2    0.000    0.000    0.000    0.000 figure.py:976(set_dpi)
      113    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
       11    0.000    0.000    0.000    0.000 signature_serialization.py:225(<dictcomp>)
       44    0.000    0.000    0.000    0.000 saving_utils.py:294(_has_name)
      264    0.000    0.000    0.000    0.000 base.py:1014(_list_functions_for_serialization)
        4    0.000    0.000    0.000    0.000 transforms.py:2720(get_transformed_path_and_affine)
       24    0.000    0.000    0.000    0.000 spines.py:154(get_patch_transform)
      861    0.000    0.000    0.000    0.000 font_manager.py:698(get_variant)
       50    0.000    0.000    0.000    0.000 function_base.py:2115(<listcomp>)
       96    0.000    0.000    0.000    0.000 {built-in method math.log10}
        3    0.000    0.000    0.000    0.000 {method '__exit__' of '_io._IOBase' objects}
      517    0.000    0.000    0.000    0.000 _collections_abc.py:302(__subclasshook__)
       44    0.000    0.000    0.000    0.000 saving_utils.py:305(<genexpr>)
        4    0.000    0.000    0.000    0.000 device.py:124(__call__)
        8    0.000    0.000    0.000    0.000 transforms.py:1731(transform_path_affine)
        1    0.000    0.000    0.000    0.000 posixpath.py:400(_joinrealpath)
       66    0.000    0.000    0.000    0.000 serialized_attributes.py:157(__init__)
      151    0.000    0.000    0.000    0.000 policy.py:406(compute_dtype)
        7    0.000    0.000    0.000    0.000 unparser.py:651(_Tuple)
        3    0.000    0.000    0.000    0.000 def_function.py:102(called_with_tracing)
      368    0.000    0.000    0.000    0.000 __init__.py:886(<listcomp>)
       88    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:59(<listcomp>)
        3    0.000    0.000    0.000    0.000 metrics_utils.py:479(ragged_assert_compatible_and_get_flat_values)
        3    0.000    0.000    0.000    0.000 confusion_matrix.py:34(remove_squeezable_dimensions)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
       50    0.000    0.000    0.000    0.000 training_utils.py:1220(__init__)
      861    0.000    0.000    0.000    0.000 font_manager.py:713(get_stretch)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1200(alphaState)
      110    0.000    0.000    0.000    0.000 nested_structure_coder.py:356(do_encode)
        8    0.000    0.000    0.000    0.000 indexed_slices.py:283(internal_convert_to_tensor_or_indexed_slices)
        8    0.000    0.000    0.000    0.000 sre_compile.py:250(_optimize_charset)
      220    0.000    0.000    0.000    0.000 functional.py:1026(_should_skip_first_node)
      451    0.000    0.000    0.000    0.000 base_layer.py:1255(activity_regularizer)
      312    0.000    0.000    0.000    0.000 _base.py:586(<genexpr>)
       11    0.000    0.000    0.000    0.000 posixpath.py:154(dirname)
        3    0.000    0.000    0.000    0.000 sre_parse.py:257(getwhile)
       57    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
       11    0.000    0.000    0.000    0.000 file_io.py:50(__init__)
      861    0.000    0.000    0.000    0.000 font_manager.py:691(get_style)
      162    0.000    0.000    0.000    0.000 inspect.py:891(tokeneater)
       10    0.000    0.000    0.000    0.000 posixpath.py:338(normpath)
      686    0.000    0.000    0.000    0.000 base_layer.py:2506(<genexpr>)
       83    0.000    0.000    0.000    0.000 functional.py:221(input)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:139(geterr)
       38    0.000    0.000    0.000    0.000 backprop.py:75(op_attr_type)
        3    0.000    0.000    0.000    0.000 tempfile.py:614(__getattr__)
       35    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        2    0.000    0.000    0.000    0.000 transforms.py:1639(__eq__)
       73    0.000    0.000    0.000    0.000 op_def_library.py:532(<genexpr>)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:497(_code_to_bytecode)
        3    0.000    0.000    0.000    0.000 unparser.py:103(_ImportFrom)
        4    0.000    0.000    0.000    0.000 base.py:436(no_automatic_dependency_tracking)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2172(switch_backends)
        3    0.000    0.000    0.000    0.000 tokenize.py:317(untokenize)
      370    0.000    0.000    0.000    0.000 backend_pdf.py:278(pdfRepr)
        1    0.000    0.000    0.000    0.000 base_layer.py:1242(stateful)
       42    0.000    0.000    0.000    0.000 distribute_lib.py:340(_require_strategy_scope_strategy)
      165    0.000    0.000    0.000    0.000 data_structures.py:1082(<lambda>)
       32    0.000    0.000    0.000    0.000 axis.py:864(reset_ticks)
      248    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
       16    0.000    0.000    0.000    0.000 compile_utils.py:46(_conform_to_outputs)
        4    0.000    0.000    0.000    0.000 call_trees.py:131(_args_to_tuple)
        3    0.000    0.000    0.000    0.000 decorator_utils.py:76(add_notice_to_docstring)
        2    0.000    0.000    0.000    0.000 context.py:1245(list_physical_devices)
       60    0.000    0.000    0.000    0.000 transformer.py:155(__setattr__)
       82    0.000    0.000    0.000    0.000 backend_bases.py:868(set_alpha)
       26    0.000    0.000    0.000    0.000 weakref.py:44(__new__)
        6    0.000    0.000    0.000    0.000 losses_utils.py:129(cast_losses_to_common_dtype)
       30    0.000    0.000    0.000    0.000 math_ops.py:3849(conj)
        2    0.000    0.000    0.000    0.000 transforms.py:2093(__eq__)
      506    0.000    0.000    0.000    0.000 resource_variable_ops.py:596(aggregation)
      156    0.000    0.000    0.000    0.000 enum.py:584(__reduce_ex__)
        9    0.000    0.000    0.000    0.000 np_utils.py:356(decorator)
       22    0.000    0.000    0.000    0.000 type_spec.py:304(__reduce__)
       16    0.000    0.000    0.000    0.000 enum.py:803(__and__)
       71    0.000    0.000    0.000    0.000 {method 'tell' of '_io.BufferedWriter' objects}
       49    0.000    0.000    0.000    0.000 activity.py:248(_in_constructor)
       36    0.000    0.000    0.000    0.000 axis.py:1844(<genexpr>)
       24    0.000    0.000    0.000    0.000 _collections_abc.py:72(_check_methods)
       44    0.000    0.000    0.000    0.000 graph_view.py:67(_slot_variable_naming_for_optimizer)
       12    0.000    0.000    0.000    0.000 _base.py:4215(get_children)
        8    0.000    0.000    0.000    0.000 ticker.py:644(get_offset)
      116    0.000    0.000    0.000    0.000 text.py:25(_wrap_text)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:879(from_config)
      520    0.000    0.000    0.000    0.000 fromnumeric.py:2232(_any_dispatcher)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1080(_path_importer_cache)
        2    0.000    0.000    0.000    0.000 gridspec.py:366(get_subplot_params)
       20    0.000    0.000    0.000    0.000 patches.py:458(set_capstyle)
       11    0.000    0.000    0.000    0.000 save.py:103(add_object)
      598    0.000    0.000    0.000    0.000 device_spec.py:260(job)
        4    0.000    0.000    0.000    0.000 axis.py:2345(_update_offset_text_position)
       16    0.000    0.000    0.000    0.000 transforms.py:2622(get_matrix)
       33    0.000    0.000    0.000    0.000 uuid.py:280(hex)
      336    0.000    0.000    0.000    0.000 {method 'rstrip' of 'bytes' objects}
       95    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        1    0.000    0.000    0.000    0.000 rmsprop.py:98(__init__)
      230    0.000    0.000    0.000    0.000 node.py:221(output_tensors)
       33    0.000    0.000    0.000    0.000 cfg.py:333(_connect_nodes)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2405(cumsum)
        3    0.000    0.000    0.000    0.000 training.py:2750(_is_scalar)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2629(<listcomp>)
       32    0.000    0.000    0.000    0.000 ticker.py:2001(ge)
      108    0.000    0.000    0.000    0.000 lines.py:518(get_fillstyle)
      434    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
       64    0.000    0.000    0.000    0.000 ticker.py:1984(closeto)
       50    0.000    0.000    0.000    0.000 training_utils.py:1241(__exit__)
       13    0.000    0.000    0.000    0.000 unparser.py:837(_keyword)
       32    0.000    0.000    0.000    0.000 __init__.py:1891(method)
      372    0.000    0.000    0.000    0.000 __init__.py:836(<listcomp>)
        6    0.000    0.000    0.000    0.000 backend.py:708(get_default_graph_uid_map)
      506    0.000    0.000    0.000    0.000 resource_variable_ops.py:592(synchronization)
        7    0.000    0.000    0.000    0.000 ops.py:6423(<genexpr>)
      312    0.000    0.000    0.000    0.000 _base.py:588(<genexpr>)
       12    0.000    0.000    0.000    0.000 patches.py:402(set_linestyle)
        3    0.000    0.000    0.000    0.000 tokenize.py:243(untokenize)
        1    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:3(<module>)
      430    0.000    0.000    0.000    0.000 text.py:856(get_text)
       10    0.000    0.000    0.000    0.000 _collections_abc.py:349(__subclasshook__)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2294(clip_cmd)
       11    0.000    0.000    0.000    0.000 save.py:354(<listcomp>)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1159(_dense_apply_args)
      264    0.000    0.000    0.000    0.000 tf_utils.py:254(__init__)
        9    0.000    0.000    0.000    0.000 cfg.py:438(add_exit_node)
        4    0.000    0.000    0.000    0.000 transforms.py:1485(get_matrix)
        3    0.000    0.000    0.000    0.000 tempfile.py:299(<listcomp>)
      314    0.000    0.000    0.000    0.000 backend_pdf.py:292(pdfRepr)
        4    0.000    0.000    0.000    0.000 cfg.py:782(visit_Expr)
       11    0.000    0.000    0.000    0.000 execute.py:283(<listcomp>)
        8    0.000    0.000    0.000    0.000 parse.py:412(urlsplit)
       86    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      144    0.000    0.000    0.000    0.000 np_utils.py:186(names_from_num)
        3    0.000    0.000    0.000    0.000 reaching_fndefs.py:79(__init__)
       36    0.000    0.000    0.000    0.000 transformer.py:128(__exit__)
        8    0.000    0.000    0.000    0.000 _base.py:903(_set_artist_props)
      104    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1613(writeXref)
        9    0.000    0.000    0.000    0.000 unparser.py:141(_Return)
      596    0.000    0.000    0.000    0.000 device_spec.py:264(replica)
      753    0.000    0.000    0.000    0.000 font_manager.py:730(get_file)
       64    0.000    0.000    0.000    0.000 _methods.py:73(_clip_dep_is_byte_swapped)
        2    0.000    0.000    0.000    0.000 functional.py:623(_validate_graph_inputs_and_outputs)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2624(<listcomp>)
        2    0.000    0.000    0.000    0.000 deprecation.py:100(_call_location)
        4    0.000    0.000    0.000    0.000 _base.py:2407(<listcomp>)
        8    0.000    0.000    0.000    0.000 weakref.py:51(_cb)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:245(Name)
       22    0.000    0.000    0.000    0.000 optimizer_v2.py:860(get_config)
        3    0.000    0.000    0.000    0.000 inspect_utils.py:151(getnamespace)
      143    0.000    0.000    0.000    0.000 base.py:569(_name_based_restores)
       12    0.000    0.000    0.000    0.000 cfg.py:205(<dictcomp>)
       78    0.000    0.000    0.000    0.000 variables.py:22(ld)
        3    0.000    0.000    0.000    0.000 decorator_utils.py:35(_normalize_docstring)
        2    0.000    0.000    0.000    0.000 transforms.py:817(update_from_path)
       50    0.000    0.000    0.000    0.000 training.py:2544(_maybe_load_initial_epoch_from_ckpt)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:281(needs_keras_history)
       84    0.000    0.000    0.000    0.000 sre_parse.py:253(get)
        4    0.000    0.000    0.000    0.000 activations.py:495(get)
        2    0.000    0.000    0.000    0.000 functional.py:947(_build_map)
       12    0.000    0.000    0.000    0.000 cfg.py:292(reset)
        2    0.000    0.000    0.000    0.000 deprecation.py:308(deprecated_wrapper)
       30    0.000    0.000    0.000    0.000 tf_stack.py:71(__exit__)
       22    0.000    0.000    0.000    0.000 patches.py:382(set_linewidth)
       96    0.000    0.000    0.000    0.000 pickle.py:275(whichmodule)
        6    0.000    0.000    0.000    0.000 compilerop.py:137(check_linecache_ipython)
       11    0.000    0.000    0.000    0.000 function.py:2487(signature_summary)
        9    0.000    0.000    0.000    0.000 ops.py:4962(prevent_feeding)
      584    0.000    0.000    0.000    0.000 artist.py:1052(sticky_edges)
        3    0.000    0.000    0.000    0.000 cfg.py:806(visit_Raise)
      121    0.000    0.000    0.000    0.000 def_function.py:915(function_spec)
      506    0.000    0.000    0.000    0.000 saveable_object.py:75(optional_restore)
       24    0.000    0.000    0.000    0.000 weakref.py:480(pop)
       73    0.000    0.000    0.000    0.000 op_def_library.py:416(<genexpr>)
        3    0.000    0.000    0.000    0.000 tf_inspect.py:350(getsourcefile)
      596    0.000    0.000    0.000    0.000 device_spec.py:268(task)
      596    0.000    0.000    0.000    0.000 device_spec.py:276(device_index)
       33    0.000    0.000    0.000    0.000 six.py:582(iterkeys)
        4    0.000    0.000    0.000    0.000 compile_utils.py:70(_maybe_broadcast_to_outputs)
       22    0.000    0.000    0.000    0.000 metrics.py:237(get_config)
       15    0.000    0.000    0.000    0.000 function_wrappers.py:74(__enter__)
       10    0.000    0.000    0.000    0.000 ast3.py:34(visit_Str)
       16    0.000    0.000    0.000    0.000 axis.py:1175(<listcomp>)
        4    0.000    0.000    0.000    0.000 figure.py:199(update)
       32    0.000    0.000    0.000    0.000 ticker.py:1973(__init__)
        4    0.000    0.000    0.000    0.000 transforms.py:1623(__init__)
        3    0.000    0.000    0.000    0.000 tokenize.py:280(compat)
       39    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:63(_path_split)
      175    0.000    0.000    0.000    0.000 {method 'readline' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 metrics_utils.py:63(update_state_wrapper)
      143    0.000    0.000    0.000    0.000 base.py:553(_update_uid)
       80    0.000    0.000    0.000    0.000 backend_bases.py:994(get_hatch_path)
       13    0.000    0.000    0.000    0.000 __init__.py:542(usesTime)
      290    0.000    0.000    0.000    0.000 _collections_abc.py:367(__subclasshook__)
      120    0.000    0.000    0.000    0.000 backend_pdf.py:2360(<listcomp>)
        1    0.000    0.000    0.000    0.000 np_utils.py:15(<module>)
       78    0.000    0.000    0.000    0.000 reaching_definitions.py:120(init_state)
      286    0.000    0.000    0.000    0.000 function.py:2293(<genexpr>)
       11    0.000    0.000    0.000    0.000 device_spec.py:280(_get_combined_properties)
        2    0.000    0.000    0.000    0.000 figure.py:111(add)
       82    0.000    0.000    0.000    0.000 backend_bases.py:885(set_antialiased)
       44    0.000    0.000    0.000    0.000 optimizer_v2.py:731(get_slot_names)
        9    0.000    0.000    0.000    0.000 unparser.py:779(_arguments)
      215    0.000    0.000    0.000    0.000 lines.py:547(set_markevery)
        7    0.000    0.000    0.000    0.000 layer_utils.py:105(<listcomp>)
       64    0.000    0.000    0.000    0.000 origin_info.py:57(line_loc)
        6    0.000    0.000    0.000    0.000 cfg.py:288(__init__)
        9    0.000    0.000    0.000    0.000 cfg.py:406(_add_jump_node)
      396    0.000    0.000    0.000    0.000 data_structures.py:475(_make_storage)
        1    0.000    0.000    0.000    0.000 deprecation.py:58(_add_deprecated_arg_notice_to_docstring)
       24    0.000    0.000    0.000    0.000 patches.py:271(get_patch_transform)
       98    0.000    0.000    0.000    0.000 inspect.py:2211(<lambda>)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1067(_path_hooks)
        8    0.000    0.000    0.000    0.000 optimizer_v2.py:1173(_restore_slot_variable)
       36    0.000    0.000    0.000    0.000 transformer.py:124(__enter__)
        8    0.000    0.000    0.000    0.000 patches.py:742(get_path)
       81    0.000    0.000    0.000    0.000 path.py:351(__len__)
        1    0.000    0.000    0.000    0.000 backend_mixed.py:1(<module>)
       82    0.000    0.000    0.000    0.000 unparser.py:520(_Name)
       51    0.000    0.000    0.000    0.000 Experiment.py:157(update_nn)
       12    0.000    0.000    0.000    0.000 text.py:535(set_clip_box)
       40    0.000    0.000    0.000    0.000 __init__.py:118(__init__)
      274    0.000    0.000    0.000    0.000 fromnumeric.py:2671(_amin_dispatcher)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:519(<genexpr>)
        6    0.000    0.000    0.000    0.000 losses_utils.py:152(<listcomp>)
      110    0.000    0.000    0.000    0.000 save_impl.py:457(_maybe_wrap_with_training_arg)
      253    0.000    0.000    0.000    0.000 saveable_object_util.py:99(_read_variable_closure)
      133    0.000    0.000    0.000    0.000 def_function.py:926(_initialize_uninitialized_variables)
        4    0.000    0.000    0.000    0.000 axis.py:1010(get_inverted)
        4    0.000    0.000    0.000    0.000 backend_bases.py:151(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:455(_get_data_path)
      100    0.000    0.000    0.000    0.000 function_base.py:2116(<genexpr>)
       12    0.000    0.000    0.000    0.000 variable_scope.py:1115(__init__)
      143    0.000    0.000    0.000    0.000 base.py:561(_unconditional_checkpoint_dependencies)
      232    0.000    0.000    0.000    0.000 text.py:1241(get_usetex)
        8    0.000    0.000    0.000    0.000 __init__.py:157(_remove_proxy)
        2    0.000    0.000    0.000    0.000 __init__.py:1605(index_of)
       27    0.000    0.000    0.000    0.000 sre_parse.py:163(__getitem__)
       12    0.000    0.000    0.000    0.000 _dill.py:127(ndarraysubclassinstance)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:276(__init__)
        6    0.000    0.000    0.000    0.000 reaching_definitions.py:226(_aggregate_predecessors_defined_in)
        2    0.000    0.000    0.000    0.000 directives.py:142(visit_Expr)
        8    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.get_path_extents}
        2    0.000    0.000    0.000    0.000 {built-in method today}
       29    0.000    0.000    0.000    0.000 cp1252.py:11(encode)
        3    0.000    0.000    0.000    0.000 activations.py:457(deserialize)
      264    0.000    0.000    0.000    0.000 init_ops_v2.py:62(get_config)
        6    0.000    0.000    0.000    0.000 backprop.py:846(__enter__)
        1    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:56(register_tensor_conversion_function)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2564(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:168(__init__)
       25    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
       72    0.000    0.000    0.000    0.000 training.py:2563(_assert_compile_was_called)
        4    0.000    0.000    0.000    0.000 tf_utils.py:192(get_shapes)
       51    0.000    0.000    0.000    0.000 transformer.py:134(exit)
       64    0.000    0.000    0.000    0.000 axis.py:653(locator)
       16    0.000    0.000    0.000    0.000 axis.py:922(_translate_tick_kw)
      639    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       77    0.000    0.000    0.000    0.000 base_layer.py:2194(inbound_nodes)
        3    0.000    0.000    0.000    0.000 liveness.py:43(__init__)
        4    0.000    0.000    0.000    0.000 _datasource.py:503(_sanitize_relative_path)
        9    0.000    0.000    0.000    0.000 {built-in method numpy.fromiter}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1281(_fill_cache)
        4    0.000    0.000    0.000    0.000 _bootlocale.py:23(getpreferredencoding)
        2    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
      279    0.000    0.000    0.000    0.000 origin_info.py:191(_absolute_lineno)
       26    0.000    0.000    0.000    0.000 reaching_definitions.py:76(<dictcomp>)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:257(__enter__)
      253    0.000    0.000    0.000    0.000 op_def_library.py:665(<listcomp>)
       10    0.000    0.000    0.000    0.000 figure.py:453(_get_axes)
        4    0.000    0.000    0.000    0.000 figure.py:651(get_children)
      210    0.000    0.000    0.000    0.000 font_manager.py:839(set_file)
       45    0.000    0.000    0.000    0.000 numbers.py:283(__float__)
       10    0.000    0.000    0.000    0.000 posixpath.py:168(islink)
        2    0.000    0.000    0.000    0.000 warnings.py:119(filterwarnings)
        4    0.000    0.000    0.000    0.000 base_layer_utils.py:164(have_all_keras_metadata)
        2    0.000    0.000    0.000    0.000 functional.py:659(<listcomp>)
       44    0.000    0.000    0.000    0.000 func_graph.py:664(captures)
       30    0.000    0.000    0.000    0.000 resource_variable_ops.py:268(__init__)
        1    0.000    0.000    0.000    0.000 context.py:1226(<listcomp>)
      222    0.000    0.000    0.000    0.000 cycler.py:227(<genexpr>)
       26    0.000    0.000    0.000    0.000 __init__.py:809(acquire)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2281(push)
     10/2    0.000    0.000    0.000    0.000 functional.py:978(_build_map_helper)
        2    0.000    0.000    0.000    0.000 _base.py:2691(set_axisbelow)
       72    0.000    0.000    0.000    0.000 inspect.py:687(<genexpr>)
       11    0.000    0.000    0.000    0.000 save_options.py:39(__init__)
        9    0.000    0.000    0.000    0.000 return_statements.py:254(_postprocess_statement)
        3    0.000    0.000    0.000    0.000 activity.py:378(visit_Raise)
        4    0.000    0.000    0.000    0.000 ticker.py:2222(view_limits)
    18/13    0.000    0.000    0.000    0.000 sre_parse.py:173(getwidth)
        7    0.000    0.000    0.000    0.000 copyreg.py:96(_slotnames)
        3    0.000    0.000    0.000    0.000 {built-in method posix.replace}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1658(writeTrailer)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:498(<genexpr>)
       16    0.000    0.000    0.000    0.000 backend.py:887(name_scope)
       57    0.000    0.000    0.000    0.000 unparser.py:42(fill)
        6    0.000    0.000    0.000    0.000 backprop.py:856(_push_tape)
        2    0.000    0.000    0.000    0.000 figure.py:1651(clf)
        8    0.000    0.000    0.000    0.000 figure.py:913(get_size_inches)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1704(draw_event)
       32    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 typing.py:1025(_abc_negative_cache)
      102    0.000    0.000    0.000    0.000 _collections_abc.py:271(__subclasshook__)
       50    0.000    0.000    0.000    0.000 callbacks.py:1679(on_train_end)
       82    0.000    0.000    0.000    0.000 backend_bases.py:963(set_linewidth)
        1    0.000    0.000    0.000    0.000 pathlib.py:998(__new__)
      262    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        4    0.000    0.000    0.000    0.000 training.py:2760(_minimum_control_deps)
        3    0.000    0.000    0.000    0.000 compile_utils.py:606(match_dtype_and_rank)
       50    0.000    0.000    0.000    0.000 callbacks.py:934(set_params)
        5    0.000    0.000    0.000    0.000 distribute_lib.py:2658(__init__)
      228    0.000    0.000    0.000    0.000 figure.py:463(_get_dpi)
        2    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.update_path_extents}
       13    0.000    0.000    0.000    0.000 __init__.py:548(formatMessage)
      463    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
        3    0.000    0.000    0.000    0.000 {built-in method marshal.dumps}
      154    0.000    0.000    0.000    0.000 save_impl.py:574(<listcomp>)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:261(__exit__)
       51    0.000    0.000    0.000    0.000 backprop.py:109(__init__)
       12    0.000    0.000    0.000    0.000 figure.py:70(as_list)
       18    0.000    0.000    0.000    0.000 __init__.py:185(process)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(unravel_index)
       13    0.000    0.000    0.000    0.000 __init__.py:329(getMessage)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:373(_calc_mode)
        1    0.000    0.000    0.000    0.000 {built-in method posix.listdir}
       66    0.000    0.000    0.000    0.000 {method 'write' of '_io.BytesIO' objects}
       41    0.000    0.000    0.000    0.000 backend_pdf.py:2208(fill)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
      264    0.000    0.000    0.000    0.000 tf_utils.py:257(as_list)
        8    0.000    0.000    0.000    0.000 figure.py:778(set_canvas)
       26    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:52(_r_long)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:217(<listcomp>)
        8    0.000    0.000    0.000    0.000 version_utils.py:84(should_use_v2)
       71    0.000    0.000    0.000    0.000 axis.py:215(get_tick_padding)
        8    0.000    0.000    0.000    0.000 transforms.py:1652(_set)
       96    0.000    0.000    0.000    0.000 inspect.py:690(<genexpr>)
        3    0.000    0.000    0.000    0.000 getipython.py:17(get_ipython)
       44    0.000    0.000    0.000    0.000 re.py:324(_subx)
       43    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        4    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_OpNameGetAttrType}
        1    0.000    0.000    0.000    0.000 compile_utils.py:248(_get_loss_object)
        4    0.000    0.000    0.000    0.000 initializers_v2.py:521(__init__)
      382    0.000    0.000    0.000    0.000 qual_names.py:104(has_subscript)
       11    0.000    0.000    0.000    0.000 compat.py:125(as_str_any)
       64    0.000    0.000    0.000    0.000 axis.py:666(formatter)
        2    0.000    0.000    0.000    0.000 figure.py:1100(_process_projection_requirements)
      259    0.000    0.000    0.000    0.000 path.py:211(codes)
      116    0.000    0.000    0.000    0.000 {method 'get_width_height' of 'matplotlib.ft2font.FT2Font' objects}
       19    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:393(_check_name_wrapper)
        9    0.000    0.000    0.000    0.000 origin_info.py:169(__init__)
       12    0.000    0.000    0.000    0.000 templates.py:228(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:2383(<listcomp>)
       10    0.000    0.000    0.000    0.000 {built-in method posix.lstat}
      287    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextListDevices}
       23    0.000    0.000    0.000    0.000 backend.py:976(track_variable)
        3    0.000    0.000    0.000    0.000 unparser.py:292(_ExceptHandler)
    16/10    0.000    0.000    0.000    0.000 qual_names.py:163(__str__)
      109    0.000    0.000    0.000    0.000 templates.py:43(__init__)
        5    0.000    0.000    0.000    0.000 tracking.py:356(cached_per_instance)
        8    0.000    0.000    0.000    0.000 path.py:630(unit_rectangle)
        6    0.000    0.000    0.000    0.000 tokenize.py:385(find_cookie)
       33    0.000    0.000    0.000    0.000 checkpoint_options.py:44(__init__)
      382    0.000    0.000    0.000    0.000 qual_names.py:107(has_attr)
      143    0.000    0.000    0.000    0.000 base.py:565(_unconditional_dependency_names)
      210    0.000    0.000    0.000    0.000 artist.py:580(get_gid)
      140    0.000    0.000    0.000    0.000 artist.py:688(get_path_effects)
       52    0.000    0.000    0.000    0.000 image.py:129(<genexpr>)
       15    0.000    0.000    0.000    0.000 inspect.py:1495(currentframe)
        3    0.000    0.000    0.000    0.000 losses_utils.py:120(scale_loss_for_distribution)
       17    0.000    0.000    0.000    0.000 initializers_v2.py:747(_get_dtype)
        3    0.000    0.000    0.000    0.000 backprop.py:1051(<listcomp>)
       15    0.000    0.000    0.000    0.000 base.py:763(_preload_simple_restoration)
        1    0.000    0.000    0.000    0.000 context.py:110(__init__)
       12    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        1    0.000    0.000    0.000    0.000 pathlib.py:651(_from_parts)
        5    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:99(_path_isdir)
       10    0.000    0.000    0.000    0.000 tf_utils.py:339(is_symbolic_tensor)
        7    0.000    0.000    0.000    0.000 base_layer.py:2916(_call_fn_arg_defaults)
       13    0.000    0.000    0.000    0.000 util.py:1078(__init__)
       74    0.000    0.000    0.000    0.000 transformer.py:152(__getattr__)
       32    0.000    0.000    0.000    0.000 scale.py:97(__init__)
      156    0.000    0.000    0.000    0.000 text.py:554(set_wrap)
        1    0.000    0.000    0.000    0.000 deprecation.py:172(deprecate)
        6    0.000    0.000    0.000    0.000 linecache.py:53(checkcache)
       33    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
       15    0.000    0.000    0.000    0.000 conversion.py:251(_create_custom_vars)
        4    0.000    0.000    0.000    0.000 call_trees.py:82(finalize)
       15    0.000    0.000    0.000    0.000 converter.py:188(call_options)
      253    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:1217(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3008(get_xbound)
      196    0.000    0.000    0.000    0.000 axis.py:662(formatter)
        4    0.000    0.000    0.000    0.000 transforms.py:909(intervalx)
        2    0.000    0.000    0.000    0.000 __init__.py:1320(_check_1d)
        6    0.000    0.000    0.000    0.000 linecache.py:37(getlines)
       18    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:369(__init__)
        2    0.000    0.000    0.000    0.000 training_utils.py:1946(get_static_batch_size)
        8    0.000    0.000    0.000    0.000 input_spec.py:57(__init__)
        6    0.000    0.000    0.000    0.000 reaching_definitions.py:181(__init__)
       60    0.000    0.000    0.000    0.000 reaching_fndefs.py:85(init_state)
       92    0.000    0.000    0.000    0.000 transformer.py:141(level)
       66    0.000    0.000    0.000    0.000 tf_inspect.py:40(_convert_maybe_argspec_to_fullargspec)
        8    0.000    0.000    0.000    0.000 axis.py:834(limit_range_for_scale)
      128    0.000    0.000    0.000    0.000 ticker.py:220(set_axis)
       44    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
       13    0.000    0.000    0.000    0.000 threading.py:1230(current_thread)
       13    0.000    0.000    0.000    0.000 __init__.py:390(format)
       29    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:37(get_canvas_width_height)
       23    0.000    0.000    0.000    0.000 base_layer_utils.py:754(v2_dtype_behavior_enabled)
       27    0.000    0.000    0.000    0.000 reaching_fndefs.py:61(__or__)
        9    0.000    0.000    0.000    0.000 distribution_strategy_context.py:90(get_replica_context)
      110    0.000    0.000    0.000    0.000 def_function.py:906(python_function)
        2    0.000    0.000    0.000    0.000 deprecation.py:46(_add_deprecated_function_notice_to_docstring)
       32    0.000    0.000    0.000    0.000 text.py:777(get_fontsize)
       26    0.000    0.000    0.000    0.000 __init__.py:816(release)
      250    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
       22    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsTensor}
      116    0.000    0.000    0.000    0.000 backend_pdf.py:2115(<genexpr>)
       10    0.000    0.000    0.000    0.000 backend_pdf.py:2253(hatch_cmd)
        2    0.000    0.000    0.000    0.000 functional.py:845(<setcomp>)
        2    0.000    0.000    0.000    0.000 liveness.py:197(visit_Expr)
        2    0.000    0.000    0.000    0.000 _base.py:2994(xaxis_inverted)
        2    0.000    0.000    0.000    0.000 _base.py:3064(get_xlim)
       14    0.000    0.000    0.000    0.000 core.py:593(filled)
        3    0.000    0.000    0.000    0.000 {method 'write' of '_io.FileIO' objects}
       74    0.000    0.000    0.000    0.000 {built-in method math.floor}
      219    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
       88    0.000    0.000    0.000    0.000 saving_utils.py:273(_serialize_fn)
       44    0.000    0.000    0.000    0.000 saving_utils.py:306(<genexpr>)
       23    0.000    0.000    0.000    0.000 ast3.py:234(_make_arg)
        1    0.000    0.000    0.000    0.000 context.py:139(config_proto_serialized)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
       12    0.000    0.000    0.000    0.000 pickle.py:188(__init__)
        7    0.000    0.000    0.000    0.000 enum.py:70(__setitem__)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetConfig}
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:506(__init__)
        3    0.000    0.000    0.000    0.000 transpiler.py:117(<listcomp>)
        4    0.000    0.000    0.000    0.000 continue_statements.py:79(_postprocess_statement)
       27    0.000    0.000    0.000    0.000 unparser.py:523(_NameConstant)
       12    0.000    0.000    0.000    0.000 distribution_strategy_context.py:327(_get_default_replica_context)
       28    0.000    0.000    0.000    0.000 artist.py:594(get_snap)
        1    0.000    0.000    0.000    0.000 pathlib.py:631(_parse_args)
       13    0.000    0.000    0.000    0.000 {built-in method _imp._fix_co_filename}
       32    0.000    0.000    0.000    0.000 distribute_lib.py:1991(_container_strategy)
      210    0.000    0.000    0.000    0.000 backend_bases.py:155(open_group)
        8    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1322(path_hook_for_FileFinder)
       90    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:847(__exit__)
       16    0.000    0.000    0.000    0.000 compile_utils.py:549(map_to_output_names)
        2    0.000    0.000    0.000    0.000 util.py:1354(saver_with_op_caching)
       22    0.000    0.000    0.000    0.000 function.py:3676(__init__)
       24    0.000    0.000    0.000    0.000 backprop.py:726(_handle_or_self)
        2    0.000    0.000    0.000    0.000 figure.py:1959(sca)
       20    0.000    0.000    0.000    0.000 transforms.py:2249(get_matrix)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:437(__init__)
        2    0.000    0.000    0.000    0.000 warnings.py:159(_add_filter)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:661(is_package)
       13    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      100    0.000    0.000    0.000    0.000 callbacks.py:758(on_train_end)
        3    0.000    0.000    0.000    0.000 inspect_utils.py:60(islambda)
       66    0.000    0.000    0.000    0.000 transformer.py:191(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:3419(get_ybound)
       24    0.000    0.000    0.000    0.000 figure.py:235(_update_this)
       32    0.000    0.000    0.000    0.000 ticker.py:1663(raise_if_exceeds)
        1    0.000    0.000    0.000    0.000 __init__.py:1838(getLogger)
       36    0.000    0.000    0.000    0.000 enum.py:347(__repr__)
       90    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:843(__enter__)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:2197(stroke)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1688(finalize)
       50    0.000    0.000    0.000    0.000 callbacks.py:1042(on_train_begin)
       77    0.000    0.000    0.000    0.000 base_layer.py:2200(outbound_nodes)
        7    0.000    0.000    0.000    0.000 base_layer.py:2929(_call_fn_arg_positions)
       82    0.000    0.000    0.000    0.000 backend_bases.py:975(set_snap)
       14    0.000    0.000    0.000    0.000 patches.py:302(set_antialiased)
       16    0.000    0.000    0.000    0.000 transforms.py:1768(is_separable)
       50    0.000    0.000    0.000    0.000 weakref.py:371(_commit_removals)
        8    0.000    0.000    0.000    0.000 sre_parse.py:223(__init__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1297(writeHatches)
        3    0.000    0.000    0.000    0.000 conversion.py:60(get_transformed_name)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3411(export)
       12    0.000    0.000    0.000    0.000 patches.py:475(set_joinstyle)
        4    0.000    0.000    0.000    0.000 transforms.py:1632(_init)
       10    0.000    0.000    0.000    0.000 re.py:330(filter)
      219    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
       11    0.000    0.000    0.000    0.000 training.py:677(<listcomp>)
        4    0.000    0.000    0.000    0.000 call_trees.py:64(_consume_args)
        9    0.000    0.000    0.000    0.000 ast3.py:392(<listcomp>)
        4    0.000    0.000    0.000    0.000 _base.py:129(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:513(set_constrained_layout)
       12    0.000    0.000    0.000    0.000 artist.py:719(set_clip_box)
      156    0.000    0.000    0.000    0.000 path.py:251(should_simplify)
       13    0.000    0.000    0.000    0.000 __init__.py:387(usesTime)
        3    0.000    0.000    0.000    0.000 sre_compile.py:376(_mk_bitmap)
       25    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:917(_sanity_check)
        9    0.000    0.000    0.000    0.000 return_statements.py:74(_postprocess_statement)
        9    0.000    0.000    0.000    0.000 tensor_util.py:596(<listcomp>)
        4    0.000    0.000    0.000    0.000 _base.py:2411(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3405(yaxis_inverted)
      140    0.000    0.000    0.000    0.000 axis.py:285(get_loc)
       60    0.000    0.000    0.000    0.000 axis.py:649(locator)
        2    0.000    0.000    0.000    0.000 figure.py:1070(_make_key)
      210    0.000    0.000    0.000    0.000 backend_bases.py:162(close_group)
        4    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
       64    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2265(rgb_cmd)
       77    0.000    0.000    0.000    0.000 layer_serialization.py:144(objects_to_serialize)
       12    0.000    0.000    0.000    0.000 tf_utils.py:467(<genexpr>)
        8    0.000    0.000    0.000    0.000 base_layer.py:3219(<genexpr>)
        3    0.000    0.000    0.000    0.000 tape.py:45(push_new_tape)
        2    0.000    0.000    0.000    0.000 _base.py:3475(get_ylim)
      286    0.000    0.000    0.000    0.000 transforms.py:1740(get_affine)
       36    0.000    0.000    0.000    0.000 inspect.py:229(istraceback)
      153    0.000    0.000    0.000    0.000 {built-in method math.gcd}
        2    0.000    0.000    0.000    0.000 unsupported_features_checker.py:32(visit_Attribute)
        6    0.000    0.000    0.000    0.000 backprop.py:851(__exit__)
       26    0.000    0.000    0.000    0.000 resource_variable_ops.py:460(_assign_dependencies)
      189    0.000    0.000    0.000    0.000 markers.py:246(get_fillstyle)
      100    0.000    0.000    0.000    0.000 markers.py:313(_set_nothing)
        1    0.000    0.000    0.000    0.000 pathlib.py:51(parse_parts)
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListName}
       33    0.000    0.000    0.000    0.000 np_utils.py:192(<listcomp>)
       77    0.000    0.000    0.000    0.000 base_layer.py:1223(supports_masking)
        6    0.000    0.000    0.000    0.000 tpu.py:208(is_tpu_strategy)
       22    0.000    0.000    0.000    0.000 meta_graph.py:171(<listcomp>)
       28    0.000    0.000    0.000    0.000 text.py:347(<listcomp>)
      135    0.000    0.000    0.000    0.000 markers.py:269(get_marker)
        4    0.000    0.000    0.000    0.000 transforms.py:2342(_iter_break_from_left_to_right)
        2    0.000    0.000    0.000    0.000 decorators.py:41(wrapper)
        1    0.000    0.000    0.000    0.000 __init__.py:1161(getLogger)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:780(find_spec)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2366(copy_properties)
        2    0.000    0.000    0.000    0.000 backend_mixed.py:15(__init__)
        6    0.000    0.000    0.000    0.000 liveness.py:148(_block_statement_live_out)
        9    0.000    0.000    0.000    0.000 liveness.py:156(_block_statement_live_in)
       15    0.000    0.000    0.000    0.000 function_wrappers.py:91(ret)
        1    0.000    0.000    0.000    0.000 templates.py:58(visit_Attribute)
       54    0.000    0.000    0.000    0.000 backend_agg.py:256(points_to_pixels)
        4    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
       88    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       37    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
       16    0.000    0.000    0.000    0.000 backend_pdf.py:2273(fillcolor_cmd)
      115    0.000    0.000    0.000    0.000 functional.py:791(_assert_weights_created)
        9    0.000    0.000    0.000    0.000 cfg.py:669(_get_enclosing_finally_scopes)
       15    0.000    0.000    0.000    0.000 ops.py:2527(_get_attr_int)
        2    0.000    0.000    0.000    0.000 gridspec.py:246(__init__)
       24    0.000    0.000    0.000    0.000 cycler.py:225(__iter__)
        8    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
       10    0.000    0.000    0.000    0.000 typing.py:1039(_abc_negative_cache_version)
       16    0.000    0.000    0.000    0.000 parse.py:109(_coerce_args)
        2    0.000    0.000    0.000    0.000 abc.py:135(<setcomp>)
       29    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
        2    0.000    0.000    0.000    0.000 compile_utils.py:40(build)
       88    0.000    0.000    0.000    0.000 layer_serialization.py:34(object_identifier)
        5    0.000    0.000    0.000    0.000 distribution_strategy_context.py:56(__init__)
       44    0.000    0.000    0.000    0.000 tensor_shape.py:700(__reduce__)
        4    0.000    0.000    0.000    0.000 _base.py:2414(<listcomp>)
        4    0.000    0.000    0.000    0.000 _base.py:142(set_prop_cycle)
        2    0.000    0.000    0.000    0.000 figure.py:1907(_set_artist_props)
       58    0.000    0.000    0.000    0.000 text.py:832(get_position)
        2    0.000    0.000    0.000    0.000 transforms.py:768(null)
      127    0.000    0.000    0.000    0.000 __init__.py:1598(<lambda>)
      142    0.000    0.000    0.000    0.000 __init__.py:1760(<listcomp>)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(iscomplexobj)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:837(sort)
       13    0.000    0.000    0.000    0.000 __init__.py:120(getLevelName)
       22    0.000    0.000    0.000    0.000 weakref.py:389(__delitem__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1357(writeGouraudTriangles)
      147    0.000    0.000    0.000    0.000 fractions.py:274(numerator)
        2    0.000    0.000    0.000    0.000 training_utils.py:1912(get_input_shape_and_dtype)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:1256(_filter_grads)
        3    0.000    0.000    0.000    0.000 math_grad.py:143(_IsScalar)
       13    0.000    0.000    0.000    0.000 graph_view.py:145(__init__)
        3    0.000    0.000    0.000    0.000 transpiler.py:123(<listcomp>)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:2837(__init__)
       30    0.000    0.000    0.000    0.000 context.py:1980(shared_name)
       16    0.000    0.000    0.000    0.000 axis.py:1442(get_minor_ticks)
      140    0.000    0.000    0.000    0.000 axis.py:342(<genexpr>)
        4    0.000    0.000    0.000    0.000 transforms.py:914(intervaly)
        4    0.000    0.000    0.000    0.000 artist.py:1017(set_label)
        2    0.000    0.000    0.000    0.000 npyio.py:1339(WriteWrap)
        7    0.000    0.000    0.000    0.000 posixpath.py:64(isabs)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:299(__init__)
       65    0.000    0.000    0.000    0.000 backend_pdf.py:229(__init__)
        4    0.000    0.000    0.000    0.000 base_layer.py:418(build)
       90    0.000    0.000    0.000    0.000 reaching_fndefs.py:49(__init__)
     27/9    0.000    0.000    0.000    0.000 activity.py:133(referenced)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:253(__init__)
       55    0.000    0.000    0.000    0.000 data_structures.py:903(<dictcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:104(bubble)
        8    0.000    0.000    0.000    0.000 transforms.py:336(p1)
       26    0.000    0.000    0.000    0.000 __init__.py:705(filter)
        4    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
       62    0.000    0.000    0.000    0.000 backend_pdf.py:2239(linewidth_cmd)
       67    0.000    0.000    0.000    0.000 backend_pdf.py:235(pdfRepr)
        9    0.000    0.000    0.000    0.000 np_utils.py:340(np_doc_only)
       50    0.000    0.000    0.000    0.000 callbacks.py:944(on_train_begin)
       11    0.000    0.000    0.000    0.000 signature_serialization.py:203(__init__)
       33    0.000    0.000    0.000    0.000 cache.py:74(_get_key)
        6    0.000    0.000    0.000    0.000 cfg.py:653(__init__)
       22    0.000    0.000    0.000    0.000 tensor_shape.py:1223(__reduce__)
        2    0.000    0.000    0.000    0.000 figure.py:1089(fixlist)
      111    0.000    0.000    0.000    0.000 backend_bases.py:1013(get_sketch_params)
        2    0.000    0.000    0.000    0.000 gridspec.py:200(__getitem__)
       58    0.000    0.000    0.000    0.000 text.py:550(get_wrap)
        2    0.000    0.000    0.000    0.000 text.py:1059(set_fontweight)
      145    0.000    0.000    0.000    0.000 {method 'get_descent' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 rcsetup.py:163(validate_axisbelow)
      127    0.000    0.000    0.000    0.000 stride_tricks.py:202(_broadcast_arrays_dispatcher)
        1    0.000    0.000    0.000    0.000 enum.py:160(<setcomp>)
        3    0.000    0.000    0.000    0.000 enum.py:312(__getattr__)
       16    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
       33    0.000    0.000    0.000    0.000 training.py:2632(_compile_was_called)
        1    0.000    0.000    0.000    0.000 losses.py:1857(get)
       15    0.000    0.000    0.000    0.000 base_layer.py:2489(_set_mask_keras_history_checked)
        7    0.000    0.000    0.000    0.000 base_layer.py:2937(_call_accepts_kwargs)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:242(get_update_replica_id)
        6    0.000    0.000    0.000    0.000 distribution_strategy_context.py:50(__init__)
       55    0.000    0.000    0.000    0.000 data_structures.py:747(<dictcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:2389(<listcomp>)
        4    0.000    0.000    0.000    0.000 figure.py:1704(<lambda>)
        2    0.000    0.000    0.000    0.000 backend_inline.py:55(draw_if_interactive)
        2    0.000    0.000    0.000    0.000 text.py:1042(set_fontsize)
       58    0.000    0.000    0.000    0.000 text.py:230(_get_multialignment)
       16    0.000    0.000    0.000    0.000 ticker.py:1819(__call__)
       10    0.000    0.000    0.000    0.000 sre_parse.py:963(expand_template)
       29    0.000    0.000    0.000    0.000 {built-in method math.sin}
        6    0.000    0.000    0.000    0.000 cfg.py:496(exit_section)
        6    0.000    0.000    0.000    0.000 backprop.py:869(_pop_tape)
        2    0.000    0.000    0.000    0.000 errors_impl.py:297(__init__)
      140    0.000    0.000    0.000    0.000 backend_bases.py:778(restore)
       30    0.000    0.000    0.000    0.000 text.py:350(<listcomp>)
        4    0.000    0.000    0.000    0.000 transforms.py:2127(__init__)
       10    0.000    0.000    0.000    0.000 transforms.py:2377(transform_path_non_affine)
      146    0.000    0.000    0.000    0.000 path.py:230(simplify_threshold)
        3    0.000    0.000    0.000    0.000 tempfile.py:257(_sanitize_params)
        3    0.000    0.000    0.000    0.000 tempfile.py:285(rng)
       59    0.000    0.000    0.000    0.000 sre_parse.py:248(match)
       55    0.000    0.000    0.000    0.000 save_impl.py:113(<listcomp>)
        1    0.000    0.000    0.000    0.000 base_layer_utils.py:315(is_in_eager_or_tf_function)
        3    0.000    0.000    0.000    0.000 transpiler.py:279(get_transformed_name)
       32    0.000    0.000    0.000    0.000 reaching_definitions.py:51(__init__)
       12    0.000    0.000    0.000    0.000 distribution_strategy_context.py:42(__init__)
      132    0.000    0.000    0.000    0.000 base.py:633(_tracking_metadata)
        6    0.000    0.000    0.000    0.000 _base.py:3241(get_xscale)
        8    0.000    0.000    0.000    0.000 axis.py:1048(_set_artist_props)
       82    0.000    0.000    0.000    0.000 artist.py:633(get_sketch_params)
        2    0.000    0.000    0.000    0.000 _datasource.py:354(_splitzipext)
       13    0.000    0.000    0.000    0.000 process.py:146(name)
       13    0.000    0.000    0.000    0.000 threading.py:1076(name)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:323(_paint_path)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2288(pop)
      198    0.000    0.000    0.000    0.000 fractions.py:278(denominator)
       11    0.000    0.000    0.000    0.000 signature_serialization.py:212(__getitem__)
        1    0.000    0.000    0.000    0.000 losses.py:1838(deserialize)
       55    0.000    0.000    0.000    0.000 save_impl.py:117(<dictcomp>)
       22    0.000    0.000    0.000    0.000 backend.py:166(backend)
        3    0.000    0.000    0.000    0.000 return_statements.py:223(__init__)
       42    0.000    0.000    0.000    0.000 activity.py:223(__init__)
       18    0.000    0.000    0.000    0.000 unparser.py:50(enter)
        2    0.000    0.000    0.000    0.000 _base.py:224(_getdefaults)
      110    0.000    0.000    0.000    0.000 font_manager.py:1078(score_style)
       54    0.000    0.000    0.000    0.000 markers.py:310(get_snap_threshold)
      224    0.000    0.000    0.000    0.000 fromnumeric.py:3126(_around_dispatcher)
        4    0.000    0.000    0.000    0.000 inspect.py:1825(_signature_is_functionlike)
       10    0.000    0.000    0.000    0.000 enum.py:353(__setattr__)
        3    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
        6    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.StringIO' objects}
        3    0.000    0.000    0.000    0.000 liveness.py:114(__init__)
        3    0.000    0.000    0.000    0.000 backprop.py:822(__init__)
        3    0.000    0.000    0.000    0.000 array_ops.py:852(_check_index)
       12    0.000    0.000    0.000    0.000 axis.py:1412(get_major_locator)
       16    0.000    0.000    0.000    0.000 _base.py:2548(<genexpr>)
       82    0.000    0.000    0.000    0.000 backend_bases.py:967(set_url)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:109(set_active)
        4    0.000    0.000    0.000    0.000 __init__.py:601(push)
        1    0.000    0.000    0.000    0.000 enum.py:114(__prepare__)
        8    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1196(__init__)
       27    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
       40    0.000    0.000    0.000    0.000 {built-in method builtins.repr}
        1    0.000    0.000    0.000    0.000 backend_pdf.py:319(<dictcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:213(__init__)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:65(validate)
       39    0.000    0.000    0.000    0.000 cfg.py:72(__init__)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:325(require_replica_context)
       72    0.000    0.000    0.000    0.000 distribute_lib.py:2970(_local_results)
        1    0.000    0.000    0.000    0.000 deprecation.py:336(deprecated_args)
       71    0.000    0.000    0.000    0.000 axis.py:153(<dictcomp>)
       70    0.000    0.000    0.000    0.000 backend_bases.py:807(get_clip_path)
        2    0.000    0.000    0.000    0.000 figure.py:66(__init__)
       32    0.000    0.000    0.000    0.000 ticker.py:276(set_locs)
      110    0.000    0.000    0.000    0.000 font_manager.py:721(get_size)
       24    0.000    0.000    0.000    0.000 cycler.py:138(keys)
       15    0.000    0.000    0.000    0.000 _cv2.py:70(find_module)
        1    0.000    0.000    0.000    0.000 enum.py:464(_find_new_)
       31    0.000    0.000    0.000    0.000 sre_parse.py:171(append)
        1    0.000    0.000    0.000    0.000 functools.py:479(decorating_function)
       16    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:800(__init__)
        6    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:47(_w_long)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1177(<listcomp>)
      102    0.000    0.000    0.000    0.000 statistics.py:170(_coerce)
        7    0.000    0.000    0.000    0.000 policy.py:517(policy_defaults_to_floatx)
        3    0.000    0.000    0.000    0.000 transpiler.py:290(_erase_arg_defaults)
       54    0.000    0.000    0.000    0.000 markers.py:304(get_alt_path)
        3    0.000    0.000    0.000    0.000 tempfile.py:608(__init__)
       36    0.000    0.000    0.000    0.000 inspect.py:239(isframe)
       33    0.000    0.000    0.000    0.000 inspect.py:253(iscode)
        6    0.000    0.000    0.000    0.000 inspect.py:882(__init__)
        4    0.000    0.000    0.000    0.000 inspect.py:2086(_signature_from_builtin)
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetNew}
       15    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrInt}
        1    0.000    0.000    0.000    0.000 np_arrays.py:91(ndarray)
       10    0.000    0.000    0.000    0.000 node.py:123(parent_nodes)
        2    0.000    0.000    0.000    0.000 tf_utils.py:420(assert_no_legacy_layers)
        3    0.000    0.000    0.000    0.000 reaching_fndefs.py:122(__init__)
       12    0.000    0.000    0.000    0.000 return_statements.py:161(__init__)
        4    0.000    0.000    0.000    0.000 call_trees.py:86(to_ast)
       12    0.000    0.000    0.000    0.000 parser.py:217(<genexpr>)
        2    0.000    0.000    0.000    0.000 init_ops.py:105(__init__)
       26    0.000    0.000    0.000    0.000 context.py:934(rewriter_toggle)
        2    0.000    0.000    0.000    0.000 backend_agg.py:108(_update_methods)
        8    0.000    0.000    0.000    0.000 mathtext.py:3316(__init__)
        4    0.000    0.000    0.000    0.000 {method 'get_sfnt_table' of 'matplotlib.ft2font.FT2Font' objects}
       22    0.000    0.000    0.000    0.000 sre_parse.py:285(tell)
        3    0.000    0.000    0.000    0.000 codecs.py:308(__init__)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1359(_get_supported_file_loaders)
       58    0.000    0.000    0.000    0.000 {built-in method math.radians}
       60    0.000    0.000    0.000    0.000 activations.py:405(linear)
       11    0.000    0.000    0.000    0.000 signature_serialization.py:215(__iter__)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:500(<genexpr>)
        1    0.000    0.000    0.000    0.000 losses.py:84(__init__)
       10    0.000    0.000    0.000    0.000 policy.py:433(should_cast_variables)
        8    0.000    0.000    0.000    0.000 unparser.py:445(_Str)
        3    0.000    0.000    0.000    0.000 tape.py:41(watched_variables)
        8    0.000    0.000    0.000    0.000 figure.py:1703(<genexpr>)
        8    0.000    0.000    0.000    0.000 backend_bases.py:757(copy_properties)
       70    0.000    0.000    0.000    0.000 backend_bases.py:817(get_dashes)
       80    0.000    0.000    0.000    0.000 backend_bases.py:990(get_hatch)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1265(__init__)
      110    0.000    0.000    0.000    0.000 font_manager.py:1095(score_variant)
       32    0.000    0.000    0.000    0.000 ticker.py:532(set_useOffset)
      142    0.000    0.000    0.000    0.000 __init__.py:1765(<listcomp>)
        3    0.000    0.000    0.000    0.000 tempfile.py:635(__enter__)
        7    0.000    0.000    0.000    0.000 sre_compile.py:441(_get_charset_prefix)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:927(exec_module)
       60    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:321(<genexpr>)
       22    0.000    0.000    0.000    0.000 network_serialization.py:28(object_identifier)
        2    0.000    0.000    0.000    0.000 compile_utils.py:416(_get_metric_objects)
       22    0.000    0.000    0.000    0.000 layer_serialization.py:128(object_identifier)
       16    0.000    0.000    0.000    0.000 base_layer_utils.py:303(<genexpr>)
        2    0.000    0.000    0.000    0.000 functional.py:289(_set_output_names)
        2    0.000    0.000    0.000    0.000 unparser.py:88(_Expr)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:573(constraint)
       15    0.000    0.000    0.000    0.000 tf_stack.py:95(reset)
        4    0.000    0.000    0.000    0.000 axis.py:2160(get_minpos)
        2    0.000    0.000    0.000    0.000 _base.py:2602(<listcomp>)
       70    0.000    0.000    0.000    0.000 backend_bases.py:857(get_snap)
       70    0.000    0.000    0.000    0.000 backend_bases.py:1001(get_hatch_color)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2240(mpl_disconnect)
        9    0.000    0.000    0.000    0.000 _pylab_helpers.py:99(get_active)
       58    0.000    0.000    0.000    0.000 text.py:739(get_color)
       12    0.000    0.000    0.000    0.000 patches.py:491(set_hatch)
       40    0.000    0.000    0.000    0.000 cycler.py:371(<genexpr>)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:311(__enter__)
        3    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
       62    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:2377(finalize)
       12    0.000    0.000    0.000    0.000 np_utils.py:165(_add_blank_line)
        1    0.000    0.000    0.000    0.000 metrics_utils.py:98(result_wrapper)
        3    0.000    0.000    0.000    0.000 naming.py:27(__init__)
        1    0.000    0.000    0.000    0.000 ag_ctx.py:76(_default_control_status_ctx)
        6    0.000    0.000    0.000    0.000 device_spec.py:320(<listcomp>)
       29    0.000    0.000    0.000    0.000 backend_agg.py:239(get_canvas_width_height)
        2    0.000    0.000    0.000    0.000 figure.py:155(__contains__)
       70    0.000    0.000    0.000    0.000 backend_bases.py:845(get_rgb)
       54    0.000    0.000    0.000    0.000 markers.py:266(get_capstyle)
        2    0.000    0.000    0.000    0.000 transforms.py:2606(__init__)
        2    0.000    0.000    0.000    0.000 gridspec.py:31(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:631(bubble)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       15    0.000    0.000    0.000    0.000 _bokeh.py:36(find_module)
        9    0.000    0.000    0.000    0.000 enum.py:28(_is_dunder)
        3    0.000    0.000    0.000    0.000 sre_compile.py:378(<listcomp>)
      9/8    0.000    0.000    0.000    0.000 sre_compile.py:414(_get_literal_prefix)
        2    0.000    0.000    0.000    0.000 __init__.py:517(__init__)
        8    0.000    0.000    0.000    0.000 sre_parse.py:828(fix_flags)
        7    0.000    0.000    0.000    0.000 codecs.py:185(__init__)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:307(__init__)
       56    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
       41    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
       18    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_DeleteContextOptions}
       22    0.000    0.000    0.000    0.000 save.py:187(<dictcomp>)
        1    0.000    0.000    0.000    0.000 compile_utils.py:280(__init__)
       33    0.000    0.000    0.000    0.000 functional.py:255(output)
       45    0.000    0.000    0.000    0.000 transpiler.py:203(<genexpr>)
        9    0.000    0.000    0.000    0.000 cfg.py:665(_exit_lexical_scope)
        4    0.000    0.000    0.000    0.000 init_ops.py:1401(_compute_fans)
       30    0.000    0.000    0.000    0.000 resource_variable_ops.py:2042(op)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:916(num_elements)
        1    0.000    0.000    0.000    0.000 deprecation.py:385(_get_arg_names_to_ok_vals)
       12    0.000    0.000    0.000    0.000 text.py:528(_update_clip_properties)
       54    0.000    0.000    0.000    0.000 lines.py:896(get_drawstyle)
       54    0.000    0.000    0.000    0.000 lines.py:602(get_markevery)
      8/4    0.000    0.000    0.000    0.000 transforms.py:2348(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:170(disconnect)
       15    0.000    0.000    0.000    0.000 _altair.py:25(find_module)
        3    0.000    0.000    0.000    0.000 tempfile.py:646(close)
        2    0.000    0.000    0.000    0.000 warnings.py:449(__enter__)
        8    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_NewContextOptions}
       12    0.000    0.000    0.000    0.000 backend_pdf.py:271(__hash__)
        4    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:32(option_image_nocomposite)
        1    0.000    0.000    0.000    0.000 cp1252.py:33(getregentry)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:432(PdfFile)
        1    0.000    0.000    0.000    0.000 tmpzo79h315.py:2(<module>)
       52    0.000    0.000    0.000    0.000 node.py:118(keras_inputs)
        8    0.000    0.000    0.000    0.000 base_layer.py:2629(<genexpr>)
        9    0.000    0.000    0.000    0.000 unparser.py:854(_alias)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:2888(__init__)
       12    0.000    0.000    0.000    0.000 tpu.py:209(<lambda>)
       55    0.000    0.000    0.000    0.000 variables.py:63(_make_getter)
        6    0.000    0.000    0.000    0.000 tape.py:145(pop_tape)
       12    0.000    0.000    0.000    0.000 axis.py:822(get_scale)
        2    0.000    0.000    0.000    0.000 figure.py:487(set_tight_layout)
        2    0.000    0.000    0.000    0.000 figure.py:544(set_constrained_layout_pads)
       58    0.000    0.000    0.000    0.000 text.py:255(get_rotation_mode)
      110    0.000    0.000    0.000    0.000 font_manager.py:1142(score_size)
       29    0.000    0.000    0.000    0.000 {method 'get_bitmap_offset' of 'matplotlib.ft2font.FT2Font' objects}
        1    0.000    0.000    0.000    0.000 deprecation.py:226(finalize)
        2    0.000    0.000    0.000    0.000 rcsetup.py:123(validate_bool)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2473(_ptp_dispatcher)
       18    0.000    0.000    0.000    0.000 tokenize.py:739(generate_tokens)
       16    0.000    0.000    0.000    0.000 sre_compile.py:539(isstring)
       13    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
       18    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
        2    0.000    0.000    0.000    0.000 sre_parse.py:784(_parse_flags)
       29    0.000    0.000    0.000    0.000 {built-in method math.cos}
       48    0.000    0.000    0.000    0.000 {method 'group' of '_sre.SRE_Match' objects}
       15    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:512(<genexpr>)
       11    0.000    0.000    0.000    0.000 tmpamx0glat.py:7(inner_factory)
        8    0.000    0.000    0.000    0.000 base_layer.py:1000(<genexpr>)
        3    0.000    0.000    0.000    0.000 functions.py:41(_function_scope_options)
       60    0.000    0.000    0.000    0.000 liveness.py:47(init_state)
        9    0.000    0.000    0.000    0.000 cfg.py:425(_connect_jump_to_finally_sections)
        3    0.000    0.000    0.000    0.000 distribution_strategy_context.py:154(in_cross_replica_context)
        3    0.000    0.000    0.000    0.000 def_function.py:62(called_with_tracing)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:664(<lambda>)
        1    0.000    0.000    0.000    0.000 deprecation.py:395(_get_deprecated_positional_arguments)
        4    0.000    0.000    0.000    0.000 axis.py:2460(get_minpos)
        4    0.000    0.000    0.000    0.000 figure.py:78(get)
        1    0.000    0.000    0.000    0.000 font_manager.py:1297(is_opentype_cff_font)
       60    0.000    0.000    0.000    0.000 ticker.py:295(_set_locator)
       58    0.000    0.000    0.000    0.000 artist.py:793(get_alpha)
        8    0.000    0.000    0.000    0.000 transforms.py:296(y0)
        2    0.000    0.000    0.000    0.000 pyplot.py:619(get_fignums)
        2    0.000    0.000    0.000    0.000 __init__.py:1294(get_backend)
        4    0.000    0.000    0.000    0.000 core.py:677(getdata)
       32    0.000    0.000    0.000    0.000 function_base.py:1137(_diff_dispatcher)
        2    0.000    0.000    0.000    0.000 type_check.py:280(iscomplexobj)
       17    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
        6    0.000    0.000    0.000    0.000 {method 'flush' of '_io._IOBase' objects}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeWatchedVariables}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2236(joinstyle_cmd)
       16    0.000    0.000    0.000    0.000 compile_utils.py:596(map_missing_dict_keys)
        4    0.000    0.000    0.000    0.000 data_adapter.py:1412(unpack_x_y_sample_weight)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:379(_clip_gradients)
        2    0.000    0.000    0.000    0.000 tf_utils.py:434(<listcomp>)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:1020(__init__)
       22    0.000    0.000    0.000    0.000 metric_serialization.py:28(object_identifier)
        3    0.000    0.000    0.000    0.000 transpiler.py:150(__init__)
        3    0.000    0.000    0.000    0.000 return_statements.py:70(visit_Return)
       15    0.000    0.000    0.000    0.000 tf_stack.py:83(reset)
        2    0.000    0.000    0.000    0.000 __init__.py:573(__init__)
        1    0.000    0.000    0.000    0.000 deprecation.py:24(_generate_deprecation_warning)
       36    0.000    0.000    0.000    0.000 fromnumeric.py:2838(_prod_dispatcher)
        3    0.000    0.000    0.000    0.000 tempfile.py:622(func_wrapper)
        2    0.000    0.000    0.000    0.000 contextlib.py:338(__exit__)
        5    0.000    0.000    0.000    0.000 enum.py:20(_is_descriptor)
       19    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:825(get_filename)
        1    0.000    0.000    0.000    0.000 __init__.py:43(normalize_encoding)
       25    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       36    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        6    0.000    0.000    0.000    0.000 {method 'splitlines' of 'str' objects}
       27    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:921(<listcomp>)
        1    0.000    0.000    0.000    0.000 np_arrays.py:60(NdarraySpec)
       11    0.000    0.000    0.000    0.000 layer_serialization.py:147(functions_to_serialize)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:656(_set_hyper)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:997(_assert_float_dtype)
        3    0.000    0.000    0.000    0.000 transformer.py:55(__init__)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:1397(num_replicas_in_sync)
       12    0.000    0.000    0.000    0.000 math_ops.py:3500(<genexpr>)
        3    0.000    0.000    0.000    0.000 tape.py:51(push_tape)
        8    0.000    0.000    0.000    0.000 axis.py:1559(have_units)
       24    0.000    0.000    0.000    0.000 spines.py:217(get_path)
        2    0.000    0.000    0.000    0.000 figure.py:932(get_facecolor)
        4    0.000    0.000    0.000    0.000 figure.py:152(__call__)
        8    0.000    0.000    0.000    0.000 figure.py:140(current_key_axes)
       54    0.000    0.000    0.000    0.000 markers.py:298(get_path)
       13    0.000    0.000    0.000    0.000 __init__.py:60(__hash__)
       72    0.000    0.000    0.000    0.000 fromnumeric.py:2320(_all_dispatcher)
        6    0.000    0.000    0.000    0.000 tempfile.py:580(close)
        1    0.000    0.000    0.000    0.000 inspect.py:614(cleandoc)
        1    0.000    0.000    0.000    0.000 __init__.py:1268(__init__)
        3    0.000    0.000    0.000    0.000 enum.py:419(_get_mixins_)
       15    0.000    0.000    0.000    0.000 sre_parse.py:159(__len__)
        2    0.000    0.000    0.000    0.000 warnings.py:428(__init__)
        9    0.000    0.000    0.000    0.000 {built-in method sys.intern}
       41    0.000    0.000    0.000    0.000 backend_pdf.py:302(pdfRepr)
       29    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:24(flipy)
        1    0.000    0.000    0.000    0.000 tmpamx0glat.py:2(<module>)
        2    0.000    0.000    0.000    0.000 training_utils.py:1926(_is_graph_model)
        3    0.000    0.000    0.000    0.000 losses.py:185(_get_reduction)
        5    0.000    0.000    0.000    0.000 node.py:116(<listcomp>)
       26    0.000    0.000    0.000    0.000 regularizers.py:360(get)
        8    0.000    0.000    0.000    0.000 functional.py:776(<setcomp>)
        4    0.000    0.000    0.000    0.000 backend.py:360(global_learning_phase_is_set)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:61(all)
       30    0.000    0.000    0.000    0.000 reaching_fndefs.py:58(__ne__)
        9    0.000    0.000    0.000    0.000 return_statements.py:39(__init__)
        3    0.000    0.000    0.000    0.000 unparser.py:223(_Raise)
        3    0.000    0.000    0.000    0.000 parser.py:54(_unfold_continuations)
       12    0.000    0.000    0.000    0.000 math_ops.py:1800(<genexpr>)
       22    0.000    0.000    0.000    0.000 array_ops.py:1407(<genexpr>)
       15    0.000    0.000    0.000    0.000 tensor_shape.py:849(__bool__)
       14    0.000    0.000    0.000    0.000 _base.py:2470(_get_axis_list)
       16    0.000    0.000    0.000    0.000 axis.py:788(get_remove_overlapping_locs)
        1    0.000    0.000    0.000    0.000 _subplots.py:216(subplot_class_factory)
        2    0.000    0.000    0.000    0.000 figure.py:944(get_dpi)
       54    0.000    0.000    0.000    0.000 backend_bases.py:660(points_to_pixels)
       70    0.000    0.000    0.000    0.000 backend_bases.py:1009(get_hatch_linewidth)
        2    0.000    0.000    0.000    0.000 gridspec.py:508(__init__)
       32    0.000    0.000    0.000    0.000 ticker.py:556(set_useMathText)
       28    0.000    0.000    0.000    0.000 transforms.py:2053(get_matrix)
        2    0.000    0.000    0.000    0.000 transforms.py:394(width)
       33    0.000    0.000    0.000    0.000 {method 'get_char_index' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 colors.py:193(_to_rgba_no_colorcycle)
        2    0.000    0.000    0.000    0.000 _datasource.py:332(__del__)
       34    0.000    0.000    0.000    0.000 shape_base.py:21(_atleast_1d_dispatcher)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1800(_nonzero_dispatcher)
       13    0.000    0.000    0.000    0.000 process.py:35(current_process)
        8    0.000    0.000    0.000    0.000 inspect.py:1813(_signature_is_builtin)
        2    0.000    0.000    0.000    0.000 os.py:794(fsencode)
        4    0.000    0.000    0.000    0.000 sre_compile.py:388(_simple)
        1    0.000    0.000    0.000    0.000 sre_parse.py:96(closegroup)
        2    0.000    0.000    0.000    0.000 warnings.py:468(__exit__)
        3    0.000    0.000    0.000    0.000 {method '__enter__' of '_io._IOBase' objects}
       33    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.BytesIO' objects}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2242(dash_cmd)
        1    0.000    0.000    0.000    0.000 tmphwkujs8b.py:2(<module>)
        1    0.000    0.000    0.000    0.000 <string>:5(KerasHistory)
        1    0.000    0.000    0.000    0.000 training.py:2629(_get_distribution_strategy)
       11    0.000    0.000    0.000    0.000 save_options.py:98(_validate_namespace_whitelist)
       11    0.000    0.000    0.000    0.000 saving_utils.py:142(<dictcomp>)
        8    0.000    0.000    0.000    0.000 input_spec.py:75(<dictcomp>)
       10    0.000    0.000    0.000    0.000 generic_utils.py:772(validate_kwargs)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:165(<genexpr>)
        1    0.000    0.000    0.000    0.000 generic_utils.py:283(class_and_config_for_serialized_keras_object)
       11    0.000    0.000    0.000    0.000 functional.py:355(_should_compute_mask)
       12    0.000    0.000    0.000    0.000 origin_info.py:162(__init__)
        6    0.000    0.000    0.000    0.000 cfg.py:484(enter_section)
        5    0.000    0.000    0.000    0.000 unparser.py:772(_arg)
        4    0.000    0.000    0.000    0.000 dataset_ops.py:4595(<listcomp>)
       16    0.000    0.000    0.000    0.000 axis.py:1364(<listcomp>)
        6    0.000    0.000    0.000    0.000 _base.py:3635(get_yscale)
       28    0.000    0.000    0.000    0.000 axis.py:361(<dictcomp>)
       28    0.000    0.000    0.000    0.000 axis.py:372(<dictcomp>)
       12    0.000    0.000    0.000    0.000 _base.py:535(get_window_extent)
        2    0.000    0.000    0.000    0.000 __init__.py:44(get_projection_class)
       29    0.000    0.000    0.000    0.000 backend_bases.py:637(flipy)
       28    0.000    0.000    0.000    0.000 backend_bases.py:912(set_dashes)
        6    0.000    0.000    0.000    0.000 transforms.py:931(minposx)
        4    0.000    0.000    0.000    0.000 artist.py:1033(get_zorder)
        6    0.000    0.000    0.000    0.000 __init__.py:51(__init__)
        6    0.000    0.000    0.000    0.000 __init__.py:626(clear)
        4    0.000    0.000    0.000    0.000 __init__.py:827(__init__)
       50    0.000    0.000    0.000    0.000 nanfunctions.py:226(_nanmin_dispatcher)
       50    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
        5    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
        4    0.000    0.000    0.000    0.000 weakref.py:73(__eq__)
        4    0.000    0.000    0.000    0.000 __init__.py:420(<genexpr>)
        4    0.000    0.000    0.000    0.000 __init__.py:422(<genexpr>)
       18    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:424(has_location)
       10    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2233(capstyle_cmd)
        1    0.000    0.000    0.000    0.000 compile_utils.py:370(_create_ordered_metrics)
       20    0.000    0.000    0.000    0.000 base_layer.py:2821(<genexpr>)
       18    0.000    0.000    0.000    0.000 constraints.py:299(get)
        6    0.000    0.000    0.000    0.000 return_statements.py:174(__init__)
        3    0.000    0.000    0.000    0.000 continue_statements.py:31(__init__)
        6    0.000    0.000    0.000    0.000 cfg.py:553(new_cond_branch)
        9    0.000    0.000    0.000    0.000 cfg.py:662(_enter_lexical_scope)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:744(__init__)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:1984(__init__)
        2    0.000    0.000    0.000    0.000 def_function.py:57(__init__)
        3    0.000    0.000    0.000    0.000 math_ops.py:1801(<listcomp>)
        1    0.000    0.000    0.000    0.000 context.py:1235(<listcomp>)
        1    0.000    0.000    0.000    0.000 Experiment.py:134(__init__)
       24    0.000    0.000    0.000    0.000 axis.py:1579(set_units)
       32    0.000    0.000    0.000    0.000 scale.py:43(__init__)
        8    0.000    0.000    0.000    0.000 _base.py:1202(get_aspect)
        4    0.000    0.000    0.000    0.000 backend_bases.py:895(set_clip_rectangle)
       16    0.000    0.000    0.000    0.000 ticker.py:1822(tick_values)
       54    0.000    0.000    0.000    0.000 markers.py:263(get_joinstyle)
        4    0.000    0.000    0.000    0.000 transforms.py:286(x0)
        2    0.000    0.000    0.000    0.000 __init__.py:1997(__init__)
       12    0.000    0.000    0.000    0.000 _internal.py:805(<genexpr>)
        2    0.000    0.000    0.000    0.000 py3k.py:50(asstr)
        4    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 pickle.py:195(end_framing)
        3    0.000    0.000    0.000    0.000 tempfile.py:236(_infer_return_type)
        3    0.000    0.000    0.000    0.000 configurable.py:381(instance)
        3    0.000    0.000    0.000    0.000 tokenize.py:224(__init__)
        2    0.000    0.000    0.000    0.000 contextlib.py:271(__init__)
       16    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:669(create_module)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:707(find_spec)
       33    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        6    0.000    0.000    0.000    0.000 {method 'to_bytes' of 'int' objects}
        4    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
        6    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRemove}
        1    0.000    0.000    0.000    0.000 backend_pdf.py:2182(GraphicsContextPdf)
        1    0.000    0.000    0.000    0.000 np_utils.py:206(<listcomp>)
       22    0.000    0.000    0.000    0.000 np_math_ops.py:926(_wrap)
        2    0.000    0.000    0.000    0.000 compile_utils.py:270(_should_broadcast)
        3    0.000    0.000    0.000    0.000 compile_utils.py:626(get_mask)
        4    0.000    0.000    0.000    0.000 training.py:152(is_functional_model_init_params)
        2    0.000    0.000    0.000    0.000 functional.py:938(<listcomp>)
       11    0.000    0.000    0.000    0.000 signature_serialization.py:206(_add_signature)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1045(_init_set_name)
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:483(frozen)
        5    0.000    0.000    0.000    0.000 node.py:115(<listcomp>)
        4    0.000    0.000    0.000    0.000 doc_controls.py:105(do_not_doc_inheritable)
        7    0.000    0.000    0.000    0.000 call_trees.py:70(add_arg)
        6    0.000    0.000    0.000    0.000 continue_statements.py:54(__init__)
        6    0.000    0.000    0.000    0.000 cfg.py:372(begin_statement)
        6    0.000    0.000    0.000    0.000 cfg.py:381(end_statement)
        3    0.000    0.000    0.000    0.000 cfg.py:678(_get_enclosing_except_scopes)
        4    0.000    0.000    0.000    0.000 unparser.py:658(<lambda>)
        8    0.000    0.000    0.000    0.000 distribute_lib.py:2901(variable_created_in_scope)
        3    0.000    0.000    0.000    0.000 collective_util.py:50(__init__)
       11    0.000    0.000    0.000    0.000 function.py:1969(inputs)
        3    0.000    0.000    0.000    0.000 decorator_utils.py:117(validate_callable)
        2    0.000    0.000    0.000    0.000 _base.py:886(set_axes_locator)
        8    0.000    0.000    0.000    0.000 _base.py:2432(tol)
       28    0.000    0.000    0.000    0.000 axis.py:383(<dictcomp>)
        8    0.000    0.000    0.000    0.000 figure.py:505(get_constrained_layout)
        2    0.000    0.000    0.000    0.000 figure.py:96(_entry_from_axes)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1236(__init__)
       12    0.000    0.000    0.000    0.000 figure.py:74(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1687(is_saving)
        2    0.000    0.000    0.000    0.000 gridspec.py:382(<dictcomp>)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2017(_clip_dispatcher)
        3    0.000    0.000    0.000    0.000 tempfile.py:590(__del__)
        3    0.000    0.000    0.000    0.000 configurable.py:426(initialized)
        1    0.000    0.000    0.000    0.000 __init__.py:1212(_fixupParents)
        7    0.000    0.000    0.000    0.000 enum.py:36(_is_sunder)
        1    0.000    0.000    0.000    0.000 functools.py:196(<listcomp>)
        3    0.000    0.000    0.000    0.000 codecs.py:259(__init__)
        1    0.000    0.000    0.000    0.000 codecs.py:93(__new__)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:41(_relax_case)
        3    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {built-in method atexit.register}
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_IsMlirBridgeEnabled}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetAdd}
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListType}
       37    0.000    0.000    0.000    0.000 backend_pdf.py:286(__init__)
        2    0.000    0.000    0.000    0.000 training.py:2475(<genexpr>)
        4    0.000    0.000    0.000    0.000 compile_utils.py:98(<lambda>)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:1246(_distribution_strategy_scope)
        4    0.000    0.000    0.000    0.000 tf_utils.py:194(<lambda>)
        4    0.000    0.000    0.000    0.000 functional.py:768(<genexpr>)
        4    0.000    0.000    0.000    0.000 base_layer.py:2442(_handle_activity_regularization)
        4    0.000    0.000    0.000    0.000 functional.py:141(<genexpr>)
        7    0.000    0.000    0.000    0.000 doc_controls.py:168(for_subclass_implementers)
        6    0.000    0.000    0.000    0.000 functions.py:34(__init__)
        4    0.000    0.000    0.000    0.000 call_trees.py:59(__init__)
        3    0.000    0.000    0.000    0.000 directives.py:50(__init__)
        3    0.000    0.000    0.000    0.000 cfg.py:567(exit_cond_section)
       18    0.000    0.000    0.000    0.000 unparser.py:55(leave)
        6    0.000    0.000    0.000    0.000 unparser.py:113(<lambda>)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2947(_reduce_to)
        1    0.000    0.000    0.000    0.000 data_structures.py:66(_should_wrap_tuple)
       37    0.000    0.000    0.000    0.000 layer_utils.py:273(<listcomp>)
        2    0.000    0.000    0.000    0.000 decorator_utils.py:24(get_qualified_name)
        8    0.000    0.000    0.000    0.000 axis.py:1486(<dictcomp>)
       12    0.000    0.000    0.000    0.000 axis.py:1865(get_label_position)
        2    0.000    0.000    0.000    0.000 _base.py:2971(set_axis_on)
        8    0.000    0.000    0.000    0.000 axis.py:645(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:604(_request_autoscale_view)
        2    0.000    0.000    0.000    0.000 figure.py:2059(add_axobserver)
        2    0.000    0.000    0.000    0.000 figure.py:928(get_edgecolor)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2582(notify_axes_change)
        6    0.000    0.000    0.000    0.000 widgets.py:34(__init__)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1679(_idle_draw_cntx)
        4    0.000    0.000    0.000    0.000 lines.py:1447(is_dashed)
        6    0.000    0.000    0.000    0.000 transforms.py:935(minposy)
        4    0.000    0.000    0.000    0.000 transforms.py:1271(_iter_break_from_left_to_right)
        4    0.000    0.000    0.000    0.000 __init__.py:1312(is_interactive)
        2    0.000    0.000    0.000    0.000 __init__.py:2148(_check_getitem)
       16    0.000    0.000    0.000    0.000 parse.py:98(_noop)
        6    0.000    0.000    0.000    0.000 posixpath.py:135(splitdrive)
        1    0.000    0.000    0.000    0.000 enum.py:65(__init__)
        5    0.000    0.000    0.000    0.000 enum.py:537(_generate_next_value_)
        1    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
        2    0.000    0.000    0.000    0.000 __init__.py:586(update)
        5    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
        9    0.000    0.000    0.000    0.000 {method 'extend' of 'bytearray' objects}
        3    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
       10    0.000    0.000    0.000    0.000 {method 'partition' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_build}
        3    0.000    0.000    0.000    0.000 {built-in method _imp.extension_suffixes}
        8    0.000    0.000    0.000    0.000 {built-in method sys.is_finalizing}
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetDevicePlacementPolicy}
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeleteDeviceList}
        1    0.000    0.000    0.000    0.000 backend_pdf.py:224(Reference)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:508(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1493(writeImages)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:2387(PdfPages)
        1    0.000    0.000    0.000    0.000 backend_mixed.py:7(MixedModeRenderer)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1632(is_date)
        3    0.000    0.000    0.000    0.000 tmphwkujs8b.py:7(inner_factory)
        1    0.000    0.000    0.000    0.000 compile_utils.py:334(_set_metric_names)
        2    0.000    0.000    0.000    0.000 compile_utils.py:419(<listcomp>)
        3    0.000    0.000    0.000    0.000 compile_utils.py:631(apply_mask)
        1    0.000    0.000    0.000    0.000 layer_utils.py:168(<listcomp>)
       16    0.000    0.000    0.000    0.000 layer_utils.py:107(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:107(_set_name_scope)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:635(<genexpr>)
        3    0.000    0.000    0.000    0.000 generic_utils.py:786(default)
        1    0.000    0.000    0.000    0.000 base_layer_utils.py:426(__init__)
        2    0.000    0.000    0.000    0.000 functional.py:626(<setcomp>)
        3    0.000    0.000    0.000    0.000 call_trees.py:44(__init__)
       12    0.000    0.000    0.000    0.000 unparser.py:106(<genexpr>)
        3    0.000    0.000    0.000    0.000 backprop.py:875(__del__)
        3    0.000    0.000    0.000    0.000 def_function.py:80(get_tracing_count)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:881(value_type)
       11    0.000    0.000    0.000    0.000 file_io.py:193(__enter__)
        3    0.000    0.000    0.000    0.000 tape.py:38(__init__)
        2    0.000    0.000    0.000    0.000 deprecation.py:274(deprecated)
        1    0.000    0.000    0.000    0.000 context.py:1228(<dictcomp>)
        8    0.000    0.000    0.000    0.000 _base.py:897(get_axes_locator)
        4    0.000    0.000    0.000    0.000 _base.py:2405(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:242(_setdefaults)
        4    0.000    0.000    0.000    0.000 figure.py:483(get_tight_layout)
       12    0.000    0.000    0.000    0.000 figure.py:76(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:93(set_width_ratios)
        6    0.000    0.000    0.000    0.000 gridspec.py:67(get_geometry)
        8    0.000    0.000    0.000    0.000 artist.py:1201(mouseover)
        2    0.000    0.000    0.000    0.000 transforms.py:400(height)
        2    0.000    0.000    0.000    0.000 pathlib.py:282(splitroot)
        3    0.000    0.000    0.000    0.000 tempfile.py:430(gettempdir)
        3    0.000    0.000    0.000    0.000 tempfile.py:565(__init__)
        3    0.000    0.000    0.000    0.000 inspect.py:502(_is_wrapper)
        1    0.000    0.000    0.000    0.000 os.py:1067(__subclasshook__)
       10    0.000    0.000    0.000    0.000 __init__.py:537(__missing__)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1202(<genexpr>)
        4    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
        6    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISREG}
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListCount}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:268(__lt__)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:340(Stream)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1273(_write_soft_mask_groups)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1533(writeMarkers)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1556(writePathCollectionTemplates)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:2510(FigureCanvasPdf)
        1    0.000    0.000    0.000    0.000 tmpzo79h315.py:3(outer_factory)
        6    0.000    0.000    0.000    0.000 fractions.py:504(__trunc__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:37(__init__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:421(_get_metric_object)
        2    0.000    0.000    0.000    0.000 compile_utils.py:480(_should_broadcast)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:514(<listcomp>)
        4    0.000    0.000    0.000    0.000 node.py:72(<lambda>)
        3    0.000    0.000    0.000    0.000 cfg.py:539(enter_cond_section)
        3    0.000    0.000    0.000    0.000 transformer.py:137(stack)
        5    0.000    0.000    0.000    0.000 distribute_lib.py:2745(strategy)
        1    0.000    0.000    0.000    0.000 function.py:3127(<listcomp>)
        4    0.000    0.000    0.000    0.000 context.py:944(rewriter_bool)
        1    0.000    0.000    0.000    0.000 context.py:1238(<dictcomp>)
        2    0.000    0.000    0.000    0.000 context.py:1263(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_agg.py:272(option_image_nocomposite)
       12    0.000    0.000    0.000    0.000 scale.py:79(limit_range_for_scale)
        2    0.000    0.000    0.000    0.000 _base.py:2133(use_sticky_edges)
        2    0.000    0.000    0.000    0.000 _base.py:3884(set_navigate)
        2    0.000    0.000    0.000    0.000 __init__.py:19(get_projection_class)
        2    0.000    0.000    0.000    0.000 _subplots.py:117(get_subplotspec)
        2    0.000    0.000    0.000    0.000 gridspec.py:532(num2)
        2    0.000    0.000    0.000    0.000 gridspec.py:549(get_gridspec)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:29(get_fig_manager)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:115(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:204(_normalize)
        2    0.000    0.000    0.000    0.000 gridspec.py:113(set_height_ratios)
       12    0.000    0.000    0.000    0.000 transforms.py:1284(depth)
        8    0.000    0.000    0.000    0.000 artist.py:350(is_transform_set)
        2    0.000    0.000    0.000    0.000 artist.py:827(get_clip_path)
        2    0.000    0.000    0.000    0.000 artist.py:961(set_in_layout)
        1    0.000    0.000    0.000    0.000 __init__.py:552(__init__)
        4    0.000    0.000    0.000    0.000 __init__.py:828(<dictcomp>)
        2    0.000    0.000    0.000    0.000 npyio.py:1205(_savetxt_dispatcher)
        2    0.000    0.000    0.000    0.000 _datasource.py:225(__getitem__)
        2    0.000    0.000    0.000    0.000 _iotools.py:46(_is_string_like)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2401(_cumsum_dispatcher)
        2    0.000    0.000    0.000    0.000 multiarray.py:990(unravel_index)
        1    0.000    0.000    0.000    0.000 imp.py:48(new_module)
        2    0.000    0.000    0.000    0.000 parse.py:394(_checknetloc)
        1    0.000    0.000    0.000    0.000 __init__.py:685(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:219(_acquireLock)
        1    0.000    0.000    0.000    0.000 enum.py:135(<dictcomp>)
        1    0.000    0.000    0.000    0.000 sre_compile.py:393(_generate_overlap_table)
        1    0.000    0.000    0.000    0.000 functools.py:448(lru_cache)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:908(__init__)
        8    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
        2    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        8    0.000    0.000    0.000    0.000 {method 'end' of '_sre.SRE_Match' objects}
       10    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISLNK}
        2    0.000    0.000    0.000    0.000 {method 'utcoffset' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 {built-in method _imp.exec_dynamic}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        1    0.000    0.000    0.000    0.000 backend_pdf.py:282(Operator)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:521(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:525(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:601(<dictcomp>)
        1    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:19(RendererPDFPSBase)
        1    0.000    0.000    0.000    0.000 cp1252.py:9(Codec)
        1    0.000    0.000    0.000    0.000 cp1252.py:21(IncrementalDecoder)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1629(is_string_like)
        1    0.000    0.000    0.000    0.000 tmphwkujs8b.py:3(outer_factory)
        1    0.000    0.000    0.000    0.000 tmpamx0glat.py:3(outer_factory)
        4    0.000    0.000    0.000    0.000 compile_utils.py:93(_broadcast_fn)
        1    0.000    0.000    0.000    0.000 compile_utils.py:151(_create_metrics)
        6    0.000    0.000    0.000    0.000 compile_utils.py:398(<genexpr>)
       10    0.000    0.000    0.000    0.000 functional.py:905(<lambda>)
        1    0.000    0.000    0.000    0.000 policy.py:444(loss_scale)
        5    0.000    0.000    0.000    0.000 node.py:74(<lambda>)
        5    0.000    0.000    0.000    0.000 base_layer.py:2825(<genexpr>)
        1    0.000    0.000    0.000    0.000 generic_utils.py:199(get_registered_object)
        1    0.000    0.000    0.000    0.000 doc_controls.py:24(do_not_generate_docs)
        3    0.000    0.000    0.000    0.000 cfg.py:469(connect_raise_node)
        3    0.000    0.000    0.000    0.000 cfg.py:574(enter_except_section)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2976(_num_replicas_in_sync)
        3    0.000    0.000    0.000    0.000 tensor_util.py:499(<listcomp>)
        2    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:99(<genexpr>)
        2    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:101(<genexpr>)
        1    0.000    0.000    0.000    0.000 deprecation.py:414(<dictcomp>)
        1    0.000    0.000    0.000    0.000 context.py:1296(_import_config)
        1    0.000    0.000    0.000    0.000 context.py:131(executor_type)
        2    0.000    0.000    0.000    0.000 _base.py:3900(set_navigate_mode)
        4    0.000    0.000    0.000    0.000 _base.py:232(<genexpr>)
        4    0.000    0.000    0.000    0.000 _base.py:321(<genexpr>)
        2    0.000    0.000    0.000    0.000 _subplots.py:231(<genexpr>)
        2    0.000    0.000    0.000    0.000 figure.py:1073(fixitems)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2597(destroy)
        2    0.000    0.000    0.000    0.000 figure.py:97(<dictcomp>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3426(Show)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:78(has_fignum)
        2    0.000    0.000    0.000    0.000 patches.py:286(get_edgecolor)
        2    0.000    0.000    0.000    0.000 patches.py:290(get_facecolor)
        1    0.000    0.000    0.000    0.000 deprecation.py:114(deprecated)
        2    0.000    0.000    0.000    0.000 type_check.py:207(_is_type_dispatcher)
        6    0.000    0.000    0.000    0.000 numeric.py:2163(_isclose_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:833(_sort_dispatcher)
        6    0.000    0.000    0.000    0.000 multiarray.py:635(result_type)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 pathlib.py:1008(_init)
        3    0.000    0.000    0.000    0.000 tempfile.py:376(_get_candidate_names)
        1    0.000    0.000    0.000    0.000 __init__.py:228(_releaseLock)
        2    0.000    0.000    0.000    0.000 contextlib.py:17(__enter__)
        4    0.000    0.000    0.000    0.000 sre_parse.py:167(__setitem__)
        3    0.000    0.000    0.000    0.000 {method 'items' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        6    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        1    0.000    0.000    0.000    0.000 backend_pdf.py:296(Verbatim)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:529(<genexpr>)
        1    0.000    0.000    0.000    0.000 cp1252.py:17(IncrementalEncoder)
        1    0.000    0.000    0.000    0.000 cp1252.py:25(StreamWriter)
        1    0.000    0.000    0.000    0.000 cp1252.py:28(StreamReader)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:2562(_BackendPdf)
        1    0.000    0.000    0.000    0.000 tmpzo79h315.py:7(inner_factory)
        1    0.000    0.000    0.000    0.000 base_layer_v1.py:2398(KerasHistory)
        6    0.000    0.000    0.000    0.000 compile_utils.py:399(<genexpr>)
        2    0.000    0.000    0.000    0.000 distributed_training_utils.py:439(is_tpu_strategy)
        1    0.000    0.000    0.000    0.000 ast_util.py:44(<genexpr>)
        3    0.000    0.000    0.000    0.000 converter.py:218(<genexpr>)
        9    0.000    0.000    0.000    0.000 ast3.py:380(<listcomp>)
        3    0.000    0.000    0.000    0.000 deprecation.py:93(_validate_deprecation_args)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1929(draw)
        2    0.000    0.000    0.000    0.000 gridspec.py:528(num2)
        4    0.000    0.000    0.000    0.000 transforms.py:2085(inverted)
        2    0.000    0.000    0.000    0.000 artist.py:1013(get_label)
        1    0.000    0.000    0.000    0.000 __init__.py:272(wrapper)


