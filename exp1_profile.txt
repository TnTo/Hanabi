         3099007932 function calls (2983089008 primitive calls) in 7484.757 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.000    0.000 7396.024 7396.024 Experiment.py:180(run)
       10    0.003    0.000 7011.135  701.113 Experiment.py:173(train)
       10   31.048    3.105 7011.131  701.113 Experiment.py:110(train)
       10    0.007    0.001 5857.733  585.773 function_base.py:2063(__call__)
       10    3.284    0.328 5857.726  585.773 function_base.py:2154(_vectorize_call)
   114466    8.766    0.000 5854.440    0.051 Experiment.py:101(Q)
   116480    6.137    0.000 5834.223    0.050 training.py:126(_method_wrapper)
   116480   15.025    0.000 5739.357    0.049 training.py:1486(predict)
   116490    4.815    0.000 3886.546    0.033 data_adapter.py:1073(__init__)
   116490    5.508    0.000 3839.933    0.033 data_adapter.py:254(__init__)
   349470   16.061    0.000 3324.485    0.010 dataset_ops.py:3186(__init__)
655104/654948   12.528    0.000 3254.412    0.005 function.py:3147(_maybe_define_function)
   349470    1.930    0.000 3209.862    0.009 function.py:2931(get_concrete_function)
350643/350607    7.831    0.000 3208.322    0.009 function.py:2870(_get_concrete_function_garbage_collected)
349551/349527    9.953    0.000 3141.225    0.009 function.py:3047(_create_graph_function)
349551/349527   25.526    0.000 2904.627    0.008 func_graph.py:801(func_graph_from_py_func)
   232980    1.099    0.000 1837.713    0.008 dataset_ops.py:1557(map)
   116490    0.451    0.000 1749.032    0.015 dataset_ops.py:1704(flat_map)
   116490    5.192    0.000 1748.581    0.015 dataset_ops.py:4119(__init__)
   349470    2.856    0.000 1537.403    0.004 dataset_ops.py:3358(wrapper_fn)
   349470    5.478    0.000 1517.559    0.004 dataset_ops.py:3292(_wrapper_helper)
  1981523 1493.782    0.001 1502.391    0.001 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
349495/349473    3.503    0.000 1459.623    0.004 api.py:247(wrapper)
349512/349476    6.807    0.000 1452.187    0.004 api.py:417(converted_call)
349504/349479    1.834    0.000 1367.356    0.004 api.py:330(_call_unconverted)
  7769536    4.352    0.000 1219.157    0.000 {built-in method builtins.iter}
   233220    2.798    0.000 1219.111    0.005 data_adapter.py:1135(enumerate_epochs)
1534232/1165992    3.438    0.000 1218.468    0.001 dispatch.py:198(wrapper)
1282387/1282300  117.952    0.000 1218.313    0.001 op_def_library.py:299(_apply_op_helper)
   116490    0.731    0.000 1214.689    0.010 dataset_ops.py:403(__iter__)
   116496    1.723    0.000 1213.790    0.010 iterator_ops.py:648(__init__)
   116490    5.129    0.000 1208.215    0.010 iterator_ops.py:700(_create_iterator)
   116490    0.883    0.000 1123.889    0.010 gen_dataset_ops.py:2987(make_iterator)
304430/304412    8.043    0.000 1092.178    0.004 def_function.py:757(__call__)
304430/304412    2.894    0.000 1070.256    0.004 def_function.py:798(_call)
304423/304405    2.506    0.000 1066.081    0.004 function.py:2825(__call__)
   116490    2.229    0.000  992.512    0.009 data_adapter.py:373(slice_inputs)
   304430    2.721    0.000  989.874    0.003 function.py:1827(_filtered_call)
   304436    6.750    0.000  979.315    0.003 function.py:1850(_call_flat)
2797353/2797236   28.805    0.000  977.717    0.000 func_graph.py:528(_create_op_internal)
   116490    4.972    0.000  952.840    0.008 dataset_ops.py:4031(__init__)
   304436   13.799    0.000  950.048    0.003 function.py:509(call)
  2797488   39.314    0.000  939.009    0.000 ops.py:3418(_create_op_internal)
   304390    3.104    0.000  933.372    0.003 execute.py:33(quick_execute)
   304390  929.449    0.003  929.449    0.003 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
   116490    2.818    0.000  895.343    0.008 data_adapter.py:330(slice_batch_indices)
   116490    5.331    0.000  883.774    0.008 dataset_ops.py:4069(__init__)
       10    0.001    0.000  648.182   64.818 training.py:106(_method_wrapper)
       10    3.118    0.312  648.160   64.816 training.py:824(fit)
  2797810   74.795    0.000  631.909    0.000 ops.py:1839(__init__)
5631086/5630929   21.515    0.000  604.992    0.000 ops.py:1448(convert_to_tensor)
  2115743    4.695    0.000  546.706    0.000 constant_op.py:166(constant)
   349551   27.037    0.000  546.408    0.002 auto_control_deps.py:301(__exit__)
  2115743   24.800    0.000  542.011    0.000 constant_op.py:267(_constant_impl)
17821700/17363478  465.927    0.000  497.811    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
  1900730   15.101    0.000  482.632    0.000 nest.py:573(map_structure)
 16587006    9.187    0.000  472.935    0.000 <__array_function__ internals>:2(concatenate)
  2797756   17.801    0.000  472.528    0.000 auto_control_deps.py:519(_get_resource_inputs)
   228920    0.602    0.000  446.198    0.002 <__array_function__ internals>:2(vstack)
   228920    1.074    0.000  443.174    0.002 shape_base.py:224(vstack)
  1900730    3.512    0.000  423.017    0.000 nest.py:635(<listcomp>)
   232980    0.668    0.000  416.567    0.002 array_ops.py:1028(slice)
   232980    2.694    0.000  415.899    0.002 gen_array_ops.py:9212(_slice)
  2797311   17.680    0.000  399.538    0.000 auto_control_deps_utils.py:89(get_read_write_resource_inputs)
        4    0.532    0.133  372.603   93.151 _dill.py:253(dump)
        4    0.000    0.000  372.070   93.017 _dill.py:414(dump)
        4    0.000    0.000  372.070   93.017 pickle.py:398(dump)
67587715/4  125.847    0.000  372.069   93.017 pickle.py:457(save)
584641/10    0.860    0.000  372.068   37.207 pickle.py:774(save_list)
584641/10    2.793    0.000  372.068   37.207 pickle.py:787(_batch_appends)
3338019/12526   17.039    0.000  371.586    0.030 _dill.py:903(save_module_dict)
3338019/12526    6.165    0.000  371.470    0.030 pickle.py:814(save_dict)
3338019/12526   32.524    0.000  371.388    0.030 pickle.py:827(_batch_setitems)
2656338/48695   12.622    0.000  371.238    0.008 pickle.py:539(save_reduce)
   699102   18.879    0.000  293.261    0.000 func_graph.py:1148(_get_defun_inputs)
   582536    0.643    0.000  286.561    0.000 constant_op.py:335(_constant_tensor_conversion_function)
   349551    0.878    0.000  284.861    0.001 func_graph.py:1136(_get_defun_inputs_from_args)
  2797488   45.182    0.000  279.626    0.000 ops.py:1764(_create_c_op)
   116490    0.740    0.000  278.990    0.002 data_adapter.py:315(permutation)
        3    0.005    0.002  278.504   92.835 Experiment.py:212(save_status)
   116492    2.347    0.000  277.826    0.002 math_ops.py:1731(range)
  3731067   24.501    0.000  274.322    0.000 ops.py:2471(get_attr)
  1416611    2.347    0.000  260.081    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
   349574    8.933    0.000  223.955    0.001 function.py:1460(__init__)
   466516   11.978    0.000  222.028    0.000 graph_only_ops.py:29(graph_placeholder)
30099965/19128103   20.941    0.000  220.432    0.000 {built-in method builtins.next}
   349561    2.121    0.000  205.339    0.001 func_graph.py:930(convert)
  3731067  181.052    0.000  199.612    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
   349561    3.143    0.000  199.217    0.001 auto_control_deps.py:182(mark_as_return)
   484455    3.079    0.000  196.777    0.000 array_ops.py:244(identity)
   484455    3.426    0.000  188.653    0.000 gen_array_ops.py:3973(identity)
   116490    0.431    0.000  185.502    0.002 data_adapter.py:393(grab_batch)
   116500    0.686    0.000  182.746    0.002 data_adapter.py:394(<lambda>)
   116500    1.032    0.000  181.661    0.002 array_ops.py:4589(gather)
   116500    2.008    0.000  179.677    0.002 gen_array_ops.py:3790(gather_v2)
   349574    3.385    0.000  173.751    0.000 function.py:597(__init__)
16215612/10730293    8.635    0.000  169.649    0.000 contextlib.py:79(__enter__)
   349574   24.452    0.000  168.046    0.000 function.py:412(__init__)
   232980    0.712    0.000  153.225    0.001 dataset_ops.py:569(from_tensors)
   232980    3.206    0.000  152.514    0.001 dataset_ops.py:2980(__init__)
  3263750   25.176    0.000  139.854    0.000 func_graph.py:365(inner_cm)
  1048507   37.569    0.000  139.410    0.000 tensor_util.py:360(make_tensor_proto)
   116502    0.495    0.000  131.393    0.001 array_ops.py:59(reshape)
  1630860   21.896    0.000  130.862    0.000 dataset_ops.py:186(__init__)
   116502    1.145    0.000  127.103    0.001 gen_array_ops.py:8143(reshape)
   116490    0.540    0.000  119.265    0.001 dataset_ops.py:606(from_tensor_slices)
   116490    2.733    0.000  118.725    0.001 dataset_ops.py:2999(__init__)
   116490    0.377    0.000  113.594    0.001 dataset_ops.py:1002(concatenate)
   116490    2.583    0.000  113.217    0.001 dataset_ops.py:3504(__init__)
       11    0.081    0.007  106.175    9.652 Experiment.py:161(play_episode)
     2127    0.110    0.000  105.099    0.049 Experiment.py:82(move)
211443363/211440887   59.727    0.000   98.983    0.000 {built-in method builtins.isinstance}
        1    0.002    0.002   96.674   96.674 Experiment.py:193(save)
   116492    1.509    0.000   93.893    0.001 gen_math_ops.py:7268(_range)
   232980    1.971    0.000   91.146    0.000 gen_dataset_ops.py:6595(tensor_dataset)
  2797810   28.034    0.000   89.198    0.000 ops.py:3521(_create_op_helper)
16215612/10731634   25.249    0.000   85.808    0.000 contextlib.py:85(__exit__)
  4517424    3.996    0.000   85.782    0.000 nest.py:536(pack_sequence_as)
  8391864   10.590    0.000   85.301    0.000 object_identity.py:195(update)
   349615   10.705    0.000   85.053    0.000 func_graph.py:165(__init__)
   116490    2.450    0.000   84.880    0.001 iterator_ops.py:531(__del__)
   931920    2.336    0.000   84.272    0.000 dataset_ops.py:2956(__init__)
  4633918   14.097    0.000   84.227    0.000 nest.py:496(_pack_sequence_as)
  3497303    7.230    0.000   83.371    0.000 tf_stack.py:131(extract_stack)
  2797488   80.715    0.000   80.715    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
   116490    1.724    0.000   80.621    0.001 gen_dataset_ops.py:853(concatenate_dataset)
  2797488   47.702    0.000   80.189    0.000 ops.py:1737(_NodeDef)
   116490    1.630    0.000   79.910    0.001 gen_dataset_ops.py:6664(tensor_slice_dataset)
  3265204   20.563    0.000   79.729    0.000 ops.py:5580(get_controller)
  3497303   74.527    0.000   74.544    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
   116490    0.719    0.000   74.487    0.001 gen_dataset_ops.py:2003(flat_map_dataset)
  1631875   11.144    0.000   74.046    0.000 func_graph.py:362(as_default)
   116490    0.613    0.000   72.214    0.001 gen_dataset_ops.py:1262(delete_iterator)
  8391864   53.168    0.000   72.126    0.000 object_identity.py:196(<listcomp>)
   349546    3.246    0.000   67.934    0.000 function.py:3632(decorated)
   699150    3.042    0.000   66.010    0.000 func_graph.py:69(convert_structure_to_signature)
  1631195   13.511    0.000   62.896    0.000 base.py:800(_track_trackable)
  4706724    4.357    0.000   59.425    0.000 Experiment.py:105(<lambda>)
   349619   26.086    0.000   59.141    0.000 ops.py:2862(__init__)
   116490    1.621    0.000   56.389    0.000 dataset_ops.py:356(_apply_options)
   116490    0.671    0.000   56.192    0.000 gen_dataset_ops.py:5057(parallel_map_dataset_v2)
   116490    0.724    0.000   55.515    0.000 gen_dataset_ops.py:3036(map_dataset)
 16215612   14.681    0.000   52.543    0.000 contextlib.py:157(helper)
   230936    4.224    0.000   52.035    0.000 Hanabi.py:258(toarray)
   582450    1.034    0.000   51.576    0.000 dataset_ops.py:2967(__init__)
   349546    5.033    0.000   51.189    0.000 function.py:2767(__init__)
 17528028   10.455    0.000   50.990    0.000 nest.py:274(flatten)
   232980    0.589    0.000   50.866    0.000 dataset_ops.py:1128(repeat)
   655104    9.879    0.000   50.713    0.000 function.py:2977(_cache_key)
   232980    2.912    0.000   50.277    0.000 dataset_ops.py:3552(__init__)
7460343/5712508   11.495    0.000   48.289    0.000 {built-in method builtins.any}
  1515593   11.386    0.000   48.102    0.000 ops.py:3868(_get_op_def)
  4913792   13.012    0.000   47.853    0.000 Hanabi.py:159(toarray)
  1631880    4.551    0.000   47.809    0.000 tf_contextlib.py:25(contextmanager)
   116490    0.523    0.000   46.362    0.000 dataset_ops.py:920(range)
 42196875   15.905    0.000   46.240    0.000 ops.py:2376(type)
   116490    2.010    0.000   45.839    0.000 dataset_ops.py:3570(__init__)
   349574   45.672    0.000   45.672    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
   116490    1.485    0.000   45.224    0.000 dataset_ops.py:4375(__init__)
  2799048   20.191    0.000   44.719    0.000 ops.py:2312(inputs)
  3960672    6.070    0.000   43.889    0.000 {built-in method _functools.reduce}
   179100    0.462    0.000   43.647    0.000 callbacks.py:281(_call_batch_hook)
 18335720   35.189    0.000   42.757    0.000 dtypes.py:606(as_dtype)
   349470    8.724    0.000   42.442    0.000 structure.py:70(normalize_element)
  1982212   42.350    0.000   42.350    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
   179100    1.292    0.000   41.921    0.000 callbacks.py:332(_call_batch_hook_helper)
63998486/63993241   33.417    0.000   41.022    0.000 {built-in method builtins.getattr}
 17528028   39.683    0.000   40.536    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
 97478850   25.011    0.000   40.412    0.000 {method 'get' of 'dict' objects}
   349593    2.994    0.000   40.245    0.000 function.py:2299(from_function_and_signature)
    89550    0.400    0.000   40.172    0.000 callbacks.py:432(on_train_batch_end)
    89550    0.381    0.000   39.459    0.000 callbacks.py:302(_call_batch_end_hook)
  2797766    3.742    0.000   39.324    0.000 ops.py:386(_create_with_tf_output)
 11886615   22.081    0.000   39.254    0.000 abc.py:180(__instancecheck__)
  1632452    4.865    0.000   39.151    0.000 ops.py:6458(__enter__)
 84181698   23.339    0.000   38.498    0.000 pickle.py:213(write)
   116490    0.335    0.000   37.756    0.000 dataset_ops.py:1031(prefetch)
81528777/81527065   35.673    0.000   37.727    0.000 {built-in method builtins.hasattr}
 16215612   31.041    0.000   37.614    0.000 contextlib.py:59(__init__)
   116490    2.450    0.000   37.421    0.000 dataset_ops.py:4289(__init__)
   618860    1.551    0.000   37.288    0.000 tf_utils.py:513(to_numpy_or_python_type)
  1164900    3.061    0.000   36.677    0.000 dataset_ops.py:546(_flat_structure)
   699150    0.527    0.000   36.552    0.000 func_graph.py:130(<listcomp>)
  2331162   17.489    0.000   36.185    0.000 tf_decorator.py:67(make_decorator)
   466159    4.669    0.000   36.025    0.000 func_graph.py:82(encode_arg)
 13841783   35.701    0.000   35.702    0.000 {built-in method numpy.array}
  2797766   10.834    0.000   35.583    0.000 ops.py:359(__init__)
 55061274   21.158    0.000   34.753    0.000 pickle.py:448(get)
  1154680    4.737    0.000   33.463    0.000 Hanabi.py:212(toarray)
  2797511    3.117    0.000   33.352    0.000 lock_util.py:126(__exit__)
   698940    3.133    0.000   31.822    0.000 structure.py:299(_to_tensor_list_helper)
  2797511    2.417    0.000   31.561    0.000 lock_util.py:123(__enter__)
    89550    0.186    0.000   31.482    0.000 callbacks.py:960(on_train_batch_end)
5129315/5129230    8.210    0.000   31.356    0.000 base.py:453(_method_wrapper)
  3272269   17.572    0.000   31.326    0.000 nest.py:129(_sequence_like)
    89550    1.250    0.000   31.296    0.000 callbacks.py:999(_batch_update_progbar)
 22964952   13.625    0.000   30.887    0.000 compat.py:114(as_str)
6050246/3325086   10.282    0.000   30.819    0.000 {built-in method builtins.hash}
  5361828   30.677    0.000   30.677    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
 42197197   30.336    0.000   30.336    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
  2797511    9.900    0.000   30.236    0.000 lock_util.py:96(release)
   117014    2.134    0.000   29.711    0.000 resource_variable_ops.py:838(assign)
  1631880    6.684    0.000   29.294    0.000 contextlib.py:129(contextmanager)
  3261732    5.314    0.000   29.152    0.000 structure.py:257(get_flat_tensor_specs)
  2797511    8.254    0.000   29.144    0.000 lock_util.py:86(acquire)
   116490    0.297    0.000   28.657    0.000 dataset_ops.py:957(zip)
3272201/3271968    7.403    0.000   28.645    0.000 nest.py:461(_packed_nest_with_indices)
  1514370    2.659    0.000   28.487    0.000 dataset_ops.py:2927(merge)
  5594976   28.465    0.000   28.465    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
  3265088   10.784    0.000   28.360    0.000 ops.py:4091(name_scope)
   116490    1.586    0.000   28.360    0.000 dataset_ops.py:3472(__init__)
   349829    1.332    0.000   28.182    0.000 tf_inspect.py:238(getfullargspec)
1048460/1048420    1.984    0.000   27.604    0.000 structure.py:407(type_spec_from_value)
   913080    1.185    0.000   27.479    0.000 type_spec.py:301(__hash__)
  2797488   27.182    0.000   27.182    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
2038492/655104    4.884    0.000   27.122    0.000 function.py:95(_make_input_signature_hashable)
   582450    1.001    0.000   26.660    0.000 structure.py:355(to_tensor_list)
  2797311    4.609    0.000   26.403    0.000 tpu.py:223(tpu_replicated_input_resolver)
  1631176    7.079    0.000   26.147    0.000 base.py:854(_handle_deferred_dependencies)
   349811    5.100    0.000   25.987    0.000 inspect.py:1089(getfullargspec)
  6179235   25.983    0.000   25.983    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
  1514370    7.626    0.000   25.829    0.000 options.py:89(merge_options)
  1521792    2.853    0.000   25.661    0.000 type_spec.py:337(__get_cmp_key)
  1048460    3.937    0.000   25.620    0.000 type_spec.py:555(_type_spec_from_value)
  7347997   21.519    0.000   24.959    0.000 object_identity.py:174(__init__)
  1632602   18.602    0.000   24.698    0.000 context.py:2001(graph_mode)
   116490    1.122    0.000   24.652    0.000 callbacks.py:202(__init__)
  2797810    9.316    0.000   24.538    0.000 ops.py:4439(_apply_device_functions)
   349568    0.816    0.000   24.282    0.000 context.py:2346(add_function)
   214810    0.792    0.000   24.214    0.000 nest.py:1061(map_structure_up_to)
   116516    0.814    0.000   24.080    0.000 resource_variable_ops.py:606(numpy)
  6579225   12.098    0.000   23.880    0.000 pickle.py:413(memoize)
  5030055   10.731    0.000   23.759    0.000 dtypes.py:172(is_compatible_with)
   349486    7.749    0.000   23.720    0.000 conversion.py:129(is_whitelisted)
   230936    1.001    0.000   23.569    0.000 Hanabi.py:271(<listcomp>)
   349568    1.234    0.000   23.425    0.000 context.py:1085(add_function)
   214810    2.134    0.000   23.422    0.000 nest.py:1142(map_structure_with_tuple_paths_up_to)
  2681975    2.698    0.000   23.337    0.000 ops.py:421(shape)
  5547154   12.741    0.000   23.315    0.000 Hanabi.py:70(toarray)
 15418239   13.943    0.000   23.246    0.000 ops.py:5989(get_default_graph)
   698960    0.733    0.000   23.076    0.000 structure.py:321(reduce_fn)
   116490    0.520    0.000   22.814    0.000 data_adapter.py:995(_process_tensorlike)
   349589    1.541    0.000   22.302    0.000 function.py:1549(_set_function_spec)
  1747583    8.143    0.000   22.253    0.000 tensor_spec.py:39(__init__)
3939090/1521792    6.816    0.000   22.204    0.000 type_spec.py:342(__make_cmp_key)
   349497    3.432    0.000   21.929    0.000 api.py:157(tf_convert)
   349568   21.869    0.000   21.869    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
  6412861   21.786    0.000   21.786    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
  1981375   10.030    0.000   21.665    0.000 functools.py:44(update_wrapper)
  3498114    4.065    0.000   21.617    0.000 {built-in method builtins.all}
  1164900    3.363    0.000   21.504    0.000 dataset_ops.py:528(_flat_shapes)
  1865874   15.099    0.000   21.352    0.000 tensor_shape.py:1193(as_proto)
   116573    1.459    0.000   21.039    0.000 resource_variable_ops.py:668(read_value)
  1282401    6.684    0.000   20.639    0.000 ops.py:444(_c_api_shape)
   349567    9.864    0.000   20.554    0.000 function.py:1562(_initialize_function_spec)
  1630866    2.639    0.000   20.452    0.000 structure.py:273(get_flat_tensor_shapes)
  9559778    8.137    0.000   20.165    0.000 c_api_util.py:157(tf_buffer)
  5030009    9.858    0.000   20.132    0.000 tensor_shape.py:746(__init__)
   349501    1.145    0.000   20.120    0.000 <__array_function__ internals>:2(array_equal)
  8164973   20.102    0.000   20.105    0.000 _collections_abc.py:742(__iter__)
    89800    2.770    0.000   20.092    0.000 generic_utils.py:528(update)
  5594622    8.000    0.000   19.190    0.000 tpu.py:239(replace_with_unreplicated_resources)
350039/349811    2.564    0.000   19.163    0.000 inspect.py:2183(_signature_from_callable)
  5988772    4.165    0.000   19.158    0.000 nest.py:198(_yield_value)
   116490    0.485    0.000   19.139    0.000 callbacks.py:274(set_model)
  8325420   10.806    0.000   18.922    0.000 nest.py:203(_yield_sorted_items)
   116490    0.418    0.000   18.919    0.000 gen_dataset_ops.py:5296(range_dataset)
585006/117675    2.031    0.000   18.649    0.000 training.py:322(__setattr__)
   349473    0.629    0.000   18.621    0.000 structure.py:210(from_compatible_tensor_list)
  2797684    4.743    0.000   18.560    0.000 errors_impl.py:264(__init__)
   304436    5.805    0.000   18.365    0.000 function.py:2151(_build_call_outputs)
 12500665   15.925    0.000   18.337    0.000 dtypes.py:192(__eq__)
   232980    0.626    0.000   18.115    0.000 gen_dataset_ops.py:5498(repeat_dataset)
 12607051    7.490    0.000   18.043    0.000 dtypes.py:84(base_dtype)
  1067236    1.324    0.000   18.042    0.000 constant_op.py:298(_constant_eager_impl)
   349501    8.094    0.000   18.016    0.000 numeric.py:2287(array_equal)
   349473    2.688    0.000   17.991    0.000 structure.py:175(_from_tensor_list_helper)
  8626106   10.099    0.000   17.938    0.000 compat.py:64(as_bytes)
  2797511   11.509    0.000   17.885    0.000 lock_util.py:106(_another_group_active)
   582470    1.039    0.000   17.701    0.000 structure.py:376(<lambda>)
  2797488   16.305    0.000   17.390    0.000 ops.py:6880(_reconstruct_sequence_inputs)
 20174038   17.335    0.000   17.356    0.000 _weakrefset.py:70(__contains__)
  2096952    1.294    0.000   17.305    0.000 api.py:519(<genexpr>)
   582470    1.438    0.000   17.303    0.000 type_spec.py:211(_to_tensor_list)
 22965087   11.798    0.000   17.262    0.000 compat.py:90(as_text)
  2797511    4.501    0.000   17.233    0.000 threading.py:357(notify_all)
  2797810   13.607    0.000   17.208    0.000 ops.py:3052(_add_op)
  3613169    9.468    0.000   17.054    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
   349492    2.074    0.000   16.852    0.000 inspect_utils.py:82(isbuiltin)
   116490    0.413    0.000   16.732    0.000 gen_dataset_ops.py:3266(model_dataset)
  1067236   14.909    0.000   16.718    0.000 constant_op.py:70(convert_to_eager_tensor)
   349496    3.284    0.000   16.659    0.000 api.py:244(decorator)
   214810    0.367    0.000   16.593    0.000 nest.py:1234(<listcomp>)
  2448257    7.095    0.000   16.541    0.000 ops.py:3848(_get_tensor_by_tf_output)
   923744    1.671    0.000   16.308    0.000 Hanabi.py:219(<listcomp>)
   349811    6.592    0.000   16.249    0.000 inspect.py:2102(_signature_from_function)
   214810    0.347    0.000   16.226    0.000 nest.py:1137(<lambda>)
 64422876   16.190    0.000   16.190    0.000 {built-in method _struct.pack}
   114466    2.084    0.000   16.148    0.000 Experiment.py:58(availableActionsData)
  1747460    2.698    0.000   16.012    0.000 api.py:343(_is_of_known_loaded_module)
  7095692    9.338    0.000   15.865    0.000 context.py:1851(executing_eagerly)
  3030555    8.741    0.000   15.734    0.000 ops.py:4206(unique_name)
   116480    1.083    0.000   15.720    0.000 training.py:2667(concat)
589308/120388    3.577    0.000   15.529    0.000 base_layer.py:2756(__setattr__)
   349619    1.744    0.000   15.407    0.000 c_api_util.py:45(__init__)
  4895255    9.753    0.000   15.250    0.000 base.py:577(_maybe_initialize_trackable)
 84182456   15.159    0.000   15.159    0.000 {method 'write' of '_io.BufferedWriter' objects}
   296090    2.547    0.000   15.149    0.000 tf_utils.py:531(_to_single_numpy_or_python_type)
   349635    0.260    0.000   15.024    0.000 c_api_util.py:53(__del__)
   349635   14.764    0.000   14.764    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteGraph}
   582470    2.034    0.000   14.598    0.000 tensor_spec.py:155(_to_components)
  3611330    4.013    0.000   14.321    0.000 structure.py:269(<lambda>)
  2797766   14.266    0.000   14.266    0.000 c_api_util.py:190(tf_output)
  4196633    3.492    0.000   14.259    0.000 ops.py:1925(<genexpr>)
  8846787   14.249    0.000   14.249    0.000 {method 'acquire' of '_thread.lock' objects}
   700611    2.536    0.000   14.206    0.000 nest.py:1379(flatten_with_tuple_paths)
  2797685   11.968    0.000   13.817    0.000 errors_impl.py:64(__init__)
   116490    0.346    0.000   13.522    0.000 gen_dataset_ops.py:5189(prefetch_dataset)
   349619   13.505    0.000   13.505    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
  5594650    6.197    0.000   13.397    0.000 registry.py:82(lookup)
  1865017    5.130    0.000   13.185    0.000 op_def_library.py:173(_MakeType)
   116727    0.664    0.000   13.087    0.000 resource_variable_ops.py:643(_read_variable_op)
   699168    9.084    0.000   12.938    0.000 function.py:2388(__init__)
   116490    0.630    0.000   12.799    0.000 gen_dataset_ops.py:106(anonymous_iterator_v2)
    12442    0.147    0.000   12.697    0.001 iostream.py:334(flush)
  3049530    4.466    0.000   12.273    0.000 tensor_spec.py:87(__hash__)
  2797511    3.415    0.000   12.222    0.000 ops.py:5153(_mutation_lock)
   349470    1.206    0.000   12.157    0.000 data_adapter.py:1011(_convert_numpy_and_scipy)
   116480    0.967    0.000   12.121    0.000 array_ops.py:1562(concat)
  2797810    5.449    0.000   12.121    0.000 ops.py:1995(_control_flow_post_processing)
  1164900    1.889    0.000   12.112    0.000 dataset_ops.py:537(_flat_types)
   117021    1.104    0.000   12.021    0.000 resource_variable_ops.py:830(_lazy_read)
   116490    0.396    0.000   11.908    0.000 data_adapter.py:963(select_data_adapter)
  2797511    7.818    0.000   11.844    0.000 threading.py:334(notify)
   699025    0.685    0.000   11.761    0.000 ag_logging.py:138(log)
   699102    2.771    0.000   11.705    0.000 func_graph.py:1061(check_mutation)
  4077305    5.346    0.000   11.703    0.000 type_spec.py:262(_flat_tensor_specs)
  7723252   11.539    0.000   11.539    0.000 {built-in method builtins.sorted}
   116490    1.975    0.000   11.490    0.000 data_adapter.py:965(<listcomp>)
   477846   11.431    0.000   11.481    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1747460   11.458    0.000   11.458    0.000 api.py:347(<genexpr>)
  2797810    5.077    0.000   11.454    0.000 ops.py:5059(_snapshot_colocation_stack_metadata)
  1048495    2.238    0.000   11.339    0.000 tensor_util.py:309(_AssertCompatible)
 11765580    7.406    0.000   11.319    0.000 options.py:74(get_fn)
   699032    0.726    0.000   11.077    0.000 ag_logging.py:121(has_verbosity)
   466374    1.972    0.000   11.061    0.000 ops.py:2422(_set_attr)
   412606    1.628    0.000   10.960    0.000 ops.py:1039(numpy)
  1281396    1.607    0.000   10.937    0.000 structure.py:286(get_flat_tensor_types)
   815430    2.539    0.000   10.872    0.000 nest.py:195(map_structure)
  7455387   10.715    0.000   10.715    0.000 {built-in method tensorflow.python._pywrap_utils.FlattenForData}
   349568    0.620    0.000   10.574    0.000 c_api_util.py:94(__del__)
 12607075   10.553    0.000   10.553    0.000 dtypes.py:71(_is_ref_dtype)
 84842414   10.517    0.000   10.517    0.000 {built-in method builtins.id}
 12526441    6.555    0.000   10.467    0.000 _dill.py:380(get)
   116490    0.334    0.000   10.396    0.000 gen_dataset_ops.py:7053(zip_dataset)
   699202   10.378    0.000   10.378    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
  5594622    4.632    0.000   10.364    0.000 auto_control_deps.py:125(op_is_stateful)
  2797311    3.497    0.000   10.361    0.000 dataset_ops.py:4572(_resource_resolver)
   699032    2.083    0.000   10.350    0.000 ag_logging.py:114(get_verbosity)
  1863843    4.130    0.000   10.346    0.000 nest.py:157(pack_sequence_as)
  2214673   10.343    0.000   10.343    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
931920/698940    4.531    0.000   10.117    0.000 options.py:37(__eq__)
47004476/47004336   10.099    0.000   10.099    0.000 {built-in method builtins.len}
   349574   10.086    0.000   10.086    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
  1632602    2.173    0.000   10.040    0.000 ops.py:3886(as_default)
   304356    1.215    0.000   10.005    0.000 type_spec.py:293(__eq__)
   349568    9.954    0.000    9.954    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteFunction}
  4430654    9.890    0.000    9.890    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
  2797588    3.281    0.000    9.865    0.000 tensor_shape.py:1230(as_shape)
  1630860    4.310    0.000    9.842    0.000 dataset_ops.py:3795(__init__)
   349551    0.516    0.000    9.793    0.000 func_graph.py:1258(_get_defun_inputs_from_kwargs)
   116490    0.292    0.000    9.781    0.000 dataset_ops.py:2112(with_options)
  1884068    5.438    0.000    9.643    0.000 ops.py:6385(name_scope)
   116490    0.994    0.000    9.633    0.000 dataset_ops.py:3581(_parse_args)
  1169306    1.239    0.000    9.630    0.000 nest.py:1310(yield_flat_paths)
    12442    0.106    0.000    9.626    0.001 threading.py:533(wait)
 10145108    6.440    0.000    9.602    0.000 ops.py:4998(_device_function_stack)
   937948    2.377    0.000    9.543    0.000 ops.py:5639(init_scope)
   116490    0.551    0.000    9.490    0.000 dataset_ops.py:4358(__init__)
    12401    0.144    0.000    9.470    0.001 threading.py:263(wait)
   305599    2.016    0.000    9.399    0.000 function.py:2513(canonicalize_function_inputs)
 67587715    9.395    0.000    9.395    0.000 pickle.py:200(commit_frame)
 15418239    9.303    0.000    9.303    0.000 ops.py:5557(get_default)
   304356    2.081    0.000    9.289    0.000 def_function.py:97(called_without_tracing)
  2797410    5.519    0.000    9.288    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
 54520752    9.237    0.000    9.237    0.000 inspect_utils.py:84(<genexpr>)
  3497300    3.251    0.000    9.151    0.000 ops.py:216(uid)
  2797181    3.848    0.000    9.133    0.000 auto_control_deps_utils.py:112(<genexpr>)
3165082/2225226    4.295    0.000    9.056    0.000 nest.py:720(_yield_flat_up_to)
   116727    0.568    0.000    8.902    0.000 resource_variable_ops.py:646(read_and_set_handle)
1969545/1521792    1.940    0.000    8.847    0.000 type_spec.py:357(<listcomp>)
  2797511    5.487    0.000    8.807    0.000 lock_util.py:74(group)
   465975    0.664    0.000    8.744    0.000 structure.py:229(<lambda>)
  5598652    5.223    0.000    8.670    0.000 ops.py:5075(_control_dependencies_stack)
  2448579    2.758    0.000    8.650    0.000 ops.py:3823(_get_operation_by_tf_operation)
   582542    0.771    0.000    8.645    0.000 array_ops.py:1489(_autopacking_conversion_function)
  6676105    3.062    0.000    8.639    0.000 __init__.py:1298(info)
   466443    1.589    0.000    8.623    0.000 ops.py:5202(device)
   349470    0.431    0.000    8.615    0.000 dataset_ops.py:3602(_build_tensor)
  3729533    4.714    0.000    8.594    0.000 six.py:588(iteritems)
  4779866    8.582    0.000    8.582    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
  2331162    6.938    0.000    8.476    0.000 tf_decorator.py:236(__init__)
  3981342    3.593    0.000    8.411    0.000 nest.py:96(_sorted)
  1282387    2.492    0.000    8.362    0.000 op_def_library.py:84(_Flatten)
  6290748    3.230    0.000    8.338    0.000 config_lib.py:50(get_action)
   699034    1.392    0.000    8.267    0.000 os.py:760(getenv)
  1900730    1.863    0.000    8.224    0.000 nest.py:631(<listcomp>)
   349519    0.929    0.000    8.202    0.000 {method 'all' of 'numpy.ndarray' objects}
   465975    1.042    0.000    8.080    0.000 tensor_spec.py:169(_from_compatible_tensor_list)
   818875    2.129    0.000    8.059    0.000 _collections_abc.py:657(get)
  1048507    5.215    0.000    8.024    0.000 tensor_util.py:339(_is_array_like)
  6017170    4.857    0.000    7.960    0.000 ops.py:5094(_distribution_strategy_stack)
    98328    0.390    0.000    7.895    0.000 gen_array_ops.py:1183(concat_v2)
   582542    2.951    0.000    7.871    0.000 array_ops.py:1479(_should_not_autopack)
  1750054    4.321    0.000    7.838    0.000 context.py:219(push)
 12728389    7.815    0.000    7.815    0.000 context.py:791(executing_eagerly)
 11889284    7.506    0.000    7.757    0.000 object_identity.py:211(__iter__)
  2797982    3.794    0.000    7.694    0.000 func_graph.py:595(capture)
  1632452    2.362    0.000    7.648    0.000 ops.py:6498(__exit__)
   699698    3.602    0.000    7.644    0.000 tensor_shape.py:1074(is_compatible_with)
  7375213    5.301    0.000    7.586    0.000 __init__.py:1544(isEnabledFor)
   116796    0.354    0.000    7.578    0.000 gen_resource_variable_ops.py:452(read_variable_op)
  2447666    2.297    0.000    7.575    0.000 op_def_library.py:510(<listcomp>)
117192/117135    0.678    0.000    7.414    0.000 variables.py:258(__call__)
  6406950    7.314    0.000    7.393    0.000 options.py:33(__init__)
   611180    2.071    0.000    7.382    0.000 function.py:2646(_convert_numpy_inputs)
   412606    0.725    0.000    7.378    0.000 ops.py:1027(_numpy)
   931996    1.854    0.000    7.346    0.000 tensor_util.py:194(GetNumpyAppendFn)
  1282331    2.565    0.000    7.310    0.000 func_graph.py:1055(device_stack_has_callable)
   349531    0.435    0.000    7.273    0.000 _methods.py:47(_all)
   114682    0.498    0.000    7.272    0.000 <__array_function__ internals>:2(amax)
   349473    0.380    0.000    7.229    0.000 op_def_library.py:700(<listcomp>)
  2797311    2.585    0.000    7.213    0.000 auto_control_deps.py:136(collective_manager_ids_from_op)
  4080311    7.083    0.000    7.164    0.000 traceable_stack.py:119(peek_objs)
   698992    1.293    0.000    7.161    0.000 tensor_util.py:263(inner)
  8899152    7.111    0.000    7.111    0.000 {built-in method numpy.zeros}
   349546    0.915    0.000    7.078    0.000 function.py:3595(defun_with_attributes)
  2797810    2.460    0.000    7.034    0.000 ops.py:4637(_record_op_seen_by_control_dependencies)
  3398149    3.749    0.000    7.019    0.000 tensor_shape.py:756(<listcomp>)
   466248    2.786    0.000    6.983    0.000 ops.py:616(set_shape)
  2448475    3.168    0.000    6.983    0.000 tf_decorator.py:200(unwrap)
   699158    0.648    0.000    6.980    0.000 function.py:1529(<genexpr>)
 67587715    6.938    0.000    6.938    0.000 pickle.py:523(persistent_id)
  2797810    3.399    0.000    6.936    0.000 ops.py:5019(_snapshot_device_function_stack_metadata)
   233946    1.188    0.000    6.892    0.000 resource_variable_ops.py:329(variable_accessed)
  2797684    2.333    0.000    6.890    0.000 {method 'throw' of 'generator' objects}
   349540    0.866    0.000    6.851    0.000 op_def_library.py:184(_MakeShape)
   116480    0.866    0.000    6.744    0.000 callbacks.py:571(on_predict_end)
  2213534    4.369    0.000    6.682    0.000 tensor_shape.py:866(__getitem__)
   412606    6.653    0.000    6.653    0.000 {method '_numpy_internal' of 'tensorflow.python.framework.ops.EagerTensor' objects}
  2797810    2.556    0.000    6.653    0.000 ops.py:4603(_control_dependencies_for_inputs)
   230936    1.642    0.000    6.613    0.000 Hanabi.py:215(<listcomp>)
   815971    3.310    0.000    6.610    0.000 distribution_strategy_context.py:79(_get_per_thread_mode)
   117021    0.581    0.000    6.590    0.000 resource_variable_ops.py:1924(__init__)
   349470    1.858    0.000    6.522    0.000 function_utils.py:89(get_func_name)
  3265204    4.311    0.000    6.502    0.000 ops.py:5387(get_controller)
  7464189    6.486    0.000    6.486    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
   305589    4.550    0.000    6.463    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_EncodeArg}
   117161    0.333    0.000    6.455    0.000 gen_resource_variable_ops.py:123(assign_variable_op)
  7345512    4.037    0.000    6.445    0.000 ops.py:4079(_name_stack)
  2797766    6.440    0.000    6.440    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
   116490    0.992    0.000    6.426    0.000 dataset_ops.py:2889(_graph_rewrites)
   116490    0.207    0.000    6.370    0.000 structure.py:329(to_batched_tensor_list)
   349615    4.202    0.000    6.365    0.000 ops.py:4037(get_all_collection_keys)
        1    0.000    0.000    6.359    6.359 Experiment.py:233(load_experiment)
  3500108    4.767    0.000    6.345    0.000 context.py:773(_mode)
   114682    0.705    0.000    6.336    0.000 fromnumeric.py:2551(amax)
  1865427    5.692    0.000    6.254    0.000 tensor_shape.py:1199(<listcomp>)
  6640234    4.886    0.000    6.234    0.000 config_lib.py:33(matches)
   466243    1.229    0.000    6.159    0.000 context.py:2016(device)
   349491    1.532    0.000    6.149    0.000 function.py:3245(validate_signature)
   699102    2.366    0.000    6.143    0.000 tf_logging.py:210(vlog)
   349619    2.069    0.000    6.140    0.000 lock_util.py:54(__init__)
   304358    2.489    0.000    6.117    0.000 def_function.py:91(_get_counter)
  2448441    3.555    0.000    6.104    0.000 control_flow_util.py:266(CheckInputFromValidContext)
  8948262    6.100    0.000    6.100    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
    96354    2.247    0.000    6.019    0.000 Experiment.py:66(<listcomp>)
  5596049    3.480    0.000    5.934    0.000 ops.py:5044(_colocation_stack)
  3497300    5.899    0.000    5.899    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
  5475900    5.869    0.000    5.869    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceOrComposite}
   582522    0.827    0.000    5.852    0.000 distribution_strategy_context.py:179(get_strategy)
  1282401    5.835    0.000    5.835    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
   117135    1.904    0.000    5.790    0.000 resource_variable_ops.py:341(__init__)
    87778    0.398    0.000    5.719    0.000 iostream.py:195(schedule)
   349551    1.175    0.000    5.669    0.000 auto_control_deps.py:178(__init__)
   115392    0.936    0.000    5.637    0.000 fromnumeric.py:73(_wrapreduction)
  6579225    3.654    0.000    5.609    0.000 pickle.py:436(put)
  2797690    5.567    0.000    5.567    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
  1630860    4.064    0.000    5.532    0.000 tracking.py:215(__init__)
   466374    0.887    0.000    5.523    0.000 ops.py:2431(_set_attr_with_buf)
   931996    3.523    0.000    5.492    0.000 tensor_util.py:186(GetFromNumpyDTypeDict)
   699492    0.587    0.000    5.472    0.000 nest.py:357(assert_same_structure)
   116480    0.631    0.000    5.414    0.000 callbacks.py:554(on_predict_begin)
  2798765    3.488    0.000    5.228    0.000 _collections_abc.py:676(items)
   230936    2.817    0.000    5.204    0.000 Hanabi.py:265(<listcomp>)
   699034    3.344    0.000    5.152    0.000 os.py:664(__getitem__)
   116937    1.106    0.000    5.103    0.000 base_layer.py:2714(__delattr__)
   653999    2.478    0.000    5.087    0.000 function.py:2008(captured_inputs)
   349486    1.111    0.000    4.995    0.000 conversion.py:242(cache_whitelisted)
  1631614    1.195    0.000    4.972    0.000 nest.py:104(_is_namedtuple)
  1048780    4.410    0.000    4.960    0.000 ops.py:3761(get_operations)
   233892    0.849    0.000    4.959    0.000 base_layer.py:2690(_obj_reference_counts)
 23269953    4.958    0.000    4.958    0.000 {method 'append' of 'list' objects}
    96354    1.577    0.000    4.934    0.000 Experiment.py:71(<listcomp>)
   351400    3.086    0.000    4.900    0.000 inspect.py:2452(__init__)
 23267990    4.888    0.000    4.888    0.000 context.py:1826(context_safe)
   699492    4.884    0.000    4.885    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructure}
 13174630    3.942    0.000    4.842    0.000 {built-in method builtins.setattr}
   582511    4.838    0.000    4.838    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
  2797311    3.311    0.000    4.831    0.000 control_flow_util.py:82(IsInWhileLoop)
   233345    1.624    0.000    4.823    0.000 tape.py:104(variable_accessed)
    87778    4.816    0.000    4.816    0.000 socket.py:357(send)
  7810125    4.816    0.000    4.816    0.000 {method 'encode' of 'str' objects}
   228920    0.296    0.000    4.795    0.000 <__array_function__ internals>:2(atleast_2d)
        1    0.660    0.660    4.765    4.765 _dill.py:268(load)
   349551    1.424    0.000    4.720    0.000 auto_control_deps.py:225(__enter__)
  5206786    4.686    0.000    4.686    0.000 {built-in method __new__ of type object at 0x9d12c0}
   116490    0.221    0.000    4.642    0.000 structure.py:351(<lambda>)
   116490    1.194    0.000    4.593    0.000 optimization_options.py:215(_graph_rewrites)
   815430    0.785    0.000    4.564    0.000 nest.py:245(<listcomp>)
   116490    0.824    0.000    4.494    0.000 structure.py:119(convert_legacy_structure)
   349574    3.989    0.000    4.425    0.000 function.py:229(_parse_func_attrs)
   116490    0.320    0.000    4.421    0.000 type_spec.py:498(_to_batched_tensor_list)
   232980    0.665    0.000    4.415    0.000 dataset_ops.py:2796(get_legacy_output_types)
  1282387    2.074    0.000    4.404    0.000 op_def_library.py:87(<listcomp>)
   466374    4.398    0.000    4.398    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetAttr}
  2097343    2.186    0.000    4.392    0.000 tensor_shape.py:1180(as_list)
  1748160    4.387    0.000    4.387    0.000 op_def_library.py:38(_Attr)
 15532158    4.384    0.000    4.384    0.000 enum.py:332(<genexpr>)
   349512    0.993    0.000    4.312    0.000 conversion.py:234(is_in_whitelist_cache)
   349811    3.353    0.000    4.292    0.000 inspect.py:2732(__init__)
   228920    1.480    0.000    4.177    0.000 shape_base.py:83(atleast_2d)
  1631881    3.804    0.000    4.130    0.000 functools.py:74(wraps)
        1    4.101    4.101    4.105    4.105 _dill.py:472(load)
  1282389    1.837    0.000    4.103    0.000 ops.py:6051(_get_graph_from_inputs)
  1048476    2.661    0.000    4.080    0.000 api.py:352(_is_known_loaded_type)
   349470    2.032    0.000    4.054    0.000 data_adapter.py:235(can_handle)
  2809912    2.241    0.000    4.050    0.000 threading.py:254(_is_owned)
    89550    0.160    0.000    4.035    0.000 callbacks.py:418(on_train_batch_begin)
   362061    3.915    0.000    4.029    0.000 threading.py:215(__init__)
  2778599    2.079    0.000    4.010    0.000 pickle.py:652(save_long)
   116510    0.483    0.000    4.000    0.000 distribute_lib.py:2863(__enter__)
   233071    3.996    0.000    3.996    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInputList}
   466243    2.240    0.000    3.960    0.000 context.py:827(device)
   349561    0.584    0.000    3.925    0.000 ops.py:1602(convert_to_tensor_or_composite)
   349506    0.807    0.000    3.913    0.000 function.py:1494(<listcomp>)
   466111    0.600    0.000    3.912    0.000 func_graph.py:1142(_get_composite_tensor_spec)
  2656366    3.301    0.000    3.912    0.000 _dill.py:386(__missing__)
  1282309    1.539    0.000    3.911    0.000 backprop.py:170(_must_record_gradient)
   466243    2.990    0.000    3.889    0.000 context.py:1738(__enter__)
  2796147    2.085    0.000    3.862    0.000 ag_ctx.py:29(_control_ctx)
   699052    1.647    0.000    3.839    0.000 ag_ctx.py:61(__exit__)
   601572    1.460    0.000    3.829    0.000 ops.py:1160(shape)
   116535    0.658    0.000    3.797    0.000 tensor_util.py:1036(maybe_set_static_shape)
   233020    0.904    0.000    3.786    0.000 variable_scope.py:2738(variable_creator_scope)
  1631614    3.778    0.000    3.778    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
  5246263    3.749    0.000    3.749    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
    89550    0.266    0.000    3.727    0.000 callbacks.py:293(_call_batch_begin_hook)
  6762992    3.708    0.000    3.708    0.000 ops.py:3071(_c_graph)
   116490    0.737    0.000    3.706    0.000 training.py:2626(_in_multi_worker_mode)
   349546    2.942    0.000    3.689    0.000 function.py:2728(__init__)
  1632608    1.123    0.000    3.684    0.000 dtypes.py:205(__ne__)
  1048626    1.968    0.000    3.665    0.000 function.py:3763(__del__)
  8392533    3.643    0.000    3.643    0.000 lock_util.py:110(_validate_group_id)
  2797810    3.615    0.000    3.615    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
    50360    0.264    0.000    3.554    0.000 iostream.py:382(write)
   349551    0.808    0.000    3.541    0.000 variable_scope.py:1433(get_variable_scope)
   232995    0.651    0.000    3.537    0.000 training.py:679(distribute_strategy)
  2448855    3.459    0.000    3.459    0.000 ops.py:3800(_get_operation_by_name_unsafe)
  3147202    2.929    0.000    3.454    0.000 tensor_shape.py:185(__init__)
   232990    0.620    0.000    3.439    0.000 data_adapter.py:275(<genexpr>)
  2797684    2.657    0.000    3.389    0.000 errors_impl.py:117(__str__)
   116544    0.784    0.000    3.371    0.000 monitoring.py:335(get_cell)
   349561    0.754    0.000    3.342    0.000 ops.py:1625(internal_convert_to_tensor_or_composite)
   466248    3.334    0.000    3.334    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
   349519    1.305    0.000    3.320    0.000 cache.py:43(has)
  1999307    2.266    0.000    3.295    0.000 tensor_conversion_registry.py:114(get)
  4080853    3.274    0.000    3.275    0.000 op_def_registry.py:34(get)
   699102    1.102    0.000    3.241    0.000 __init__.py:1359(log)
   698940    0.967    0.000    3.229    0.000 nest.py:104(assert_same_structure)
  3263750    2.244    0.000    3.219    0.000 ops.py:5117(_auto_cast_variable_read_dtype)
  1586745    3.202    0.000    3.202    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
   938104    1.649    0.000    3.160    0.000 tape.py:150(stop_recording)
  2915113    2.270    0.000    3.127    0.000 ops.py:402(graph)
  2656318    3.114    0.000    3.115    0.000 {method '__reduce_ex__' of 'object' objects}
  2709488    2.217    0.000    3.095    0.000 function.py:2840(input_signature)
  3962957    2.184    0.000    3.094    0.000 op_def_library.py:80(_IsListValue)
   304421    3.089    0.000    3.089    0.000 weakref.py:431(__contains__)
   232980    0.675    0.000    3.089    0.000 data_adapter.py:1549(_is_distributed_dataset)
   349615    3.081    0.000    3.081    0.000 {method 'astype' of 'numpy.ndarray' objects}
   349475    3.051    0.000    3.051    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}
 10493214    3.014    0.000    3.014    0.000 ops.py:397(dtype)
  1750054    2.376    0.000    3.012    0.000 context.py:239(pop)
   116490    0.413    0.000    3.009    0.000 data_adapter.py:681(can_handle)
   116494    0.270    0.000    3.004    0.000 nest.py:1403(list_to_tuple)
  5245629    2.477    0.000    3.003    0.000 ops.py:3472(<genexpr>)
  3617073    1.442    0.000    2.956    0.000 {method 'extend' of 'list' objects}
  2449920    1.205    0.000    2.937    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
   466243    2.313    0.000    2.916    0.000 context.py:1772(__exit__)
  1632452    2.776    0.000    2.908    0.000 ops.py:6439(__init__)
   352824    0.889    0.000    2.904    0.000 object_identity.py:192(add)
   815482    0.782    0.000    2.897    0.000 function.py:3246(<genexpr>)
  2656338    1.609    0.000    2.892    0.000 pickle.py:723(save_tuple)
  2797410    2.885    0.000    2.885    0.000 context.py:1204(op_callbacks)
   233460    0.423    0.000    2.875    0.000 data_adapter.py:1164(catch_stop_iteration)
  4193690    2.837    0.000    2.837    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceForData}
   116490    0.499    0.000    2.827    0.000 dataset_ops.py:3147(_to_tensor_list)
  5595022    2.812    0.000    2.812    0.000 lock_util.py:108(<genexpr>)
   232993    1.481    0.000    2.808    0.000 ops.py:1523(internal_convert_n_to_tensor)
   349486    1.377    0.000    2.773    0.000 tf_inspect.py:370(isfunction)
  1344869    2.754    0.000    2.754    0.000 {method 'format' of 'str' objects}
   214810    0.347    0.000    2.752    0.000 nest.py:1226(<listcomp>)
   116490    0.296    0.000    2.743    0.000 dataset_ops.py:3523(<listcomp>)
   349551    0.780    0.000    2.733    0.000 variable_scope.py:1420(get_variable_scope_store)
  9247236    2.711    0.000    2.711    0.000 {method 'pop' of 'dict' objects}
   116681    0.190    0.000    2.710    0.000 ops.py:5314(colocate_with)
   296154    1.035    0.000    2.680    0.000 <__array_function__ internals>:2(ndim)
  2810626    2.671    0.000    2.671    0.000 {built-in method builtins.max}
1747350/1397880    1.517    0.000    2.664    0.000 dataset_ops.py:2972(element_spec)
  5595620    2.652    0.000    2.652    0.000 traceable_stack.py:123(peek_traceable_objs)
   349479    0.387    0.000    2.639    0.000 op_def_library.py:695(<listcomp>)
 10784443    2.637    0.000    2.637    0.000 {method 'items' of 'dict' objects}
   349470    2.635    0.000    2.635    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionSetAttrValueProto}
   232980    0.361    0.000    2.625    0.000 dataset_ops.py:2762(get_legacy_output_classes)
   349492    1.274    0.000    2.615    0.000 cache.py:50(__getitem__)
  4091110    2.590    0.000    2.590    0.000 {method 'pop' of 'list' objects}
  2797311    1.861    0.000    2.568    0.000 registry.py:74(list)
  1301515    1.623    0.000    2.544    0.000 ops.py:1033(dtype)
7689577/7686941    1.995    0.000    2.536    0.000 {built-in method builtins.issubclass}
   116681    0.377    0.000    2.520    0.000 ops.py:5291(_colocate_with_for_gradient)
1630965/1048495    2.037    0.000    2.519    0.000 tensor_util.py:219(_GetDenseDimensions)
   700194    1.978    0.000    2.501    0.000 func_graph.py:740(internal_captures)
  3380403    1.699    0.000    2.490    0.000 ops.py:3015(_variable_creator_stack)
   608759    1.578    0.000    2.478    0.000 iterator_ops.py:766(_type_spec)
   232980    0.307    0.000    2.472    0.000 options.py:45(__ne__)
   116544    0.666    0.000    2.455    0.000 monitoring.py:136(get_cell)
   116733    0.259    0.000    2.452    0.000 context.py:2310(async_wait)
   116495    1.094    0.000    2.448    0.000 tensor_shape.py:1136(most_specific_compatible_shape)
   471381    1.034    0.000    2.444    0.000 object_identity.py:186(__contains__)
  2449761    2.434    0.000    2.434    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
   349473    0.969    0.000    2.428    0.000 structure.py:196(<listcomp>)
  1282387    2.416    0.000    2.416    0.000 op_def_library.py:737(<listcomp>)
  2795937    1.931    0.000    2.416    0.000 tensor_shape.py:843(__len__)
   349562    0.399    0.000    2.410    0.000 function.py:384(__del__)
   313150    1.271    0.000    2.406    0.000 nest.py:873(flatten_up_to)
   116490    1.131    0.000    2.396    0.000 iterator_ops.py:525(__init__)
   116490    0.190    0.000    2.396    0.000 dataset_ops.py:3005(<lambda>)
  2914177    1.505    0.000    2.352    0.000 ops.py:2245(_add_control_inputs)
  8974740    2.349    0.000    2.349    0.000 {method 'startswith' of 'str' objects}
  2588693    2.323    0.000    2.337    0.000 enum.py:331(__iter__)
 10014057    2.316    0.000    2.316    0.000 _dill.py:1515(is_dill)
   379070    1.274    0.000    2.309    0.000 tensor_spec.py:90(__eq__)
   116510    0.614    0.000    2.306    0.000 distribute_lib.py:2872(__exit__)
   349574    2.295    0.000    2.295    0.000 function.py:474(<listcomp>)
8858714/8858570    2.279    0.000    2.286    0.000 {method 'update' of 'set' objects}
  7375213    2.285    0.000    2.285    0.000 __init__.py:1530(getEffectiveLevel)
   698940    2.262    0.000    2.262    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructureForData}
   349486    1.131    0.000    2.257    0.000 config_lib.py:62(get_action)
   232980    0.331    0.000    2.254    0.000 dataset_ops.py:2779(get_legacy_output_shapes)
   349574    1.198    0.000    2.244    0.000 function.py:356(_inference_name)
        3    0.000    0.000    2.231    0.744 training.py:1918(save)
        3    0.000    0.000    2.230    0.743 save.py:47(save_model)
        3    0.009    0.003    2.230    0.743 save.py:40(save)
  4913619    2.216    0.000    2.216    0.000 tensor_spec.py:68(dtype)
   470797    0.245    0.000    2.213    0.000 _asarray.py:88(asanyarray)
  1748075    1.554    0.000    2.212    0.000 ops.py:3972(get_collection_ref)
        3    0.002    0.001    2.212    0.737 save.py:788(save)
   815815    1.462    0.000    2.211    0.000 context.py:1831(ensure_initialized)
   116490    0.499    0.000    2.206    0.000 tensor_spec.py:190(_unbatch)
  2097334    1.652    0.000    2.202    0.000 tensor_shape.py:1191(<listcomp>)
   932276    1.372    0.000    2.191    0.000 tensor_shape.py:252(is_compatible_with)
   116733    0.309    0.000    2.168    0.000 context.py:645(sync_executors)
  8511242    2.168    0.000    2.168    0.000 ops.py:2381(graph)
   699102    1.086    0.000    2.166    0.000 variable_scope.py:1202(set_use_resource)
   233345    0.580    0.000    2.165    0.000 distribution_strategy_context.py:215(get_strategy_and_replica_context)
   349532    0.998    0.000    2.164    0.000 math_ops.py:866(cast)
 10139964    2.147    0.000    2.147    0.000 tensor_shape.py:247(value)
  1630866    1.471    0.000    2.131    0.000 structure.py:283(<listcomp>)
  3272269    2.126    0.000    2.126    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
  2800637    1.531    0.000    2.067    0.000 traceable_stack.py:127(__len__)
   349492    0.598    0.000    2.065    0.000 tf_inspect.py:335(getmodule)
  2447666    2.064    0.000    2.064    0.000 op_def_library.py:64(_IsListParameter)
   230936    1.359    0.000    2.060    0.000 Hanabi.py:262(<listcomp>)
   116510    0.326    0.000    2.023    0.000 distribute_lib.py:791(scope)
   349562    0.327    0.000    2.012    0.000 context.py:2351(remove_function)
233002/232992    0.996    0.000    2.002    0.000 nest.py:126(_packed_nest_with_indices)
  2448441    1.493    0.000    1.998    0.000 control_flow_util.py:180(GetOutputContext)
   699052    0.865    0.000    1.986    0.000 ag_ctx.py:53(__enter__)
   116490    1.110    0.000    1.984    0.000 training.py:2453(_check_call_args)
   349551    0.629    0.000    1.952    0.000 ops.py:6351(get_collection)
   360202    0.819    0.000    1.952    0.000 object_identity.py:131(__getitem__)
 16587006    1.948    0.000    1.948    0.000 multiarray.py:145(concatenate)
   114466    0.739    0.000    1.941    0.000 Experiment.py:61(<listcomp>)
        3    0.005    0.002    1.941    0.647 save.py:1030(_build_meta_graph)
   349503    0.699    0.000    1.940    0.000 tensor_util.py:280(_check_not_tensor)
   817123    1.332    0.000    1.938    0.000 weakref.py:428(get)
  2797686    1.929    0.000    1.929    0.000 {built-in method sys.exc_info}
  5595932    1.919    0.000    1.919    0.000 ops.py:3043(_check_not_finalized)
  1281396    1.223    0.000    1.915    0.000 structure.py:296(<listcomp>)
  1631373    1.489    0.000    1.914    0.000 base.py:677(_lookup_dependency)
   349540    0.819    0.000    1.910    0.000 execute.py:201(make_shape)
  3263750    1.904    0.000    1.904    0.000 ops.py:5101(_distribution_strategy_stack)
  2886572    1.881    0.000    1.881    0.000 context.py:514(ensure_initialized)
   116733    1.859    0.000    1.859    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextSyncExecutors}
  7353769    1.855    0.000    1.859    0.000 object_identity.py:175(<genexpr>)
   829601    1.269    0.000    1.831    0.000 object_identity.py:183(_wrap_key)
  7694193    1.825    0.000    1.825    0.000 ops.py:2036(_get_control_flow_context)
  6779342    1.815    0.000    1.817    0.000 {method 'keys' of 'dict' objects}
   701143    0.995    0.000    1.802    0.000 training.py:328(<genexpr>)
  5014425    1.796    0.000    1.796    0.000 ops.py:796(_as_tf_output)
   816513    1.185    0.000    1.789    0.000 {method 'join' of 'str' objects}
   699034    1.090    0.000    1.787    0.000 os.py:742(encode)
   698991    0.797    0.000    1.785    0.000 ag_ctx.py:35(control_status_ctx)
  1982182    1.784    0.000    1.784    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
   116497    1.762    0.000    1.762    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
   349551    0.758    0.000    1.754    0.000 object_identity.py:223(__len__)
  1398622    1.538    0.000    1.744    0.000 inspect.py:159(isfunction)
  3265088    1.743    0.000    1.743    0.000 ops.py:4086(_name_stack)
  2798777    1.739    0.000    1.739    0.000 _collections_abc.py:698(__init__)
  1050557    0.585    0.000    1.733    0.000 _asarray.py:16(asarray)
  6880347    1.722    0.000    1.722    0.000 ops.py:392(op)
   116490    0.335    0.000    1.714    0.000 data_adapter.py:529(can_handle)
  2446810    1.257    0.000    1.706    0.000 inspect.py:81(ismethod)
   233192    1.071    0.000    1.706    0.000 ops.py:2979(_variable_creator_scope)
  3032359    1.703    0.000    1.703    0.000 {method 'lower' of 'str' objects}
   116510    0.301    0.000    1.697    0.000 distribute_lib.py:2892(_scope)
  1630860    1.685    0.000    1.685    0.000 {built-in method _weakref.proxy}
  2797511    1.684    0.000    1.684    0.000 lock_util.py:119(__init__)
  2350142    1.338    0.000    1.684    0.000 tensor_shape.py:819(rank)
  5247057    1.662    0.000    1.662    0.000 ops.py:2307(outputs)
   307102    0.493    0.000    1.658    0.000 function.py:2632(_is_ndarray)
  5911853    1.657    0.000    1.657    0.000 {method 'release' of '_thread.lock' objects}
   349610    1.622    0.000    1.656    0.000 weakref.py:354(__init__)
   349551    0.648    0.000    1.637    0.000 func_graph.py:1081(flatten)
   349615    1.312    0.000    1.636    0.000 ops.py:4040(<listcomp>)
   349500    0.720    0.000    1.634    0.000 options.py:51(__setattr__)
   349562    0.455    0.000    1.628    0.000 context.py:1154(remove_function)
    92612    0.144    0.000    1.627    0.000 Experiment.py:93(<lambda>)
   349687    1.625    0.000    1.625    0.000 {built-in method tensorflow.python._pywrap_tf_session.AddControlInput}
  3497329    1.597    0.000    1.597    0.000 {built-in method _thread.get_ident}
  3338379    1.590    0.000    1.590    0.000 {method 'split' of 'str' objects}
        1    0.001    0.001    1.580    1.580 save.py:137(load_model)
   466817    1.088    0.000    1.562    0.000 <frozen importlib._bootstrap>:997(_handle_fromlist)
   349733    0.713    0.000    1.562    0.000 tf_inspect.py:390(ismethod)
   932212    1.535    0.000    1.535    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  3378210    1.531    0.000    1.531    0.000 dataset_ops.py:216(_variant_tensor)
   608860    1.528    0.000    1.528    0.000 def_function.py:752(_get_tracing_count)
   296126    1.514    0.000    1.514    0.000 {method 'item' of 'numpy.generic' objects}
   699112    0.528    0.000    1.514    0.000 func_graph.py:1023(<genexpr>)
  4036241    1.510    0.000    1.510    0.000 ops.py:3354(building_function)
   114466    0.501    0.000    1.495    0.000 Hanabi.py:276(score)
   936469    1.487    0.000    1.487    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
  1413429    0.945    0.000    1.477    0.000 {method 'add' of 'set' objects}
   698998    0.800    0.000    1.471    0.000 cache.py:92(_get_key)
  1630860    1.468    0.000    1.468    0.000 tracking.py:186(__init__)
   349494    0.799    0.000    1.467    0.000 inspect.py:714(getmodule)
   117192    1.456    0.000    1.456    0.000 {method 'copy' of 'numpy.ndarray' objects}
  2682729    1.445    0.000    1.445    0.000 {method 'update' of 'dict' objects}
  1427257    1.059    0.000    1.441    0.000 object_identity.py:63(__hash__)
  1399385    1.439    0.000    1.439    0.000 ops.py:2801(name_from_scope_name)
  1282387    1.317    0.000    1.430    0.000 op_def_library.py:89(<listcomp>)
        1    0.000    0.000    1.429    1.429 load.py:93(load)
        1    0.000    0.000    1.418    1.418 load.py:606(load_internal)
  1282611    1.052    0.000    1.415    0.000 func_graph.py:1057(<genexpr>)
        1    0.000    0.000    1.413    1.413 load.py:176(__init__)
        1    0.000    0.000    1.413    1.413 load.py:112(__init__)
   699183    0.989    0.000    1.397    0.000 traceable_stack.py:131(copy)
   116510    0.659    0.000    1.396    0.000 distribute_lib.py:2853(__init__)
  7588122    1.386    0.000    1.386    0.000 {built-in method builtins.callable}
   349566    0.493    0.000    1.382    0.000 function.py:1581(<listcomp>)
   116490    0.347    0.000    1.369    0.000 ops.py:2263(_add_control_input)
  3961161    1.350    0.000    1.350    0.000 tensor_spec.py:63(shape)
   116490    0.181    0.000    1.349    0.000 data_adapter.py:117(__init__)
   815430    0.527    0.000    1.341    0.000 nest.py:241(<listcomp>)
   116490    0.658    0.000    1.336    0.000 callbacks.py:247(_add_default_callbacks)
   232980    0.192    0.000    1.334    0.000 callbacks.py:235(<genexpr>)
   421088    1.315    0.000    1.315    0.000 data_adapter.py:1184(steps)
   698940    1.245    0.000    1.308    0.000 tracking.py:154(resource_tracker_scope)
   350801    1.307    0.000    1.307    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
    81/57    0.001    0.000    1.303    0.023 def_function.py:583(wrapped_fn)
   466397    1.282    0.000    1.282    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
   349513    1.272    0.000    1.274    0.000 converter.py:153(__init__)
   349515    0.752    0.000    1.269    0.000 converter.py:174(__hash__)
   304436    0.431    0.000    1.262    0.000 tape.py:220(could_possibly_record)
  1048794    1.010    0.000    1.254    0.000 memory.py:24(dismantle_ordered_dict)
  1398743    1.210    0.000    1.247    0.000 traceable_stack.py:83(__init__)
   116490    0.290    0.000    1.226    0.000 data_adapter.py:448(can_handle)
   351580    0.961    0.000    1.224    0.000 enum.py:267(__call__)
   117452    0.372    0.000    1.223    0.000 context.py:2006(eager_mode)
  4429643    1.209    0.000    1.213    0.000 {method 'values' of 'dict' objects}
  2101113    1.198    0.000    1.198    0.000 {method 'replace' of 'str' objects}
  4081422    1.176    0.000    1.176    0.000 traceable_stack.py:121(<genexpr>)
   116490    0.597    0.000    1.143    0.000 callbacks.py:815(_implements_train_batch_hooks)
   349574    0.889    0.000    1.141    0.000 func_graph.py:735(external_captures)
  3263750    1.130    0.000    1.130    0.000 ops.py:3039(_variable_creator_stack)
     6268    0.036    0.000    1.124    0.000 Hanabi.py:367(save)
   116490    0.366    0.000    1.120    0.000 dataset_ops.py:565(_type_spec)
  4196242    1.115    0.000    1.115    0.000 tensor_shape.py:826(dims)
   349993    0.825    0.000    1.115    0.000 function.py:1959(name)
        1    0.001    0.001    1.114    1.114 load.py:318(_restore_checkpoint)
  3059361    1.112    0.000    1.112    0.000 function.py:2463(input_signature)
  2797810    1.100    0.000    1.101    0.000 ops.py:5061(<dictcomp>)
   304356    1.092    0.000    1.092    0.000 def_function.py:72(called_without_tracing)
  3263750    1.078    0.000    1.078    0.000 ops.py:5133(_auto_cast_variable_read_dtype)
   304430    0.956    0.000    1.067    0.000 function.py:1844(<listcomp>)
  3501617    1.050    0.000    1.050    0.000 context.py:1718(context_switches)
   117109    0.144    0.000    1.027    0.000 tensor_shape.py:1121(assert_is_compatible_with)
  1748705    1.026    0.000    1.026    0.000 func_graph.py:427(outer_graph)
   116494    0.162    0.000    1.018    0.000 nest.py:1417(sequence_fn)
1173/1101    0.005    0.000    1.013    0.001 def_function.py:1052(_get_concrete_function_garbage_collected)
        1    0.000    0.000    1.007    1.007 util.py:1213(restore)
   933859    1.005    0.000    1.005    0.000 {method 'decode' of 'bytes' objects}
   232990    0.137    0.000    1.000    0.000 data_adapter.py:550(<genexpr>)
   349562    0.995    0.000    0.995    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextRemoveFunction}
   251778    0.993    0.000    0.993    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
    38/20    0.001    0.000    0.987    0.049 def_function.py:663(_initialize)
   698991    0.433    0.000    0.985    0.000 api.py:153(is_autograph_artifact)
   349551    0.824    0.000    0.983    0.000 ops.py:3997(get_collection)
   228952    0.252    0.000    0.978    0.000 shape_base.py:220(_vhstack_dispatcher)
1167/1095    0.002    0.000    0.976    0.001 def_function.py:1091(get_concrete_function)
    38/20    0.000    0.000    0.973    0.049 function.py:2850(_get_concrete_function_internal_garbage_collected)
  2070761    0.969    0.000    0.969    0.000 context.py:749(_handle)
  2564774    0.968    0.000    0.968    0.000 op_def_library.py:235(_MaybeColocateWith)
   584030    0.403    0.000    0.960    0.000 layer_utils.py:43(has_weights)
 1134/270    0.003    0.000    0.956    0.004 save_impl.py:546(get_concrete_function)
   116508    0.316    0.000    0.953    0.000 tensor_util.py:804(constant_value)
    12439    0.039    0.000    0.948    0.000 <__array_function__ internals>:2(mean)
   116490    0.288    0.000    0.940    0.000 version_utils.py:114(disallow_legacy_graph)
   349551    0.283    0.000    0.938    0.000 object_identity.py:225(<listcomp>)
   349551    0.937    0.000    0.937    0.000 function.py:3061(<listcomp>)
   349492    0.632    0.000    0.936    0.000 inspect_utils.py:96(isconstructor)
   116490    0.338    0.000    0.932    0.000 dataset_ops.py:2907(_graph_rewrite_configs)
  294/258    0.002    0.000    0.929    0.004 save_impl.py:401(add_trace)
  1301575    0.921    0.000    0.921    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
  1631680    0.917    0.000    0.917    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
   931936    0.364    0.000    0.901    0.000 generic_utils.py:792(is_default)
   701211    0.713    0.000    0.890    0.000 inspect.py:2781(<genexpr>)
  2070855    0.888    0.000    0.888    0.000 context.py:813(device_name)
     6268    0.017    0.000    0.887    0.000 Hanabi.py:374(<listcomp>)
   116490    0.216    0.000    0.881    0.000 dataset_ops.py:2920(_autotune_settings)
   141774    0.512    0.000    0.878    0.000 Hanabi.py:111(save)
   469052    0.878    0.000    0.878    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
   349605    0.873    0.000    0.873    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
   118786    0.118    0.000    0.871    0.000 _collections_abc.py:664(__contains__)
    31340    0.048    0.000    0.870    0.000 Hanabi.py:245(save)
   626300    0.421    0.000    0.868    0.000 nest.py:954(<genexpr>)
    12439    0.176    0.000    0.868    0.000 fromnumeric.py:3231(mean)
   116500    0.378    0.000    0.863    0.000 data_adapter.py:535(_is_composite)
  1632577    0.862    0.000    0.862    0.000 ops.py:5035(_device_function_stack)
   116490    0.183    0.000    0.862    0.000 gen_dataset_ops.py:6628(<listcomp>)
   698940    0.617    0.000    0.854    0.000 dataset_ops.py:2738(get_structure)
   582450    0.618    0.000    0.845    0.000 dataset_ops.py:4108(element_spec)
   699830    0.843    0.000    0.844    0.000 object_identity.py:227(__iter__)
116912/116850    0.343    0.000    0.842    0.000 tracking.py:440(wrapped)
   699066    0.833    0.000    0.833    0.000 {method 'SetInParent' of 'google.protobuf.pyext._message.CMessage' objects}
   349470    0.438    0.000    0.833    0.000 dataset_ops.py:3366(<listcomp>)
   116490    0.227    0.000    0.826    0.000 gen_dataset_ops.py:6697(<listcomp>)
   349574    0.704    0.000    0.825    0.000 func_graph.py:745(deferred_external_captures)
  4077305    0.823    0.000    0.823    0.000 tensor_spec.py:37(<lambda>)
   116527    0.199    0.000    0.821    0.000 distribution_strategy_context.py:199(has_strategy)
117732/117458    0.315    0.000    0.817    0.000 data_structures.py:103(sticky_attribute_assignment)
  1281944    0.812    0.000    0.812    0.000 array_ops.py:1485(<genexpr>)
    31340    0.055    0.000    0.804    0.000 Hanabi.py:246(<listcomp>)
   116796    0.381    0.000    0.794    0.000 resource_variable_ops.py:317(_maybe_set_handle_data)
626312/626292    0.376    0.000    0.792    0.000 nest.py:750(assert_shallow_structure)
   349567    0.702    0.000    0.786    0.000 func_graph.py:491(variables)
   932486    0.783    0.000    0.783    0.000 context.py:823(_set_device)
   349551    0.661    0.000    0.774    0.000 func_graph.py:750(deferred_internal_captures)
   116490    0.139    0.000    0.770    0.000 gen_dataset_ops.py:895(<listcomp>)
    98675    0.260    0.000    0.756    0.000 Experiment.py:63(<listcomp>)
      594    0.003    0.000    0.754    0.001 save_impl.py:415(trace_with_training)
       29    0.000    0.000    0.754    0.026 functional_saver.py:297(restore)
       29    0.000    0.000    0.753    0.026 functional_saver.py:310(restore_fn)
       29    0.001    0.000    0.752    0.026 functional_saver.py:80(restore)
  2797311    0.751    0.000    0.751    0.000 control_flow_util.py:191(GetContainingWhileContext)
  1631608    0.751    0.000    0.751    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
  1427257    0.745    0.000    0.745    0.000 object_identity.py:35(__init__)
  1282282    0.743    0.000    0.743    0.000 ops.py:452(<listcomp>)
  2097044    0.742    0.000    0.742    0.000 tensor_shape.py:790(_v2_behavior)
  2798836    0.738    0.000    0.738    0.000 ops.py:3148(_get_control_flow_context)
   582450    0.529    0.000    0.735    0.000 dataset_ops.py:4058(element_spec)
  2797684    0.732    0.000    0.732    0.000 errors_impl.py:86(message)
  1631654    0.730    0.000    0.730    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
      633    0.001    0.000    0.729    0.001 save.py:141(list_functions)
   466565    0.630    0.000    0.728    0.000 device.py:45(is_device_spec)
   116490    0.195    0.000    0.727    0.000 gen_dataset_ops.py:890(<listcomp>)
   229074    0.392    0.000    0.727    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)
   582958    0.341    0.000    0.720    0.000 tensor_shape.py:838(ndims)
   114466    0.439    0.000    0.717    0.000 Hanabi.py:277(<listcomp>)
   582961    0.710    0.000    0.710    0.000 function.py:484(<genexpr>)
       18    0.000    0.000    0.705    0.039 base_layer.py:3017(_list_functions_for_serialization)
       18    0.000    0.000    0.705    0.039 base_serialization.py:76(list_functions_for_serialization)
  1631622    0.700    0.000    0.700    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
   699006    0.600    0.000    0.699    0.000 nest.py:81(_yield_value)
   116490    0.270    0.000    0.699    0.000 dataset_ops.py:3122(__init__)
  1631683    0.698    0.000    0.698    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
   233002    0.419    0.000    0.698    0.000 nest.py:53(_sequence_like)
   466243    0.697    0.000    0.697    0.000 context.py:1733(__init__)
   117181    0.695    0.000    0.696    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
   117851    0.230    0.000    0.694    0.000 ops.py:5744(executing_eagerly_outside_functions)
   698998    0.693    0.000    0.693    0.000 dtypes.py:103(as_numpy_dtype)
  1049115    0.542    0.000    0.693    0.000 tensor_shape.py:704(as_dimension)
    12439    0.216    0.000    0.692    0.000 _methods.py:134(_mean)
  1630900    0.682    0.000    0.682    0.000 tracking.py:199(__del__)
   349619    0.681    0.000    0.681    0.000 threading.py:74(RLock)
   116490    0.183    0.000    0.673    0.000 training.py:2772(_disallow_inside_tf_function)
   349574    0.461    0.000    0.671    0.000 function.py:475(<listcomp>)
        6    0.002    0.000    0.665    0.111 save.py:168(__init__)
   116490    0.367    0.000    0.652    0.000 callbacks.py:1038(__init__)
       72    0.001    0.000    0.652    0.009 util.py:264(restore_saveables)
   816230    0.528    0.000    0.652    0.000 function.py:422(<genexpr>)
   304436    0.648    0.000    0.648    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
       29    0.001    0.000    0.641    0.022 gen_io_ops.py:1463(restore_v2)
   116575    0.224    0.000    0.634    0.000 tensor_shape.py:1166(is_fully_defined)
   304436    0.630    0.000    0.630    0.000 function.py:271(__exit__)
       26    0.001    0.000    0.629    0.024 gen_io_ops.py:1538(restore_v2_eager_fallback)
   116490    0.194    0.000    0.627    0.000 data_adapter.py:617(can_handle)
        3    0.000    0.000    0.624    0.208 signature_serialization.py:71(find_function_to_export)
        3    0.000    0.000    0.624    0.208 training.py:2581(_list_functions_for_serialization)
   349548    0.619    0.000    0.619    0.000 func_graph.py:127(<listcomp>)
   349619    0.609    0.000    0.609    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
  4892630    0.607    0.000    0.607    0.000 options.py:59(<lambda>)
   234236    0.255    0.000    0.604    0.000 resource_variable_ops.py:246(_handle_graph)
   932141    0.601    0.000    0.601    0.000 func_graph.py:97(<genexpr>)
   597033    0.412    0.000    0.596    0.000 object_identity.py:128(_wrap_key)
   699168    0.575    0.000    0.593    0.000 function.py:2421(<dictcomp>)
   815503    0.585    0.000    0.585    0.000 distribution_strategy_context.py:337(_get_default_replica_mode)
   232980    0.222    0.000    0.579    0.000 dataset_ops.py:2775(<lambda>)
   116956    0.368    0.000    0.578    0.000 tensor_util.py:986(is_tensor)
  1521798    0.578    0.000    0.578    0.000 iterator_ops.py:885(_serialize)
  1281390    0.578    0.000    0.578    0.000 dataset_ops.py:348(options)
   698992    0.390    0.000    0.578    0.000 api.py:148(autograph_artifact)
  1048638    0.570    0.000    0.574    0.000 function.py:3760(__init__)
   116490    0.308    0.000    0.572    0.000 optimization_options.py:196(_autotune_settings)
    66/42    0.002    0.000    0.569    0.014 save_impl.py:511(wrapper)
      7/1    0.000    0.000    0.566    0.566 base.py:203(restore)
      7/1    0.000    0.000    0.566    0.566 base.py:892(_restore_from_checkpoint_position)
   608762    0.563    0.000    0.563    0.000 iterator_ops.py:878(__init__)
   232980    0.149    0.000    0.562    0.000 callbacks.py:239(<genexpr>)
   358562    0.340    0.000    0.556    0.000 object_identity.py:54(__eq__)
   116490    0.124    0.000    0.553    0.000 dataset_ops.py:3493(_inputs)
  132/123    0.001    0.000    0.552    0.004 layer_serialization.py:81(_get_serialized_attributes)
       15    0.000    0.000    0.551    0.037 layer_serialization.py:77(functions_to_serialize)
        3    0.000    0.000    0.549    0.183 model_serialization.py:45(_get_serialized_attributes_internal)
   116606    0.385    0.000    0.545    0.000 types.py:135(__get__)
   698970    0.303    0.000    0.545    0.000 data_adapter.py:252(<genexpr>)
117489/116523    0.338    0.000    0.542    0.000 abc.py:196(__subclasscheck__)
      159    0.003    0.000    0.541    0.003 def_function.py:1024(_list_all_concrete_functions_for_serialization)
  1397880    0.540    0.000    0.540    0.000 dataset_ops.py:3387(output_structure)
   304415    0.538    0.000    0.538    0.000 weakref.py:393(__getitem__)
   351796    0.538    0.000    0.538    0.000 {method 'isidentifier' of 'str' objects}
   699105    0.536    0.000    0.536    0.000 tf_logging.py:93(get_logger)
   349574    0.535    0.000    0.535    0.000 function.py:441(<listcomp>)
       10    0.001    0.000    0.534    0.053 function_base.py:2093(_get_ufunc_and_otypes)
   116903    0.236    0.000    0.534    0.000 execute.py:191(make_type)
  1631232    0.532    0.000    0.532    0.000 base.py:662(_deferred_dependencies)
   233345    0.530    0.000    0.530    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
   349530    0.392    0.000    0.529    0.000 function.py:2845(flat_input_signature)
   232980    0.163    0.000    0.528    0.000 callbacks.py:237(<genexpr>)
        6    0.000    0.000    0.524    0.087 func_graph.py:958(wrapper)
   724079    0.520    0.000    0.520    0.000 {built-in method _thread.allocate_lock}
   349551    0.419    0.000    0.509    0.000 func_graph.py:1093(<listcomp>)
   349574    0.509    0.000    0.509    0.000 c_api_util.py:86(__init__)
   349470    0.507    0.000    0.507    0.000 tracking.py:146(resources)
   116548    0.264    0.000    0.507    0.000 object_identity.py:137(__delitem__)
    84/66    0.004    0.000    0.504    0.008 base_layer.py:875(__call__)
      250    0.003    0.000    0.502    0.002 callbacks.py:397(on_epoch_end)
  1048976    0.494    0.000    0.494    0.000 context.py:818(device_spec)
   349552    0.408    0.000    0.493    0.000 object_identity.py:208(__len__)
        3    0.001    0.000    0.491    0.164 save.py:594(_fill_meta_graph_def)
   116535    0.254    0.000    0.490    0.000 ops.py:5777(inside_function)
  1155780    0.488    0.000    0.488    0.000 Hanabi.py:16(handSize)
    30/24    0.000    0.000    0.485    0.020 utils.py:153(wrap_with_training_arg)
   508694    0.248    0.000    0.482    0.000 pickle.py:641(save_none)
    30/24    0.000    0.000    0.482    0.020 tf_utils.py:42(smart_cond)
    30/24    0.000    0.000    0.482    0.020 smart_cond.py:27(smart_cond)
    30/24    0.000    0.000    0.482    0.020 utils.py:163(replace_training_and_call)
     12/3    0.000    0.000    0.479    0.160 layer_serialization.py:101(_get_serialized_attributes_internal)
   932751    0.478    0.000    0.478    0.000 op_def_library.py:46(_AttrValue)
   349574    0.478    0.000    0.478    0.000 function.py:423(<listcomp>)
     12/3    0.001    0.000    0.474    0.158 save_impl.py:134(wrap_layer_functions)
   931920    0.472    0.000    0.472    0.000 dataset_ops.py:2960(_inputs)
  1749728    0.472    0.000    0.472    0.000 {method 'values' of 'collections.OrderedDict' objects}
   349551    0.398    0.000    0.469    0.000 func_graph.py:919(<listcomp>)
       24    0.000    0.000    0.464    0.019 functional.py:367(call)
       24    0.002    0.000    0.464    0.019 functional.py:464(_run_internal_graph)
   349574    0.318    0.000    0.464    0.000 function.py:442(<listcomp>)
   232980    0.303    0.000    0.457    0.000 dataset_ops.py:2809(<lambda>)
   116490    0.407    0.000    0.457    0.000 distribute_lib.py:943(experimental_distribute_dataset)
       24    0.000    0.000    0.454    0.019 save_impl.py:495(add_function)
   232980    0.269    0.000    0.454    0.000 type_spec.py:501(<genexpr>)
   393983    0.453    0.000    0.453    0.000 trace.py:52(__init__)
117736/117732    0.404    0.000    0.451    0.000 data_structures.py:80(wrap_or_unwrap)
   352006    0.447    0.000    0.447    0.000 weakref.py:406(__setitem__)
        3    0.000    0.000    0.442    0.147 distribute_lib.py:1130(run)
        3    0.000    0.000    0.442    0.147 distribute_lib.py:2537(call_for_each_replica)
        3    0.000    0.000    0.441    0.147 distribute_lib.py:2941(_call_for_each_replica)
   349735    0.440    0.000    0.440    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
   116490    0.118    0.000    0.437    0.000 data_adapter.py:756(can_handle)
   116500    0.212    0.000    0.433    0.000 data_adapter.py:625(_is_list_of_scalars)
   114924    0.431    0.000    0.431    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.429    0.214 tmpp97_pviq.py:9(tf__train_function)
        2    0.000    0.000    0.428    0.214 training.py:785(step_function)
   699192    0.427    0.000    0.427    0.000 function.py:2447(fullargspec)
   116670    0.374    0.000    0.424    0.000 {method 'sort' of 'list' objects}
   349551    0.424    0.000    0.424    0.000 function.py:2479(vararg_name)
   699168    0.420    0.000    0.422    0.000 function.py:2427(<dictcomp>)
        2    0.000    0.000    0.422    0.211 training.py:788(run_step)
   116490    0.201    0.000    0.422    0.000 optimization_options.py:259(_graph_rewrite_configs)
   100220    0.213    0.000    0.422    0.000 threading.py:1104(is_alive)
   608872    0.418    0.000    0.418    0.000 context.py:135(config_proto_serialized)
        2    0.000    0.000    0.418    0.209 training.py:716(train_step)
    66/39    0.001    0.000    0.417    0.011 save_impl.py:541(__call__)
    36/27    0.001    0.000    0.415    0.015 save_impl.py:567(call_and_return_conditional_losses)
   349507    0.360    0.000    0.414    0.000 inspect.py:64(ismodule)
   343398    0.414    0.000    0.414    0.000 Hanabi.py:279(availableActions)
   214810    0.195    0.000    0.413    0.000 nest.py:1232(<listcomp>)
   116490    0.232    0.000    0.413    0.000 callbacks.py:827(_implements_predict_batch_hooks)
   116490    0.226    0.000    0.409    0.000 dataset_ops.py:3487(<listcomp>)
      250    0.001    0.000    0.406    0.002 callbacks.py:971(on_epoch_end)
   116502    0.405    0.000    0.405    0.000 {built-in method math.ceil}
      250    0.004    0.000    0.405    0.002 callbacks.py:1019(_finalize_progbar)
   349510    0.403    0.000    0.404    0.000 weakref.py:356(remove)
   349811    0.403    0.000    0.403    0.000 {method 'values' of 'mappingproxy' objects}
   116490    0.276    0.000    0.392    0.000 data_adapter.py:1239(_infer_steps)
   116544    0.213    0.000    0.391    0.000 monitoring.py:303(set)
    50360    0.051    0.000    0.390    0.000 iostream.py:320(_schedule_flush)
   349503    0.315    0.000    0.389    0.000 tensor_util.py:281(<listcomp>)
   349544    0.340    0.000    0.388    0.000 context.py:1841(global_seed)
   233071    0.286    0.000    0.387    0.000 ops.py:1794(<listcomp>)
   116506    0.248    0.000    0.384    0.000 tensor_shape.py:215(__eq__)
   463996    0.374    0.000    0.375    0.000 {built-in method builtins.sum}
   349574    0.296    0.000    0.366    0.000 function.py:443(<listcomp>)
   141774    0.366    0.000    0.366    0.000 <string>:1(__init__)
   116490    0.191    0.000    0.365    0.000 callbacks.py:822(_implements_test_batch_hooks)
   304358    0.365    0.000    0.365    0.000 data_adapter.py:1232(should_sync)
   304436    0.364    0.000    0.364    0.000 context.py:1056(function_call_options)
  1048907    0.360    0.000    0.361    0.000 ops.py:1922(<listcomp>)
   232980    0.209    0.000    0.358    0.000 optimization_options.py:189(_autotune_buffers)
   232980    0.257    0.000    0.357    0.000 tensor_spec.py:116(_to_legacy_output_classes)
   116490    0.193    0.000    0.351    0.000 iterator_ops.py:71(_device_stack_is_empty)
   468795    0.350    0.000    0.350    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
   349551    0.348    0.000    0.348    0.000 variable_scope.py:1166(use_resource)
   232980    0.246    0.000    0.348    0.000 dataset_ops.py:2792(<lambda>)
   349500    0.277    0.000    0.348    0.000 options.py:80(set_fn)
   699737    0.347    0.000    0.347    0.000 function.py:763(forward)
   304436    0.340    0.000    0.340    0.000 function.py:265(__init__)
   296154    0.338    0.000    0.338    0.000 fromnumeric.py:3037(ndim)
   700198    0.337    0.000    0.337    0.000 function.py:501(name)
   608759    0.337    0.000    0.337    0.000 iterator_ops.py:820(element_spec)
        2    0.000    0.000    0.331    0.166 training.py:2696(_minimize)
   233345    0.329    0.000    0.329    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
   120283    0.163    0.000    0.329    0.000 object_identity.py:134(__setitem__)
   349470    0.322    0.000    0.322    0.000 tracking.py:143(__init__)
   349496    0.321    0.000    0.321    0.000 api.py:217(convert)
    15/12    0.000    0.000    0.317    0.026 utils.py:169(<lambda>)
   349470    0.261    0.000    0.316    0.000 base.py:1192(isspmatrix)
   349492    0.255    0.000    0.312    0.000 inspect.py:277(isbuiltin)
   349573    0.307    0.000    0.307    0.000 converter.py:170(as_tuple)
   349529    0.248    0.000    0.304    0.000 inspect.py:73(isclass)
   349557    0.295    0.000    0.295    0.000 ag_ctx.py:49(__init__)
   349568    0.294    0.000    0.294    0.000 function.py:381(__init__)
   699585    0.293    0.000    0.293    0.000 function.py:1974(structured_input_signature)
   232993    0.226    0.000    0.292    0.000 op_def_library.py:447(<listcomp>)
   179100    0.241    0.000    0.291    0.000 callbacks.py:659(on_train_batch_begin)
   116500    0.286    0.000    0.286    0.000 callbacks.py:607(__init__)
   116490    0.261    0.000    0.284    0.000 data_adapter.py:884(can_handle)
   468795    0.283    0.000    0.283    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
   349557    0.283    0.000    0.283    0.000 ops.py:3112(seed)
   466206    0.281    0.000    0.281    0.000 tensor_spec.py:73(name)
       36    0.000    0.000    0.280    0.008 utils.py:66(return_outputs_and_add_losses)
   116490    0.211    0.000    0.276    0.000 callbacks.py:269(set_params)
   349551    0.275    0.000    0.275    0.000 function.py:3777(__init__)
   304382    0.275    0.000    0.275    0.000 iterator_ops.py:895(_to_components)
      250    0.002    0.000    0.274    0.001 training.py:1617(reset_metrics)
    65/59    0.001    0.000    0.273    0.005 base.py:917(_single_restoration_from_checkpoint_position)
   349470    0.272    0.000    0.272    0.000 dataset_ops.py:4023(_should_unpack_args)
    18152    0.031    0.000    0.271    0.000 ops.py:1173(get_shape)
  111/105    0.000    0.000    0.266    0.003 base.py:213(bind_object)
   700194    0.266    0.000    0.266    0.000 func_graph.py:743(<listcomp>)
        6    0.000    0.000    0.265    0.044 optimizer_v2.py:1185(_create_or_restore_slot_variable)
       60    0.000    0.000    0.264    0.004 core.py:1192(call)
       60    0.001    0.000    0.264    0.004 core.py:30(dense)
   351580    0.263    0.000    0.263    0.000 enum.py:517(__new__)
   393983    0.258    0.000    0.258    0.000 trace.py:123(__exit__)
    80452    0.105    0.000    0.258    0.000 Hanabi.py:200(save)
   116541    0.220    0.000    0.256    0.000 op_def_library.py:148(_MakeInt)
        3    0.000    0.000    0.256    0.085 functional_saver.py:172(to_proto)
   116490    0.150    0.000    0.254    0.000 optimization_options.py:55(_graph_rewrites)
   233992    0.144    0.000    0.252    0.000 base_layer.py:2697(_maybe_create_attribute)
   351320    0.251    0.000    0.251    0.000 object_identity.py:38(unwrapped)
   116533    0.215    0.000    0.251    0.000 execute.py:166(make_int)
   349551    0.248    0.000    0.248    0.000 function.py:2836(function_spec)
   349601    0.195    0.000    0.247    0.000 tensor_shape.py:1169(<genexpr>)
   349500    0.165    0.000    0.242    0.000 data_adapter.py:247(_is_tensor)
   701499    0.240    0.000    0.240    0.000 function.py:1964(graph)
   653999    0.238    0.000    0.238    0.000 function.py:2014(<listcomp>)
   349792    0.237    0.000    0.237    0.000 tf2.py:42(enabled)
   304430    0.236    0.000    0.236    0.000 trace.py:89(set_metadata)
   349470    0.235    0.000    0.235    0.000 def_function.py:423(functions_run_eagerly)
   702800    0.234    0.000    0.234    0.000 inspect.py:2502(name)
        2    0.000    0.000    0.233    0.116 pyplot.py:720(savefig)
        2    0.231    0.115    0.231    0.115 py_checkpoint_reader.py:84(NewCheckpointReader)
      250    0.002    0.000    0.231    0.001 metrics.py:241(reset_states)
   350637    0.228    0.000    0.228    0.000 function.py:3780(release)
   115392    0.227    0.000    0.227    0.000 fromnumeric.py:74(<dictcomp>)
       78    0.005    0.000    0.226    0.003 functional_ops.py:1112(partitioned_call)
    12442    0.062    0.000    0.225    0.000 threading.py:498(__init__)
   349619    0.225    0.000    0.225    0.000 ops.py:4981(switch_to_thread_local)
   698940    0.224    0.000    0.224    0.000 dataset_ops.py:3409(function)
       30    0.000    0.000    0.224    0.007 save_impl.py:585(call)
   304358    0.223    0.000    0.223    0.000 data_adapter.py:1212(step_increment)
    89550    0.187    0.000    0.223    0.000 callbacks.py:675(on_train_batch_end)
   234971    0.221    0.000    0.221    0.000 resource_variable_ops.py:498(dtype)
      598    0.004    0.000    0.218    0.000 func_graph.py:644(_capture_helper)
   358562    0.165    0.000    0.216    0.000 object_identity.py:42(_assert_type)
   116480    0.213    0.000    0.214    0.000 training.py:1420(make_predict_function)
   232980    0.213    0.000    0.213    0.000 data_adapter.py:1147(_truncate_execution_to_epoch)
   351184    0.210    0.000    0.210    0.000 distribute_lib.py:771(extended)
        2    0.000    0.000    0.210    0.105 optimizer_v2.py:473(apply_gradients)
   698940    0.209    0.000    0.209    0.000 dataset_ops.py:2991(element_spec)
        1    0.000    0.000    0.209    0.209 py_checkpoint_reader.py:66(get_tensor)
        1    0.209    0.209    0.209    0.209 {built-in method tensorflow.python._pywrap_checkpoint_reader.CheckpointReader_GetTensor}
      250    0.010    0.000    0.209    0.001 backend.py:3565(batch_set_value)
      462    0.004    0.000    0.208    0.000 func_graph.py:1123(_create_substitute_placeholder)
       11    0.009    0.001    0.207    0.019 Experiment.py:154(create_episode)
   582450    0.202    0.000    0.202    0.000 dataset_ops.py:3605(element_spec)
   134898    0.201    0.000    0.201    0.000 ops.py:1217(graph)
   699102    0.199    0.000    0.199    0.000 function.py:2475(arg_names)
   214808    0.199    0.000    0.199    0.000 callbacks.py:476(on_predict_batch_end)
       11    0.000    0.000    0.198    0.018 Experiment.py:159(<listcomp>)
      220    0.001    0.000    0.198    0.001 Hanabi.py:289(__init__)
    376/4    0.001    0.000    0.196    0.049 artist.py:30(draw_wrapper)
        4    0.000    0.000    0.195    0.049 figure.py:1688(draw)
   304436    0.194    0.000    0.194    0.000 context.py:127(executor_type)
        6    0.000    0.000    0.193    0.032 functional_saver.py:202(save)
      8/4    0.000    0.000    0.192    0.048 image.py:119(_draw_list_compositing_images)
        4    0.000    0.000    0.192    0.048 _base.py:2555(draw)
      154    0.000    0.000    0.191    0.001 resource_variable_ops.py:1908(_dense_var_to_tensor)
     2127    0.019    0.000    0.191    0.000 Experiment.py:39(availableActions)
      154    0.001    0.000    0.190    0.001 resource_variable_ops.py:1317(_dense_var_to_tensor)
   349568    0.182    0.000    0.190    0.000 function.py:3784(__del__)
        3    0.000    0.000    0.186    0.062 util.py:1152(save)
   116490    0.134    0.000    0.186    0.000 dataset_ops.py:3489(<listcomp>)
      154    0.001    0.000    0.185    0.001 resource_variable_ops.py:550(value)
        3    0.000    0.000    0.185    0.062 util.py:1117(_save_cached_when_graph_building)
        1    0.003    0.003    0.184    0.184 function_deserialization.py:278(load_function_def_library)
   116662    0.184    0.000    0.184    0.000 device_spec.py:272(device_type)
      220    0.010    0.000    0.183    0.001 Hanabi.py:129(__init__)
        4    0.000    0.000    0.182    0.045 distribute_lib.py:2683(merge_call)
        6    0.000    0.000    0.182    0.030 functional_saver.py:252(save_fn)
        4    0.000    0.000    0.182    0.045 distribute_lib.py:2717(_merge_call)
        2    0.000    0.000    0.180    0.090 optimizer_v2.py:588(_distributed_apply)
   116544    0.178    0.000    0.178    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
   349615    0.177    0.000    0.177    0.000 ops.py:3117(seed)
    89800    0.169    0.000    0.177    0.000 callbacks.py:985(_maybe_init_progbar)
   100220    0.090    0.000    0.176    0.000 threading.py:1062(_wait_for_tstate_lock)
   923744    0.176    0.000    0.176    0.000 Hanabi.py:220(<listcomp>)
       12    0.000    0.000    0.173    0.014 distribute_lib.py:2233(update)
       12    0.000    0.000    0.171    0.014 distribute_lib.py:2952(_update)
       12    0.000    0.000    0.171    0.014 distribute_lib.py:2957(_update_non_slot)
   214808    0.171    0.000    0.171    0.000 callbacks.py:464(on_predict_batch_begin)
        8    0.000    0.000    0.171    0.021 axis.py:1219(draw)
       33    0.009    0.000    0.171    0.005 tracking.py:103(_list_functions_for_serialization)
   465960    0.170    0.000    0.170    0.000 dataset_ops.py:2949(_inputs)
       12    0.000    0.000    0.167    0.014 optimizer_v2.py:591(apply_grad_to_update_var)
       12    0.001    0.000    0.167    0.014 rmsprop.py:175(_resource_apply_dense)
   349566    0.166    0.000    0.166    0.000 function.py:2471(is_pure)
    15/12    0.000    0.000    0.164    0.014 utils.py:170(<lambda>)
        6    0.000    0.000    0.164    0.027 function.py:3718(bound_method_wrapper)
   349620    0.163    0.000    0.163    0.000 function.py:2451(is_method)
   349470    0.162    0.000    0.162    0.000 dataset_ops.py:4139(element_spec)
   116606    0.161    0.000    0.161    0.000 enum.py:599(value)
    50360    0.071    0.000    0.160    0.000 iostream.py:307(_is_master_process)
    98328    0.121    0.000    0.159    0.000 training.py:1609(<lambda>)
   234078    0.159    0.000    0.159    0.000 resource_variable_ops.py:588(trainable)
   116490    0.099    0.000    0.154    0.000 data_adapter.py:1474(pack_x_y_sample_weight)
   232980    0.154    0.000    0.154    0.000 tensor_spec.py:110(_to_legacy_output_types)
        2    0.000    0.000    0.154    0.077 loader_impl.py:72(parse_saved_model)
     6268    0.015    0.000    0.154    0.000 Hanabi.py:361(count_discarded)
        2    0.000    0.000    0.153    0.077 figure.py:2063(savefig)
        2    0.000    0.000    0.153    0.077 backend_bases.py:2001(print_figure)
    11000    0.059    0.000    0.153    0.000 Hanabi.py:90(__init__)
   349501    0.153    0.000    0.153    0.000 numeric.py:2283(_array_equal_dispatcher)
   116490    0.151    0.000    0.151    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.150    0.075 backend_pdf.py:2532(print_pdf)
        2    0.147    0.073    0.149    0.074 file_io.py:104(read)
   349811    0.146    0.000    0.146    0.000 inspect.py:2817(parameters)
   349569    0.144    0.000    0.144    0.000 function.py:1586(<genexpr>)
   234387    0.142    0.000    0.142    0.000 resource_variable_ops.py:545(handle)
       23    0.003    0.000    0.142    0.006 function_def_to_graph.py:33(function_def_to_graph)
     2127    0.032    0.000    0.141    0.000 Hanabi.py:311(move)
   349811    0.140    0.000    0.140    0.000 inspect.py:2821(return_annotation)
   351400    0.139    0.000    0.139    0.000 inspect.py:2514(kind)
   233968    0.139    0.000    0.139    0.000 object_identity.py:125(__init__)
    90113    0.138    0.000    0.138    0.000 {built-in method time.time}
   349530    0.138    0.000    0.138    0.000 function.py:2467(flat_input_signature)
   349574    0.137    0.000    0.137    0.000 function.py:445(<listcomp>)
     6268    0.032    0.000    0.136    0.000 Hanabi.py:362(<dictcomp>)
       70    0.001    0.000    0.135    0.002 gen_math_ops.py:5591(mat_mul)
   349470    0.134    0.000    0.134    0.000 dataset_ops.py:3544(element_spec)
   116544    0.133    0.000    0.133    0.000 monitoring.py:295(__init__)
   393983    0.132    0.000    0.132    0.000 trace.py:85(__enter__)
   349470    0.131    0.000    0.131    0.000 dataset_ops.py:3018(element_spec)
   349551    0.130    0.000    0.131    0.000 func_graph.py:1016(<listcomp>)
    10598    0.019    0.000    0.130    0.000 Hanabi.py:191(save)
   117302    0.090    0.000    0.130    0.000 ops.py:535(get_shape)
        6    0.000    0.000    0.129    0.022 functional_saver.py:57(save)
   349574    0.128    0.000    0.128    0.000 func_graph.py:738(<listcomp>)
   116490    0.080    0.000    0.125    0.000 optimization_options.py:60(_graph_rewrite_configs)
   351400    0.124    0.000    0.124    0.000 inspect.py:2510(annotation)
        6    0.000    0.000    0.123    0.020 gen_io_ops.py:1694(save_v2)
   116490    0.098    0.000    0.122    0.000 dataset_ops.py:3150(<lambda>)
   252005    0.121    0.000    0.121    0.000 ops.py:167(__init__)
        2    0.000    0.000    0.120    0.060 backprop.py:983(gradient)
        2    0.000    0.000    0.119    0.060 imperative_grad.py:33(imperative_grad)
        2    0.001    0.000    0.119    0.060 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeGradient}
   304436    0.118    0.000    0.118    0.000 function.py:268(__enter__)
   232980    0.117    0.000    0.117    0.000 dataset_ops.py:4368(options)
       28    0.000    0.000    0.117    0.004 backprop.py:132(_gradient_function)
   116490    0.116    0.000    0.116    0.000 data_adapter.py:413(get_size)
   296154    0.115    0.000    0.115    0.000 fromnumeric.py:3033(_ndim_dispatcher)
        1    0.000    0.000    0.114    0.114 load.py:210(_load_all)
       60    0.001    0.000    0.111    0.002 nn_ops.py:3307(bias_add)
   116508    0.090    0.000    0.111    0.000 tensor_shape.py:97(dimension_value)
       23    0.000    0.000    0.110    0.005 importer.py:408(import_graph_def_for_function)
        3    0.000    0.000    0.109    0.036 functional_saver.py:193(_traced_restore)
       23    0.001    0.000    0.109    0.005 importer.py:415(_import_graph_def_internal)
        3    0.001    0.000    0.108    0.036 save.py:703(_serialize_object_graph)
      108    0.001    0.000    0.107    0.001 math_ops.py:1122(binary_op_wrapper)
   349470    0.107    0.000    0.107    0.000 dataset_ops.py:3496(element_spec)
        3    0.001    0.000    0.106    0.035 save.py:276(map_resources)
       95    0.001    0.000    0.104    0.001 saveable_object_util.py:119(restore)
   232980    0.102    0.000    0.102    0.000 tensor_spec.py:113(_to_legacy_output_shapes)
       57    0.000    0.000    0.099    0.002 resource_variable_ops.py:636(_map_resources)
   233001    0.099    0.000    0.099    0.000 tensor_spec.py:153(<lambda>)
       73    0.002    0.000    0.098    0.001 resource_variable_ops.py:1821(__init__)
       65    0.000    0.000    0.097    0.001 base.py:382(restore_ops)
   252005    0.097    0.000    0.097    0.000 ops.py:170(__enter__)
       16    0.001    0.000    0.096    0.006 axis.py:1098(_update_ticks)
   116490    0.096    0.000    0.096    0.000 training_utils.py:643(handle_partial_sample_weights)
       57    0.001    0.000    0.094    0.002 resource_variable_ops.py:2133(copy_to_graph_uninitialized)
   116511    0.093    0.000    0.093    0.000 backend_config.py:67(floatx)
       78    0.001    0.000    0.092    0.001 functional_ops.py:1175(<listcomp>)
       86    0.001    0.000    0.091    0.001 deprecation.py:473(new_func)
        3    0.000    0.000    0.090    0.030 gen_io_ops.py:1743(save_v2_eager_fallback)
    50364    0.089    0.000    0.089    0.000 {built-in method posix.getpid}
     2086    0.025    0.000    0.089    0.000 Experiment.py:52(<listcomp>)
    87778    0.089    0.000    0.089    0.000 iostream.py:93(_event_pipe)
       23    0.002    0.000    0.089    0.004 importer.py:237(_ProcessNewOps)
   252005    0.085    0.000    0.085    0.000 ops.py:173(__exit__)
   349567    0.084    0.000    0.084    0.000 func_graph.py:493(<listcomp>)
   233321    0.081    0.000    0.081    0.000 distribute_lib.py:2973(value_container)
        2    0.000    0.000    0.079    0.040 backend_bases.py:1932(draw_idle)
        2    0.000    0.000    0.079    0.040 backend_agg.py:384(draw)
       68    0.002    0.000    0.078    0.001 axis.py:56(__init__)
   349574    0.077    0.000    0.077    0.000 func_graph.py:748(<listcomp>)
   116730    0.076    0.000    0.076    0.000 data_adapter.py:425(should_recreate_iterator)
   116480    0.075    0.000    0.075    0.000 training.py:1604(<lambda>)
   116490    0.075    0.000    0.075    0.000 data_adapter.py:1272(_validate_data_handler)
   116490    0.073    0.000    0.073    0.000 data_adapter.py:1034(broadcast_sample_weight_modes)
    18152    0.045    0.000    0.073    0.000 tensor_shape.py:1004(assert_has_rank)
       78    0.000    0.000    0.073    0.001 ops.py:3360(create_op)
      250    0.003    0.000    0.072    0.000 callbacks.py:377(on_epoch_begin)
      240    0.002    0.000    0.070    0.000 save.py:725(_write_object_proto)
   116500    0.070    0.000    0.070    0.000 callbacks.py:619(set_model)
        3    0.000    0.000    0.070    0.023 save_impl.py:202(default_save_signature)
    12439    0.067    0.000    0.070    0.000 _methods.py:50(_count_reduce_items)
   116527    0.068    0.000    0.068    0.000 distribution_strategy_context.py:312(_get_default_strategy)
   116490    0.068    0.000    0.068    0.000 dataset_ops.py:3541(_inputs)
   349551    0.066    0.000    0.066    0.000 func_graph.py:753(<listcomp>)
   230936    0.065    0.000    0.065    0.000 Hanabi.py:216(<listcomp>)
   116490    0.065    0.000    0.065    0.000 callbacks.py:616(set_params)
        6    0.001    0.000    0.065    0.011 graph_view.py:336(_serialize_gathered_objects)
     2086    0.031    0.000    0.063    0.000 Experiment.py:47(<listcomp>)
   116730    0.062    0.000    0.062    0.000 data_adapter.py:227(on_epoch_end)
   114682    0.062    0.000    0.062    0.000 fromnumeric.py:2546(_amax_dispatcher)
       95    0.001    0.000    0.062    0.001 resource_variable_ops.py:307(shape_safe_assign_variable_handle)
15714/8421    0.034    0.000    0.062    0.000 data_structures.py:756(__getattribute__)
    10074    0.006    0.000    0.062    0.000 __init__.py:340(set_verbosity)
     2014    0.008    0.000    0.061    0.000 <__array_function__ internals>:2(argmax)
       54    0.000    0.000    0.060    0.001 gen_math_ops.py:6143(mul)
        1    0.000    0.000    0.058    0.058 load.py:139(_load_all)
       50    0.000    0.000    0.057    0.001 math_ops.py:463(multiply)
   116490    0.057    0.000    0.057    0.000 distribute_lib.py:2993(_in_multi_worker_mode)
        7    0.001    0.000    0.056    0.008 graph_view.py:412(objects_ids_and_slot_variables)
   228920    0.056    0.000    0.056    0.000 shape_base.py:79(_atleast_2d_dispatcher)
    10074    0.013    0.000    0.055    0.000 _flagvalues.py:500(__setattr__)
      250    0.003    0.000    0.055    0.000 callbacks.py:1045(on_epoch_end)
       46    0.000    0.000    0.055    0.001 math_ops.py:1450(_mul_dispatch)
        3    0.000    0.000    0.055    0.018 functional_saver.py:184(_traced_save)
       13    0.004    0.000    0.053    0.004 graph_view.py:89(_serialize_slot_variables)
      301    0.003    0.000    0.053    0.000 {built-in method builtins.print}
   116490    0.053    0.000    0.053    0.000 data_adapter.py:410(get_dataset)
        6    0.000    0.000    0.053    0.009 conversion.py:109(convert)
        6    0.000    0.000    0.053    0.009 transpiler.py:384(transform_function)
       13    0.053    0.004    0.053    0.004 {built-in method io.open}
        6    0.000    0.000    0.053    0.009 transpiler.py:362(_transformed_factory)
     5816    0.007    0.000    0.052    0.000 Hanabi.py:183(save)
        2    0.000    0.000    0.052    0.026 math_grad.py:249(_MeanGrad)
   116490    0.051    0.000    0.051    0.000 data_adapter.py:1217(inferred_steps)
   116490    0.051    0.000    0.051    0.000 dataset_ops.py:4143(_transformation_name)
   116686    0.050    0.000    0.050    0.000 ops.py:3003(<lambda>)
      250    0.002    0.000    0.050    0.000 callbacks.py:955(on_epoch_begin)
   116490    0.050    0.000    0.050    0.000 distribute_lib.py:2904(_experimental_distribute_dataset)
   179100    0.050    0.000    0.050    0.000 callbacks.py:622(on_batch_begin)
     3291    0.014    0.000    0.049    0.000 base_layer.py:2847(_flatten_layers)
      114    0.003    0.000    0.049    0.000 resource_variable_ops.py:146(_variable_handle_from_shape_and_dtype)
      614    0.002    0.000    0.049    0.000 base_layer.py:1347(weights)
        6    0.000    0.000    0.048    0.008 math_grad.py:147(_SumGrad)
       32    0.000    0.000    0.048    0.001 ticker.py:2201(__call__)
      871    0.047    0.000    0.047    0.000 {built-in method builtins.dir}
       36    0.000    0.000    0.047    0.001 base_layer.py:3009(_tracking_metadata)
       32    0.000    0.000    0.047    0.001 ticker.py:2205(tick_values)
       36    0.000    0.000    0.047    0.001 base_serialization.py:45(tracking_metadata)
        3    0.000    0.000    0.046    0.015 graph_view.py:389(frozen_saveable_objects)
     2014    0.006    0.000    0.046    0.000 fromnumeric.py:1112(argmax)
       32    0.002    0.000    0.046    0.001 ticker.py:2141(_raw_ticks)
        2    0.000    0.000    0.046    0.023 pyplot.py:2759(plot)
        6    0.000    0.000    0.045    0.008 gen_io_ops.py:466(merge_v2_checkpoints)
     3720    0.007    0.000    0.045    0.000 save.py:108(list_dependencies)
      271    0.005    0.000    0.045    0.000 training.py:589(metrics)
   116480    0.044    0.000    0.044    0.000 callbacks.py:804(on_predict_end)
       23    0.001    0.000    0.044    0.002 ops.py:3603(_add_new_tf_operations)
        2    0.000    0.000    0.043    0.022 compile_utils.py:164(__call__)
        4    0.000    0.000    0.043    0.011 pyplot.py:861(gca)
   116480    0.043    0.000    0.043    0.000 callbacks.py:793(on_predict_begin)
        6    0.000    0.000    0.043    0.007 base_layer.py:996(_functional_construction_call)
       27    0.000    0.000    0.043    0.002 function_serialization.py:94(serialize_function)
        3    0.000    0.000    0.043    0.014 saving_utils.py:125(_wrapped_model)
     2194    0.005    0.000    0.043    0.000 fromnumeric.py:55(_wrapfunc)
        3    0.000    0.000    0.042    0.014 util.py:1100(_gather_saveables)
       41    0.000    0.000    0.042    0.001 resource_variable_ops.py:1419(__init__)
       41    0.003    0.000    0.042    0.001 resource_variable_ops.py:1520(_init_from_args)
       48    0.001    0.000    0.042    0.001 axis.py:289(draw)
        3    0.000    0.000    0.042    0.014 signature_serialization.py:96(canonicalize_signatures)
   116490    0.042    0.000    0.042    0.000 {method 'pop' of 'set' objects}
   116490    0.041    0.000    0.041    0.000 dataset_ops.py:4062(_transformation_name)
        4    0.000    0.000    0.041    0.010 figure.py:1913(gca)
        2    0.000    0.000    0.041    0.021 figure.py:1259(add_subplot)
        3    0.000    0.000    0.041    0.014 graph_view.py:364(serialize_object_graph)
        2    0.000    0.000    0.041    0.020 _subplots.py:18(__init__)
        3    0.000    0.000    0.041    0.014 file_io.py:549(atomic_write_string_to_file)
      206    0.005    0.000    0.041    0.000 lines.py:269(__init__)
        3    0.000    0.000    0.041    0.014 gen_io_ops.py:521(merge_v2_checkpoints_eager_fallback)
   116490    0.041    0.000    0.041    0.000 dataset_ops.py:4112(_transformation_name)
     1194    0.006    0.000    0.040    0.000 backend.py:489(deprecated_internal_learning_phase_scope)
        2    0.000    0.000    0.040    0.020 _base.py:378(__init__)
       13    0.004    0.000    0.040    0.003 graph_view.py:185(_breadth_first_traversal)
       30    0.000    0.000    0.040    0.001 layer_serialization.py:38(python_properties)
       60    0.001    0.000    0.040    0.001 gen_nn_ops.py:648(bias_add)
       34    0.000    0.000    0.039    0.001 axis.py:1938(_get_tick)
       34    0.000    0.000    0.039    0.001 axis.py:2225(_get_tick)
2706/1628    0.007    0.000    0.039    0.000 layer_utils.py:234(filter_empty_layer_containers)
       23    0.000    0.000    0.038    0.002 ops.py:3623(<listcomp>)
      114    0.001    0.000    0.038    0.000 gen_resource_variable_ops.py:1163(var_handle_op)
        3    0.000    0.000    0.037    0.012 ops.py:3268(as_graph_def)
        1    0.000    0.000    0.037    0.037 transpiler.py:300(_transform_function)
        3    0.010    0.003    0.037    0.012 ops.py:3178(_as_graph_def)
     1394    0.005    0.000    0.037    0.000 base_layer.py:2835(_gather_children_attribute)
  2317/48    0.002    0.000    0.037    0.001 ast.py:249(visit)
     2127    0.019    0.000    0.036    0.000 Hanabi.py:339(next_turn)
    89550    0.036    0.000    0.036    0.000 callbacks.py:627(on_batch_end)
      322    0.001    0.000    0.035    0.000 ops.py:3489(_create_op_from_tf_operation)
    83440    0.034    0.000    0.034    0.000 Hanabi.py:196(__init__)
   101062    0.034    0.000    0.034    0.000 {method 'append' of 'collections.deque' objects}
    12401    0.024    0.000    0.034    0.000 threading.py:251(_acquire_restore)
       18    0.000    0.000    0.032    0.002 module.py:171(submodules)
    42/30    0.003    0.000    0.032    0.001 module.py:317(_flatten_module)
   100220    0.032    0.000    0.032    0.000 threading.py:506(is_set)
       16    0.000    0.000    0.032    0.002 axis.py:1428(get_major_ticks)
     2014    0.032    0.000    0.032    0.000 {method 'argmax' of 'numpy.ndarray' objects}
      612    0.009    0.000    0.032    0.000 custom_gradient.py:45(copy_handle_data)
 1136/200    0.004    0.000    0.031    0.000 nested_structure_coder.py:78(_map_structure)
       23    0.000    0.000    0.031    0.001 base.py:691(_add_variable_with_custom_getter)
      108    0.001    0.000    0.031    0.000 text.py:867(get_window_extent)
        1    0.000    0.000    0.031    0.031 load.py:300(_load_layers)
        6    0.000    0.000    0.031    0.005 model_serialization.py:34(_python_properties_internal)
        1    0.001    0.001    0.031    0.031 load.py:262(_load_nodes)
        6    0.000    0.000    0.030    0.005 load.py:321(_load_layer)
     1394    0.001    0.000    0.030    0.000 base_layer.py:2844(<genexpr>)
        1    0.000    0.000    0.030    0.030 conversion.py:63(transform_ast)
        6    0.000    0.000    0.030    0.005 load.py:352(_revive_from_config)
        2    0.000    0.000    0.030    0.015 _base.py:948(cla)
    10074    0.004    0.000    0.030    0.000 __init__.py:174(value)
      701    0.003    0.000    0.029    0.000 base_layer.py:1311(trainable_weights)
      322    0.001    0.000    0.029    0.000 importer.py:290(_GetColocationNames)
        2    0.000    0.000    0.029    0.014 math_ops.py:3894(reduced_shape)
       23    0.000    0.000    0.028    0.001 base_layer_utils.py:55(make_variable)
     12/3    0.000    0.000    0.028    0.009 save_impl.py:210(_replace_child_layer_functions)
       23    0.000    0.000    0.028    0.001 variables.py:182(_variable_v1_call)
     1471    0.002    0.000    0.027    0.000 graph_view.py:158(list_dependencies)
       18    0.000    0.000    0.027    0.002 base_layer.py:477(add_weight)
       24    0.000    0.000    0.027    0.001 state_ops.py:198(assign)
       16    0.000    0.000    0.027    0.002 axis.py:1171(_get_tick_bboxes)
       16    0.000    0.000    0.026    0.002 axis.py:1173(<listcomp>)
  1290/78    0.003    0.000    0.026    0.000 generic_utils.py:235(serialize_keras_object)
     6268    0.014    0.000    0.026    0.000 Hanabi.py:372(<dictcomp>)
    12442    0.020    0.000    0.026    0.000 threading.py:242(__exit__)
        1    0.000    0.000    0.026    0.026 load.py:494(_finalize_objects)
       34    0.000    0.000    0.026    0.001 variables.py:223(_variable_v2_call)
        1    0.000    0.000    0.026    0.026 load.py:542(_reconstruct_all_models)
  1007/22    0.003    0.000    0.026    0.001 transformer.py:421(visit)
      170    0.001    0.000    0.026    0.000 function.py:489(add_to_graph)
  1590/68    0.004    0.000    0.026    0.000 ast.py:302(generic_visit)
    10074    0.011    0.000    0.025    0.000 __init__.py:179(_update_logging_levels)
      693    0.002    0.000    0.025    0.000 base_layer.py:1326(non_trainable_weights)
       12    0.000    0.000    0.025    0.002 functional.py:597(get_config)
       16    0.000    0.000    0.025    0.002 axis.py:1350(get_minorticklocs)
      148    0.002    0.000    0.025    0.000 lines.py:751(draw)
       16    0.000    0.000    0.024    0.002 axis.py:1346(get_majorticklocs)
       84    0.001    0.000    0.024    0.000 functional.py:308(_layer_checkpoint_dependencies)
       12    0.000    0.000    0.024    0.002 math_ops.py:4739(sqrt)
       12    0.000    0.000    0.024    0.002 gen_math_ops.py:10161(sqrt)
       18    0.000    0.000    0.024    0.001 variables.py:199(<lambda>)
       18    0.000    0.000    0.024    0.001 variable_scope.py:2557(default_variable_creator)
      283    0.001    0.000    0.023    0.000 base_layer.py:2235(variables)
    12442    0.017    0.000    0.023    0.000 threading.py:239(__enter__)
      152    0.003    0.000    0.023    0.000 text.py:272(_get_layout)
        6    0.000    0.000    0.023    0.004 core.py:1159(build)
      164    0.001    0.000    0.023    0.000 ops.py:2013(colocation_groups)
       40    0.000    0.000    0.023    0.001 activations.py:264(relu)
      229    0.002    0.000    0.023    0.000 ops.py:3319(_add_function)
       40    0.000    0.000    0.023    0.001 backend.py:4523(relu)
       26    0.000    0.000    0.023    0.001 math_ops.py:1419(_add_dispatch)
       40    0.000    0.000    0.022    0.001 gen_nn_ops.py:10392(relu)
       26    0.000    0.000    0.022    0.001 gen_math_ops.py:463(add_v2)
       24    0.001    0.000    0.022    0.001 layer_serialization.py:43(_python_properties_internal)
       78    0.001    0.000    0.022    0.000 functional_ops.py:1217(_set_read_only_resource_inputs_attr)
       48    0.001    0.000    0.022    0.000 function_serialization.py:52(serialize_concrete_function)
        3    0.000    0.000    0.022    0.007 file_io.py:323(write_string_to_file)
        4    0.000    0.000    0.021    0.005 axis.py:2303(_update_label_position)
        3    0.000    0.000    0.021    0.007 tmpdswf691e.py:9(tf__signature_wrapper)
      124    0.002    0.000    0.020    0.000 text.py:670(draw)
        6    0.003    0.000    0.020    0.003 graph_view.py:318(_fill_object_graph_proto)
      229    0.020    0.000    0.020    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
       12    0.000    0.000    0.020    0.002 variables.py:1072(_run_op)
     2643    0.007    0.000    0.020    0.000 data_structures.py:784(_values)
       16    0.000    0.000    0.020    0.001 axis.py:2487(get_tick_space)
        1    0.000    0.000    0.020    0.020 tmp_c03j0ll.py:9(tf__predict_function)
        4    0.000    0.000    0.019    0.005 axis.py:2011(_update_label_position)
       16    0.000    0.000    0.019    0.001 axis.py:2187(get_tick_space)
        2    0.000    0.000    0.019    0.010 backend_pdf.py:592(finalize)
        3    0.000    0.000    0.019    0.006 function.py:1605(__call__)
        1    0.000    0.000    0.019    0.019 training.py:1441(step_function)
       12    0.001    0.000    0.019    0.002 functional.py:1244(get_network_config)
        3    0.000    0.000    0.019    0.006 function.py:1657(_call_impl)
       30    0.000    0.000    0.019    0.001 layer_serialization.py:113(get_config)
       81    0.002    0.000    0.019    0.000 save_impl.py:309(_reset_layer_losses)
        3    0.003    0.001    0.019    0.006 file_io.py:99(write)
        3    0.000    0.000    0.019    0.006 function.py:1675(_call_with_flat_signature)
       23    0.000    0.000    0.019    0.001 variables.py:237(<lambda>)
       23    0.000    0.000    0.019    0.001 variable_scope.py:2616(default_variable_creator_v2)
        2    0.000    0.000    0.019    0.009 optimizer_v2.py:778(_prepare)
      746    0.004    0.000    0.019    0.000 Hanabi.py:237(getHint)
        3    0.000    0.000    0.019    0.006 file_io.py:516(rename)
        4    0.000    0.000    0.019    0.005 axis.py:2284(_get_tick_boxes_siblings)
        3    0.000    0.000    0.019    0.006 file_io.py:532(rename_v2)
       18    0.000    0.000    0.019    0.001 optimizer_v2.py:735(add_slot)
        2    0.000    0.000    0.019    0.009 losses.py:117(__call__)
        3    0.018    0.006    0.018    0.006 {built-in method tensorflow.python._pywrap_file_io.RenameFile}
        2    0.000    0.000    0.018    0.009 backend_pdf.py:711(writeFonts)
        2    0.000    0.000    0.018    0.009 rmsprop.py:163(_prepare_local)
        2    0.000    0.000    0.018    0.009 backend_pdf.py:896(embedTTF)
       76    0.001    0.000    0.018    0.000 def_function.py:579(_defun_with_scope)
        2    0.000    0.000    0.018    0.009 backend_pdf.py:913(embedTTFType3)
        1    0.000    0.000    0.018    0.018 load.py:563(_reconstruct_model)
       75    0.001    0.000    0.018    0.000 load.py:167(_add_object_graph_edges)
        2    0.000    0.000    0.018    0.009 training.py:462(compile)
        4    0.000    0.000    0.017    0.004 axis.py:1992(_get_tick_boxes_siblings)
    12401    0.011    0.000    0.017    0.000 threading.py:248(_release_save)
        2    0.000    0.000    0.017    0.009 metrics_utils.py:73(decorated)
        4    0.000    0.000    0.017    0.004 load.py:403(_revive_layer_from_config)
        2    0.000    0.000    0.017    0.009 math_grad.py:1424(_DivNoNanGrad)
       78    0.002    0.000    0.017    0.000 auto_control_deps_utils.py:36(get_read_only_resource_input_indices_graph)
        6    0.000    0.000    0.017    0.003 saving_utils.py:147(model_metadata)
      150    0.000    0.000    0.017    0.000 nested_structure_coder.py:86(encode_structure)
       69    0.000    0.000    0.017    0.000 load.py:227(_recreate)
        1    0.000    0.000    0.017    0.017 training.py:1444(run_step)
       55    0.000    0.000    0.017    0.000 load.py:376(_recreate)
       16    0.000    0.000    0.016    0.001 axis.py:884(set_tick_params)
      220    0.005    0.000    0.016    0.000 random.py:263(shuffle)
        2    0.000    0.000    0.016    0.008 math_grad.py:1554(_SquaredDifferenceGrad)
        3    0.016    0.005    0.016    0.005 file_io.py:81(_prewrite_check)
        3    0.001    0.000    0.016    0.005 meta_graph.py:457(strip_graph_default_valued_attrs)
       14    0.000    0.000    0.016    0.001 math_ops.py:1921(reduce_sum)
     1078    0.002    0.000    0.016    0.000 data_structures.py:208(layers)
       14    0.000    0.000    0.016    0.001 version_utils.py:63(__new__)
    47/17    0.015    0.000    0.015    0.001 version_utils.py:98(swap_class)
       50    0.000    0.000    0.015    0.000 nested_structure_coder.py:115(decode_proto)
      645    0.004    0.000    0.015    0.000 meta_graph.py:474(_strip_node_default_valued_attrs)
        1    0.000    0.000    0.015    0.015 transpiler.py:167(create)
        9    0.000    0.000    0.015    0.002 resource_variable_ops.py:806(assign_add)
       76    0.001    0.000    0.015    0.000 def_function.py:629(_defun)
       54    0.001    0.000    0.015    0.000 core.py:1209(get_config)
    38/29    0.000    0.000    0.015    0.001 generic_utils.py:334(deserialize_keras_object)
   553/11    0.001    0.000    0.015    0.001 converter.py:313(visit)
        6    0.003    0.001    0.015    0.002 graph_view.py:209(_add_attributes_to_object_graph)
     2984    0.009    0.000    0.015    0.000 Hanabi.py:99(receive_hint)
        1    0.000    0.000    0.015    0.015 training.py:1396(predict_step)
     12/8    0.000    0.000    0.015    0.002 axis.py:687(__get__)
        2    0.000    0.000    0.015    0.007 metrics.py:173(update_state_fn)
       20    0.000    0.000    0.014    0.001 array_ops.py:631(shape_internal)
    58/52    0.006    0.000    0.014    0.000 ops.py:6267(dismantle_graph)
        1    0.000    0.000    0.014    0.014 functional.py:1072(reconstruct_from_config)
        2    0.000    0.000    0.014    0.007 metrics.py:336(update_state)
        6    0.000    0.000    0.014    0.002 base_layer.py:2614(_maybe_build)
        2    0.000    0.000    0.014    0.007 <__array_function__ internals>:2(savetxt)
        3    0.000    0.000    0.014    0.005 functional.py:1115(process_node)
        2    0.002    0.001    0.014    0.007 npyio.py:1211(savetxt)
       80    0.001    0.000    0.014    0.000 tf_inspect.py:260(getcallargs)
        4    0.000    0.000    0.014    0.003 _base.py:2727(grid)
    55/22    0.000    0.000    0.014    0.001 variables.py:66(getter)
        8    0.000    0.000    0.014    0.002 axis.py:1456(grid)
        3    0.002    0.001    0.014    0.005 save.py:247(fill_object_graph_proto)
       22    0.000    0.000    0.014    0.001 math_ops.py:524(subtract)
       22    0.000    0.000    0.014    0.001 gen_math_ops.py:10433(sub)
        5    0.000    0.000    0.014    0.003 base_layer.py:681(from_config)
        2    0.000    0.000    0.014    0.007 gen_data_flow_ops.py:704(dynamic_stitch)
       12    0.000    0.000    0.013    0.001 resource_variable_ops.py:1953(value)
       12    0.000    0.000    0.013    0.001 resource_variable_ops.py:1959(_read_variable_op)
        2    0.000    0.000    0.013    0.007 compile_utils.py:110(__init__)
       24    0.008    0.000    0.013    0.001 save_impl.py:535(__init__)
     1509    0.008    0.000    0.013    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
     1425    0.004    0.000    0.013    0.000 base_layer.py:2958(_dedup_weights)
        2    0.000    0.000    0.012    0.006 losses_utils.py:71(compute_weighted_loss)
       14    0.000    0.000    0.012    0.001 math_ops.py:1987(reduce_sum_with_dims)
      220    0.001    0.000    0.012    0.000 Hanabi.py:300(<listcomp>)
       28    0.000    0.000    0.012    0.000 functional.py:332(_checkpoint_dependencies)
       14    0.000    0.000    0.012    0.001 math_ops.py:1267(truediv)
       14    0.000    0.000    0.012    0.001 math_ops.py:1220(_truediv_python3)
       14    0.000    0.000    0.012    0.001 gen_math_ops.py:10493(_sum)
       53    0.000    0.000    0.012    0.000 functional.py:340(_lookup_dependency)
        9    0.000    0.000    0.012    0.001 load.py:382(<lambda>)
    10901    0.008    0.000    0.012    0.000 random.py:223(_randbelow)
        3    0.000    0.000    0.012    0.004 metrics.py:162(__new__)
        9    0.000    0.000    0.012    0.001 load.py:419(_recreate_function)
        9    0.000    0.000    0.012    0.001 function_deserialization.py:192(recreate_function)
        6    0.000    0.000    0.012    0.002 initializers_v2.py:387(__call__)
      279    0.001    0.000    0.012    0.000 utils.py:116(list_all_layers)
      597    0.003    0.000    0.012    0.000 backend.py:429(deprecated_internal_set_learning_phase)
       11    0.000    0.000    0.012    0.001 templates.py:234(replace)
        6    0.000    0.000    0.012    0.002 init_ops_v2.py:528(__call__)
    39/17    0.000    0.000    0.012    0.001 distribute_lib.py:2855(creator)
        6    0.000    0.000    0.012    0.002 init_ops_v2.py:1037(random_uniform)
        6    0.000    0.000    0.012    0.002 random_ops.py:207(random_uniform)
       27    0.000    0.000    0.012    0.000 array_ops.py:200(fill)
      504    0.002    0.000    0.012    0.000 artist.py:974(update)
       25    0.000    0.000    0.012    0.000 array_ops.py:2746(wrapped)
       54    0.001    0.000    0.011    0.000 base_layer.py:640(get_config)
     1100    0.003    0.000    0.011    0.000 Hanabi.py:226(__init__)
       14    0.000    0.000    0.011    0.001 gen_math_ops.py:7416(real_div)
       25    0.001    0.000    0.011    0.000 array_ops.py:2754(zeros)
       27    0.000    0.000    0.011    0.000 gen_array_ops.py:3357(fill)
       16    0.000    0.000    0.011    0.001 array_ops.py:604(shape)
      118    0.003    0.000    0.011    0.000 lines.py:667(recache)
   225/81    0.001    0.000    0.011    0.000 utils.py:124(list_all_layers_and_sublayers)
      278    0.000    0.000    0.011    0.000 markers.py:205(__init__)
        4    0.000    0.000    0.011    0.003 axis.py:967(set_clip_path)
       23    0.007    0.000    0.011    0.000 function_def_to_graph.py:122(function_def_to_graph_def)
        3    0.000    0.000    0.011    0.004 save.py:481(_generate_signatures)
       19    0.000    0.000    0.011    0.001 initializers_v2.py:127(__call__)
    10074    0.005    0.000    0.011    0.000 _flagvalues.py:525(_assert_validators)
    12442    0.011    0.000    0.011    0.000 {built-in method _imp.lock_held}
       19    0.000    0.000    0.011    0.001 init_ops_v2.py:118(__call__)
       92    0.000    0.000    0.010    0.000 function.py:2041(add_to_graph)
    57/33    0.000    0.000    0.010    0.000 version_utils.py:110(<genexpr>)
        9    0.000    0.000    0.010    0.001 gen_resource_variable_ops.py:23(assign_add_variable_op)
       12    0.000    0.000    0.010    0.001 save_impl.py:83(wrap_layer_objects)
        5    0.000    0.000    0.010    0.002 training.py:246(__init__)
       44    0.000    0.000    0.010    0.000 load.py:675(setattr_wrapper)
       12    0.000    0.000    0.010    0.001 gen_math_ops.py:10278(square)
      980    0.002    0.000    0.010    0.000 ops.py:5325(control_dependencies)
        4    0.000    0.000    0.010    0.003 functional.py:108(__init__)
       10    0.000    0.000    0.010    0.001 math_ops.py:1327(div_no_nan)
        1    0.000    0.000    0.010    0.010 loader.py:70(load_ast)
        2    0.000    0.000    0.010    0.005 optimizer_v2.py:689(_create_all_weights)
        4    0.000    0.000    0.010    0.002 load.py:472(_try_build_layer)
      278    0.001    0.000    0.010    0.000 markers.py:272(set_marker)
      410    0.001    0.000    0.010    0.000 ops.py:4368(device)
        1    0.000    0.000    0.010    0.010 load.py:488(_load_edges)
    12731    0.010    0.000    0.010    0.000 {built-in method builtins.abs}
        2    0.000    0.000    0.010    0.005 losses_utils.py:59(reduce_weighted_loss)
        9    0.000    0.000    0.010    0.001 function_deserialization.py:121(_deserialize_function_spec_as_nonmethod)
       34    0.000    0.000    0.010    0.000 axis.py:485(_get_gridline)
       14    0.000    0.000    0.010    0.001 gen_array_ops.py:8994(shape)
      150    0.001    0.000    0.010    0.000 text.py:121(__init__)
       34    0.000    0.000    0.009    0.000 axis.py:459(_get_tick1line)
     2127    0.006    0.000    0.009    0.000 Experiment.py:42(<listcomp>)
       55    0.000    0.000    0.009    0.000 func_graph.py:1269(dismantle_func_graph)
       34    0.000    0.000    0.009    0.000 axis.py:603(_get_gridline)
     1078    0.001    0.000    0.009    0.000 data_structures.py:195(_layers)
        2    0.000    0.000    0.009    0.005 backend_pdf.py:954(<listcomp>)
        3    0.000    0.000    0.009    0.003 metrics.py:481(__init__)
        3    0.000    0.000    0.009    0.003 metrics.py:326(__init__)
        1    0.000    0.000    0.009    0.009 util.py:750(assert_existing_objects_matched)
        6    0.000    0.000    0.009    0.002 optimizer_v2.py:673(_get_hyper)
      512    0.001    0.000    0.009    0.000 backend_pdf.py:943(get_char_width)
 1184/540    0.002    0.000    0.009    0.000 tracking.py:80(__setattr__)
    67/23    0.000    0.000    0.009    0.000 transformer.py:282(visit_block)
       34    0.000    0.000    0.009    0.000 axis.py:574(_get_tick1line)
        1    0.000    0.000    0.009    0.009 control_flow.py:402(transform)
      500    0.005    0.000    0.009    0.000 backend.py:1341(dtype)
        9    0.000    0.000    0.009    0.001 nested_structure_coder.py:243(do_decode)
       41    0.000    0.000    0.009    0.000 resource_variable_ops.py:198(eager_safe_variable_handle)
9526/8032    0.005    0.000    0.009    0.000 artist.py:217(stale)
       23    0.001    0.000    0.009    0.000 function_deserialization.py:438(_fix_fdef)
      777    0.001    0.000    0.008    0.000 def_function.py:1042(<genexpr>)
     4400    0.004    0.000    0.008    0.000 Hanabi.py:233(draw)
   120/72    0.001    0.000    0.008    0.000 nested_structure_coder.py:179(do_encode)
        1    0.000    0.000    0.008    0.008 load.py:453(_revive_metric_from_config)
        1    0.000    0.000    0.008    0.008 metrics.py:3427(deserialize)
      205    0.001    0.000    0.008    0.000 ops.py:4361(_add_device_to_stack)
        1    0.000    0.000    0.008    0.008 Experiment.py:33(__init__)
        3    0.000    0.000    0.008    0.003 save.py:468(_call_function_with_mapped_captures)
      390    0.001    0.000    0.008    0.000 function.py:211(is_same_structure)
     8508    0.008    0.000    0.008    0.000 Hanabi.py:303(availableActions)
 1883/301    0.001    0.000    0.008    0.000 typing.py:1145(__subclasscheck__)
       23    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphImportGraphDefWithResults}
        6    0.000    0.000    0.008    0.001 math_grad.py:1672(_MatMulGrad)
      950    0.001    0.000    0.008    0.000 base.py:498(no_automatic_dependency_tracking_scope)
      512    0.008    0.000    0.008    0.000 {method 'load_char' of 'matplotlib.ft2font.FT2Font' objects}
      222    0.001    0.000    0.008    0.000 auto_control_deps_utils.py:63(_get_read_only_resource_input_indices_op)
       11    0.000    0.000    0.008    0.001 def_function.py:681(variable_capturing_scope)
     5037    0.004    0.000    0.008    0.000 __init__.py:335(get_verbosity)
        1    0.000    0.000    0.008    0.008 graph_view.py:436(list_objects)
       11    0.000    0.000    0.008    0.001 def_function.py:136(__init__)
        1    0.001    0.001    0.008    0.008 load.py:202(_setup_functions_captures)
    10074    0.004    0.000    0.008    0.000 __init__.py:1280(setLevel)
       24    0.000    0.000    0.008    0.000 patches.py:585(draw)
     2127    0.004    0.000    0.008    0.000 Hanabi.py:343(<listcomp>)
       32    0.000    0.000    0.008    0.000 ticker.py:672(set_locs)
       27    0.000    0.000    0.007    0.000 function_serialization.py:29(_serialize_function_spec)
        2    0.000    0.000    0.007    0.004 training.py:760(<dictcomp>)
        1    0.000    0.000    0.007    0.007 load.py:180(_setup_functions_structures)
      130    0.007    0.000    0.007    0.000 {method 'set_text' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.007    0.004 metrics_utils.py:117(decorated)
        5    0.000    0.000    0.007    0.001 training.py:312(_init_batch_counters)
       34    0.000    0.000    0.007    0.000 axis.py:470(_get_tick2line)
    10074    0.006    0.000    0.007    0.000 converter.py:138(absl_to_standard)
       34    0.000    0.000    0.007    0.000 axis.py:589(_get_tick2line)
       81    0.001    0.000    0.007    0.000 save_impl.py:321(_restore_layer_losses)
      556    0.001    0.000    0.007    0.000 markers.py:227(_recache)
     2166    0.004    0.000    0.007    0.000 meta_graph.py:443(_is_default_attr_value)
      164    0.001    0.000    0.007    0.000 transforms.py:1388(transform)
        9    0.000    0.000    0.007    0.001 __init__.py:357(namedtuple)
        6    0.000    0.000    0.007    0.001 gen_random_ops.py:695(random_uniform)
       70    0.000    0.000    0.007    0.000 lines.py:1021(get_path)
        1    0.000    0.000    0.007    0.007 origin_info.py:89(create_source_map)
       47    0.001    0.000    0.007    0.000 def_function.py:451(__init__)
        4    0.000    0.000    0.007    0.002 _base.py:2491(_update_title_position)
       30    0.000    0.000    0.007    0.000 artist.py:731(set_clip_path)
  369/225    0.000    0.000    0.007    0.000 utils.py:127(<genexpr>)
     6527    0.005    0.000    0.007    0.000 Hanabi.py:147(numberOfTiles)
      510    0.001    0.000    0.007    0.000 ops.py:3264(<listcomp>)
  2352/18    0.003    0.000    0.006    0.000 copy.py:132(deepcopy)
       36    0.000    0.000    0.006    0.000 json_utils.py:43(encode)
     1474    0.004    0.000    0.006    0.000 Experiment.py:44(<listcomp>)
       38    0.000    0.000    0.006    0.000 backend_pdf.py:1768(draw_path)
       34    0.000    0.000    0.006    0.000 axis.py:544(_get_text1)
       46    0.003    0.000    0.006    0.000 function_deserialization.py:464(_list_function_deps)
        6    0.000    0.000    0.006    0.001 core.py:1131(__init__)
 1482/644    0.003    0.000    0.006    0.000 backend_pdf.py:134(pdfRepr)
     1017    0.001    0.000    0.006    0.000 ops.py:3636(as_graph_element)
       24    0.000    0.000    0.006    0.000 backend_pdf.py:1847(draw_markers)
        6    0.000    0.000    0.006    0.001 metrics.py:279(add_weight)
      250    0.004    0.000    0.006    0.000 generic_utils.py:497(__init__)
       10    0.000    0.000    0.006    0.001 gen_math_ops.py:3113(div_no_nan)
    12442    0.006    0.000    0.006    0.000 {method '__exit__' of '_thread.lock' objects}
       10    0.000    0.000    0.006    0.001 random_ops.py:319(random_shuffle)
    12439    0.006    0.000    0.006    0.000 fromnumeric.py:3227(_mean_dispatcher)
    12442    0.006    0.000    0.006    0.000 {method '__enter__' of '_thread.lock' objects}
       24    0.000    0.000    0.006    0.000 backend_bases.py:173(draw_markers)
      159    0.001    0.000    0.006    0.000 def_function.py:1009(_list_all_concrete_functions)
     1401    0.001    0.000    0.006    0.000 save.py:137(list_extra_dependencies)
       28    0.000    0.000    0.006    0.000 axis.py:334(_apply_params)
       26    0.000    0.000    0.006    0.000 backend_pdf.py:2090(draw_text)
       10    0.000    0.000    0.006    0.001 gen_random_ops.py:528(random_shuffle)
      120    0.000    0.000    0.006    0.000 saveable_object.py:53(tensor)
      198    0.002    0.000    0.006    0.000 font_manager.py:623(__init__)
       10    0.005    0.001    0.006    0.001 {built-in method builtins.exec}
      452    0.001    0.000    0.006    0.000 <__array_function__ internals>:2(any)
        4    0.000    0.000    0.006    0.001 serialization.py:158(deserialize)
      216    0.000    0.000    0.006    0.000 backend_pdf.py:641(output)
      644    0.000    0.000    0.006    0.000 importer.py:76(_MaybeDevice)
       62    0.000    0.000    0.006    0.000 patches.py:260(get_transform)
       57    0.000    0.000    0.006    0.000 saveable_object_util.py:100(f)
       52    0.000    0.000    0.006    0.000 backend_agg.py:196(get_text_width_height_descent)
       16    0.001    0.000    0.006    0.000 base_layer.py:297(__init__)
        1    0.000    0.000    0.006    0.006 return_statements.py:392(transform)
       20    0.000    0.000    0.006    0.000 math_ops.py:1826(_ReductionDims)
        1    0.000    0.000    0.006    0.006 parser.py:190(parse_entity)
      156    0.002    0.000    0.006    0.000 ops.py:6937(set_int_list_attr)
      4/3    0.000    0.000    0.006    0.002 training.py:237(__new__)
        2    0.000    0.000    0.006    0.003 backend_pdf.py:435(__init__)
        7    0.000    0.000    0.006    0.001 activity.py:704(resolve)
        8    0.000    0.000    0.006    0.001 array_ops.py:3058(placeholder)
        2    0.000    0.000    0.006    0.003 rmsprop.py:153(_create_slots)
      383    0.001    0.000    0.006    0.000 func_graph.py:265(watch_variable)
        8    0.000    0.000    0.006    0.001 gen_array_ops.py:6769(placeholder)
      563    0.001    0.000    0.006    0.000 func_graph.py:321(control_dependencies)
       32    0.000    0.000    0.005    0.000 axis.py:825(_set_scale)
       41    0.000    0.000    0.005    0.000 templates.py:197(visit_Name)
       24    0.000    0.000    0.005    0.000 axis.py:1398(_copy_tick_props)
       34    0.000    0.000    0.005    0.000 axis.py:427(_get_text1)
      474    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
     1078    0.000    0.000    0.005    0.000 layer_utils.py:37(is_layer)
        4    0.000    0.000    0.005    0.001 math_ops.py:2426(reduce_prod)
      140    0.000    0.000    0.005    0.000 artist.py:1095(set)
   186/42    0.000    0.000    0.005    0.000 copy.py:210(_deepcopy_list)
        2    0.000    0.000    0.005    0.003 array_ops.py:872(_slice_helper)
        7    0.000    0.000    0.005    0.001 activity.py:565(visit_FunctionDef)
      219    0.001    0.000    0.005    0.000 traceable_stack.py:92(push_obj)
       18    0.000    0.000    0.005    0.000 parser.py:228(parse)
   288/12    0.001    0.000    0.005    0.000 copy.py:236(_deepcopy_dict)
        2    0.000    0.000    0.005    0.003 metrics.py:188(result_fn)
      444    0.004    0.000    0.005    0.000 artist.py:74(__init__)
       32    0.000    0.000    0.005    0.000 ticker.py:253(format_ticks)
       18    0.000    0.000    0.005    0.000 gast.py:297(parse)
      240    0.001    0.000    0.005    0.000 transforms.py:1986(scale)
       12    0.000    0.000    0.005    0.000 axis.py:229(set_clip_path)
       32    0.000    0.000    0.005    0.000 scale.py:105(set_default_locators_and_formatters)
       26    0.000    0.000    0.005    0.000 backend_agg.py:170(draw_text)
       23    0.000    0.000    0.005    0.000 qual_names.py:251(resolve)
        1    0.000    0.000    0.005    0.005 transpiler.py:38(_wrap_into_factory)
      210    0.001    0.000    0.005    0.000 text.py:170(update)
      758    0.002    0.000    0.005    0.000 ops.py:4567(__exit__)
      336    0.001    0.000    0.005    0.000 ops.py:4275(_colocate_with_for_gradient)
        2    0.000    0.000    0.005    0.003 losses.py:239(call)
   796/26    0.001    0.000    0.005    0.000 astn.py:9(_visit)
     1017    0.003    0.000    0.005    0.000 ops.py:3672(_as_graph_element_locked)
        2    0.000    0.000    0.005    0.003 optimizer_v2.py:797(_prepare_local)
       99    0.001    0.000    0.005    0.000 nested_structure_coder.py:428(do_encode)
       16    0.000    0.000    0.005    0.000 transforms.py:695(union)
   168/23    0.000    0.000    0.005    0.000 astn.py:11(<listcomp>)
     2000    0.002    0.000    0.005    0.000 backend.py:639(get_graph)
     3631    0.002    0.000    0.005    0.000 pickle.py:680(save_float)
      758    0.002    0.000    0.005    0.000 ops.py:4557(__enter__)
      452    0.001    0.000    0.005    0.000 fromnumeric.py:2236(any)
        3    0.005    0.002    0.005    0.002 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToGraphDef}
       38    0.000    0.000    0.005    0.000 patches.py:776(get_patch_transform)
  156/148    0.001    0.000    0.005    0.000 _base.py:583(_unstale_viewLim)
        2    0.000    0.000    0.005    0.002 __init__.py:359(to_filehandle)
      720    0.001    0.000    0.005    0.000 ops.py:3779(get_operation_by_name)
        2    0.000    0.000    0.005    0.002 math_grad.py:67(SmartBroadcastGradientArgs)
       64    0.000    0.000    0.005    0.000 backend_pdf.py:1691(check_gc)
       38    0.000    0.000    0.005    0.000 patches.py:746(_update_patch_transform)
     9832    0.005    0.000    0.005    0.000 __init__.py:815(__getitem__)
      219    0.001    0.000    0.005    0.000 data_structures.py:793(_checkpoint_dependencies)
        2    0.000    0.000    0.005    0.002 _datasource.py:231(open)
        2    0.000    0.000    0.005    0.002 losses.py:1162(mean_squared_error)
    40/24    0.000    0.000    0.005    0.000 nested_structure_coder.py:189(do_decode)
       15    0.000    0.000    0.005    0.000 serialized_attributes.py:205(set_and_validate_objects)
        1    0.000    0.000    0.005    0.005 inspect_utils.py:143(getimmediatesource)
       34    0.000    0.000    0.005    0.000 templates.py:129(_prepare_replacement)
      831    0.004    0.000    0.005    0.000 traceable_stack.py:75(copy_metadata)
       32    0.001    0.000    0.005    0.000 functional_saver.py:137(__init__)
     1068    0.002    0.000    0.005    0.000 __init__.py:1956(_setattr_cm)
       34    0.000    0.000    0.005    0.000 ast_util.py:64(copy_clean)
        2    0.000    0.000    0.005    0.002 metrics.py:394(result)
   118/71    0.001    0.000    0.005    0.000 nested_structure_coder.py:190(<genexpr>)
        2    0.000    0.000    0.005    0.002 _datasource.py:577(open)
        2    0.000    0.000    0.005    0.002 _base.py:553(_init_axis)
        2    0.000    0.000    0.005    0.002 input_layer.py:91(__init__)
   531/34    0.002    0.000    0.005    0.000 ast_util.py:38(copy)
      182    0.001    0.000    0.005    0.000 font_manager.py:1166(findfont)
        3    0.000    0.000    0.005    0.002 builder_impl.py:757(copy_assets_to_destination_dir)
       27    0.001    0.000    0.005    0.000 nested_structure_coder.py:229(do_encode)
        3    0.000    0.000    0.005    0.002 iterator_ops.py:735(__next__)
        3    0.000    0.000    0.005    0.002 iterator_ops.py:770(next)
       52    0.000    0.000    0.004    0.000 _backend_pdf_ps.py:41(get_text_width_height_descent)
      155    0.000    0.000    0.004    0.000 data_structures.py:635(_track_value)
        3    0.000    0.000    0.004    0.001 iterator_ops.py:738(_next_internal)
       24    0.000    0.000    0.004    0.000 axis.py:841(cla)
       12    0.000    0.000    0.004    0.000 training.py:2322(_undeduplicated_weights)
      114    0.000    0.000    0.004    0.000 variables.py:1079(__hash__)
      304    0.001    0.000    0.004    0.000 saveable_object_util.py:134(saveable_objects_for_op)
      752    0.001    0.000    0.004    0.000 tape.py:177(record_operation)
      164    0.000    0.000    0.004    0.000 transforms.py:2363(transform_affine)
      116    0.000    0.000    0.004    0.000 data_structures.py:414(__init__)
       42    0.000    0.000    0.004    0.000 utils.py:202(get_training_arg_index)
        5    0.000    0.000    0.004    0.001 optimizer_v2.py:1003(add_weight)
        6    0.000    0.000    0.004    0.001 nn_grad.py:327(_BiasAddGrad)
      170    0.001    0.000    0.004    0.000 saveable_object_util.py:54(set_cpu0)
       10    0.000    0.000    0.004    0.000 templates.py:146(visit_Expr)
   236/51    0.001    0.000    0.004    0.000 astn.py:17(generic_visit)
        1    0.001    0.001    0.004    0.004 inspect_utils.py:116(_fix_linecache_record)
      142    0.000    0.000    0.004    0.000 base_layer.py:1232(dynamic)
      219    0.002    0.000    0.004    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
       18    0.000    0.000    0.004    0.000 ast3.py:398(ast_to_gast)
        6    0.000    0.000    0.004    0.001 gen_math_ops.py:1837(cast)
      170    0.002    0.000    0.004    0.000 function_deserialization.py:393(fix_node_def)
       34    0.000    0.000    0.004    0.000 axis.py:444(_get_text2)
       36    0.001    0.000    0.004    0.000 node.py:162(serialize)
       18    0.000    0.000    0.004    0.000 ast3.py:10(visit_Module)
      155    0.000    0.000    0.004    0.000 data_structures.py:173(_track_value)
        3    0.000    0.000    0.004    0.001 origin_info.py:226(resolve)
        6    0.000    0.000    0.004    0.001 gen_nn_ops.py:725(bias_add_grad)
        1    0.000    0.000    0.004    0.004 loader_impl.py:43(parse_saved_model_with_debug_info)
  216/176    0.001    0.000    0.004    0.000 transforms.py:2387(get_affine)
      206    0.000    0.000    0.004    0.000 lines.py:1243(set_markerfacecolor)
    10074    0.003    0.000    0.004    0.000 __init__.py:190(_checkLevel)
2421/2271    0.002    0.000    0.004    0.000 optimizer_v2.py:706(__getattribute__)
       56    0.001    0.000    0.004    0.000 base_layer.py:1378(losses)
       34    0.000    0.000    0.004    0.000 axis.py:559(_get_text2)
        2    0.000    0.000    0.004    0.002 losses_utils.py:38(_safe_mean)
       21    0.000    0.000    0.004    0.000 deprecation.py:311(new_func)
        2    0.000    0.000    0.004    0.002 math_grad.py:35(_safe_shape_div)
      114    0.001    0.000    0.004    0.000 saveable_object_util.py:224(op_list_to_dict)
        9    0.000    0.000    0.004    0.000 file_io.py:235(file_exists)
        9    0.000    0.000    0.004    0.000 file_io.py:252(file_exists_v2)
      336    0.000    0.000    0.004    0.000 base_layer.py:1235(<genexpr>)
       31    0.000    0.000    0.004    0.000 data_structures.py:1050(_set_list_item)
      945    0.002    0.000    0.004    0.000 weakref.py:242(values)
      116    0.000    0.000    0.004    0.000 data_structures.py:309(__init__)
      365    0.002    0.000    0.004    0.000 ops.py:6601(__enter__)
        2    0.004    0.002    0.004    0.002 {built-in method matplotlib.ttconv.get_pdf_charprocs}
      758    0.001    0.000    0.004    0.000 ops.py:4646(control_dependencies)
      670    0.001    0.000    0.004    0.000 <__array_function__ internals>:2(dot)
        9    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_file_io.FileExists}
      129    0.000    0.000    0.004    0.000 base_layer.py:3013(_list_extra_dependencies_for_serialization)
       23    0.001    0.000    0.004    0.000 importer.py:86(_ProcessGraphDefParam)
      838    0.001    0.000    0.004    0.000 graph_view.py:61(_object_prefix_from_path)
     1163    0.001    0.000    0.004    0.000 _weakrefset.py:58(__iter__)
  2364/36    0.002    0.000    0.004    0.000 json_utils.py:47(_encode_tuple)
      336    0.002    0.000    0.004    0.000 ops.py:4288(colocate_with)
       32    0.001    0.000    0.004    0.000 ticker.py:759(_set_format)
      752    0.003    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
     3371    0.002    0.000    0.004    0.000 anno.py:121(hasanno)
      152    0.001    0.000    0.004    0.000 saveable_object_util.py:91(__init__)
       16    0.000    0.000    0.004    0.000 spines.py:374(draw)
       18    0.000    0.000    0.004    0.000 base_layer.py:1356(updates)
        6    0.000    0.000    0.004    0.001 rmsprop.py:288(get_config)
   504/36    0.001    0.000    0.004    0.000 json_utils.py:54(<dictcomp>)
        2    0.000    0.000    0.004    0.002 backend_pdf.py:624(close)
        2    0.000    0.000    0.004    0.002 optimizer_v2.py:848(_decayed_lr)
        2    0.004    0.002    0.004    0.002 {method 'close' of '_io.BufferedWriter' objects}
     8508    0.003    0.000    0.003    0.000 Hanabi.py:188(__init__)
       32    0.000    0.000    0.003    0.000 base_layer.py:2247(trainable_variables)
       12    0.000    0.000    0.003    0.000 save_impl.py:339(__init__)
       87    0.001    0.000    0.003    0.000 input_spec.py:132(assert_input_compatibility)
        3    0.000    0.000    0.003    0.001 tf_logging.py:166(info)
        2    0.000    0.000    0.003    0.002 backend_agg.py:398(get_renderer)
        5    0.000    0.000    0.003    0.001 load.py:371(_revive_graph_network)
       29    0.000    0.000    0.003    0.000 load.py:908(_revive_setter)
    63/18    0.000    0.000    0.003    0.000 ast_util.py:42(<listcomp>)
        9    0.000    0.000    0.003    0.000 training.py:2313(weights)
       72    0.000    0.000    0.003    0.000 lines.py:1330(update_from)
       24    0.000    0.000    0.003    0.000 optimizer_v2.py:904(_serialize_hyperparameter)
      272    0.001    0.000    0.003    0.000 transforms.py:727(__init__)
        3    0.000    0.000    0.003    0.001 __init__.py:1421(_log)
        3    0.000    0.000    0.003    0.001 gen_dataset_ops.py:2588(iterator_get_next)
      210    0.001    0.000    0.003    0.000 _collections_abc.py:824(update)
        1    0.000    0.000    0.003    0.003 function_deserialization.py:360(_sort_function_defs)
      345    0.001    0.000    0.003    0.000 c_api_util.py:224(new_tf_operations)
       25    0.000    0.000    0.003    0.000 activity.py:338(_process_statement)
        2    0.000    0.000    0.003    0.002 math_ops.py:570(scalar_mul)
        2    0.003    0.002    0.003    0.002 backend_agg.py:86(__init__)
      278    0.000    0.000    0.003    0.000 transforms.py:1247(__add__)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:1609(writeObject)
      114    0.001    0.000    0.003    0.000 resource_variable_ops.py:64(get_resource_handle_data)
        4    0.000    0.000    0.003    0.001 array_ops.py:713(size)
        4    0.000    0.000    0.003    0.001 array_ops.py:745(size_internal)
       78    0.000    0.000    0.003    0.000 backend_agg.py:243(_get_agg_font)
        1    0.000    0.000    0.003    0.003 return_statements.py:341(visit_FunctionDef)
      254    0.000    0.000    0.003    0.000 ops.py:521(_shape_tuple)
       56    0.000    0.000    0.003    0.000 backprop.py:174(_record_gradient)
     5037    0.002    0.000    0.003    0.000 _flagvalues.py:468(__getitem__)
      436    0.001    0.000    0.003    0.000 ops.py:158(string_merge)
       24    0.000    0.000    0.003    0.000 backend.py:3469(get_value)
        1    0.003    0.003    0.003    0.003 {built-in method posix.mkdir}
        5    0.000    0.000    0.003    0.001 activity.py:645(visit_With)
        6    0.000    0.000    0.003    0.001 array_ops.py:1328(stack)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:238(write)
        2    0.000    0.000    0.003    0.002 backend.py:2245(mean)
      698    0.002    0.000    0.003    0.000 font_manager.py:663(__hash__)
       33    0.001    0.000    0.003    0.000 nested_structure_coder.py:440(do_decode)
        4    0.000    0.000    0.003    0.001 gen_math_ops.py:6696(prod)
       78    0.000    0.000    0.003    0.000 _backend_pdf_ps.py:79(_get_font_ttf)
        2    0.000    0.000    0.003    0.002 losses_utils.py:53(_num_elements)
        2    0.000    0.000    0.003    0.002 math_ops.py:2255(reduce_mean)
        4    0.000    0.000    0.003    0.001 gen_array_ops.py:11337(tile)
        6    0.000    0.000    0.003    0.001 functional_saver.py:115(sharded_filename)
        2    0.000    0.000    0.003    0.002 gen_math_ops.py:5832(mean)
        6    0.000    0.000    0.003    0.001 gen_io_ops.py:1756(sharded_filename)
        1    0.000    0.000    0.003    0.003 functions.py:134(transform)
       70    0.000    0.000    0.003    0.000 typing.py:875(__extrahook__)
        4    0.000    0.000    0.003    0.001 axis.py:744(__init__)
        4    0.000    0.000    0.003    0.001 gen_array_ops.py:722(broadcast_gradient_args)
      271    0.002    0.000    0.003    0.000 compile_utils.py:123(metrics)
       72    0.000    0.000    0.003    0.000 encoder.py:182(encode)
       75    0.000    0.000    0.003    0.000 ops.py:819(__hash__)
        3    0.000    0.000    0.003    0.001 __init__.py:1446(handle)
       32    0.000    0.000    0.003    0.000 ticker.py:2817(__init__)
      129    0.000    0.000    0.003    0.000 base_serialization.py:56(list_extra_dependencies_for_serialization)
        3    0.000    0.000    0.003    0.001 __init__.py:1500(callHandlers)
      318    0.002    0.000    0.003    0.000 function.py:2748(all_values)
      322    0.002    0.000    0.003    0.000 importer.py:336(_SetDefaultAttrValues)
       12    0.000    0.000    0.003    0.000 training.py:1890(trainable_weights)
      456    0.001    0.000    0.003    0.000 transforms.py:126(invalidate)
        3    0.000    0.000    0.003    0.001 __init__.py:852(handle)
      278    0.000    0.000    0.003    0.000 transforms.py:2462(composite_transform_factory)
       32    0.000    0.000    0.003    0.000 ticker.py:2020(__init__)
        3    0.000    0.000    0.003    0.001 __init__.py:982(emit)
      322    0.001    0.000    0.003    0.000 ops.py:2172(_set_device)
    15111    0.003    0.000    0.003    0.000 _flagvalues.py:148(_flags)
        1    0.000    0.000    0.003    0.003 training.py:2332(summary)
      531    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
        1    0.000    0.000    0.003    0.003 layer_utils.py:112(print_summary)
      216    0.000    0.000    0.003    0.000 backend_pdf.py:642(<listcomp>)
      356    0.002    0.000    0.003    0.000 __init__.py:2096(_check_isinstance)
        1    0.000    0.000    0.003    0.003 input_layer.py:210(Input)
      254    0.001    0.000    0.003    0.000 ops.py:515(_shape_as_list)
     6477    0.002    0.000    0.003    0.000 ast.py:166(iter_fields)
      132    0.000    0.000    0.003    0.000 axis.py:1891(getter)
       32    0.000    0.000    0.003    0.000 ticker.py:2095(set_params)
     2976    0.002    0.000    0.003    0.000 __init__.py:2131(_check_in_list)
      422    0.001    0.000    0.003    0.000 colors.py:157(to_rgba)
        2    0.000    0.000    0.003    0.001 _base.py:2332(autoscale_view)
      152    0.001    0.000    0.003    0.000 text.py:838(get_prop_tup)
      108    0.000    0.000    0.003    0.000 layer_serialization.py:73(objects_to_serialize)
      142    0.002    0.000    0.003    0.000 __init__.py:1663(normalize_kwargs)
      896    0.001    0.000    0.003    0.000 artist.py:49(_stale_axes_callback)
      680    0.001    0.000    0.003    0.000 ops.py:2180(_set_device_from_string)
       56    0.002    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_RecordGradient}
    16415    0.003    0.000    0.003    0.000 {method 'getrandbits' of '_random.Random' objects}
      441    0.001    0.000    0.003    0.000 tokenize.py:492(_tokenize)
      624    0.001    0.000    0.003    0.000 transforms.py:1831(__init__)
       72    0.002    0.000    0.003    0.000 encoder.py:204(iterencode)
        1    0.000    0.000    0.003    0.003 Experiment.py:202(<listcomp>)
        8    0.000    0.000    0.003    0.000 gen_control_flow_ops.py:470(no_op)
      436    0.001    0.000    0.003    0.000 device.py:133(shortcut_string_merge)
       19    0.003    0.000    0.003    0.000 {built-in method posix.stat}
      2/1    0.000    0.000    0.003    0.003 templates.py:172(visit_FunctionDef)
      122    0.000    0.000    0.003    0.000 <__array_function__ internals>:2(column_stack)
        4    0.000    0.000    0.003    0.001 nn_grad.py:415(_ReluGrad)
       51    0.000    0.000    0.003    0.000 statistics.py:291(mean)
       24    0.000    0.000    0.003    0.000 functional.py:556(_conform_to_reference_input)
        4    0.000    0.000    0.003    0.001 _base.py:2884(tick_params)
        4    0.000    0.000    0.003    0.001 gen_nn_ops.py:10584(relu_grad)
        6    0.000    0.000    0.003    0.000 string_ops.py:48(regex_full_match)
      758    0.001    0.000    0.003    0.000 ops.py:4592(_pop_control_dependencies_controller)
       16    0.000    0.000    0.003    0.000 base_layer.py:2884(_init_call_fn_args)
        6    0.000    0.000    0.003    0.000 gen_string_ops.py:586(static_regex_full_match)
      850    0.000    0.000    0.003    0.000 optimizer_v2.py:773(get_slot)
        6    0.000    0.000    0.003    0.000 array_ops.py:1393(_autopacking_helper)
        2    0.000    0.000    0.003    0.001 math_ops.py:1153(r_binary_op_wrapper)
        2    0.000    0.000    0.003    0.001 optimizer_v2.py:808(_create_hypers)
       90    0.001    0.000    0.003    0.000 transforms.py:1940(rotate_deg)
      276    0.001    0.000    0.003    0.000 ops.py:762(consumers)
      205    0.001    0.000    0.003    0.000 ops.py:121(__init__)
       23    0.001    0.000    0.003    0.000 function_deserialization.py:348(_restore_gradient_functions)
       11    0.000    0.000    0.003    0.000 templates.py:275(<listcomp>)
        1    0.000    0.000    0.002    0.002 functions.py:81(visit_FunctionDef)
      548    0.002    0.000    0.002    0.000 transforms.py:163(set_children)
       30    0.000    0.000    0.002    0.000 base_layer.py:2252(non_trainable_variables)
     2930    0.002    0.000    0.002    0.000 {method 'add' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
       57    0.000    0.000    0.002    0.000 resource_variable_ops.py:110(_combine_handle_data)
        3    0.000    0.000    0.002    0.001 file_io.py:197(__exit__)
        4    0.000    0.000    0.002    0.001 gen_math_ops.py:6318(neg)
       12    0.000    0.000    0.002    0.000 layer_utils.py:254(gather_trainable_weights)
        4    0.000    0.000    0.002    0.001 _base.py:2398(handle_single_axis)
     2127    0.002    0.000    0.002    0.000 {method 'random' of '_random.Random' objects}
        3    0.002    0.001    0.002    0.001 file_io.py:223(close)
     1344    0.001    0.000    0.002    0.000 transforms.py:1701(__init__)
      667    0.001    0.000    0.002    0.000 data_structures.py:497(_checkpoint_dependencies)
     2665    0.001    0.000    0.002    0.000 graph_view.py:63(<genexpr>)
        2    0.000    0.000    0.002    0.001 reaching_definitions.py:279(resolve)
       32    0.001    0.000    0.002    0.000 ticker.py:683(_compute_offset)
     75/2    0.000    0.000    0.002    0.001 reaching_definitions.py:267(visit)
     1128    0.002    0.000    0.002    0.000 _weakrefset.py:26(__exit__)
        2    0.000    0.000    0.002    0.001 gen_math_ops.py:5752(maximum)
        6    0.000    0.000    0.002    0.000 gen_array_ops.py:6416(pack)
      206    0.001    0.000    0.002    0.000 lines.py:1147(set_linestyle)
       10    0.000    0.000    0.002    0.000 training_utils.py:1226(__enter__)
      492    0.001    0.000    0.002    0.000 __init__.py:1309(_to_unmasked_float_array)
       32    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(clip)
        2    0.000    0.000    0.002    0.001 _axes.py:1414(plot)
        2    0.000    0.000    0.002    0.001 reaching_definitions.py:189(visit_FunctionDef)
      343    0.001    0.000    0.002    0.000 device_spec.py:111(__init__)
        3    0.000    0.000    0.002    0.001 __init__.py:971(flush)
      104    0.000    0.000    0.002    0.000 transforms.py:782(from_extents)
        2    0.000    0.000    0.002    0.001 gen_array_ops.py:785(broadcast_to)
     5896    0.002    0.000    0.002    0.000 Hanabi.py:180(__init__)
      169    0.001    0.000    0.002    0.000 training.py:2361(layers)
        1    0.000    0.000    0.002    0.002 variables.py:100(transform)
  882/456    0.002    0.000    0.002    0.000 transforms.py:136(_invalidate_internal)
      206    0.000    0.000    0.002    0.000 lines.py:1257(set_markerfacecoloralt)
     1069    0.001    0.000    0.002    0.000 resource_variable_ops.py:2127(is_resource_variable)
     1097    0.001    0.000    0.002    0.000 ops.py:2062(device)
      152    0.000    0.000    0.002    0.000 _base.py:597(viewLim)
       17    0.000    0.000    0.002    0.000 base_layer.py:2673(_get_trainable_state)
        5    0.000    0.000    0.002    0.000 load.py:386(<lambda>)
        4    0.000    0.000    0.002    0.001 functional.py:117(_init_graph_network)
      130    0.001    0.000    0.002    0.000 base.py:310(gather_ops_or_named_saveables)
    19/14    0.000    0.000    0.002    0.000 activity.py:457(visit_Call)
       32    0.000    0.000    0.002    0.000 fromnumeric.py:2021(clip)
        5    0.000    0.000    0.002    0.000 load.py:427(_recreate_variable)
     1182    0.001    0.000    0.002    0.000 ops.py:2052(name)
      623    0.001    0.000    0.002    0.000 object_identity.py:220(_wrap_key)
       38    0.000    0.000    0.002    0.000 transforms.py:1960(rotate_deg_around)
      474    0.002    0.000    0.002    0.000 custom_gradient.py:75(<listcomp>)
        1    0.000    0.000    0.002    0.002 call_trees.py:211(transform)
        4    0.000    0.000    0.002    0.001 templates.py:279(replace_as_expression)
       12    0.000    0.000    0.002    0.000 genericpath.py:16(exists)
        6    0.000    0.000    0.002    0.000 string_ops.py:540(string_join)
        3    0.000    0.000    0.002    0.001 save.py:399(_map_function_arguments_to_created_inputs)
        6    0.000    0.000    0.002    0.000 gen_string_ops.py:819(string_join)
      886    0.001    0.000    0.002    0.000 optimizer_v2.py:1279(_var_key)
   242/17    0.001    0.000    0.002    0.000 ast.py:255(generic_visit)
      219    0.000    0.000    0.002    0.000 data_structures.py:824(_check_self_external_modification)
        6    0.000    0.000    0.002    0.000 array_ops.py:4314(where)
      950    0.001    0.000    0.002    0.000 base.py:549(_setattr_tracking)
        1    0.000    0.000    0.002    0.002 util.py:171(__init__)
        8    0.000    0.000    0.002    0.000 ops.py:1319(convert_to_tensor_v2)
       84    0.001    0.000    0.002    0.000 base_layer.py:3208(_in_functional_construction_mode)
        2    0.000    0.000    0.002    0.001 backend.py:1141(placeholder)
       26    0.000    0.000    0.002    0.000 saveable_object_util.py:336(validate_and_slice_inputs)
  280/272    0.001    0.000    0.002    0.000 spines.py:424(get_spine_transform)
      198    0.000    0.000    0.002    0.000 ops.py:3827(get_tensor_by_name)
        6    0.000    0.000    0.002    0.000 gen_math_ops.py:8744(select)
       36    0.000    0.000    0.002    0.000 fromnumeric.py:42(_wrapit)
       51    0.001    0.000    0.002    0.000 statistics.py:105(_sum)
        1    0.000    0.000    0.002    0.002 load.py:152(_create_saveable_object_factories)
      122    0.001    0.000    0.002    0.000 shape_base.py:612(column_stack)
      330    0.000    0.000    0.002    0.000 transforms.py:1714(transform)
     4400    0.001    0.000    0.002    0.000 Hanabi.py:144(draw)
   180/36    0.000    0.000    0.002    0.000 json_utils.py:52(<listcomp>)
        2    0.000    0.000    0.002    0.001 array_ops.py:1084(strided_slice)
      118    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(broadcast_arrays)
        6    0.000    0.000    0.002    0.000 pyplot.py:600(gcf)
       38    0.000    0.000    0.002    0.000 backend_pdf.py:1585(writePath)
       25    0.000    0.000    0.002    0.000 resource_variable_ops.py:280(__del__)
        3    0.000    0.000    0.002    0.001 utils_impl.py:210(get_or_create_variables_dir)
        2    0.000    0.000    0.002    0.001 gen_array_ops.py:10170(strided_slice)
       90    0.001    0.000    0.002    0.000 transforms.py:1924(rotate)
        2    0.000    0.000    0.002    0.001 pyplot.py:427(figure)
      230    0.001    0.000    0.002    0.000 transforms.py:2290(__init__)
        5    0.002    0.000    0.002    0.000 {method 'close' of '_io.TextIOWrapper' objects}
     2019    0.001    0.000    0.002    0.000 graph_view.py:51(_escape_local_name)
      172    0.000    0.000    0.002    0.000 device_spec.py:142(from_string)
      134    0.000    0.000    0.002    0.000 qual_names.py:216(visit_Name)
      338    0.001    0.000    0.002    0.000 transforms.py:1793(transform_affine)
        2    0.000    0.000    0.002    0.001 _base.py:930(_gen_axes_spines)
      212    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(amin)
        6    0.000    0.000    0.002    0.000 figure.py:466(_set_dpi)
       16    0.000    0.000    0.002    0.000 load.py:208(<listcomp>)
    68/60    0.000    0.000    0.002    0.000 backend_pdf.py:183(<listcomp>)
       12    0.000    0.000    0.002    0.000 patches.py:42(__init__)
       54    0.000    0.000    0.002    0.000 base_layer.py:1237(stateful)
       10    0.000    0.000    0.002    0.000 _base.py:945(<genexpr>)
        5    0.000    0.000    0.002    0.000 load.py:438(uninitialized_variable_creator)
       48    0.000    0.000    0.002    0.000 text.py:259(update_from)
      558    0.001    0.000    0.002    0.000 gast.py:15(create_node)
        8    0.000    0.000    0.002    0.000 spines.py:517(linear_spine)
        3    0.000    0.000    0.002    0.001 metrics.py:153(__init__)
        2    0.000    0.000    0.002    0.001 base_layer.py:1717(add_update)
      100    0.001    0.000    0.002    0.000 transforms.py:669(translated)
       64    0.001    0.000    0.002    0.000 backend_pdf.py:2328(delta)
        1    0.000    0.000    0.002    0.002 continue_statements.py:163(transform)
      170    0.001    0.000    0.002    0.000 device_spec.py:236(replace)
        2    0.000    0.000    0.002    0.001 optimizer_v2.py:826(iterations)
       36    0.000    0.000    0.002    0.000 backend_pdf.py:649(endStream)
      6/3    0.000    0.000    0.002    0.001 ast3.py:50(visit_FunctionDef)
       21    0.000    0.000    0.002    0.000 base_layer.py:2261(_set_dtype_policy)
       31    0.000    0.000    0.002    0.000 data_structures.py:534(__setitem__)
        3    0.000    0.000    0.002    0.001 saving_utils.py:100(trace_model_call)
        6    0.000    0.000    0.002    0.000 save.py:224(_add_saveable_objects)
      504    0.000    0.000    0.002    0.000 artist.py:1006(<listcomp>)
      134    0.001    0.000    0.002    0.000 backend_bases.py:737(__init__)
      594    0.000    0.000    0.002    0.000 backend_pdf.py:635(write)
        3    0.000    0.000    0.002    0.001 signature_serialization.py:265(validate_saveable_view)
       72    0.000    0.000    0.002    0.000 load.py:245(_get_tensor_from_node)
       23    0.000    0.000    0.002    0.000 function_def_to_graph.py:72(<listcomp>)
       32    0.000    0.000    0.002    0.000 backend_pdf.py:398(end)
      100    0.000    0.000    0.002    0.000 transforms.py:1972(translate)
       32    0.000    0.000    0.002    0.000 {method 'clip' of 'numpy.ndarray' objects}
      465    0.000    0.000    0.002    0.000 data_structures.py:818(_dirty)
    136/3    0.000    0.000    0.002    0.001 origin_info.py:212(visit)
      128    0.000    0.000    0.002    0.000 artist.py:858(_set_gc_clip)
        2    0.000    0.000    0.002    0.001 backend_bases.py:3351(new_figure_manager)
       36    0.000    0.000    0.002    0.000 def_function.py:434(__del__)
       31    0.000    0.000    0.002    0.000 data_structures.py:570(extend)
       16    0.000    0.000    0.002    0.000 base_layer.py:2907(_call_fn_args)
       57    0.000    0.000    0.002    0.000 resource_variable_ops.py:74(get_eager_safe_handle_data)
    17/13    0.000    0.000    0.002    0.000 ast3.py:114(visit_Call)
       48    0.001    0.000    0.002    0.000 patches.py:526(_bind_draw_path_function)
      144    0.000    0.000    0.002    0.000 base_layer.py:1240(<genexpr>)
       32    0.000    0.000    0.002    0.000 _methods.py:97(_clip)
        6    0.000    0.000    0.002    0.000 saving_utils.py:57(model_input_signature)
      365    0.001    0.000    0.002    0.000 ops.py:6635(__exit__)
       10    0.000    0.000    0.002    0.000 training.py:1899(non_trainable_weights)
        5    0.000    0.000    0.002    0.000 activity.py:651(visit_withitem)
     1188    0.000    0.000    0.002    0.000 anno.py:143(copyanno)
        6    0.000    0.000    0.002    0.000 def_function.py:1171(__get__)
       46    0.000    0.000    0.002    0.000 markers.py:733(_set_tickdown)
      134    0.000    0.000    0.002    0.000 path.py:96(__init__)
      422    0.000    0.000    0.002    0.000 colors.py:123(_is_nth_color)
        2    0.000    0.000    0.002    0.001 gen_math_ops.py:3851(floor_mod)
      118    0.001    0.000    0.002    0.000 stride_tricks.py:206(broadcast_arrays)
      771    0.000    0.000    0.002    0.000 nested_structure_coder.py:176(can_encode)
        1    0.000    0.000    0.002    0.002 break_statements.py:183(transform)
      368    0.001    0.000    0.002    0.000 __init__.py:882(get_siblings)
       46    0.000    0.000    0.002    0.000 markers.py:713(_set_tickleft)
        1    0.000    0.000    0.002    0.002 call_trees.py:108(visit_FunctionDef)
        9    0.000    0.000    0.002    0.000 function_deserialization.py:176(__init__)
        2    0.000    0.000    0.002    0.001 gen_math_ops.py:10355(squared_difference)
     1410    0.001    0.000    0.002    0.000 ops.py:193(_as_graph_element)
       10    0.000    0.000    0.002    0.000 layer_utils.py:277(gather_non_trainable_weights)
      182    0.000    0.000    0.002    0.000 font_manager.py:673(__eq__)
        2    0.000    0.000    0.002    0.001 util.py:123(scale_losses_by_sample_weight)
       16    0.000    0.000    0.002    0.000 base_layer.py:2900(_call_full_argspec)
      128    0.000    0.000    0.002    0.000 backend_bases.py:901(set_clip_path)
       40    0.000    0.000    0.002    0.000 load.py:380(<lambda>)
      216    0.001    0.000    0.002    0.000 artist.py:978(_update_property)
      312    0.001    0.000    0.002    0.000 backend_pdf.py:96(fill)
        8    0.000    0.000    0.002    0.000 def_function.py:1423(decorated)
      680    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequestedDevice}
        1    0.000    0.000    0.002    0.002 parser.py:271(unparse)
        2    0.000    0.000    0.002    0.001 math_grad.py:1656(_MatMulGradAgainstSecondOnly)
       14    0.000    0.000    0.002    0.000 backend_agg.py:125(draw_path)
      468    0.000    0.000    0.002    0.000 backend_pdf.py:414(write)
        6    0.000    0.000    0.002    0.000 function.py:3700(class_method_to_instance_method)
        2    0.000    0.000    0.002    0.001 backprop.py:697(_ones)
        8    0.000    0.000    0.002    0.000 spines.py:36(__init__)
       98    0.000    0.000    0.002    0.000 axis.py:618(update_position)
      260    0.001    0.000    0.002    0.000 text.py:824(get_unitless_position)
       27    0.000    0.000    0.002    0.000 data_structures.py:735(__init__)
     1097    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
        2    0.000    0.000    0.002    0.001 figure.py:275(__init__)
      212    0.000    0.000    0.002    0.000 fromnumeric.py:2676(amin)
       69    0.000    0.000    0.002    0.000 tf_utils.py:261(convert_inner_node_data)
        1    0.000    0.000    0.002    0.002 call_trees.py:126(visit_With)
       98    0.000    0.000    0.002    0.000 axis.py:501(update_position)
       40    0.000    0.000    0.002    0.000 load.py:395(_recreate_user_object)
        2    0.000    0.000    0.002    0.001 array_ops.py:3007(ones)
     1952    0.002    0.000    0.002    0.000 transforms.py:82(__init__)
        2    0.000    0.000    0.002    0.001 backend_pdf.py:553(newPage)
       14    0.001    0.000    0.001    0.000 {method 'draw_path' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      171    0.001    0.000    0.001    0.000 tensor_shape.py:765(<listcomp>)
      2/1    0.000    0.000    0.001    0.001 return_statements.py:277(_visit_statement_block)
       78    0.001    0.000    0.001    0.000 function.py:2071(_select_forward_and_backward_functions)
       32    0.000    0.000    0.001    0.000 ticker.py:2072(_validate_steps)
        1    0.000    0.000    0.001    0.001 liveness.py:206(resolve)
       25    0.000    0.000    0.001    0.000 constant_op.py:347(_tensor_shape_tensor_conversion_function)
     83/1    0.000    0.000    0.001    0.001 liveness.py:121(visit)
      345    0.000    0.000    0.001    0.000 c_api_util.py:206(tf_operations)
      114    0.001    0.000    0.001    0.000 resource_variable_ops.py:84(_set_handle_shapes_and_types)
        1    0.000    0.000    0.001    0.001 liveness.py:145(visit_FunctionDef)
      462    0.001    0.000    0.001    0.000 func_graph.py:669(add_capture)
       12    0.000    0.000    0.001    0.000 tf_utils.py:484(get_tensor_spec)
        9    0.000    0.000    0.001    0.000 nested_structure_coder.py:245(<listcomp>)
        1    0.000    0.000    0.001    0.001 liveness.py:131(_analyze_function)
     9550    0.001    0.000    0.001    0.000 artist.py:804(get_animated)
        6    0.000    0.000    0.001    0.000 base_layer.py:2993(_get_save_spec)
       48    0.000    0.000    0.001    0.000 transforms.py:2709(get_transformed_points_and_affine)
       34    0.000    0.000    0.001    0.000 qual_names.py:221(visit_Attribute)
      250    0.001    0.000    0.001    0.000 {method 'isatty' of '_io._IOBase' objects}
      758    0.001    0.000    0.001    0.000 ops.py:4589(_push_control_dependencies_controller)
       64    0.000    0.000    0.001    0.000 transforms.py:773(from_bounds)
     1852    0.001    0.000    0.001    0.000 artist.py:336(pchanged)
       18    0.000    0.000    0.001    0.000 variables.py:55(visit_Name)
       34    0.000    0.000    0.001    0.000 axis.py:523(_get_text1_transform)
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(round_)
   137/69    0.000    0.000    0.001    0.000 tf_utils.py:157(map_structure_with_atomic)
        1    0.000    0.000    0.001    0.001 return_statements.py:319(visit_With)
       24    0.000    0.000    0.001    0.000 save_impl.py:600(_create_call_fn_decorator)
        1    0.000    0.000    0.001    0.001 reaching_fndefs.py:170(resolve)
       32    0.000    0.000    0.001    0.000 _dill.py:1327(save_type)
      162    0.001    0.000    0.001    0.000 function.py:361(_enclosing_xla_context)
        4    0.000    0.000    0.001    0.000 cfg.py:221(_visit_internal)
      623    0.001    0.000    0.001    0.000 object_identity.py:75(__init__)
     83/1    0.000    0.000    0.001    0.001 reaching_fndefs.py:153(visit)
        2    0.000    0.000    0.001    0.001 array_ops.py:2730(_constant_if_small)
        2    0.000    0.000    0.001    0.001 _base.py:1842(add_line)
        2    0.000    0.000    0.001    0.001 math_ops.py:1380(floordiv)
        1    0.000    0.000    0.001    0.001 loader.py:50(load_source)
       99    0.000    0.000    0.001    0.000 nested_structure_coder.py:379(do_encode)
       32    0.000    0.000    0.001    0.000 backend_pdf.py:645(beginStream)
       84    0.001    0.000    0.001    0.000 base_layer.py:2457(_set_mask_metadata)
        1    0.000    0.000    0.001    0.001 reaching_fndefs.py:147(visit_FunctionDef)
        1    0.000    0.000    0.001    0.001 reaching_fndefs.py:128(_proces_function)
        2    0.000    0.000    0.001    0.001 gen_array_ops.py:9139(size)
       52    0.000    0.000    0.001    0.000 transforms.py:2696(_revalidate)
       34    0.000    0.000    0.001    0.000 axis.py:407(_get_text1_transform)
      771    0.000    0.000    0.001    0.000 nested_structure_coder.py:153(_is_tuple)
        2    0.000    0.000    0.001    0.001 math_grad.py:1304(_MulGrad)
      153    0.000    0.000    0.001    0.000 revived_types.py:140(serialize)
        2    0.000    0.000    0.001    0.001 gen_math_ops.py:3773(floor_div)
       32    0.000    0.000    0.001    0.000 backend_pdf.py:348(__init__)
      526    0.001    0.000    0.001    0.000 anno.py:125(setanno)
       34    0.000    0.000    0.001    0.000 _base.py:748(get_yaxis_text1_transform)
      143    0.000    0.000    0.001    0.000 pickle.py:705(save_str)
       81    0.000    0.000    0.001    0.000 nested_structure_coder.py:136(do_encode)
        8    0.000    0.000    0.001    0.000 spines.py:226(register_axis)
       12    0.000    0.000    0.001    0.000 save_impl.py:367(_generate_input_signature)
      703    0.001    0.000    0.001    0.000 ops.py:4579(add_op)
       32    0.001    0.000    0.001    0.000 ticker.py:722(_set_order_of_magnitude)
      350    0.000    0.000    0.001    0.000 ops.py:3297(_is_function)
        6    0.000    0.000    0.001    0.000 base_layer.py:2998(<lambda>)
        6    0.000    0.000    0.001    0.000 gen_math_ops.py:314(add)
  310/170    0.000    0.000    0.001    0.000 _base.py:724(get_yaxis_transform)
       52    0.000    0.000    0.001    0.000 font_manager.py:859(copy)
     1335    0.001    0.000    0.001    0.000 nested_structure_coder.py:157(_is_named_tuple)
     2886    0.001    0.000    0.001    0.000 enum.py:581(__hash__)
        8    0.000    0.000    0.001    0.000 tensor_util.py:674(_ConstantValue)
       40    0.000    0.000    0.001    0.000 revived_types.py:150(deserialize)
        6    0.000    0.000    0.001    0.000 init_ops.py:111(__call__)
       34    0.000    0.000    0.001    0.000 _base.py:672(get_xaxis_text1_transform)
        2    0.000    0.000    0.001    0.001 ast3.py:96(visit_With)
       19    0.001    0.000    0.001    0.000 {built-in method builtins.compile}
       66    0.000    0.000    0.001    0.000 save_impl.py:453(get_input_arg_value)
  310/170    0.000    0.000    0.001    0.000 _base.py:648(get_xaxis_transform)
        8    0.000    0.000    0.001    0.000 spines.py:238(cla)
      108    0.000    0.000    0.001    0.000 __init__.py:133(serialize)
       57    0.000    0.000    0.001    0.000 gen_resource_variable_ops.py:1265(var_is_initialized_op)
      276    0.000    0.000    0.001    0.000 ops.py:772(<listcomp>)
      528    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.EqualAttrValueWrapper}
       31    0.000    0.000    0.001    0.000 data_structures.py:343(extend)
      140    0.000    0.000    0.001    0.000 transforms.py:2644(__init__)
     1128    0.001    0.000    0.001    0.000 _weakrefset.py:20(__enter__)
        4    0.000    0.000    0.001    0.000 axis.py:2054(_update_offset_text_position)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:190(<listcomp>)
       67    0.000    0.000    0.001    0.000 ast3.py:162(visit_Name)
      758    0.001    0.000    0.001    0.000 ops.py:4522(__init__)
      442    0.001    0.000    0.001    0.000 artist.py:695(set_figure)
        3    0.000    0.000    0.001    0.000 call_trees.py:160(visit_Call)
       46    0.000    0.000    0.001    0.000 markers.py:727(_set_tickup)
       31    0.000    0.000    0.001    0.000 data_structures.py:564(append)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3590(round_)
        4    0.001    0.000    0.001    0.000 file_io.py:73(_preread_check)
      252    0.001    0.000    0.001    0.000 copy.py:66(copy)
     1336    0.001    0.000    0.001    0.000 {method 'extendleft' of 'collections.deque' objects}
       48    0.000    0.000    0.001    0.000 path.py:354(iter_segments)
       32    0.000    0.000    0.001    0.000 ticker.py:256(<listcomp>)
       38    0.000    0.000    0.001    0.000 backend_pdf.py:1577(pathOperations)
       28    0.000    0.000    0.001    0.000 tensor_shape.py:926(merge_with)
        8    0.000    0.000    0.001    0.000 node.py:54(__init__)
      760    0.001    0.000    0.001    0.000 data_structures.py:479(_check_external_modification)
      100    0.000    0.000    0.001    0.000 transforms.py:361(ymax)
        6    0.000    0.000    0.001    0.000 base_layer.py:2556(_set_connectivity_metadata)
       46    0.000    0.000    0.001    0.000 markers.py:719(_set_tickright)
       87    0.000    0.000    0.001    0.000 nested_structure_coder.py:202(do_encode)
      114    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetHandleShapeAndType}
        3    0.000    0.000    0.001    0.000 function_serialization.py:110(wrap_cached_variables)
       66    0.000    0.000    0.001    0.000 backend_pdf.py:2177(new_gc)
       73    0.001    0.000    0.001    0.000 tf_decorator.py:128(rewrap)
      420    0.000    0.000    0.001    0.000 re.py:169(match)
      340    0.000    0.000    0.001    0.000 axis.py:325(_set_artist_props)
       38    0.000    0.000    0.001    0.000 patches.py:341(_set_facecolor)
      252    0.000    0.000    0.001    0.000 {method 'max' of 'numpy.ndarray' objects}
      121    0.000    0.000    0.001    0.000 random.py:255(choice)
     2014    0.001    0.000    0.001    0.000 fromnumeric.py:1108(_argmax_dispatcher)
       93    0.000    0.000    0.001    0.000 data_structures.py:487(_update_snapshot)
        3    0.000    0.000    0.001    0.000 cfg.py:245(visit_forward)
      338    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.affine_transform}
       72    0.000    0.000    0.001    0.000 transforms.py:1532(transform_path_non_affine)
       34    0.000    0.000    0.001    0.000 axis.py:410(_get_text2_transform)
       70    0.000    0.000    0.001    0.000 backend_pdf.py:2184(__init__)
      474    0.001    0.000    0.001    0.000 custom_gradient.py:78(<listcomp>)
       43    0.000    0.000    0.001    0.000 __init__.py:149(get)
        1    0.000    0.000    0.001    0.001 return_statements.py:227(visit_Return)
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(around)
        3    0.000    0.000    0.001    0.000 base.py:97(restore)
       16    0.000    0.000    0.001    0.000 transforms.py:703(<listcomp>)
      502    0.000    0.000    0.001    0.000 artist.py:168(convert_xunits)
      771    0.001    0.000    0.001    0.000 anno.py:114(getanno)
      225    0.000    0.000    0.001    0.000 _collections_abc.py:851(setdefault)
        2    0.000    0.000    0.001    0.001 optimizer_v2.py:552(_aggregate_gradients)
      250    0.001    0.000    0.001    0.000 callbacks.py:981(_reset_progbar)
       34    0.000    0.000    0.001    0.000 axis.py:526(_get_text2_transform)
      412    0.001    0.000    0.001    0.000 lines.py:1114(_split_drawstyle_linestyle)
      120    0.000    0.000    0.001    0.000 layer_utils.py:224(invalidate_all)
     1092    0.001    0.000    0.001    0.000 font_manager.py:1220(<genexpr>)
      206    0.000    0.000    0.001    0.000 lines.py:648(set_data)
        4    0.000    0.000    0.001    0.000 layer_utils.py:197(print_layer_summary)
     2112    0.001    0.000    0.001    0.000 module.py:302(_is_module)
        2    0.000    0.000    0.001    0.001 ast3.py:402(gast_to_ast)
    10901    0.001    0.000    0.001    0.000 {method 'bit_length' of 'int' objects}
      216    0.000    0.000    0.001    0.000 transforms.py:2194(get_affine)
        1    0.000    0.000    0.001    0.001 control_flow.py:54(visit_FunctionDef)
      474    0.001    0.000    0.001    0.000 custom_gradient.py:77(<listcomp>)
      140    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
       64    0.000    0.000    0.001    0.000 _methods.py:63(_clip_dep_is_scalar_nan)
       78    0.000    0.000    0.001    0.000 policy.py:615(serialize)
       32    0.000    0.000    0.001    0.000 ticker.py:2087(_staircase)
       48    0.001    0.000    0.001    0.000 transforms.py:2779(nonsingular)
      102    0.001    0.000    0.001    0.000 base_layer.py:2528(_get_call_arg_value)
       32    0.000    0.000    0.001    0.000 backend_pdf.py:387(_writeHeader)
        3    0.000    0.000    0.001    0.000 utils_impl.py:232(get_or_create_assets_dir)
        1    0.000    0.000    0.001    0.001 conditional_expressions.py:48(transform)
       24    0.001    0.000    0.001    0.000 {method 'draw_markers' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
       34    0.000    0.000    0.001    0.000 _base.py:698(get_xaxis_text2_transform)
      114    0.001    0.000    0.001    0.000 {built-in method FromString}
       84    0.000    0.000    0.001    0.000 transforms.py:346(xmin)
      108    0.000    0.000    0.001    0.000 serialized_attributes.py:180(objects_to_serialize)
      541    0.000    0.000    0.001    0.000 ops.py:4258(get_name_scope)
       78    0.000    0.000    0.001    0.000 base_layer_utils.py:310(is_in_keras_graph)
        1    0.000    0.000    0.001    0.001 logical_expressions.py:135(transform)
       84    0.000    0.000    0.001    0.000 base_layer.py:2395(_name_scope)
       16    0.001    0.000    0.001    0.000 {built-in method builtins.__build_class__}
       20    0.000    0.000    0.001    0.000 ops.py:2386(node_def)
      345    0.001    0.000    0.001    0.000 {method 'get' of 'google.protobuf.pyext._message.MessageMapContainer' objects}
      128    0.001    0.000    0.001    0.000 ticker.py:573(__call__)
       35    0.000    0.000    0.001    0.000 revived_types.py:85(from_proto)
      462    0.001    0.000    0.001    0.000 {method 'compress' of 'zlib.Compress' objects}
        1    0.000    0.000    0.001    0.001 liveness.py:193(visit_With)
       32    0.000    0.000    0.001    0.000 transforms.py:1015(get_points)
      123    0.001    0.000    0.001    0.000 ast_util.py:284(parallel_walk)
      3/1    0.000    0.000    0.001    0.001 ast3.py:310(visit_FunctionDef)
      382    0.000    0.000    0.001    0.000 artist.py:358(set_transform)
       38    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.convert_to_string}
       21    0.000    0.000    0.001    0.000 tensor_spec.py:130(is_compatible_with)
        2    0.000    0.000    0.001    0.000 cfg.py:964(build)
       18    0.000    0.000    0.001    0.000 ast.py:30(parse)
       78    0.000    0.000    0.001    0.000 base_layer.py:2312(_maybe_cast_inputs)
        3    0.000    0.000    0.001    0.000 file_io.py:453(recursive_create_dir)
        9    0.000    0.000    0.001    0.000 save_impl.py:237(replace_layer_functions)
        3    0.000    0.000    0.001    0.000 file_io.py:468(recursive_create_dir_v2)
       34    0.000    0.000    0.001    0.000 _base.py:774(get_yaxis_text2_transform)
      427    0.000    0.000    0.001    0.000 base_layer.py:2942(_eager_losses)
     32/8    0.000    0.000    0.001    0.000 copy.py:268(_reconstruct)
        1    0.000    0.000    0.001    0.001 converter.py:196(to_ast)
        2    0.000    0.000    0.001    0.000 cfg.py:767(visit_FunctionDef)
      120    0.001    0.000    0.001    0.000 artist.py:1074(update_from)
        2    0.000    0.000    0.001    0.000 cfg.py:742(_process_function_def)
        3    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_file_io.RecursivelyCreateDir}
      200    0.001    0.000    0.001    0.000 font_manager.py:778(set_weight)
       52    0.000    0.000    0.001    0.000 lines.py:724(_get_transformed_path)
      252    0.000    0.000    0.001    0.000 _methods.py:28(_amax)
       13    0.000    0.000    0.001    0.000 reaching_definitions.py:123(visit_node)
        8    0.000    0.000    0.001    0.000 def_function.py:1199(function)
       24    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(prod)
       25    0.000    0.000    0.001    0.000 __init__.py:138(deserialize)
       21    0.000    0.000    0.001    0.000 tensor_spec.py:78(is_compatible_with)
      142    0.000    0.000    0.001    0.000 ops.py:6013(get_name_scope)
       36    0.000    0.000    0.001    0.000 transforms.py:986(__init__)
       19    0.000    0.000    0.001    0.000 base_layer.py:2162(output_shape)
       57    0.000    0.000    0.001    0.000 gen_logging_ops.py:23(_assert)
       64    0.000    0.000    0.001    0.000 backend_bases.py:656(new_gc)
       20    0.000    0.000    0.001    0.000 structure.py:452(<listcomp>)
       32    0.000    0.000    0.001    0.000 transforms.py:763(unit)
        1    0.000    0.000    0.001    0.001 origin_info.py:263(resolve_entity)
      146    0.000    0.000    0.001    0.000 path.py:159(_fast_from_codes_and_verts)
      438    0.000    0.000    0.001    0.000 artist.py:937(set_visible)
       32    0.001    0.000    0.001    0.000 {built-in method zlib.compressobj}
        2    0.000    0.000    0.001    0.000 training.py:578(_configure_steps_per_execution)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3130(around)
      140    0.000    0.000    0.001    0.000 _methods.py:32(_amin)
       10    0.000    0.000    0.001    0.000 callbacks.py:503(on_train_end)
      132    0.000    0.000    0.001    0.000 ops.py:3221(<listcomp>)
       78    0.000    0.000    0.001    0.000 policy.py:593(_policy_equivalent_to_dtype)
        4    0.000    0.000    0.001    0.000 patches.py:704(__init__)
       50    0.000    0.000    0.001    0.000 lines.py:709(_transform_path)
       96    0.000    0.000    0.001    0.000 transforms.py:351(ymin)
      278    0.000    0.000    0.001    0.000 markers.py:249(set_fillstyle)
       15    0.000    0.000    0.001    0.000 base_layer.py:2108(input_shape)
        4    0.000    0.000    0.001    0.000 _base.py:153(__call__)
       26    0.000    0.000    0.001    0.000 patches.py:348(set_facecolor)
        1    0.000    0.000    0.001    0.001 linecache.py:82(updatecache)
      345    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphNextOperation}
        5    0.000    0.000    0.001    0.000 training.py:684(run_eagerly)
        2    0.000    0.000    0.001    0.000 training.py:2754(write_scalar_summaries)
      324    0.000    0.000    0.001    0.000 backend_pdf.py:251(__init__)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
       85    0.000    0.000    0.001    0.000 activity.py:97(__init__)
        2    0.000    0.000    0.001    0.000 _base.py:310(_plot_args)
      206    0.000    0.000    0.001    0.000 lines.py:1401(set_dash_capstyle)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:1929(_setup_textpos)
     1050    0.001    0.000    0.001    0.000 traceable_stack.py:30(__init__)
        3    0.000    0.000    0.001    0.000 signature_serialization.py:39(_get_signature)
      200    0.001    0.000    0.001    0.000 font_manager.py:814(set_size)
     5037    0.001    0.000    0.001    0.000 __init__.py:170(value)
       24    0.000    0.000    0.001    0.000 fromnumeric.py:2843(prod)
       78    0.000    0.000    0.001    0.000 activity.py:324(_enter_scope)
        4    0.000    0.000    0.001    0.000 _base.py:3104(set_xlim)
       29    0.000    0.000    0.001    0.000 nested_structure_coder.py:212(do_decode)
        7    0.000    0.000    0.001    0.000 activity.py:381(visit_Return)
      694    0.001    0.000    0.001    0.000 _collections_abc.py:879(__iter__)
      801    0.001    0.000    0.001    0.000 {method 'index' of 'list' objects}
       84    0.000    0.000    0.001    0.000 origin_info.py:197(_attach_origin_info)
     1290    0.001    0.000    0.001    0.000 ops.py:5087(_control_dependencies_stack)
       27    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._op_def_registry.get}
      143    0.000    0.000    0.001    0.000 data_structures.py:152(__init__)
      206    0.000    0.000    0.001    0.000 lines.py:733(set_transform)
       32    0.000    0.000    0.001    0.000 node.py:234(output_shapes)
        2    0.000    0.000    0.001    0.000 _subplots.py:129(update_params)
       74    0.000    0.000    0.001    0.000 activity.py:267(_track_symbol)
       25    0.000    0.000    0.001    0.000 gen_resource_variable_ops.py:226(destroy_resource_op)
    72/24    0.000    0.000    0.001    0.000 copy.py:273(<genexpr>)
       16    0.000    0.000    0.001    0.000 transforms.py:704(<listcomp>)
       33    0.000    0.000    0.001    0.000 nested_structure_coder.py:389(do_decode)
        2    0.000    0.000    0.001    0.000 summary_ops_v2.py:792(scalar)
        6    0.000    0.000    0.001    0.000 transforms.py:1915(clear)
        3    0.000    0.000    0.001    0.000 save.py:367(_map_captures_to_created_tensors)
      500    0.000    0.000    0.001    0.000 lines.py:1285(set_xdata)
       32    0.000    0.000    0.001    0.000 pickle.py:905(save_global)
        2    0.000    0.000    0.001    0.000 summary_ops_v2.py:739(summary_writer_function)
      624    0.001    0.000    0.001    0.000 utils.py:223(set_training_arg)
      166    0.000    0.000    0.001    0.000 transforms.py:2367(transform_non_affine)
       21    0.000    0.000    0.001    0.000 tensor_util.py:548(<listcomp>)
       12    0.000    0.000    0.001    0.000 save_impl.py:552(_wrap_call_and_conditional_losses)
      598    0.000    0.000    0.001    0.000 figure.py:45(_stale_figure_callback)
       10    0.000    0.000    0.001    0.000 ops.py:5225(combined)
       27    0.000    0.000    0.001    0.000 data_structures.py:832(_update_snapshot)
       21    0.000    0.000    0.001    0.000 utils.py:99(layer_uses_training_bool)
      220    0.000    0.000    0.001    0.000 Hanabi.py:297(<dictcomp>)
      100    0.000    0.000    0.001    0.000 transforms.py:1764(frozen)
      306    0.000    0.000    0.001    0.000 saveable_object_util.py:365(trace_save_restore_functions)
        6    0.000    0.000    0.001    0.000 tensor_util.py:569(MakeNdarray)
        2    0.000    0.000    0.001    0.000 gridspec.py:586(get_position)
  214/160    0.000    0.000    0.001    0.000 transforms.py:2319(_invalidate_internal)
       24    0.000    0.000    0.001    0.000 node.py:227(input_shapes)
       77    0.000    0.000    0.001    0.000 activity.py:333(_exit_and_record_scope)
      206    0.000    0.000    0.001    0.000 lines.py:1096(set_linewidth)
        6    0.000    0.000    0.001    0.000 function.py:2672(_convert_inputs_to_signature)
        1    0.000    0.000    0.001    0.001 ast3.py:353(visit_With)
       98    0.001    0.000    0.001    0.000 weakref.py:102(__init__)
      165    0.000    0.000    0.001    0.000 base_layer_utils.py:508(__enter__)
       84    0.000    0.000    0.001    0.000 transforms.py:356(xmax)
        2    0.000    0.000    0.001    0.000 _datasource.py:427(_findfile)
     4426    0.001    0.000    0.001    0.000 {method 'popleft' of 'collections.deque' objects}
        1    0.000    0.000    0.001    0.001 saving_utils.py:313(try_build_compiled_arguments)
       30    0.000    0.000    0.001    0.000 function.py:2899(<genexpr>)
    24/22    0.000    0.000    0.001    0.000 transforms.py:412(bounds)
       26    0.001    0.000    0.001    0.000 {method 'draw_glyphs_to_bitmap' of 'matplotlib.ft2font.FT2Font' objects}
       57    0.000    0.000    0.001    0.000 gen_math_ops.py:5437(logical_not)
      658    0.001    0.000    0.001    0.000 _weakrefset.py:81(add)
      104    0.000    0.000    0.001    0.000 text.py:236(get_rotation)
        6    0.000    0.000    0.001    0.000 figure.py:874(set_size_inches)
      308    0.000    0.000    0.001    0.000 auto_control_deps_utils.py:105(<genexpr>)
       54    0.000    0.000    0.001    0.000 activations.py:426(serialize)
       36    0.000    0.000    0.001    0.000 base_layer.py:1438(add_loss)
       16    0.000    0.000    0.001    0.000 transforms.py:706(<listcomp>)
        9    0.000    0.000    0.001    0.000 utils.py:40(use_wrapped_call)
       50    0.000    0.000    0.001    0.000 transforms.py:2681(__init__)
      198    0.000    0.000    0.001    0.000 font_manager.py:759(set_style)
       61    0.000    0.000    0.001    0.000 activity.py:413(visit_Name)
      186    0.000    0.000    0.001    0.000 execute.py:177(make_str)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap_external>:672(exec_module)
       12    0.000    0.000    0.001    0.000 save_impl.py:581(_extract_outputs_from_fn)
       80    0.000    0.000    0.001    0.000 base_layer_utils.py:490(in_keras_graph)
      205    0.001    0.000    0.001    0.000 device.py:67(merge_device)
       10    0.001    0.000    0.001    0.000 function_base.py:2031(__init__)
      158    0.000    0.000    0.001    0.000 font_manager.py:1325(get_font)
      152    0.000    0.000    0.001    0.000 text.py:1137(set_verticalalignment)
        7    0.000    0.000    0.001    0.000 json_utils.py:59(decode)
  578/310    0.001    0.000    0.001    0.000 transforms.py:2349(<lambda>)
      502    0.000    0.000    0.001    0.000 artist.py:180(convert_yunits)
       16    0.000    0.000    0.001    0.000 transforms.py:705(<listcomp>)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:654(fontName)
      500    0.000    0.000    0.001    0.000 lines.py:1297(set_ydata)
     2817    0.001    0.000    0.001    0.000 tf_decorator.py:262(decorated_target)
      446    0.000    0.000    0.001    0.000 lines.py:59(_scale_dashes)
        1    0.000    0.000    0.001    0.001 <frozen importlib._bootstrap_external>:743(get_code)
       10    0.000    0.000    0.001    0.000 training.py:762(make_train_function)
       32    0.000    0.000    0.001    0.000 shape_base.py:286(hstack)
       36    0.000    0.000    0.001    0.000 __init__.py:183(dumps)
       11    0.000    0.000    0.001    0.000 Experiment.py:169(<listcomp>)
      128    0.000    0.000    0.001    0.000 axis.py:301(set_label1)
        2    0.000    0.000    0.001    0.000 _base.py:1868(_update_line_limits)
     14/6    0.000    0.000    0.001    0.000 load.py:242(_add_children_recreated_from_config)
      150    0.000    0.000    0.001    0.000 ops.py:5175(__init__)
       84    0.000    0.000    0.001    0.000 base_layer.py:2495(_get_input_masks)
     1619    0.001    0.000    0.001    0.000 {built-in method from_iterable}
       72    0.000    0.000    0.001    0.000 backend.py:1283(int_shape)
        9    0.000    0.000    0.001    0.000 inspect.py:680(getsourcefile)
        6    0.001    0.000    0.001    0.000 meta_graph.py:138(ops_used_by_graph_def)
      206    0.000    0.000    0.001    0.000 lines.py:1355(set_dash_joinstyle)
       32    0.000    0.000    0.001    0.000 backend_pdf.py:423(_flush)
      156    0.001    0.000    0.001    0.000 {method 'clear' of 'matplotlib.ft2font.FT2Font' objects}
        7    0.000    0.000    0.001    0.000 __init__.py:302(loads)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(ptp)
        1    0.000    0.000    0.001    0.001 parser.py:127(_attempt_to_parse_normal_source)
      528    0.000    0.000    0.001    0.000 function_base.py:257(iterable)
       13    0.000    0.000    0.001    0.000 functional.py:237(input_shape)
      128    0.000    0.000    0.001    0.000 axis.py:314(set_label2)
      165    0.000    0.000    0.001    0.000 base_layer_utils.py:441(enter)
      112    0.001    0.000    0.001    0.000 {method 'round' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.001    0.000 meta_graph.py:174(stripped_op_list_for_graph)
       31    0.000    0.000    0.001    0.000 data_structures.py:338(append)
     1164    0.000    0.000    0.001    0.000 def_function.py:1036(<genexpr>)
        6    0.000    0.000    0.001    0.000 layer_utils.py:95(count_params)
       24    0.000    0.000    0.001    0.000 path.py:419(cleaned)
        8    0.000    0.000    0.001    0.000 _base.py:1436(apply_aspect)
       21    0.000    0.000    0.001    0.000 policy.py:296(__init__)
        1    0.000    0.000    0.001    0.001 directives.py:177(transform)
       13    0.000    0.000    0.001    0.000 activity.py:432(visit_Attribute)
      104    0.001    0.000    0.001    0.000 text.py:41(get_rotation)
      206    0.000    0.000    0.001    0.000 lines.py:1416(set_solid_capstyle)
     1626    0.000    0.000    0.001    0.000 base.py:649(_checkpoint_dependencies)
      365    0.001    0.000    0.001    0.000 ops.py:6583(__init__)
       52    0.001    0.000    0.001    0.000 __init__.py:557(__setitem__)
       33    0.000    0.000    0.001    0.000 utils.py:131(maybe_add_training_arg)
     1128    0.001    0.000    0.001    0.000 _weakrefset.py:16(__init__)
      150    0.000    0.000    0.001    0.000 nested_structure_coder.py:70(_get_encoders)
      104    0.000    0.000    0.001    0.000 text.py:1193(_preprocess_math)
      276    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
      134    0.000    0.000    0.001    0.000 path.py:188(_update_values)
       24    0.000    0.000    0.001    0.000 distribute_lib.py:2896(colocate_vars_with)
      322    0.000    0.000    0.001    0.000 ops.py:1730(_device_string)
     3898    0.001    0.000    0.001    0.000 artist.py:192(axes)
       32    0.001    0.000    0.001    0.000 {method 'flush' of 'zlib.Compress' objects}
      345    0.000    0.000    0.001    0.000 function_deserialization.py:339(<genexpr>)
       29    0.000    0.000    0.001    0.000 data_structures.py:1061(<lambda>)
      123    0.000    0.000    0.001    0.000 serialized_attributes.py:168(checkpointable_objects)
      858    0.001    0.000    0.001    0.000 re.py:286(_compile)
       29    0.000    0.000    0.001    0.000 nested_structure_coder.py:213(<dictcomp>)
        8    0.000    0.000    0.001    0.000 tf_utils.py:464(graph_context_for_symbolic_tensors)
       12    0.000    0.000    0.001    0.000 base_layer.py:2129(<listcomp>)
       32    0.000    0.000    0.001    0.000 ticker.py:1955(scale_range)
       27    0.000    0.000    0.001    0.000 nested_structure_coder.py:146(do_decode)
      168    0.000    0.000    0.001    0.000 optimizer_v2.py:721(__setattr__)
      206    0.000    0.000    0.001    0.000 lines.py:1061(set_drawstyle)
      564    0.000    0.000    0.001    0.000 nested_structure_coder.py:226(can_encode)
       87    0.000    0.000    0.001    0.000 data_structures.py:649(_list_functions_for_serialization)
       10    0.000    0.000    0.001    0.000 callbacks.py:486(on_train_begin)
        2    0.000    0.000    0.001    0.000 pyplot.py:3029(title)
        2    0.000    0.000    0.001    0.000 optimizers.py:835(deserialize)
       26    0.000    0.000    0.001    0.000 gen_io_ops.py:1543(<listcomp>)
       16    0.000    0.000    0.001    0.000 base_layer.py:2182(<listcomp>)
        4    0.000    0.000    0.001    0.000 _base.py:3498(set_ylim)
     1607    0.001    0.000    0.001    0.000 base_layer.py:1246(trainable)
      143    0.000    0.000    0.001    0.000 layer_utils.py:179(__init__)
       18    0.000    0.000    0.001    0.000 layer_serialization.py:63(<lambda>)
        6    0.000    0.000    0.001    0.000 tf_stack.py:105(__init__)
      206    0.000    0.000    0.001    0.000 lines.py:1370(set_solid_joinstyle)
        2    0.000    0.000    0.001    0.000 _base.py:363(<listcomp>)
      144    0.000    0.000    0.001    0.000 transforms.py:2154(<lambda>)
      118    0.001    0.000    0.001    0.000 stride_tricks.py:185(_broadcast_shape)
        1    0.000    0.000    0.001    0.001 base.py:38(is_hdf5)
       32    0.000    0.000    0.001    0.000 axis.py:1648(set_major_locator)
        5    0.000    0.000    0.001    0.000 activity.py:384(visit_Assign)
      195    0.001    0.000    0.001    0.000 base.py:406(object_proto)
        6    0.000    0.000    0.001    0.000 base_layer.py:1242(stateful)
        2    0.000    0.000    0.001    0.000 _base.py:251(_makeline)
      200    0.000    0.000    0.001    0.000 transforms.py:2057(transform)
      128    0.001    0.000    0.001    0.000 transforms.py:2859(_interval_contains_close)
        2    0.000    0.000    0.001    0.000 _base.py:3024(set_xbound)
       32    0.000    0.000    0.001    0.000 fromnumeric.py:2477(ptp)
      205    0.000    0.000    0.001    0.000 device.py:172(is_null_merge)
      198    0.000    0.000    0.001    0.000 __init__.py:1296(is_math_text)
      189    0.001    0.000    0.001    0.000 <string>:35(_asdict)
       68    0.000    0.000    0.001    0.000 axis.py:1562(convert_units)
      186    0.000    0.000    0.001    0.000 op_def_library.py:159(_MakeStr)
        4    0.000    0.000    0.001    0.000 tensor_util.py:842(constant_value_as_shape)
        2    0.000    0.000    0.001    0.000 gridspec.py:133(get_grid_positions)
        4    0.000    0.000    0.001    0.000 base_layer.py:1250(trainable)
        2    0.000    0.000    0.001    0.000 _axes.py:148(set_title)
       10    0.000    0.000    0.001    0.000 tensor_util.py:1017(shape_tensor)
        1    0.000    0.000    0.001    0.001 compile_utils.py:298(build)
      851    0.000    0.000    0.001    0.000 object_identity.py:143(__iter__)
        7    0.000    0.000    0.001    0.000 decoder.py:334(decode)
       26    0.000    0.000    0.001    0.000 {method 'draw_text_image' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      706    0.001    0.000    0.001    0.000 {method '__subclasses__' of 'type' objects}
        2    0.000    0.000    0.001    0.000 _base.py:563(set_figure)
    46/21    0.000    0.000    0.001    0.000 templates.py:46(visit)
       24    0.000    0.000    0.001    0.000 base_layer.py:1569(metrics)
       12    0.000    0.000    0.001    0.000 axis.py:1504(update_units)
      534    0.000    0.000    0.001    0.000 __init__.py:1961(<listcomp>)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(diff)
       82    0.000    0.000    0.001    0.000 ops.py:4760(_attr_scope)
      144    0.000    0.000    0.001    0.000 lines.py:953(_get_markerfacecolor)
       48    0.000    0.000    0.001    0.000 markers.py:301(get_transform)
        1    0.000    0.000    0.001    0.001 cfg.py:956(visit_With)
       27    0.000    0.000    0.001    0.000 nested_structure_coder.py:147(<listcomp>)
       10    0.000    0.000    0.001    0.000 policy.py:488(global_policy)
       10    0.000    0.000    0.001    0.000 cfg.py:687(_process_basic_statement)
      508    0.000    0.000    0.001    0.000 base.py:543(_setattr_tracking)
        2    0.000    0.000    0.000    0.000 __init__.py:11(unparse)
      168    0.000    0.000    0.000    0.000 ops.py:6769(_op_to_colocate_with)
      280    0.000    0.000    0.000    0.000 def_function.py:911(input_signature)
        2    0.000    0.000    0.000    0.000 inspect.py:935(getblock)
      381    0.000    0.000    0.000    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
        2    0.000    0.000    0.000    0.000 file_io.py:95(size)
       55    0.000    0.000    0.000    0.000 func_graph.py:697(clear_captures)
      8/4    0.000    0.000    0.000    0.000 ast3.py:369(visit_Call)
        4    0.000    0.000    0.000    0.000 base_layer.py:2141(count_params)
      372    0.000    0.000    0.000    0.000 __init__.py:833(clean)
       78    0.000    0.000    0.000    0.000 functional_ops.py:1178(<listcomp>)
      220    0.000    0.000    0.000    0.000 Hanabi.py:355(score)
       66    0.000    0.000    0.000    0.000 save_impl.py:438(training_arg_was_passed)
       78    0.000    0.000    0.000    0.000 base_layer.py:1200(_autographed_call)
      126    0.000    0.000    0.000    0.000 variables.py:1132(_shared_name)
       96    0.000    0.000    0.000    0.000 weakref.py:165(__setitem__)
       23    0.000    0.000    0.000    0.000 function_deserialization.py:488(_clean_function_name)
       15    0.000    0.000    0.000    0.000 serialized_attributes.py:188(set_and_validate_functions)
      293    0.000    0.000    0.000    0.000 base_layer_utils.py:399(call_context)
      852    0.000    0.000    0.000    0.000 nested_structure_coder.py:133(can_encode)
        1    0.000    0.000    0.000    0.000 load.py:1015(_set_network_attributes_from_metadata)
        2    0.000    0.000    0.000    0.000 file_io.py:780(stat)
       38    0.000    0.000    0.000    0.000 saveable_object_util.py:317(_add_saveable)
      104    0.000    0.000    0.000    0.000 transforms.py:2564(get_matrix)
       13    0.000    0.000    0.000    0.000 optimizer_v2.py:656(_set_hyper)
        6    0.000    0.000    0.000    0.000 saving_utils.py:270(_serialize_nested_config)
        2    0.000    0.000    0.000    0.000 file_io.py:796(stat_v2)
      150    0.000    0.000    0.000    0.000 nested_structure_coder.py:72(<listcomp>)
        2    0.000    0.000    0.000    0.000 unparser.py:32(__init__)
       69    0.000    0.000    0.000    0.000 func_graph.py:468(variables)
       76    0.000    0.000    0.000    0.000 ops.py:2510(_get_attr_type)
       99    0.000    0.000    0.000    0.000 nested_structure_coder.py:423(can_encode)
       23    0.000    0.000    0.000    0.000 function_def_to_graph.py:84(<listcomp>)
      174    0.000    0.000    0.000    0.000 ops.py:416(device)
       32    0.000    0.000    0.000    0.000 axis.py:1620(set_major_formatter)
       24    0.000    0.000    0.000    0.000 save_impl.py:509(layer_call_wrapper)
       14    0.000    0.000    0.000    0.000 activity.py:555(_visit_arg_declarations)
        1    0.000    0.000    0.000    0.000 genericpath.py:27(isfile)
      566    0.000    0.000    0.000    0.000 {built-in method builtins.round}
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.Stat}
       87    0.000    0.000    0.000    0.000 data_structures.py:650(<dictcomp>)
        1    0.000    0.000    0.000    0.000 return_statements.py:153(visit_FunctionDef)
    24/12    0.000    0.000    0.000    0.000 units.py:197(get_converter)
      120    0.000    0.000    0.000    0.000 revived_types.py:73(to_proto)
      750    0.000    0.000    0.000    0.000 base.py:951(_gather_saveables_for_checkpoint)
      198    0.000    0.000    0.000    0.000 font_manager.py:796(set_stretch)
       68    0.000    0.000    0.000    0.000 units.py:58(_is_natively_supported)
      536    0.000    0.000    0.000    0.000 backend_pdf.py:902(cvt)
       48    0.000    0.000    0.000    0.000 json_utils.py:37(default)
      198    0.000    0.000    0.000    0.000 font_manager.py:769(set_variant)
       34    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
       56    0.000    0.000    0.000    0.000 activity.py:544(_visit_node_list)
     92/2    0.000    0.000    0.000    0.000 unparser.py:59(dispatch)
     10/8    0.000    0.000    0.000    0.000 transforms.py:1709(__eq__)
        8    0.000    0.000    0.000    0.000 _collections_abc.py:701(__len__)
      478    0.000    0.000    0.000    0.000 backend_mixed.py:67(__getattr__)
        7    0.000    0.000    0.000    0.000 decoder.py:345(raw_decode)
        3    0.000    0.000    0.000    0.000 metric_serialization.py:42(_get_serialized_attributes_internal)
     1272    0.000    0.000    0.000    0.000 base.py:984(_list_extra_dependencies_for_serialization)
       24    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.cleanup_path}
       40    0.000    0.000    0.000    0.000 text.py:1093(set_position)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
      498    0.000    0.000    0.000    0.000 copy.py:252(_keep_alive)
     1071    0.000    0.000    0.000    0.000 statistics.py:201(_exact_ratio)
        1    0.000    0.000    0.000    0.000 continue_statements.py:145(visit_With)
       78    0.000    0.000    0.000    0.000 base_layer.py:2340(_should_cast_single_input)
      152    0.000    0.000    0.000    0.000 text.py:949(set_horizontalalignment)
      236    0.000    0.000    0.000    0.000 text.py:1104(set_x)
     1302    0.000    0.000    0.000    0.000 function.py:223(<genexpr>)
       16    0.000    0.000    0.000    0.000 spines.py:266(_adjust_location)
       34    0.000    0.000    0.000    0.000 axis.py:413(apply_tickdir)
       34    0.000    0.000    0.000    0.000 posixpath.py:75(join)
        2    0.000    0.000    0.000    0.000 _base.py:913(_gen_axes_patch)
        1    0.000    0.000    0.000    0.000 tempfile.py:663(NamedTemporaryFile)
      389    0.000    0.000    0.000    0.000 tokenize.py:152(_compile)
        3    0.000    0.000    0.000    0.000 type_spec.py:110(most_specific_compatible_type)
       28    0.000    0.000    0.000    0.000 functional.py:335(<listcomp>)
        4    0.000    0.000    0.000    0.000 figure.py:966(set_facecolor)
      148    0.000    0.000    0.000    0.000 artist.py:1037(set_zorder)
       32    0.000    0.000    0.000    0.000 function_base.py:1141(diff)
        6    0.000    0.000    0.000    0.000 numeric.py:2167(isclose)
        1    0.000    0.000    0.000    0.000 liveness.py:183(visit_Try)
       52    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
       16    0.000    0.000    0.000    0.000 base_layer.py:2409(_init_set_name)
      156    0.000    0.000    0.000    0.000 axis.py:819(get_transform)
        4    0.000    0.000    0.000    0.000 _base.py:1116(_set_title_offset_trans)
      356    0.000    0.000    0.000    0.000 __init__.py:2113(type_name)
        2    0.000    0.000    0.000    0.000 _datasource.py:517(exists)
        3    0.000    0.000    0.000    0.000 save.py:677(_verify_ops)
     1290    0.000    0.000    0.000    0.000 ops.py:3156(_set_control_flow_context)
      147    0.000    0.000    0.000    0.000 nested_structure_coder.py:333(do_encode)
      517    0.000    0.000    0.000    0.000 ops.py:4584(op_in_group)
      136    0.000    0.000    0.000    0.000 ticker.py:564(fix_minus)
       56    0.000    0.000    0.000    0.000 activity.py:545(<listcomp>)
      162    0.000    0.000    0.000    0.000 regularizers.py:342(serialize)
       10    0.000    0.000    0.000    0.000 _base.py:2045(_process_unit_info)
      2/1    0.000    0.000    0.000    0.000 return_statements.py:93(_visit_statement_block)
      271    0.000    0.000    0.000    0.000 compile_utils.py:291(metrics)
      450    0.000    0.000    0.000    0.000 base_layer.py:2954(_eager_losses)
       20    0.000    0.000    0.000    0.000 backprop.py:116(get_attr)
       23    0.000    0.000    0.000    0.000 function_def_to_graph.py:77(<listcomp>)
        8    0.000    0.000    0.000    0.000 _base.py:859(_set_position)
       34    0.000    0.000    0.000    0.000 axis.py:529(apply_tickdir)
        4    0.000    0.000    0.000    0.000 functional.py:825(_map_graph_network)
      195    0.000    0.000    0.000    0.000 base.py:402(trackable)
       52    0.000    0.000    0.000    0.000 tensor_shape.py:282(merge_with)
      236    0.000    0.000    0.000    0.000 text.py:1115(set_y)
       32    0.000    0.000    0.000    0.000 _methods.py:228(_ptp)
      3/1    0.000    0.000    0.000    0.000 unparser.py:346(_FunctionDef)
        8    0.000    0.000    0.000    0.000 text.py:223(_get_xy_display)
        1    0.000    0.000    0.000    0.000 {method 'readlines' of '_io._IOBase' objects}
      3/1    0.000    0.000    0.000    0.000 unparser.py:352(__FunctionDef_helper)
      120    0.000    0.000    0.000    0.000 transforms.py:2162(transform_non_affine)
        1    0.000    0.000    0.000    0.000 saving_utils.py:204(compile_args_from_training_config)
      254    0.000    0.000    0.000    0.000 ops.py:517(<listcomp>)
        2    0.000    0.000    0.000    0.000 axis.py:1945(_get_label)
      162    0.000    0.000    0.000    0.000 base_layer.py:2515(_call_arg_was_passed)
        1    0.000    0.000    0.000    0.000 reaching_definitions.py:257(visit_Try)
       78    0.000    0.000    0.000    0.000 activity.py:327(_exit_scope)
        6    0.000    0.000    0.000    0.000 tf_utils.py:445(maybe_init_scope)
      172    0.000    0.000    0.000    0.000 scale.py:117(get_transform)
       20    0.000    0.000    0.000    0.000 _base.py:2048(_process_single_axis)
       78    0.000    0.000    0.000    0.000 forwardprop_util.py:34(__new__)
        9    0.000    0.000    0.000    0.000 uuid.py:621(uuid4)
       21    0.000    0.000    0.000    0.000 templates.py:72(visit_Name)
       32    0.000    0.000    0.000    0.000 axis.py:1664(set_minor_locator)
       38    0.000    0.000    0.000    0.000 patches.py:315(_set_edgecolor)
      150    0.000    0.000    0.000    0.000 text.py:240(set_rotation_mode)
        2    0.000    0.000    0.000    0.000 _base.py:3435(set_ybound)
       32    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
      547    0.000    0.000    0.000    0.000 api.py:122(get_effective_source_map)
      218    0.000    0.000    0.000    0.000 lines.py:31(_get_dash_pattern)
        6    0.000    0.000    0.000    0.000 transforms.py:904(p1)
        8    0.000    0.000    0.000    0.000 base_layer.py:1228(supports_masking)
       51    0.000    0.000    0.000    0.000 fractions.py:386(reverse)
       22    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
        6    0.000    0.000    0.000    0.000 save.py:360(_tensor_dict_to_tensorinfo)
        9    0.000    0.000    0.000    0.000 save_impl.py:385(to_tensor_spec_or_none)
        3    0.000    0.000    0.000    0.000 base_layer.py:1560(_clear_losses)
       20    0.000    0.000    0.000    0.000 cycler.py:349(by_key)
      170    0.000    0.000    0.000    0.000 function_deserialization.py:424(<genexpr>)
       20    0.000    0.000    0.000    0.000 math_ops.py:1855(_may_reduce_to_scalar)
       12    0.000    0.000    0.000    0.000 patches.py:436(set_fill)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:39(seterr)
       90    0.000    0.000    0.000    0.000 base_layer_utils.py:541(is_subclassed)
      165    0.000    0.000    0.000    0.000 base_layer_utils.py:524(__exit__)
      198    0.000    0.000    0.000    0.000 font_manager.py:746(set_family)
      169    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
      156    0.000    0.000    0.000    0.000 {method 'set_size' of 'matplotlib.ft2font.FT2Font' objects}
      537    0.000    0.000    0.000    0.000 nested_structure_coder.py:280(can_encode)
        1    0.000    0.000    0.000    0.000 tf_inspect.py:355(getsourcelines)
       68    0.000    0.000    0.000    0.000 artist.py:923(set_alpha)
        6    0.000    0.000    0.000    0.000 save.py:361(<dictcomp>)
       78    0.000    0.000    0.000    0.000 policy.py:585(_is_convertible_to_dtype)
      460    0.000    0.000    0.000    0.000 transforms.py:177(<lambda>)
        7    0.000    0.000    0.000    0.000 training.py:569(_reset_compile_cache)
      273    0.000    0.000    0.000    0.000 ops.py:6625(_restore_name_scope)
        8    0.000    0.000    0.000    0.000 transforms.py:1509(transform_path)
       34    0.000    0.000    0.000    0.000 shape_base.py:25(atleast_1d)
       60    0.000    0.000    0.000    0.000 ops.py:6287(add_to_collection)
      284    0.000    0.000    0.000    0.000 nested_structure_coder.py:143(can_decode)
     10/3    0.000    0.000    0.000    0.000 type_spec.py:395(__most_specific_compatible_type_serialization)
        1    0.000    0.000    0.000    0.000 inspect.py:946(getsourcelines)
  280/272    0.000    0.000    0.000    0.000 spines.py:220(_ensure_position_is_set)
        4    0.000    0.000    0.000    0.000 _base.py:800(_update_transScale)
       47    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
      206    0.000    0.000    0.000    0.000 lines.py:1271(set_markersize)
        1    0.000    0.000    0.000    0.000 load.py:423(_recreate_bare_concrete_function)
       32    0.000    0.000    0.000    0.000 _methods.py:78(_clip_dep_invoke_with_casting)
      585    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 function_deserialization.py:153(setup_bare_concrete_function)
       23    0.000    0.000    0.000    0.000 re.py:179(search)
      923    0.000    0.000    0.000    0.000 device_spec.py:431(to_string)
      150    0.000    0.000    0.000    0.000 text.py:933(set_color)
     2963    0.000    0.000    0.000    0.000 inspect.py:2506(default)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
       23    0.000    0.000    0.000    0.000 function_def_to_graph.py:69(<listcomp>)
      153    0.000    0.000    0.000    0.000 fractions.py:84(__new__)
       26    0.000    0.000    0.000    0.000 patches.py:330(set_edgecolor)
      206    0.000    0.000    0.000    0.000 lines.py:1228(set_markeredgewidth)
        6    0.000    0.000    0.000    0.000 utils_impl.py:70(build_tensor_info_internal)
      126    0.000    0.000    0.000    0.000 auto_control_deps_utils.py:66(<listcomp>)
        8    0.000    0.000    0.000    0.000 path.py:526(get_extents)
      809    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
       78    0.000    0.000    0.000    0.000 activity.py:182(finalize)
       20    0.000    0.000    0.000    0.000 math_ops.py:1850(_has_fully_defined_shape)
        1    0.000    0.000    0.000    0.000 return_statements.py:113(visit_With)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:735(source_to_code)
       86    0.000    0.000    0.000    0.000 context.py:2390(_tmp_in_graph_mode)
       36    0.000    0.000    0.000    0.000 node.py:188(serialize_first_arg_tensor)
        6    0.000    0.000    0.000    0.000 metric_serialization.py:32(_python_properties_internal)
      295    0.000    0.000    0.000    0.000 resource_variable_ops.py:503(device)
      158    0.000    0.000    0.000    0.000 saveable_object.py:24(__init__)
      128    0.000    0.000    0.000    0.000 tensor_shape.py:1238(unknown_shape)
     12/6    0.000    0.000    0.000    0.000 type_spec.py:429(<genexpr>)
      150    0.000    0.000    0.000    0.000 text.py:1227(set_usetex)
       32    0.000    0.000    0.000    0.000 _methods.py:36(_sum)
        2    0.000    0.000    0.000    0.000 training.py:557(_get_optimizer)
       12    0.000    0.000    0.000    0.000 function.py:2709(<genexpr>)
      219    0.000    0.000    0.000    0.000 traceable_stack.py:111(pop_obj)
       32    0.000    0.000    0.000    0.000 axis.py:1634(set_minor_formatter)
       36    0.000    0.000    0.000    0.000 base_layer.py:3005(_object_identifier)
      274    0.000    0.000    0.000    0.000 artist.py:371(get_transform)
       26    0.000    0.000    0.000    0.000 __init__.py:138(connect)
    72/69    0.000    0.000    0.000    0.000 tf_utils.py:187(<listcomp>)
      206    0.000    0.000    0.000    0.000 lines.py:1038(set_antialiased)
      208    0.000    0.000    0.000    0.000 lines.py:635(axes)
        5    0.000    0.000    0.000    0.000 parser.py:252(parse_expression)
        3    0.000    0.000    0.000    0.000 __init__.py:1406(makeRecord)
       68    0.000    0.000    0.000    0.000 axis.py:197(_set_labelrotation)
  750/270    0.000    0.000    0.000    0.000 tensor_util.py:229(_FlattenToStrings)
     1029    0.000    0.000    0.000    0.000 device_spec.py:38(_as_int_or_none)
      160    0.000    0.000    0.000    0.000 transforms.py:2658(get_matrix)
       12    0.000    0.000    0.000    0.000 save_impl.py:296(_restore_child_layer_functions)
       23    0.000    0.000    0.000    0.000 importer.py:178(_ConvertInputMapValues)
        1    0.000    0.000    0.000    0.000 context.py:1097(add_function_def)
      121    0.000    0.000    0.000    0.000 ast.py:118(copy_location)
      343    0.000    0.000    0.000    0.000 device_spec.py:350(_components_to_string)
      137    0.000    0.000    0.000    0.000 tf_utils.py:281(_is_atomic_nested)
      123    0.000    0.000    0.000    0.000 serialized_attributes.py:171(<dictcomp>)
      204    0.000    0.000    0.000    0.000 backend_bases.py:938(set_foreground)
       18    0.000    0.000    0.000    0.000 layer_utils.py:109(<genexpr>)
        1    0.000    0.000    0.000    0.000 cfg.py:248(visit_reverse)
        3    0.000    0.000    0.000    0.000 __init__.py:251(__init__)
      113    0.000    0.000    0.000    0.000 ops.py:4596(_current_control_dependencies)
        3    0.000    0.000    0.000    0.000 training.py:2288(state_updates)
        7    0.000    0.000    0.000    0.000 activity.py:375(visit_Expr)
       16    0.000    0.000    0.000    0.000 _base.py:3087(_validate_converted_limits)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1626(writeInfoDict)
      150    0.000    0.000    0.000    0.000 ops.py:5185(__enter__)
       50    0.000    0.000    0.000    0.000 nested_structure_coder.py:74(_get_decoders)
      124    0.000    0.000    0.000    0.000 transforms.py:1705(__array__)
        2    0.000    0.000    0.000    0.000 training.py:560(_get_single_optimizer)
      594    0.000    0.000    0.000    0.000 typing.py:1089(__eq__)
       22    0.000    0.000    0.000    0.000 fromnumeric.py:2324(all)
      435    0.000    0.000    0.000    0.000 <string>:12(__new__)
       42    0.000    0.000    0.000    0.000 transforms.py:2544(__init__)
      692    0.000    0.000    0.000    0.000 base_layer.py:1218(name)
        1    0.000    0.000    0.000    0.000 tempfile.py:390(_mkstemp_inner)
        3    0.000    0.000    0.000    0.000 training.py:639(metrics_names)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:441(__enter__)
        2    0.000    0.000    0.000    0.000 transforms.py:1318(contains_branch_seperately)
       37    0.000    0.000    0.000    0.000 reaching_definitions.py:91(__or__)
      744    0.000    0.000    0.000    0.000 transforms.py:1868(get_matrix)
       57    0.000    0.000    0.000    0.000 resource_variable_ops.py:97(<listcomp>)
        2    0.000    0.000    0.000    0.000 optimizers.py:872(get)
      122    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)
       38    0.000    0.000    0.000    0.000 patches.py:768(_convert_units)
      396    0.000    0.000    0.000    0.000 font_manager.py:940(_normalize_font_family)
      343    0.000    0.000    0.000    0.000 device_spec.py:42(_as_device_str_or_none)
       16    0.000    0.000    0.000    0.000 transforms.py:2266(blended_transform_factory)
        1    0.000    0.000    0.000    0.000 parser.py:59(dedent_block)
        1    0.000    0.000    0.000    0.000 tokenize.py:448(open)
  454/441    0.000    0.000    0.000    0.000 qual_names.py:155(__hash__)
      547    0.000    0.000    0.000    0.000 tf_stack.py:123(get_filtered_filenames)
       32    0.000    0.000    0.000    0.000 ticker.py:508(__init__)
      395    0.000    0.000    0.000    0.000 re.py:231(compile)
        5    0.000    0.000    0.000    0.000 layer_utils.py:182(print_row)
        3    0.000    0.000    0.000    0.000 data_adapter.py:1337(expand_1d)
       11    0.000    0.000    0.000    0.000 textwrap.py:414(dedent)
       78    0.000    0.000    0.000    0.000 function.py:1430(forward)
      175    0.000    0.000    0.000    0.000 qual_names.py:60(__init__)
        2    0.000    0.000    0.000    0.000 transforms.py:1298(contains_branch)
     1726    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
      126    0.000    0.000    0.000    0.000 base_layer.py:3001(_trackable_saved_model_saver)
      694    0.000    0.000    0.000    0.000 data_structures.py:377(__getitem__)
        6    0.000    0.000    0.000    0.000 backend_bases.py:1635(__init__)
      250    0.000    0.000    0.000    0.000 iostream.py:316(closed)
       23    0.000    0.000    0.000    0.000 importer.py:204(_PopulateTFImportGraphDefOptions)
      546    0.000    0.000    0.000    0.000 context.py:808(scope_name)
        6    0.000    0.000    0.000    0.000 layer_utils.py:105(<listcomp>)
       16    0.000    0.000    0.000    0.000 load.py:211(<listcomp>)
       21    0.000    0.000    0.000    0.000 loss_scale.py:46(get)
        1    0.000    0.000    0.000    0.000 unparser.py:435(_With)
        8    0.000    0.000    0.000    0.000 transforms.py:957(set)
        1    0.000    0.000    0.000    0.000 unparser.py:422(_generic_With)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(nonzero)
       57    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
        2    0.000    0.000    0.000    0.000 _base.py:612(_set_lim_and_transforms)
      206    0.000    0.000    0.000    0.000 lines.py:1050(set_color)
       20    0.000    0.000    0.000    0.000 re.py:184(sub)
     1520    0.000    0.000    0.000    0.000 data_structures.py:447(_external_modification)
        4    0.000    0.000    0.000    0.000 data_structures.py:1043(<lambda>)
       76    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrType}
      385    0.000    0.000    0.000    0.000 ops.py:5066(_colocation_stack)
        2    0.000    0.000    0.000    0.000 axis.py:2232(_get_label)
        5    0.000    0.000    0.000    0.000 tensor_spec.py:100(most_specific_compatible_type)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:276(__init__)
        9    0.000    0.000    0.000    0.000 input_spec.py:230(to_tensor_spec)
      165    0.000    0.000    0.000    0.000 base_layer_utils.py:503(__init__)
      102    0.000    0.000    0.000    0.000 device_spec.py:376(__eq__)
      108    0.000    0.000    0.000    0.000 constraints.py:285(serialize)
       78    0.000    0.000    0.000    0.000 base_layer.py:1157(_set_training_mode)
       24    0.000    0.000    0.000    0.000 transforms.py:2408(__init__)
        2    0.000    0.000    0.000    0.000 inspect.py:760(findsource)
       51    0.000    0.000    0.000    0.000 fractions.py:374(forward)
     1520    0.000    0.000    0.000    0.000 data_structures.py:431(_non_append_mutation)
        4    0.000    0.000    0.000    0.000 math_ops.py:3458(add_n)
       25    0.000    0.000    0.000    0.000 tf_inspect.py:365(isclass)
       51    0.000    0.000    0.000    0.000 base_layer.py:2578(_get_node_attribute_at_index)
        3    0.000    0.000    0.000    0.000 base_layer.py:2985(_set_save_spec)
       78    0.000    0.000    0.000    0.000 backend_agg.py:55(get_hinting_flag)
      206    0.000    0.000    0.000    0.000 lines.py:1213(set_markeredgecolor)
       24    0.000    0.000    0.000    0.000 ast3.py:250(visit_Name)
       12    0.000    0.000    0.000    0.000 ticker.py:1681(nonsingular)
      118    0.000    0.000    0.000    0.000 stride_tricks.py:262(<listcomp>)
      309    0.000    0.000    0.000    0.000 weakref.py:125(_commit_removals)
      115    0.000    0.000    0.000    0.000 reaching_definitions.py:69(__init__)
      582    0.000    0.000    0.000    0.000 transforms.py:939(get_points)
      690    0.000    0.000    0.000    0.000 {method 'join' of 'bytes' objects}
        6    0.000    0.000    0.000    0.000 _datasource.py:376(_isurl)
        2    0.000    0.000    0.000    0.000 {built-in method posix.open}
      148    0.000    0.000    0.000    0.000 function_def_to_graph.py:258(_get_num_args)
        5    0.000    0.000    0.000    0.000 cfg.py:785(visit_Assign)
        6    0.000    0.000    0.000    0.000 iterator_ops.py:898(_from_components)
      732    0.000    0.000    0.000    0.000 function.py:2566(<genexpr>)
      368    0.000    0.000    0.000    0.000 __init__.py:886(<listcomp>)
      712    0.000    0.000    0.000    0.000 __init__.py:2111(<genexpr>)
       23    0.000    0.000    0.000    0.000 function_def_to_graph.py:81(<listcomp>)
       42    0.000    0.000    0.000    0.000 functional.py:816(_trackable_saved_model_saver)
      440    0.000    0.000    0.000    0.000 text.py:1151(set_text)
      651    0.000    0.000    0.000    0.000 nested_structure_coder.py:199(can_encode)
       82    0.000    0.000    0.000    0.000 transforms.py:376(intervalx)
       99    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddControlInput}
        4    0.000    0.000    0.000    0.000 functional.py:760(_compute_tensor_usage_count)
      267    0.000    0.000    0.000    0.000 func_graph.py:489(<genexpr>)
      514    0.000    0.000    0.000    0.000 ops.py:113(tensor_id)
       50    0.000    0.000    0.000    0.000 nested_structure_coder.py:76(<listcomp>)
      727    0.000    0.000    0.000    0.000 object_identity.py:78(unwrapped)
      634    0.000    0.000    0.000    0.000 ops.py:4575(control_inputs)
        2    0.000    0.000    0.000    0.000 optimizer_v2.py:879(from_config)
       20    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationToNodeDef}
      194    0.000    0.000    0.000    0.000 __init__.py:1860(_str_lower_equal)
        4    0.000    0.000    0.000    0.000 posixpath.py:376(abspath)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:845(_cache_bytecode)
      257    0.000    0.000    0.000    0.000 nested_structure_coder.py:186(can_decode)
        6    0.000    0.000    0.000    0.000 generic_utils.py:745(to_snake_case)
        1    0.000    0.000    0.000    0.000 cfg.py:914(visit_Try)
        4    0.000    0.000    0.000    0.000 transforms.py:1669(set)
       21    0.000    0.000    0.000    0.000 loss_scale.py:421(get)
       13    0.000    0.000    0.000    0.000 generic_utils.py:283(class_and_config_for_serialized_keras_object)
      532    0.000    0.000    0.000    0.000 artist.py:197(axes)
     1142    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
      455    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        9    0.000    0.000    0.000    0.000 uuid.py:106(__init__)
       24    0.000    0.000    0.000    0.000 __init__.py:1633(safe_first_element)
        3    0.000    0.000    0.000    0.000 version_utils.py:54(__new__)
      150    0.000    0.000    0.000    0.000 ops.py:5193(__exit__)
       26    0.000    0.000    0.000    0.000 backend_pdf.py:2085(encode_string)
      537    0.000    0.000    0.000    0.000 nested_structure_coder.py:257(can_encode)
        3    0.000    0.000    0.000    0.000 gen_io_ops.py:1520(<listcomp>)
     10/8    0.000    0.000    0.000    0.000 transforms.py:2335(__eq__)
      248    0.000    0.000    0.000    0.000 __init__.py:1850(_str_equal)
        2    0.000    0.000    0.000    0.000 rmsprop.py:98(__init__)
        6    0.000    0.000    0.000    0.000 transpiler.py:190(instantiate)
        4    0.000    0.000    0.000    0.000 templates.py:154(visit_keyword)
        8    0.000    0.000    0.000    0.000 transforms.py:1520(transform_path_affine)
       51    0.000    0.000    0.000    0.000 fractions.py:401(_add)
        3    0.000    0.000    0.000    0.000 save.py:527(_trace_resource_initializers)
       37    0.000    0.000    0.000    0.000 version_utils.py:125(is_v1_layer_or_model)
       76    0.000    0.000    0.000    0.000 backend_bases.py:958(set_joinstyle)
      126    0.000    0.000    0.000    0.000 data_structures.py:1059(<lambda>)
       21    0.000    0.000    0.000    0.000 policy.py:342(_parse_name)
       38    0.000    0.000    0.000    0.000 backend_pdf.py:2223(paint)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1264(writeExtGSTates)
        6    0.000    0.000    0.000    0.000 util.py:34(squeeze_or_expand_dimensions)
      222    0.000    0.000    0.000    0.000 auto_control_deps_utils.py:54(<listcomp>)
       48    0.000    0.000    0.000    0.000 getlimits.py:365(__new__)
      670    0.000    0.000    0.000    0.000 multiarray.py:707(dot)
      686    0.000    0.000    0.000    0.000 device_spec.py:34(_as_str_or_none)
       12    0.000    0.000    0.000    0.000 axis.py:2147(get_ticks_position)
       12    0.000    0.000    0.000    0.000 transforms.py:2221(__init__)
        5    0.000    0.000    0.000    0.000 load.py:402(_recreate_base_user_object)
        2    0.000    0.000    0.000    0.000 axis.py:2252(_get_offset_text)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:850(set_data)
       99    0.000    0.000    0.000    0.000 nested_structure_coder.py:403(do_encode)
        2    0.000    0.000    0.000    0.000 axis.py:1963(_get_offset_text)
       18    0.000    0.000    0.000    0.000 backend_bases.py:2185(mpl_connect)
       23    0.000    0.000    0.000    0.000 {method 'search' of '_sre.SRE_Pattern' objects}
        3    0.000    0.000    0.000    0.000 metrics_utils.py:63(update_state_wrapper)
      156    0.000    0.000    0.000    0.000 base_layer.py:932(<genexpr>)
        1    0.000    0.000    0.000    0.000 compile_utils.py:134(build)
       33    0.000    0.000    0.000    0.000 base_layer.py:2070(input)
      250    0.000    0.000    0.000    0.000 metrics.py:247(<listcomp>)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:416(parent)
        8    0.000    0.000    0.000    0.000 spines.py:381(set_position)
        2    0.000    0.000    0.000    0.000 lazy_loader.py:61(__getattr__)
       22    0.000    0.000    0.000    0.000 reaching_definitions.py:204(visit_Name)
        2    0.000    0.000    0.000    0.000 figure.py:1423(_add_axes_internal)
       82    0.000    0.000    0.000    0.000 transforms.py:385(intervaly)
        3    0.000    0.000    0.000    0.000 training.py:2637(reduce_per_replica)
        6    0.000    0.000    0.000    0.000 load.py:1026(_maybe_add_serialized_attributes)
       51    0.000    0.000    0.000    0.000 fractions.py:423(_div)
       78    0.000    0.000    0.000    0.000 graph_view.py:80(_name_slot_variable)
      437    0.000    0.000    0.000    0.000 device_spec.py:426(__hash__)
       52    0.000    0.000    0.000    0.000 markers.py:240(__bool__)
       72    0.000    0.000    0.000    0.000 node.py:147(map_arguments)
        6    0.000    0.000    0.000    0.000 ast3.py:149(visit_arguments)
        2    0.000    0.000    0.000    0.000 lazy_loader.py:42(_load)
        2    0.000    0.000    0.000    0.000 transforms.py:1639(__eq__)
        8    0.000    0.000    0.000    0.000 transforms.py:1731(transform_path_affine)
       57    0.000    0.000    0.000    0.000 resource_variable_ops.py:100(<listcomp>)
      172    0.000    0.000    0.000    0.000 device_spec.py:300(_string_to_components)
        8    0.000    0.000    0.000    0.000 _base.py:810(get_position)
       76    0.000    0.000    0.000    0.000 backend_bases.py:890(set_capstyle)
       33    0.000    0.000    0.000    0.000 nested_structure_coder.py:412(do_decode)
       23    0.000    0.000    0.000    0.000 c_api_util.py:60(__init__)
       32    0.000    0.000    0.000    0.000 ticker.py:1994(le)
       26    0.000    0.000    0.000    0.000 backend_pdf.py:1718(track_characters)
      102    0.000    0.000    0.000    0.000 statistics.py:159(<genexpr>)
       32    0.000    0.000    0.000    0.000 scale.py:718(scale_factory)
       10    0.000    0.000    0.000    0.000 transforms.py:274(frozen)
      136    0.000    0.000    0.000    0.000 transformer.py:194(__getitem__)
      498    0.000    0.000    0.000    0.000 generic_utils.py:167(get_registered_name)
       60    0.000    0.000    0.000    0.000 ops.py:3933(add_to_collection)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:1016(with_rank)
       60    0.000    0.000    0.000    0.000 weakref.py:438(items)
        2    0.000    0.000    0.000    0.000 transforms.py:2093(__eq__)
        4    0.000    0.000    0.000    0.000 _dill.py:400(__init__)
       27    0.000    0.000    0.000    0.000 data_structures.py:902(_list_functions_for_serialization)
       52    0.000    0.000    0.000    0.000 transforms.py:2736(get_affine)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:106(_write_atomic)
      733    0.000    0.000    0.000    0.000 ops.py:4634(<genexpr>)
       17    0.000    0.000    0.000    0.000 liveness.py:50(visit_node)
        7    0.000    0.000    0.000    0.000 activity.py:547(_visit_arg_annotations)
      301    0.000    0.000    0.000    0.000 typing.py:1019(_abc_negative_cache)
      432    0.000    0.000    0.000    0.000 nested_structure_coder.py:170(<genexpr>)
       30    0.000    0.000    0.000    0.000 function.py:2292(_deterministic_dict_values)
       20    0.000    0.000    0.000    0.000 backprop.py:75(op_attr_type)
        4    0.000    0.000    0.000    0.000 figure.py:956(set_edgecolor)
       24    0.000    0.000    0.000    0.000 transforms.py:2451(get_matrix)
      480    0.000    0.000    0.000    0.000 resource_variable_ops.py:513(name)
       27    0.000    0.000    0.000    0.000 <string>:24(_replace)
       48    0.000    0.000    0.000    0.000 lines.py:963(get_markerfacecolor)
      537    0.000    0.000    0.000    0.000 nested_structure_coder.py:307(can_encode)
        2    0.000    0.000    0.000    0.000 backend_bases.py:3360(new_figure_manager_given_figure)
        4    0.000    0.000    0.000    0.000 transforms.py:2720(get_transformed_path_and_affine)
        2    0.000    0.000    0.000    0.000 cfg.py:599(build)
       12    0.000    0.000    0.000    0.000 axis.py:1828(_get_ticks_position)
        2    0.000    0.000    0.000    0.000 ast3.py:187(visit_ExceptHandler)
      760    0.000    0.000    0.000    0.000 artist.py:800(get_visible)
      752    0.000    0.000    0.000    0.000 artist.py:888(get_agg_filter)
      108    0.000    0.000    0.000    0.000 serialized_attributes.py:183(<dictcomp>)
       12    0.000    0.000    0.000    0.000 optimizer_v2.py:1173(_restore_slot_variable)
       32    0.000    0.000    0.000    0.000 functional_saver.py:168(<dictcomp>)
       78    0.000    0.000    0.000    0.000 tape.py:163(should_record_backprop)
      148    0.000    0.000    0.000    0.000 font_manager.py:1030(get_default_size)
        4    0.000    0.000    0.000    0.000 functional.py:1169(process_layer)
       62    0.000    0.000    0.000    0.000 backend_pdf.py:1596(reserveObject)
       53    0.000    0.000    0.000    0.000 gast.py:321(copy_location)
      752    0.000    0.000    0.000    0.000 artist.py:868(get_rasterized)
      354    0.000    0.000    0.000    0.000 stride_tricks.py:266(<genexpr>)
     1836    0.000    0.000    0.000    0.000 copy.py:190(_deepcopy_atomic)
      144    0.000    0.000    0.000    0.000 distribute_utils.py:216(is_distributed_variable)
       48    0.000    0.000    0.000    0.000 lines.py:928(get_markeredgecolor)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:446(__exit__)
        8    0.000    0.000    0.000    0.000 parse.py:361(urlparse)
       15    0.000    0.000    0.000    0.000 serialized_attributes.py:174(functions_to_serialize)
       24    0.000    0.000    0.000    0.000 serialization.py:28(get_json_type)
      912    0.000    0.000    0.000    0.000 font_manager.py:727(get_size_in_points)
      246    0.000    0.000    0.000    0.000 base_serialization.py:33(__init__)
      156    0.000    0.000    0.000    0.000 base_layer.py:2468(<genexpr>)
      8/4    0.000    0.000    0.000    0.000 unparser.py:716(_Call)
       51    0.000    0.000    0.000    0.000 statistics.py:233(_convert)
       12    0.000    0.000    0.000    0.000 optimizer_v2.py:621(_assume_mirrored)
       26    0.000    0.000    0.000    0.000 reaching_definitions.py:101(__sub__)
        6    0.000    0.000    0.000    0.000 transforms.py:278(__array__)
      260    0.000    0.000    0.000    0.000 weakref.py:134(__getitem__)
        2    0.000    0.000    0.000    0.000 optimizer_v2.py:563(all_reduce_fn)
       20    0.000    0.000    0.000    0.000 function_def_to_graph.py:107(is_function)
        3    0.000    0.000    0.000    0.000 functional.py:272(output_shape)
       78    0.000    0.000    0.000    0.000 function.py:1413(__init__)
      179    0.000    0.000    0.000    0.000 nested_structure_coder.py:289(can_decode)
        7    0.000    0.000    0.000    0.000 directives.py:117(visit_Name)
        8    0.000    0.000    0.000    0.000 templates.py:185(visit_Attribute)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1804(nonzero)
       25    0.000    0.000    0.000    0.000 initializers_v2.py:747(_get_dtype)
      156    0.000    0.000    0.000    0.000 base_layer.py:3234(<genexpr>)
        6    0.000    0.000    0.000    0.000 function_wrappers.py:47(__init__)
        1    0.000    0.000    0.000    0.000 anno.py:152(dup)
       15    0.000    0.000    0.000    0.000 serialized_attributes.py:142(new)
        3    0.000    0.000    0.000    0.000 file_io.py:631(has_atomic_move)
       57    0.000    0.000    0.000    0.000 resource_variable_ops.py:268(__init__)
       10    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
       23    0.000    0.000    0.000    0.000 c_api_util.py:63(__del__)
      182    0.000    0.000    0.000    0.000 weakref.py:193(get)
       72    0.000    0.000    0.000    0.000 __init__.py:422(<genexpr>)
      168    0.000    0.000    0.000    0.000 functional.py:821(_make_node_key)
       24    0.000    0.000    0.000    0.000 saving_utils.py:273(_serialize_fn)
       62    0.000    0.000    0.000    0.000 backend_pdf.py:1606(recordXref)
        4    0.000    0.000    0.000    0.000 training.py:2401(_set_save_spec)
      217    0.000    0.000    0.000    0.000 nested_structure_coder.py:209(can_decode)
        4    0.000    0.000    0.000    0.000 indexed_slices.py:361(convert_n_to_tensor_or_indexed_slices)
      156    0.000    0.000    0.000    0.000 ops.py:4888(_override_gradient_function)
      698    0.000    0.000    0.000    0.000 font_manager.py:679(get_family)
       18    0.000    0.000    0.000    0.000 ast3.py:139(visit_NameConstant)
        2    0.000    0.000    0.000    0.000 _datasource.py:322(__init__)
      179    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
      271    0.000    0.000    0.000    0.000 compile_utils.py:129(<listcomp>)
        7    0.000    0.000    0.000    0.000 utils_impl.py:218(get_variables_dir)
      278    0.000    0.000    0.000    0.000 transforms.py:1689(<lambda>)
       13    0.000    0.000    0.000    0.000 cfg.py:348(_add_new_node)
      410    0.000    0.000    0.000    0.000 traceable_stack.py:115(peek_top_obj)
        6    0.000    0.000    0.000    0.000 numeric.py:2244(within_tol)
        1    0.000    0.000    0.000    0.000 inspect_utils.py:339(getfutureimports)
      188    0.000    0.000    0.000    0.000 nested_structure_coder.py:240(can_decode)
        3    0.000    0.000    0.000    0.000 cfg.py:691(_process_exit_statement)
       47    0.000    0.000    0.000    0.000 def_function.py:556(_get_key_for_call_stats)
       30    0.000    0.000    0.000    0.000 function.py:2893(<genexpr>)
        4    0.000    0.000    0.000    0.000 indexed_slices.py:320(internal_convert_n_to_tensor_or_indexed_slices)
       23    0.000    0.000    0.000    0.000 function.py:429(<listcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:976(set_dpi)
      179    0.000    0.000    0.000    0.000 nested_structure_coder.py:316(can_decode)
        3    0.000    0.000    0.000    0.000 execute.py:281(convert_to_mixed_eager_tensors)
      179    0.000    0.000    0.000    0.000 nested_structure_coder.py:266(can_decode)
      172    0.000    0.000    0.000    0.000 execute.py:184(make_bool)
        1    0.000    0.000    0.000    0.000 continue_statements.py:119(_visit_non_loop_body)
      241    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
       35    0.000    0.000    0.000    0.000 revived_types.py:89(should_load)
      297    0.000    0.000    0.000    0.000 nested_structure_coder.py:376(can_encode)
        7    0.000    0.000    0.000    0.000 activity.py:237(__init__)
      169    0.000    0.000    0.000    0.000 op_def_library.py:166(_MakeBool)
       32    0.000    0.000    0.000    0.000 {built-in method builtins.__import__}
       23    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewImportGraphDefOptions}
        4    0.000    0.000    0.000    0.000 compile_utils.py:70(_maybe_broadcast_to_outputs)
      175    0.000    0.000    0.000    0.000 typing.py:1033(_abc_negative_cache_version)
       72    0.000    0.000    0.000    0.000 encoder.py:104(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:108(import_module)
       98    0.000    0.000    0.000    0.000 weakref.py:288(update)
       39    0.000    0.000    0.000    0.000 weakref.py:109(remove)
        3    0.000    0.000    0.000    0.000 functional.py:1036(_deserialize_keras_tensors)
       29    0.000    0.000    0.000    0.000 distribute_lib.py:296(_require_cross_replica_or_default_context_extended)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:2199(batch_reduce_to)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:139(geterr)
      126    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
       10    0.000    0.000    0.000    0.000 cfg.py:391(add_ordinary_node)
    37/32    0.000    0.000    0.000    0.000 templates.py:218(_convert_to_ast)
      155    0.000    0.000    0.000    0.000 data_structures.py:330(_name_element)
        2    0.000    0.000    0.000    0.000 py_checkpoint_reader.py:51(get_variable_to_dtype_map)
       14    0.000    0.000    0.000    0.000 posixpath.py:121(splitext)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunctionDef}
  160/148    0.000    0.000    0.000    0.000 json_utils.py:63(_decode_helper)
        4    0.000    0.000    0.000    0.000 inspect_utils.py:350(<genexpr>)
       39    0.000    0.000    0.000    0.000 distribute_lib.py:340(_require_strategy_scope_strategy)
       24    0.000    0.000    0.000    0.000 spines.py:154(get_patch_transform)
      698    0.000    0.000    0.000    0.000 font_manager.py:691(get_style)
        3    0.000    0.000    0.000    0.000 signature_def_utils_impl.py:350(op_signature_def)
       30    0.000    0.000    0.000    0.000 save_impl.py:446(get_training_arg_value)
      4/3    0.000    0.000    0.000    0.000 unparser.py:14(interleave)
        7    0.000    0.000    0.000    0.000 unparser.py:115(_Assign)
      398    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
      198    0.000    0.000    0.000    0.000 nested_structure_coder.py:400(can_encode)
       60    0.000    0.000    0.000    0.000 base_layer.py:1213(dtype)
       28    0.000    0.000    0.000    0.000 tensor_shape.py:988(assert_same_rank)
      104    0.000    0.000    0.000    0.000 {built-in method math.log10}
       50    0.000    0.000    0.000    0.000 qual_names.py:158(__eq__)
        2    0.000    0.000    0.000    0.000 gridspec.py:366(get_subplot_params)
       39    0.000    0.000    0.000    0.000 metrics.py:312(_trackable_saved_model_saver)
      698    0.000    0.000    0.000    0.000 font_manager.py:704(get_weight)
       39    0.000    0.000    0.000    0.000 input_layer.py:205(_trackable_saved_model_saver)
       39    0.000    0.000    0.000    0.000 serialized_attributes.py:162(functions)
       39    0.000    0.000    0.000    0.000 optimizer_v2.py:1333(<lambda>)
       52    0.000    0.000    0.000    0.000 tensor_shape.py:268(assert_is_compatible_with)
      273    0.000    0.000    0.000    0.000 context.py:803(scope_name)
        6    0.000    0.000    0.000    0.000 saving_utils.py:291(_enforce_names_consistency)
        1    0.000    0.000    0.000    0.000 activity.py:693(visit_ExceptHandler)
       10    0.000    0.000    0.000    0.000 function_base.py:2164(<listcomp>)
       78    0.000    0.000    0.000    0.000 policy.py:461(get_config)
      120    0.000    0.000    0.000    0.000 base_layer.py:2968(_split_out_first_arg)
       20    0.000    0.000    0.000    0.000 backprop.py:86(make_attr)
        4    0.000    0.000    0.000    0.000 _base.py:2407(<listcomp>)
        4    0.000    0.000    0.000    0.000 transforms.py:1485(get_matrix)
        6    0.000    0.000    0.000    0.000 activations.py:495(get)
        2    0.000    0.000    0.000    0.000 weights_broadcast_ops.py:136(broadcast_weights)
        8    0.000    0.000    0.000    0.000 _base.py:903(_set_artist_props)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
      209    0.000    0.000    0.000    0.000 generic_utils.py:113(serialize_keras_class_and_config)
        2    0.000    0.000    0.000    0.000 cfg.py:773(visit_Return)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:347(_require_strategy_scope_extended)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:283(internal_convert_to_tensor_or_indexed_slices)
       15    0.000    0.000    0.000    0.000 templates.py:111(__init__)
       57    0.000    0.000    0.000    0.000 resource_variable_ops.py:99(<listcomp>)
        1    0.000    0.000    0.000    0.000 tokenize.py:355(detect_encoding)
      158    0.000    0.000    0.000    0.000 nested_structure_coder.py:339(can_decode)
        2    0.000    0.000    0.000    0.000 math_grad.py:1225(_ShapesFullySpecifiedAndEqual)
      114    0.000    0.000    0.000    0.000 saveable_object_util.py:249(<lambda>)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:982(_gcd_import)
       80    0.000    0.000    0.000    0.000 tf_inspect.py:283(<listcomp>)
       36    0.000    0.000    0.000    0.000 axis.py:1844(<genexpr>)
       48    0.000    0.000    0.000    0.000 weakref.py:480(pop)
      200    0.000    0.000    0.000    0.000 module_wrapper.py:154(__getattribute__)
        1    0.000    0.000    0.000    0.000 util.py:677(_objects_with_attributes)
        2    0.000    0.000    0.000    0.000 _datasource.py:458(abspath)
      102    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1679(__init__)
       32    0.000    0.000    0.000    0.000 axis.py:864(reset_ticks)
        5    0.000    0.000    0.000    0.000 data_adapter.py:1340(_expand_single_1d_tensor)
      327    0.000    0.000    0.000    0.000 nested_structure_coder.py:353(can_encode)
       16    0.000    0.000    0.000    0.000 random_seed.py:41(get_seed)
      312    0.000    0.000    0.000    0.000 _base.py:586(<genexpr>)
       26    0.000    0.000    0.000    0.000 weakref.py:44(__new__)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2249(alpha_cmd)
       12    0.000    0.000    0.000    0.000 compile_utils.py:46(_conform_to_outputs)
      270    0.000    0.000    0.000    0.000 meta_graph.py:159(mark_op_as_used)
      500    0.000    0.000    0.000    0.000 path.py:197(vertices)
       30    0.000    0.000    0.000    0.000 base_layer.py:2089(output)
       64    0.000    0.000    0.000    0.000 ticker.py:1984(closeto)
       96    0.000    0.000    0.000    0.000 weakref.py:334(__new__)
       68    0.000    0.000    0.000    0.000 {method 'tell' of '_io.BufferedWriter' objects}
      250    0.000    0.000    0.000    0.000 callbacks.py:632(on_epoch_begin)
        1    0.000    0.000    0.000    0.000 util.py:679(<listcomp>)
        2    0.000    0.000    0.000    0.000 transforms.py:817(update_from_path)
       12    0.000    0.000    0.000    0.000 copy.py:219(_deepcopy_tuple)
        4    0.000    0.000    0.000    0.000 functional.py:623(_validate_graph_inputs_and_outputs)
       13    0.000    0.000    0.000    0.000 cfg.py:77(freeze)
       14    0.000    0.000    0.000    0.000 backprop_util.py:25(IsTrainable)
       26    0.000    0.000    0.000    0.000 ops.py:2519(_get_attr_bool)
       76    0.000    0.000    0.000    0.000 backend_bases.py:868(set_alpha)
       12    0.000    0.000    0.000    0.000 base_layer_utils.py:281(needs_keras_history)
       27    0.000    0.000    0.000    0.000 <string>:16(_make)
        6    0.000    0.000    0.000    0.000 signature_def_utils_impl.py:32(build_signature_def)
       23    0.000    0.000    0.000    0.000 transformer.py:116(__init__)
      524    0.000    0.000    0.000    0.000 artist.py:1052(sticky_edges)
       32    0.000    0.000    0.000    0.000 __init__.py:1891(method)
       10    0.000    0.000    0.000    0.000 function_base.py:2144(<listcomp>)
        3    0.000    0.000    0.000    0.000 __init__.py:829(format)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:966(_find_and_load)
       14    0.000    0.000    0.000    0.000 base_layer.py:2916(_call_fn_arg_defaults)
        6    0.000    0.000    0.000    0.000 backend.py:984(unique_object_name)
       32    0.000    0.000    0.000    0.000 ticker.py:2001(ge)
       10    0.000    0.000    0.000    0.000 inspect.py:643(getfile)
       23    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteImportGraphDefOptions}
       16    0.000    0.000    0.000    0.000 transforms.py:2622(get_matrix)
        4    0.000    0.000    0.000    0.000 utils_impl.py:225(get_variables_path)
       64    0.000    0.000    0.000    0.000 _methods.py:73(_clip_dep_is_byte_swapped)
      352    0.000    0.000    0.000    0.000 backend_pdf.py:278(pdfRepr)
       82    0.000    0.000    0.000    0.000 tf_utils.py:273(_is_serialized_node_data)
       24    0.000    0.000    0.000    0.000 functional.py:522(_flatten_to_reference_inputs)
        4    0.000    0.000    0.000    0.000 cfg.py:174(__init__)
       60    0.000    0.000    0.000    0.000 nn_ops.py:3294(_tf_deterministic_ops)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1335(<lambda>)
       84    0.000    0.000    0.000    0.000 base_layer.py:2505(<listcomp>)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:2677(__exit__)
       93    0.000    0.000    0.000    0.000 data_structures.py:1033(_is_function)
      698    0.000    0.000    0.000    0.000 font_manager.py:730(get_file)
       21    0.000    0.000    0.000    0.000 nested_structure_coder.py:319(do_decode)
        1    0.000    0.000    0.000    0.000 unparser.py:245(_Try)
      206    0.000    0.000    0.000    0.000 lines.py:547(set_markevery)
        1    0.000    0.000    0.000    0.000 reaching_definitions.py:261(visit_ExceptHandler)
        3    0.000    0.000    0.000    0.000 iterator_ops.py:888(_component_specs)
      158    0.000    0.000    0.000    0.000 saveable_object.py:61(__init__)
       10    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:136(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1982(_get_output_canvas)
      385    0.000    0.000    0.000    0.000 {method 'span' of '_sre.SRE_Match' objects}
        5    0.000    0.000    0.000    0.000 activations.py:457(deserialize)
      154    0.000    0.000    0.000    0.000 keras_tensor.py:43(keras_tensors_enabled)
      176    0.000    0.000    0.000    0.000 base.py:193(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:111(add)
       15    0.000    0.000    0.000    0.000 ast.py:215(walk)
       96    0.000    0.000    0.000    0.000 weakref.py:339(__init__)
      312    0.000    0.000    0.000    0.000 {method 'rstrip' of 'bytes' objects}
       65    0.000    0.000    0.000    0.000 tf_utils.py:289(_convert_object_or_list)
       32    0.000    0.000    0.000    0.000 functional_saver.py:44(__init__)
        2    0.000    0.000    0.000    0.000 def_function.py:102(called_with_tracing)
       57    0.000    0.000    0.000    0.000 meta_graph.py:230(_op_name)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1320(__init__)
       18    0.000    0.000    0.000    0.000 base_layer.py:1948(input_mask)
       27    0.000    0.000    0.000    0.000 base_layer.py:2299(_compute_dtype)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1159(_dense_apply_args)
       51    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
       20    0.000    0.000    0.000    0.000 patches.py:458(set_capstyle)
      452    0.000    0.000    0.000    0.000 fromnumeric.py:2232(_any_dispatcher)
        3    0.000    0.000    0.000    0.000 __init__.py:564(format)
        4    0.000    0.000    0.000    0.000 _bootlocale.py:23(getpreferredencoding)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1200(alphaState)
    26/15    0.000    0.000    0.000    0.000 load.py:606(_search_for_child_node)
       43    0.000    0.000    0.000    0.000 base_layer.py:2383(_dtype)
      176    0.000    0.000    0.000    0.000 function.py:2067(_get_gradient_function)
       12    0.000    0.000    0.000    0.000 _base.py:4215(get_children)
        2    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2294(clip_cmd)
        2    0.000    0.000    0.000    0.000 load.py:756(_finalize_config_layers)
        4    0.000    0.000    0.000    0.000 cfg.py:201(reset)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2405(cumsum)
        5    0.000    0.000    0.000    0.000 transpiler.py:356(_cached_factory)
        2    0.000    0.000    0.000    0.000 directives.py:126(visit_Attribute)
       72    0.000    0.000    0.000    0.000 func_graph.py:679(replace_capture)
      114    0.000    0.000    0.000    0.000 resource_variable_ops.py:583(op)
       96    0.000    0.000    0.000    0.000 lines.py:518(get_fillstyle)
        8    0.000    0.000    0.000    0.000 weakref.py:51(_cb)
        3    0.000    0.000    0.000    0.000 utils_impl.py:242(get_assets_dir)
       25    0.000    0.000    0.000    0.000 __init__.py:38(populate_deserializable_objects)
      158    0.000    0.000    0.000    0.000 saveable_object.py:80(device)
      171    0.000    0.000    0.000    0.000 variables.py:1182(_gather_saveables_for_checkpoint)
        3    0.000    0.000    0.000    0.000 tensor_spec.py:144(from_tensor)
        3    0.000    0.000    0.000    0.000 execute.py:282(<listcomp>)
        4    0.000    0.000    0.000    0.000 axis.py:2345(_update_offset_text_position)
       12    0.000    0.000    0.000    0.000 patches.py:402(set_linestyle)
       32    0.000    0.000    0.000    0.000 pickle.py:262(_getattribute)
      144    0.000    0.000    0.000    0.000 functional.py:504(<genexpr>)
        2    0.000    0.000    0.000    0.000 confusion_matrix.py:34(remove_squeezable_dimensions)
       16    0.000    0.000    0.000    0.000 axis.py:1175(<listcomp>)
       32    0.000    0.000    0.000    0.000 ticker.py:1973(__init__)
        4    0.000    0.000    0.000    0.000 transforms.py:1623(__init__)
       18    0.000    0.000    0.000    0.000 input_layer.py:195(get_config)
      698    0.000    0.000    0.000    0.000 font_manager.py:698(get_variant)
        1    0.000    0.000    0.000    0.000 {built-in method posix.replace}
        6    0.000    0.000    0.000    0.000 layer_serialization.py:132(python_properties)
       37    0.000    0.000    0.000    0.000 graph_view.py:176(root)
        4    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_OpNameGetAttrType}
       36    0.000    0.000    0.000    0.000 signature_serialization.py:233(<lambda>)
       18    0.000    0.000    0.000    0.000 base_layer.py:1970(output_mask)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:2225(_batch_reduce_to)
      233    0.000    0.000    0.000    0.000 resource_variable_ops.py:518(shape)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(unravel_index)
        4    0.000    0.000    0.000    0.000 _dill.py:145(numpyufunc)
      210    0.000    0.000    0.000    0.000 figure.py:463(_get_dpi)
      388    0.000    0.000    0.000    0.000 text.py:856(get_text)
        6    0.000    0.000    0.000    0.000 _datasource.py:337(_iszip)
       72    0.000    0.000    0.000    0.000 __init__.py:420(<genexpr>)
       17    0.000    0.000    0.000    0.000 version_utils.py:84(should_use_v2)
        1    0.000    0.000    0.000    0.000 liveness.py:188(visit_ExceptHandler)
        1    0.000    0.000    0.000    0.000 pyplot.py:658(close)
      165    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.HasAtomicMove}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1613(writeXref)
        4    0.000    0.000    0.000    0.000 losses_utils.py:129(cast_losses_to_common_dtype)
       10    0.000    0.000    0.000    0.000 reaching_fndefs.py:88(visit_node)
        4    0.000    0.000    0.000    0.000 _datasource.py:367(_possible_names)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:2228(<listcomp>)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:382(update_state)
        3    0.000    0.000    0.000    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
       78    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetShouldRecordBackprop}
       48    0.000    0.000    0.000    0.000 save_impl.py:634(_get_layer_call_method)
        6    0.000    0.000    0.000    0.000 base_layer_utils.py:164(have_all_keras_metadata)
       35    0.000    0.000    0.000    0.000 backend.py:976(track_variable)
       63    0.000    0.000    0.000    0.000 reaching_definitions.py:72(<dictcomp>)
       12    0.000    0.000    0.000    0.000 ops.py:407(name)
       10    0.000    0.000    0.000    0.000 figure.py:453(_get_axes)
       76    0.000    0.000    0.000    0.000 backend_bases.py:885(set_antialiased)
        2    0.000    0.000    0.000    0.000 __init__.py:1605(index_of)
        4    0.000    0.000    0.000    0.000 pickle.py:347(__init__)
        9    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
       20    0.000    0.000    0.000    0.000 callbacks.py:988(<genexpr>)
      109    0.000    0.000    0.000    0.000 nested_structure_coder.py:362(can_decode)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:2665(__enter__)
      274    0.000    0.000    0.000    0.000 tf_decorator.py:278(decorator_argspec)
       22    0.000    0.000    0.000    0.000 patches.py:382(set_linewidth)
        8    0.000    0.000    0.000    0.000 parse.py:412(urlsplit)
        2    0.000    0.000    0.000    0.000 training.py:2472(_validate_compile)
        1    0.000    0.000    0.000    0.000 unsupported_features_checker.py:60(verify)
       30    0.000    0.000    0.000    0.000 smart_cond.py:62(smart_constant_value)
       16    0.000    0.000    0.000    0.000 math_ops.py:3849(conj)
       54    0.000    0.000    0.000    0.000 base_layer.py:672(<listcomp>)
        6    0.000    0.000    0.000    0.000 base.py:92(__init__)
       12    0.000    0.000    0.000    0.000 text.py:535(set_clip_box)
       10    0.000    0.000    0.000    0.000 callbacks.py:914(__init__)
        6    0.000    0.000    0.000    0.000 array_ops.py:1443(_get_dtype_from_nested_lists)
       23    0.000    0.000    0.000    0.000 templates.py:54(_apply_override)
        1    0.000    0.000    0.000    0.000 unparser.py:859(_withitem)
       12    0.000    0.000    0.000    0.000 distribute_lib.py:2168(reduce_to)
      117    0.000    0.000    0.000    0.000 func_graph.py:779(saveable)
       78    0.000    0.000    0.000    0.000 function.py:505(stateful_ops)
        2    0.000    0.000    0.000    0.000 py_checkpoint_reader.py:52(<dictcomp>)
        8    0.000    0.000    0.000    0.000 ticker.py:644(get_offset)
      104    0.000    0.000    0.000    0.000 text.py:25(_wrap_text)
      698    0.000    0.000    0.000    0.000 font_manager.py:713(get_stretch)
       25    0.000    0.000    0.000    0.000 _internal.py:830(npy_ctypes_check)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:496(__sub__)
       12    0.000    0.000    0.000    0.000 enum.py:347(__repr__)
        3    0.000    0.000    0.000    0.000 signature_serialization.py:63(_validate_inputs)
       10    0.000    0.000    0.000    0.000 distribution_strategy_context.py:64(_pop_per_thread_mode)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2172(switch_backends)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:40(destroy)
       13    0.000    0.000    0.000    0.000 _weakrefset.py:116(update)
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrBool}
       23    0.000    0.000    0.000    0.000 load.py:87(__init__)
       39    0.000    0.000    0.000    0.000 base_layer_utils.py:754(v2_dtype_behavior_enabled)
       42    0.000    0.000    0.000    0.000 tracking.py:127(delete_tracking)
      226    0.000    0.000    0.000    0.000 cycler.py:227(<genexpr>)
       72    0.000    0.000    0.000    0.000 json_utils.py:50(<genexpr>)
       12    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
       28    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      290    0.000    0.000    0.000    0.000 backend_pdf.py:292(pdfRepr)
        6    0.000    0.000    0.000    0.000 save.py:196(<dictcomp>)
        4    0.000    0.000    0.000    0.000 functional.py:947(_build_map)
        1    0.000    0.000    0.000    0.000 load.py:116(<dictcomp>)
      411    0.000    0.000    0.000    0.000 policy.py:453(name)
        5    0.000    0.000    0.000    0.000 util.py:1354(saver_with_op_caching)
       12    0.000    0.000    0.000    0.000 tf_stack.py:53(__enter__)
        2    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.update_path_extents}
        7    0.000    0.000    0.000    0.000 decoder.py:283(__init__)
       99    0.000    0.000    0.000    0.000 nested_structure_coder.py:386(can_decode)
        4    0.000    0.000    0.000    0.000 io_utils.py:57(path_to_string)
        4    0.000    0.000    0.000    0.000 figure.py:199(update)
       26    0.000    0.000    0.000    0.000 cp1252.py:11(encode)
        4    0.000    0.000    0.000    0.000 _datasource.py:503(_sanitize_relative_path)
        2    0.000    0.000    0.000    0.000 {built-in method today}
      165    0.000    0.000    0.000    0.000 base_layer.py:1265(input_spec)
       57    0.000    0.000    0.000    0.000 context.py:1980(shared_name)
       72    0.000    0.000    0.000    0.000 path.py:351(__len__)
        8    0.000    0.000    0.000    0.000 __init__.py:157(_remove_proxy)
       10    0.000    0.000    0.000    0.000 function_base.py:2120(<listcomp>)
        8    0.000    0.000    0.000    0.000 posixpath.py:338(normpath)
        4    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
        4    0.000    0.000    0.000    0.000 ast3.py:172(visit_arg)
        6    0.000    0.000    0.000    0.000 dtypes.py:215(__reduce__)
       16    0.000    0.000    0.000    0.000 axis.py:922(_translate_tick_kw)
       24    0.000    0.000    0.000    0.000 patches.py:271(get_patch_transform)
       63    0.000    0.000    0.000    0.000 nested_structure_coder.py:310(do_encode)
      123    0.000    0.000    0.000    0.000 unparser.py:46(write)
        3    0.000    0.000    0.000    0.000 function.py:1724(_call_with_structured_signature)
      315    0.000    0.000    0.000    0.000 _collections_abc.py:392(__subclasshook__)
       14    0.000    0.000    0.000    0.000 {method 'extend' of 'collections.deque' objects}
        6    0.000    0.000    0.000    0.000 initializers_v2.py:521(__init__)
       29    0.000    0.000    0.000    0.000 converter.py:177(__eq__)
      198    0.000    0.000    0.000    0.000 func_graph.py:478(deref)
        8    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.get_path_extents}
        6    0.000    0.000    0.000    0.000 backend.py:708(get_default_graph_uid_map)
        1    0.000    0.000    0.000    0.000 call_trees.py:149(_kwargs_to_dict)
        1    0.000    0.000    0.000    0.000 converter.py:216(list_of_features)
      120    0.000    0.000    0.000    0.000 data_structures.py:161(_attribute_sentinel)
      153    0.000    0.000    0.000    0.000 data_structures.py:1039(<lambda>)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2564(__init__)
       32    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
      580    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        3    0.000    0.000    0.000    0.000 signature_serialization.py:245(create_signature_map)
        2    0.000    0.000    0.000    0.000 templates.py:64(visit_Tuple)
       64    0.000    0.000    0.000    0.000 axis.py:653(locator)
       74    0.000    0.000    0.000    0.000 backend_bases.py:994(get_hatch_path)
       18    0.000    0.000    0.000    0.000 __init__.py:185(process)
       45    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
       18    0.000    0.000    0.000    0.000 module.py:132(name_scope)
      474    0.000    0.000    0.000    0.000 nested_structure_coder.py:330(can_encode)
        4    0.000    0.000    0.000    0.000 functional.py:659(<listcomp>)
       13    0.000    0.000    0.000    0.000 tensor_shape.py:1203(__eq__)
       68    0.000    0.000    0.000    0.000 axis.py:215(get_tick_padding)
        4    0.000    0.000    0.000    0.000 axis.py:1010(get_inverted)
      372    0.000    0.000    0.000    0.000 __init__.py:836(<listcomp>)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:465(_from_iterable)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1658(writeTrailer)
       10    0.000    0.000    0.000    0.000 callbacks.py:1042(on_train_begin)
        3    0.000    0.000    0.000    0.000 utils_impl.py:101(build_tensor_info_from_op)
        6    0.000    0.000    0.000    0.000 naming.py:31(new_symbol)
       10    0.000    0.000    0.000    0.000 distribution_strategy_context.py:60(_push_per_thread_mode)
        6    0.000    0.000    0.000    0.000 ops.py:4962(prevent_feeding)
       11    0.000    0.000    0.000    0.000 Experiment.py:146(update_nn)
       14    0.000    0.000    0.000    0.000 genericpath.py:117(_splitext)
      114    0.000    0.000    0.000    0.000 backend_pdf.py:2360(<listcomp>)
       22    0.000    0.000    0.000    0.000 transformer.py:251(__init__)
        4    0.000    0.000    0.000    0.000 ticker.py:2222(view_limits)
       10    0.000    0.000    0.000    0.000 {built-in method numpy.frompyfunc}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:217(<listcomp>)
       12    0.000    0.000    0.000    0.000 compile_utils.py:549(map_to_output_names)
       24    0.000    0.000    0.000    0.000 save_impl.py:426(fn_input_signature)
        7    0.000    0.000    0.000    0.000 activity.py:204(mark_param)
       11    0.000    0.000    0.000    0.000 converter.py:258(__init__)
       32    0.000    0.000    0.000    0.000 transformer.py:131(enter)
       98    0.000    0.000    0.000    0.000 base.py:553(_update_uid)
      198    0.000    0.000    0.000    0.000 font_manager.py:839(set_file)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2281(push)
      312    0.000    0.000    0.000    0.000 _base.py:588(<genexpr>)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:501(<genexpr>)
       23    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_ImportGraphDefOptionsSetPrefix}
        1    0.000    0.000    0.000    0.000 cfg.py:900(visit_ExceptHandler)
       14    0.000    0.000    0.000    0.000 converter.py:184(uses)
      196    0.000    0.000    0.000    0.000 axis.py:662(formatter)
       27    0.000    0.000    0.000    0.000 ast.py:178(iter_child_nodes)
       15    0.000    0.000    0.000    0.000 weakref.py:208(items)
        3    0.000    0.000    0.000    0.000 metrics_utils.py:98(result_wrapper)
        4    0.000    0.000    0.000    0.000 io_utils.py:40(_path_to_string)
       78    0.000    0.000    0.000    0.000 base_layer_utils.py:475(training)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:1373(experimental_local_results)
        2    0.000    0.000    0.000    0.000 _base.py:2691(set_axisbelow)
      104    0.000    0.000    0.000    0.000 {method 'get_width_height' of 'matplotlib.ft2font.FT2Font' objects}
       40    0.000    0.000    0.000    0.000 __init__.py:118(__init__)
       51    0.000    0.000    0.000    0.000 function.py:2003(structured_outputs)
       23    0.000    0.000    0.000    0.000 base.py:763(_preload_simple_restoration)
       57    0.000    0.000    0.000    0.000 ops.py:6008(has_default_graph)
       38    0.000    0.000    0.000    0.000 backend_pdf.py:2208(fill)
       12    0.000    0.000    0.000    0.000 base_layer.py:1300(input_spec)
        2    0.000    0.000    0.000    0.000 reaching_definitions.py:115(__init__)
       12    0.000    0.000    0.000    0.000 figure.py:70(as_list)
      168    0.000    0.000    0.000    0.000 markers.py:246(get_fillstyle)
        3    0.000    0.000    0.000    0.000 training_utils.py:1946(get_static_batch_size)
        2    0.000    0.000    0.000    0.000 figure.py:1651(clf)
        4    0.000    0.000    0.000    0.000 figure.py:651(get_children)
        3    0.000    0.000    0.000    0.000 save.py:89(__init__)
      139    0.000    0.000    0.000    0.000 policy.py:392(variable_dtype)
       13    0.000    0.000    0.000    0.000 reaching_definitions.py:88(__ne__)
       60    0.000    0.000    0.000    0.000 axis.py:649(locator)
        2    0.000    0.000    0.000    0.000 figure.py:168(__init__)
      157    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
     12/3    0.000    0.000    0.000    0.000 functional.py:978(_build_map_helper)
       23    0.000    0.000    0.000    0.000 c_api_util.py:76(__del__)
        2    0.000    0.000    0.000    0.000 figure.py:1959(sca)
        8    0.000    0.000    0.000    0.000 figure.py:913(get_size_inches)
       76    0.000    0.000    0.000    0.000 backend_bases.py:963(set_linewidth)
       32    0.000    0.000    0.000    0.000 pickle.py:275(whichmodule)
       12    0.000    0.000    0.000    0.000 input_spec.py:57(__init__)
      114    0.000    0.000    0.000    0.000 resource_variable_ops.py:592(synchronization)
        5    0.000    0.000    0.000    0.000 file_io.py:50(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:1320(_check_1d)
       12    0.000    0.000    0.000    0.000 copy.py:220(<listcomp>)
        4    0.000    0.000    0.000    0.000 losses_utils.py:152(<listcomp>)
        4    0.000    0.000    0.000    0.000 backprop.py:846(__enter__)
        3    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2629(<listcomp>)
        4    0.000    0.000    0.000    0.000 transforms.py:909(intervalx)
      238    0.000    0.000    0.000    0.000 path.py:211(codes)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:519(<genexpr>)
       64    0.000    0.000    0.000    0.000 axis.py:666(formatter)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1704(draw_event)
      150    0.000    0.000    0.000    0.000 text.py:554(set_wrap)
      212    0.000    0.000    0.000    0.000 fromnumeric.py:2671(_amin_dispatcher)
        8    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
       46    0.000    0.000    0.000    0.000 function.py:427(<genexpr>)
       94    0.000    0.000    0.000    0.000 backend_pdf.py:2115(<genexpr>)
       10    0.000    0.000    0.000    0.000 backend_pdf.py:2253(hatch_cmd)
        3    0.000    0.000    0.000    0.000 tf_utils.py:192(get_shapes)
        6    0.000    0.000    0.000    0.000 init_ops_v2.py:506(__init__)
       14    0.000    0.000    0.000    0.000 backend.py:887(name_scope)
       95    0.000    0.000    0.000    0.000 saveable_object_util.py:99(_read_variable_closure)
        3    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2624(<listcomp>)
       32    0.000    0.000    0.000    0.000 scale.py:97(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:2383(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_bases.py:151(__init__)
        3    0.000    0.000    0.000    0.000 function_serialization.py:78(serialize_bare_concrete_function)
       42    0.000    0.000    0.000    0.000 node.py:276(is_keras_tensor)
       30    0.000    0.000    0.000    0.000 function.py:2583(<dictcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3008(get_xbound)
      128    0.000    0.000    0.000    0.000 axis.py:285(get_loc)
       28    0.000    0.000    0.000    0.000 artist.py:594(get_snap)
        6    0.000    0.000    0.000    0.000 training.py:2609(_get_compile_args)
       12    0.000    0.000    0.000    0.000 ast3.py:218(visit_Constant)
        1    0.000    0.000    0.000    0.000 tempfile.py:641(__exit__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:830(get_data)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:564(module_from_spec)
       23    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_ImportGraphDefResultsMissingUnusedInputMappings_wrapper}
       56    0.000    0.000    0.000    0.000 backend_pdf.py:2239(linewidth_cmd)
       26    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:37(get_canvas_width_height)
        4    0.000    0.000    0.000    0.000 _base.py:2414(<listcomp>)
        3    0.000    0.000    0.000    0.000 __init__.py:548(formatMessage)
        3    0.000    0.000    0.000    0.000 signature_serialization.py:224(_list_functions_for_serialization)
        1    0.000    0.000    0.000    0.000 ast3.py:258(visit_ExceptHandler)
       62    0.000    0.000    0.000    0.000 data_structures.py:383(__len__)
        2    0.000    0.000    0.000    0.000 figure.py:1100(_process_projection_requirements)
        2    0.000    0.000    0.000    0.000 figure.py:513(set_constrained_layout)
        8    0.000    0.000    0.000    0.000 figure.py:778(set_canvas)
       32    0.000    0.000    0.000    0.000 ticker.py:1663(raise_if_exceeds)
       14    0.000    0.000    0.000    0.000 core.py:593(filled)
       20    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
       11    0.000    0.000    0.000    0.000 {method 'findall' of '_sre.SRE_Pattern' objects}
       66    0.000    0.000    0.000    0.000 nested_structure_coder.py:409(can_decode)
        6    0.000    0.000    0.000    0.000 function_wrappers.py:83(__exit__)
        2    0.000    0.000    0.000    0.000 cfg.py:782(visit_Expr)
       13    0.000    0.000    0.000    0.000 reaching_definitions.py:82(__eq__)
        4    0.000    0.000    0.000    0.000 backprop.py:856(_push_tape)
      153    0.000    0.000    0.000    0.000 base.py:1032(_map_resources)
        4    0.000    0.000    0.000    0.000 __init__.py:601(push)
       44    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
       25    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
       60    0.000    0.000    0.000    0.000 generic_utils.py:188(skip_failed_serialization)
        3    0.000    0.000    0.000    0.000 ast3.py:378(visit_arguments)
       78    0.000    0.000    0.000    0.000 function.py:1436(record)
        8    0.000    0.000    0.000    0.000 axis.py:834(limit_range_for_scale)
        1    0.000    0.000    0.000    0.000 tempfile.py:296(__next__)
        3    0.000    0.000    0.000    0.000 __init__.py:390(format)
       74    0.000    0.000    0.000    0.000 {built-in method math.floor}
       10    0.000    0.000    0.000    0.000 tf_utils.py:339(is_symbolic_tensor)
       27    0.000    0.000    0.000    0.000 op_def_library.py:532(<genexpr>)
        2    0.000    0.000    0.000    0.000 _base.py:3064(get_xlim)
        8    0.000    0.000    0.000    0.000 transforms.py:1652(_set)
      268    0.000    0.000    0.000    0.000 transforms.py:1740(get_affine)
       12    0.000    0.000    0.000    0.000 artist.py:719(set_clip_box)
       47    0.000    0.000    0.000    0.000 numbers.py:283(__float__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:606(match_dtype_and_rank)
        6    0.000    0.000    0.000    0.000 init_ops_v2.py:70(from_config)
        2    0.000    0.000    0.000    0.000 _base.py:3419(get_ybound)
       10    0.000    0.000    0.000    0.000 function_base.py:2115(<listcomp>)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:437(__init__)
        2    0.000    0.000    0.000    0.000 warnings.py:119(filterwarnings)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:524(spec_from_file_location)
        2    0.000    0.000    0.000    0.000 training.py:2750(_is_scalar)
       30    0.000    0.000    0.000    0.000 utils.py:233(get_training_arg)
        2    0.000    0.000    0.000    0.000 metrics_utils.py:479(ragged_assert_compatible_and_get_flat_values)
       18    0.000    0.000    0.000    0.000 input_spec.py:95(get_config)
       51    0.000    0.000    0.000    0.000 node.py:215(input_tensors)
        4    0.000    0.000    0.000    0.000 cfg.py:202(<dictcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:104(bubble)
       12    0.000    0.000    0.000    0.000 patches.py:475(set_joinstyle)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:504(_init_module_attrs)
       64    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1688(finalize)
       12    0.000    0.000    0.000    0.000 base_layer.py:3219(<genexpr>)
        1    0.000    0.000    0.000    0.000 unparser.py:103(_ImportFrom)
        8    0.000    0.000    0.000    0.000 unparser.py:706(_Attribute)
        1    0.000    0.000    0.000    0.000 device.py:124(__call__)
      192    0.000    0.000    0.000    0.000 artist.py:580(get_gid)
        1    0.000    0.000    0.000    0.000 {method '__exit__' of '_io._IOBase' objects}
       18    0.000    0.000    0.000    0.000 save_impl.py:72(should_skip_serialization)
       78    0.000    0.000    0.000    0.000 base_layer.py:853(compute_mask)
       27    0.000    0.000    0.000    0.000 variables.py:22(ld)
       73    0.000    0.000    0.000    0.000 tf_decorator.py:266(decorated_target)
        4    0.000    0.000    0.000    0.000 _base.py:2411(<listcomp>)
      128    0.000    0.000    0.000    0.000 ticker.py:220(set_axis)
       16    0.000    0.000    0.000    0.000 ticker.py:707(<genexpr>)
       52    0.000    0.000    0.000    0.000 image.py:129(<genexpr>)
        6    0.000    0.000    0.000    0.000 {built-in method numpy.fromiter}
       52    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
       21    0.000    0.000    0.000    0.000 {built-in method builtins.repr}
       54    0.000    0.000    0.000    0.000 initializers_v2.py:528(get_config)
       12    0.000    0.000    0.000    0.000 base_layer.py:2937(_call_accepts_kwargs)
       34    0.000    0.000    0.000    0.000 ast_util.py:34(__init__)
        1    0.000    0.000    0.000    0.000 tf_inspect.py:350(getsourcefile)
       24    0.000    0.000    0.000    0.000 figure.py:235(_update_this)
       32    0.000    0.000    0.000    0.000 text.py:777(get_fontsize)
      208    0.000    0.000    0.000    0.000 text.py:1241(get_usetex)
       16    0.000    0.000    0.000    0.000 transforms.py:1768(is_separable)
       16    0.000    0.000    0.000    0.000 backend_pdf.py:2273(fillcolor_cmd)
       30    0.000    0.000    0.000    0.000 nested_structure_coder.py:356(do_encode)
        6    0.000    0.000    0.000    0.000 load.py:532(_unblock_model_reconstruction)
        9    0.000    0.000    0.000    0.000 input_spec.py:109(to_tensor_shape)
      168    0.000    0.000    0.000    0.000 base_layer.py:2506(<genexpr>)
       15    0.000    0.000    0.000    0.000 metrics.py:233(dtype)
        2    0.000    0.000    0.000    0.000 _base.py:2994(xaxis_inverted)
        2    0.000    0.000    0.000    0.000 _base.py:3475(get_ylim)
        4    0.000    0.000    0.000    0.000 _base.py:129(__init__)
        8    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
       23    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_ImportGraphDefOptionsSetUniquifyNames}
        6    0.000    0.000    0.000    0.000 init_ops.py:105(__init__)
        3    0.000    0.000    0.000    0.000 tf_logging.py:75(_logger_find_caller)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
        3    0.000    0.000    0.000    0.000 training.py:2760(_minimum_control_deps)
        1    0.000    0.000    0.000    0.000 functional.py:1056(connect_ancillary_layers)
       18    0.000    0.000    0.000    0.000 policy.py:433(should_cast_variables)
        9    0.000    0.000    0.000    0.000 util.py:1078(__init__)
       67    0.000    0.000    0.000    0.000 transformer.py:149(__iter__)
       28    0.000    0.000    0.000    0.000 backprop.py:109(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:3405(yaxis_inverted)
       20    0.000    0.000    0.000    0.000 transforms.py:2249(get_matrix)
      153    0.000    0.000    0.000    0.000 {built-in method math.gcd}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1297(writeHatches)
       13    0.000    0.000    0.000    0.000 generic_utils.py:81(__enter__)
       34    0.000    0.000    0.000    0.000 functional.py:791(_assert_weights_created)
        6    0.000    0.000    0.000    0.000 base_layer.py:2929(_call_fn_arg_positions)
        1    0.000    0.000    0.000    0.000 directives.py:142(visit_Expr)
        2    0.000    0.000    0.000    0.000 unparser.py:651(_Tuple)
      183    0.000    0.000    0.000    0.000 base.py:398(checkpoint)
        4    0.000    0.000    0.000    0.000 transforms.py:2342(_iter_break_from_left_to_right)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:497(_code_to_bytecode)
        4    0.000    0.000    0.000    0.000 functional.py:845(<setcomp>)
       39    0.000    0.000    0.000    0.000 serialized_attributes.py:165(<dictcomp>)
       90    0.000    0.000    0.000    0.000 policy.py:406(compute_dtype)
        3    0.000    0.000    0.000    0.000 cfg.py:438(add_exit_node)
       60    0.000    0.000    0.000    0.000 base.py:1014(_list_functions_for_serialization)
        4    0.000    0.000    0.000    0.000 transforms.py:914(intervaly)
        4    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
       88    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        5    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
       38    0.000    0.000    0.000    0.000 backend_pdf.py:2197(stroke)
        3    0.000    0.000    0.000    0.000 training_utils.py:1912(get_input_shape_and_dtype)
       52    0.000    0.000    0.000    0.000 functional.py:1026(_should_skip_first_node)
       65    0.000    0.000    0.000    0.000 tf_utils.py:254(__init__)
      144    0.000    0.000    0.000    0.000 path.py:251(should_simplify)
       52    0.000    0.000    0.000    0.000 enum.py:584(__reduce_ex__)
        1    0.000    0.000    0.000    0.000 functional.py:1060(<listcomp>)
        3    0.000    0.000    0.000    0.000 variable_scope.py:1400(__init__)
        2    0.000    0.000    0.000    0.000 file_io.py:89(_prepare_value)
      172    0.000    0.000    0.000    0.000 device_spec.py:268(task)
      192    0.000    0.000    0.000    0.000 backend_bases.py:162(close_group)
        4    0.000    0.000    0.000    0.000 posixpath.py:144(basename)
        3    0.000    0.000    0.000    0.000 posixpath.py:154(dirname)
        9    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        1    0.000    0.000    0.000    0.000 compile_utils.py:499(create_pseudo_input_names)
        3    0.000    0.000    0.000    0.000 signature_serialization.py:225(<dictcomp>)
       18    0.000    0.000    0.000    0.000 module.py:195(_flatten)
        1    0.000    0.000    0.000    0.000 function_deserialization.py:371(<listcomp>)
        1    0.000    0.000    0.000    0.000 load.py:360(adjust_debug_info_func_names)
        4    0.000    0.000    0.000    0.000 cfg.py:205(<dictcomp>)
       11    0.000    0.000    0.000    0.000 cfg.py:333(_connect_nodes)
        6    0.000    0.000    0.000    0.000 distribution_strategy_context.py:90(get_replica_context)
        4    0.000    0.000    0.000    0.000 figure.py:1704(<lambda>)
        4    0.000    0.000    0.000    0.000 transforms.py:1632(_init)
      128    0.000    0.000    0.000    0.000 artist.py:688(get_path_effects)
        1    0.000    0.000    0.000    0.000 tempfile.py:614(__getattr__)
        1    0.000    0.000    0.000    0.000 tokenize.py:317(untokenize)
      174    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 {method 'seek' of '_io.BufferedReader' objects}
       31    0.000    0.000    0.000    0.000 {method 'group' of '_sre.SRE_Match' objects}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2366(copy_properties)
        1    0.000    0.000    0.000    0.000 load.py:599(_get_child_layer_node_ids)
       13    0.000    0.000    0.000    0.000 graph_view.py:67(_slot_variable_naming_for_optimizer)
        4    0.000    0.000    0.000    0.000 ast3.py:34(visit_Str)
        3    0.000    0.000    0.000    0.000 unparser.py:779(_arguments)
        2    0.000    0.000    0.000    0.000 backprop.py:1051(<listcomp>)
       27    0.000    0.000    0.000    0.000 op_def_library.py:416(<genexpr>)
      172    0.000    0.000    0.000    0.000 device_spec.py:260(job)
        4    0.000    0.000    0.000    0.000 _base.py:142(set_prop_cycle)
        2    0.000    0.000    0.000    0.000 _base.py:224(_getdefaults)
      192    0.000    0.000    0.000    0.000 backend_bases.py:155(open_group)
       28    0.000    0.000    0.000    0.000 text.py:347(<listcomp>)
       16    0.000    0.000    0.000    0.000 ticker.py:1819(__call__)
      120    0.000    0.000    0.000    0.000 markers.py:269(get_marker)
      118    0.000    0.000    0.000    0.000 __init__.py:1598(<lambda>)
        9    0.000    0.000    0.000    0.000 uuid.py:280(hex)
       16    0.000    0.000    0.000    0.000 codecs.py:318(decode)
       26    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
        3    0.000    0.000    0.000    0.000 training.py:2650(_reduce)
       15    0.000    0.000    0.000    0.000 serialized_attributes.py:177(<dictcomp>)
       12    0.000    0.000    0.000    0.000 saving_utils.py:294(_has_name)
       12    0.000    0.000    0.000    0.000 saving_utils.py:305(<genexpr>)
        2    0.000    0.000    0.000    0.000 losses_utils.py:120(scale_loss_for_distribution)
       13    0.000    0.000    0.000    0.000 generic_utils.py:87(__exit__)
        3    0.000    0.000    0.000    0.000 cfg.py:406(_add_jump_node)
       12    0.000    0.000    0.000    0.000 distribute_lib.py:257(__enter__)
       38    0.000    0.000    0.000    0.000 def_function.py:431(__init__)
        6    0.000    0.000    0.000    0.000 type_spec.py:304(__reduce__)
        1    0.000    0.000    0.000    0.000 device.py:115(__init__)
       16    0.000    0.000    0.000    0.000 axis.py:1442(get_minor_ticks)
        2    0.000    0.000    0.000    0.000 text.py:1042(set_fontsize)
        4    0.000    0.000    0.000    0.000 artist.py:1017(set_label)
       24    0.000    0.000    0.000    0.000 cycler.py:225(__iter__)
       10    0.000    0.000    0.000    0.000 _datasource.py:206(keys)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:837(sort)
       56    0.000    0.000    0.000    0.000 typing.py:889(__extrahook__)
        1    0.000    0.000    0.000    0.000 tempfile.py:299(<listcomp>)
        6    0.000    0.000    0.000    0.000 __init__.py:1286(debug)
       24    0.000    0.000    0.000    0.000 _collections_abc.py:719(__iter__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:504(_create_pseudo_names)
        3    0.000    0.000    0.000    0.000 signature_serialization.py:164(_normalize_outputs)
        1    0.000    0.000    0.000    0.000 reaching_fndefs.py:79(__init__)
      114    0.000    0.000    0.000    0.000 resource_variable_ops.py:596(aggregation)
        2    0.000    0.000    0.000    0.000 tape.py:45(push_new_tape)
      172    0.000    0.000    0.000    0.000 device_spec.py:264(replica)
        2    0.000    0.000    0.000    0.000 figure.py:1070(_make_key)
        4    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
        2    0.000    0.000    0.000    0.000 transforms.py:768(null)
        2    0.000    0.000    0.000    0.000 transforms.py:2606(__init__)
        8    0.000    0.000    0.000    0.000 _methods.py:44(_any)
       12    0.000    0.000    0.000    0.000 re.py:324(_subx)
       23    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteImportGraphDefResults}
      200    0.000    0.000    0.000    0.000 fractions.py:278(denominator)
        1    0.000    0.000    0.000    0.000 compile_utils.py:248(_get_loss_object)
        6    0.000    0.000    0.000    0.000 signature_serialization.py:64(<genexpr>)
        6    0.000    0.000    0.000    0.000 base_layer.py:418(build)
        6    0.000    0.000    0.000    0.000 function_wrappers.py:74(__enter__)
       13    0.000    0.000    0.000    0.000 activity.py:248(_in_constructor)
        1    0.000    0.000    0.000    0.000 call_trees.py:131(_args_to_tuple)
        3    0.000    0.000    0.000    0.000 execute.py:283(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:246(__init__)
      118    0.000    0.000    0.000    0.000 stride_tricks.py:202(_broadcast_arrays_dispatcher)
        2    0.000    0.000    0.000    0.000 compilerop.py:137(check_linecache_ipython)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1357(writeGouraudTriangles)
        3    0.000    0.000    0.000    0.000 save.py:103(add_object)
       33    0.000    0.000    0.000    0.000 nested_structure_coder.py:437(can_decode)
       19    0.000    0.000    0.000    0.000 functional.py:221(input)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2658(__init__)
        4    0.000    0.000    0.000    0.000 backprop.py:851(__exit__)
       33    0.000    0.000    0.000    0.000 base.py:569(_name_based_restores)
      172    0.000    0.000    0.000    0.000 device_spec.py:276(device_index)
        2    0.000    0.000    0.000    0.000 figure.py:544(set_constrained_layout_pads)
       58    0.000    0.000    0.000    0.000 text.py:832(get_position)
        8    0.000    0.000    0.000    0.000 patches.py:742(get_path)
       76    0.000    0.000    0.000    0.000 artist.py:633(get_sketch_params)
      142    0.000    0.000    0.000    0.000 __init__.py:1760(<listcomp>)
        2    0.000    0.000    0.000    0.000 _datasource.py:354(_splitzipext)
        2    0.000    0.000    0.000    0.000 decorators.py:41(wrapper)
       23    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_ImportGraphDefOptionsSetValidateColocationConstraints}
        8    0.000    0.000    0.000    0.000 _dill.py:457(find_class)
        1    0.000    0.000    0.000    0.000 utils_impl.py:259(get_debug_dir)
        4    0.000    0.000    0.000    0.000 load.py:849(_restore_layer_metrics)
       26    0.000    0.000    0.000    0.000 reaching_definitions.py:120(init_state)
        4    0.000    0.000    0.000    0.000 unparser.py:837(_keyword)
       12    0.000    0.000    0.000    0.000 transformer.py:124(__enter__)
       12    0.000    0.000    0.000    0.000 transformer.py:128(__exit__)
       23    0.000    0.000    0.000    0.000 c_api_util.py:73(__init__)
       48    0.000    0.000    0.000    0.000 backend_agg.py:256(points_to_pixels)
       76    0.000    0.000    0.000    0.000 backend_bases.py:967(set_url)
        4    0.000    0.000    0.000    0.000 {method 'get_sfnt_table' of 'matplotlib.ft2font.FT2Font' objects}
       40    0.000    0.000    0.000    0.000 inspect.py:891(tokeneater)
        6    0.000    0.000    0.000    0.000 __init__.py:809(acquire)
        1    0.000    0.000    0.000    0.000 tokenize.py:243(untokenize)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:403(cached)
       35    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       64    0.000    0.000    0.000    0.000 backend_pdf.py:235(pdfRepr)
       15    0.000    0.000    0.000    0.000 serialized_attributes.py:157(__init__)
       12    0.000    0.000    0.000    0.000 distribute_lib.py:261(__exit__)
        6    0.000    0.000    0.000    0.000 tensor_util.py:596(<listcomp>)
       12    0.000    0.000    0.000    0.000 tf_stack.py:71(__exit__)
       12    0.000    0.000    0.000    0.000 axis.py:1412(get_major_locator)
        8    0.000    0.000    0.000    0.000 transforms.py:336(p1)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:539(<listcomp>)
       10    0.000    0.000    0.000    0.000 training_utils.py:1220(__init__)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:860(get_config)
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:315(is_in_eager_or_tf_function)
        1    0.000    0.000    0.000    0.000 cfg.py:806(visit_Raise)
        1    0.000    0.000    0.000    0.000 liveness.py:197(visit_Expr)
       12    0.000    0.000    0.000    0.000 backprop.py:726(_handle_or_self)
        2    0.000    0.000    0.000    0.000 figure.py:1907(_set_artist_props)
        2    0.000    0.000    0.000    0.000 gridspec.py:200(__getitem__)
      130    0.000    0.000    0.000    0.000 {method 'get_descent' of 'matplotlib.ft2font.FT2Font' objects}
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:361(_get_cached)
        4    0.000    0.000    0.000    0.000 _dill.py:127(ndarraysubclassinstance)
       24    0.000    0.000    0.000    0.000 function_deserialization.py:296(<genexpr>)
        1    0.000    0.000    0.000    0.000 function_deserialization.py:389(<dictcomp>)
       58    0.000    0.000    0.000    0.000 node.py:221(output_tensors)
       96    0.000    0.000    0.000    0.000 base_layer.py:1255(activity_regularizer)
       39    0.000    0.000    0.000    0.000 data_structures.py:1082(<lambda>)
       93    0.000    0.000    0.000    0.000 base.py:565(_unconditional_dependency_names)
       94    0.000    0.000    0.000    0.000 markers.py:313(_set_nothing)
      134    0.000    0.000    0.000    0.000 path.py:230(simplify_threshold)
        4    0.000    0.000    0.000    0.000 __init__.py:517(__init__)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2288(pop)
      102    0.000    0.000    0.000    0.000 statistics.py:170(_coerce)
        1    0.000    0.000    0.000    0.000 load.py:792(_restore_layer_unconditional_losses)
        1    0.000    0.000    0.000    0.000 saving_utils.py:245(_deserialize_nested_config)
        8    0.000    0.000    0.000    0.000 tf_utils.py:467(<genexpr>)
        4    0.000    0.000    0.000    0.000 functional.py:289(_set_output_names)
        2    0.000    0.000    0.000    0.000 math_grad.py:143(_IsScalar)
        3    0.000    0.000    0.000    0.000 unparser.py:141(_Return)
        3    0.000    0.000    0.000    0.000 tf_logging.py:45(_get_caller)
        2    0.000    0.000    0.000    0.000 _base.py:2389(<listcomp>)
       76    0.000    0.000    0.000    0.000 backend_bases.py:975(set_snap)
        4    0.000    0.000    0.000    0.000 transforms.py:2127(__init__)
       10    0.000    0.000    0.000    0.000 transforms.py:2377(transform_path_non_affine)
       20    0.000    0.000    0.000    0.000 function_base.py:2116(<genexpr>)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(iscomplexobj)
       16    0.000    0.000    0.000    0.000 parse.py:109(_coerce_args)
       27    0.000    0.000    0.000    0.000 inspect.py:687(<genexpr>)
        2    0.000    0.000    0.000    0.000 tokenize.py:379(read_or_stop)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:75(_path_stat)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2265(rgb_cmd)
       10    0.000    0.000    0.000    0.000 training_utils.py:1241(__exit__)
       84    0.000    0.000    0.000    0.000 origin_info.py:194(_absolute_col_offset)
        4    0.000    0.000    0.000    0.000 cfg.py:292(reset)
        8    0.000    0.000    0.000    0.000 axis.py:1048(_set_artist_props)
        2    0.000    0.000    0.000    0.000 figure.py:1089(fixlist)
       64    0.000    0.000    0.000    0.000 backend_bases.py:807(get_clip_path)
      102    0.000    0.000    0.000    0.000 backend_bases.py:1013(get_sketch_params)
       24    0.000    0.000    0.000    0.000 cycler.py:138(keys)
      224    0.000    0.000    0.000    0.000 fromnumeric.py:3126(_around_dispatcher)
        4    0.000    0.000    0.000    0.000 posixpath.py:64(isabs)
       12    0.000    0.000    0.000    0.000 _collections_abc.py:672(keys)
       38    0.000    0.000    0.000    0.000 backend_pdf.py:299(__init__)
       64    0.000    0.000    0.000    0.000 util.py:291(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend.py:217(get_uid)
       24    0.000    0.000    0.000    0.000 unparser.py:520(_Name)
        1    0.000    0.000    0.000    0.000 inspect_utils.py:151(getnamespace)
       17    0.000    0.000    0.000    0.000 transformer.py:134(exit)
        4    0.000    0.000    0.000    0.000 tpu.py:208(is_tpu_strategy)
       12    0.000    0.000    0.000    0.000 func_graph.py:664(captures)
       78    0.000    0.000    0.000    0.000 function.py:2293(<genexpr>)
       68    0.000    0.000    0.000    0.000 axis.py:153(<dictcomp>)
      140    0.000    0.000    0.000    0.000 axis.py:342(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_inline.py:55(draw_if_interactive)
        2    0.000    0.000    0.000    0.000 rcsetup.py:163(validate_axisbelow)
        2    0.000    0.000    0.000    0.000 npyio.py:1339(WriteWrap)
        6    0.000    0.000    0.000    0.000 inspect.py:1495(currentframe)
        1    0.000    0.000    0.000    0.000 tokenize.py:280(compat)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:263(cache_from_source)
      142    0.000    0.000    0.000    0.000 {method 'write' of '_io.StringIO' objects}
        2    0.000    0.000    0.000    0.000 backend_mixed.py:15(__init__)
       10    0.000    0.000    0.000    0.000 policy.py:517(policy_defaults_to_floatx)
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:270(unnest_if_single_tensor)
        2    0.000    0.000    0.000    0.000 reaching_definitions.py:226(_aggregate_predecessors_defined_in)
       19    0.000    0.000    0.000    0.000 unparser.py:42(fill)
        4    0.000    0.000    0.000    0.000 backprop.py:869(_pop_tape)
        3    0.000    0.000    0.000    0.000 function.py:2487(signature_summary)
       55    0.000    0.000    0.000    0.000 variables.py:63(_make_getter)
       64    0.000    0.000    0.000    0.000 backend_bases.py:817(get_dashes)
       52    0.000    0.000    0.000    0.000 text.py:230(_get_multialignment)
        3    0.000    0.000    0.000    0.000 enum.py:312(__getattr__)
       57    0.000    0.000    0.000    0.000 {method 'readline' of '_io.StringIO' objects}
        1    0.000    0.000    0.000    0.000 {built-in method marshal.dumps}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1177(<listcomp>)
        3    0.000    0.000    0.000    0.000 save.py:354(<listcomp>)
        9    0.000    0.000    0.000    0.000 training.py:152(is_functional_model_init_params)
       36    0.000    0.000    0.000    0.000 save_impl.py:574(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:213(__init__)
       13    0.000    0.000    0.000    0.000 generic_utils.py:77(__init__)
        6    0.000    0.000    0.000    0.000 metrics.py:237(get_config)
        3    0.000    0.000    0.000    0.000 return_statements.py:254(_postprocess_statement)
       10    0.000    0.000    0.000    0.000 ops.py:2527(_get_attr_int)
        3    0.000    0.000    0.000    0.000 compat.py:125(as_str_any)
        2    0.000    0.000    0.000    0.000 figure.py:96(_entry_from_axes)
        2    0.000    0.000    0.000    0.000 text.py:1059(set_fontweight)
       14    0.000    0.000    0.000    0.000 patches.py:302(set_antialiased)
       32    0.000    0.000    0.000    0.000 ticker.py:276(set_locs)
       48    0.000    0.000    0.000    0.000 lines.py:602(get_markevery)
        8    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        4    0.000    0.000    0.000    0.000 serialization.py:83(populate_deserializable_objects)
       77    0.000    0.000    0.000    0.000 load.py:373(get)
        1    0.000    0.000    0.000    0.000 losses.py:1838(deserialize)
       13    0.000    0.000    0.000    0.000 optimizer_v2.py:731(get_slot_names)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:1256(_filter_grads)
       65    0.000    0.000    0.000    0.000 tf_utils.py:257(as_list)
       12    0.000    0.000    0.000    0.000 base_layer.py:1000(<genexpr>)
        1    0.000    0.000    0.000    0.000 activity.py:378(visit_Raise)
        6    0.000    0.000    0.000    0.000 converter.py:188(call_options)
       20    0.000    0.000    0.000    0.000 transformer.py:155(__setattr__)
       18    0.000    0.000    0.000    0.000 distribute_lib.py:1991(_container_strategy)
       31    0.000    0.000    0.000    0.000 data_structures.py:140(__init__)
       27    0.000    0.000    0.000    0.000 data_structures.py:903(<dictcomp>)
        3    0.000    0.000    0.000    0.000 variable_scope.py:1115(__init__)
       69    0.000    0.000    0.000    0.000 base.py:561(_unconditional_checkpoint_dependencies)
        1    0.000    0.000    0.000    0.000 device_spec.py:212(make_merged_spec)
        2    0.000    0.000    0.000    0.000 backend_agg.py:108(_update_methods)
        6    0.000    0.000    0.000    0.000 _base.py:3241(get_xscale)
        8    0.000    0.000    0.000    0.000 mathtext.py:3316(__init__)
        9    0.000    0.000    0.000    0.000 six.py:582(iterkeys)
        3    0.000    0.000    0.000    0.000 __init__.py:542(usesTime)
       16    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetNew}
       62    0.000    0.000    0.000    0.000 backend_pdf.py:229(__init__)
        4    0.000    0.000    0.000    0.000 metrics_utils.py:498(<genexpr>)
        4    0.000    0.000    0.000    0.000 tf_utils.py:420(assert_no_legacy_layers)
       16    0.000    0.000    0.000    0.000 origin_info.py:57(line_loc)
        1    0.000    0.000    0.000    0.000 liveness.py:43(__init__)
        2    0.000    0.000    0.000    0.000 def_function.py:62(called_with_tracing)
       23    0.000    0.000    0.000    0.000 importer.py:116(_ProcessInputMapParam)
        2    0.000    0.000    0.000    0.000 _base.py:2602(<listcomp>)
       64    0.000    0.000    0.000    0.000 backend_bases.py:845(get_rgb)
       52    0.000    0.000    0.000    0.000 text.py:550(get_wrap)
       48    0.000    0.000    0.000    0.000 markers.py:304(get_alt_path)
       30    0.000    0.000    0.000    0.000 {method 'get_glyph_name' of 'matplotlib.ft2font.FT2Font' objects}
        6    0.000    0.000    0.000    0.000 __init__.py:816(release)
        2    0.000    0.000    0.000    0.000 warnings.py:159(_add_filter)
       13    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'readline' of '_io.BufferedReader' objects}
        1    0.000    0.000    0.000    0.000 <string>:5(FullArgSpec)
        1    0.000    0.000    0.000    0.000 _dill.py:465(__init__)
      149    0.000    0.000    0.000    0.000 fractions.py:274(numerator)
       24    0.000    0.000    0.000    0.000 save_impl.py:457(_maybe_wrap_with_training_arg)
        1    0.000    0.000    0.000    0.000 losses.py:84(__init__)
        2    0.000    0.000    0.000    0.000 cfg.py:288(__init__)
        8    0.000    0.000    0.000    0.000 reaching_definitions.py:76(<dictcomp>)
        1    0.000    0.000    0.000    0.000 unparser.py:292(_ExceptHandler)
      5/3    0.000    0.000    0.000    0.000 qual_names.py:163(__str__)
       25    0.000    0.000    0.000    0.000 transformer.py:141(level)
        6    0.000    0.000    0.000    0.000 init_ops.py:1401(_compute_fans)
       57    0.000    0.000    0.000    0.000 op_def_library.py:665(<listcomp>)
       26    0.000    0.000    0.000    0.000 backend_agg.py:239(get_canvas_width_height)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2240(mpl_disconnect)
       52    0.000    0.000    0.000    0.000 text.py:255(get_rotation_mode)
       24    0.000    0.000    0.000    0.000 text.py:350(<listcomp>)
       12    0.000    0.000    0.000    0.000 text.py:528(_update_clip_properties)
       52    0.000    0.000    0.000    0.000 artist.py:793(get_alpha)
       36    0.000    0.000    0.000    0.000 inspect.py:690(<genexpr>)
        2    0.000    0.000    0.000    0.000 linecache.py:53(checkcache)
        2    0.000    0.000    0.000    0.000 warnings.py:449(__enter__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:2377(finalize)
        3    0.000    0.000    0.000    0.000 save_options.py:39(__init__)
       12    0.000    0.000    0.000    0.000 node.py:123(parent_nodes)
       24    0.000    0.000    0.000    0.000 base_layer_utils.py:303(<genexpr>)
       38    0.000    0.000    0.000    0.000 graph_view.py:164(saveables_cache)
       84    0.000    0.000    0.000    0.000 origin_info.py:191(_absolute_lineno)
      105    0.000    0.000    0.000    0.000 qual_names.py:104(has_subscript)
       38    0.000    0.000    0.000    0.000 saveable_object_util.py:359(<lambda>)
      114    0.000    0.000    0.000    0.000 saveable_object.py:75(optional_restore)
        8    0.000    0.000    0.000    0.000 backend_bases.py:757(copy_properties)
      128    0.000    0.000    0.000    0.000 backend_bases.py:778(restore)
      142    0.000    0.000    0.000    0.000 __init__.py:1765(<listcomp>)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:194(_lock_unlock_module)
       56    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:512(<genexpr>)
       15    0.000    0.000    0.000    0.000 signature_serialization.py:215(__iter__)
       12    0.000    0.000    0.000    0.000 saving_utils.py:306(<genexpr>)
       27    0.000    0.000    0.000    0.000 generic_utils.py:199(get_registered_object)
        6    0.000    0.000    0.000    0.000 init_ops_v2.py:997(_assert_float_dtype)
        9    0.000    0.000    0.000    0.000 reaching_fndefs.py:61(__or__)
        4    0.000    0.000    0.000    0.000 distribute_lib.py:325(require_replica_context)
        3    0.000    0.000    0.000    0.000 distribution_strategy_context.py:56(__init__)
        2    0.000    0.000    0.000    0.000 backprop.py:822(__init__)
        2    0.000    0.000    0.000    0.000 array_ops.py:852(_check_index)
        4    0.000    0.000    0.000    0.000 tape.py:145(pop_tape)
        2    0.000    0.000    0.000    0.000 figure.py:155(__contains__)
        2    0.000    0.000    0.000    0.000 figure.py:66(__init__)
       32    0.000    0.000    0.000    0.000 ticker.py:532(set_useOffset)
       48    0.000    0.000    0.000    0.000 markers.py:310(get_snap_threshold)
       40    0.000    0.000    0.000    0.000 cycler.py:371(<genexpr>)
        2    0.000    0.000    0.000    0.000 __init__.py:631(bubble)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        2    0.000    0.000    0.000    0.000 contextlib.py:338(__exit__)
       77    0.000    0.000    0.000    0.000 _collections_abc.py:302(__subclasshook__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:661(is_package)
       26    0.000    0.000    0.000    0.000 {built-in method math.sin}
       60    0.000    0.000    0.000    0.000 {method 'write' of '_io.BytesIO' objects}
        4    0.000    0.000    0.000    0.000 load.py:805(_restore_layer_activation_loss)
       10    0.000    0.000    0.000    0.000 load.py:1035(_get_keras_attr)
       54    0.000    0.000    0.000    0.000 init_ops_v2.py:62(get_config)
        9    0.000    0.000    0.000    0.000 graph_view.py:145(__init__)
        6    0.000    0.000    0.000    0.000 function_wrappers.py:91(ret)
        1    0.000    0.000    0.000    0.000 transpiler.py:117(<listcomp>)
        3    0.000    0.000    0.000    0.000 ast3.py:392(<listcomp>)
       34    0.000    0.000    0.000    0.000 templates.py:43(__init__)
        4    0.000    0.000    0.000    0.000 distribution_strategy_context.py:50(__init__)
      116    0.000    0.000    0.000    0.000 data_structures.py:475(_make_storage)
        2    0.000    0.000    0.000    0.000 tape.py:41(watched_variables)
       18    0.000    0.000    0.000    0.000 tf_inspect.py:40(_convert_maybe_argspec_to_fullargspec)
        1    0.000    0.000    0.000    0.000 Experiment.py:208(<listcomp>)
        4    0.000    0.000    0.000    0.000 axis.py:2160(get_minpos)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1265(__init__)
       12    0.000    0.000    0.000    0.000 patches.py:491(set_hatch)
       26    0.000    0.000    0.000    0.000 {method 'get_bitmap_offset' of 'matplotlib.ft2font.FT2Font' objects}
        1    0.000    0.000    0.000    0.000 __init__.py:170(disconnect)
       42    0.000    0.000    0.000    0.000 _collections_abc.py:367(__subclasshook__)
       66    0.000    0.000    0.000    0.000 weakref.py:217(keys)
       11    0.000    0.000    0.000    0.000 _weakrefset.py:38(_remove)
       72    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
        1    0.000    0.000    0.000    0.000 {method 'write' of '_io.FileIO' objects}
       10    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrInt}
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:1045(_init_set_name)
       12    0.000    0.000    0.000    0.000 input_spec.py:75(<dictcomp>)
       60    0.000    0.000    0.000    0.000 node.py:118(keras_inputs)
        1    0.000    0.000    0.000    0.000 call_trees.py:82(finalize)
        8    0.000    0.000    0.000    0.000 ast3.py:234(_make_arg)
       24    0.000    0.000    0.000    0.000 transformer.py:152(__getattr__)
        6    0.000    0.000    0.000    0.000 function.py:3676(__init__)
       57    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:1217(<listcomp>)
       16    0.000    0.000    0.000    0.000 _base.py:2548(<genexpr>)
       28    0.000    0.000    0.000    0.000 backend_bases.py:912(set_dashes)
        9    0.000    0.000    0.000    0.000 _pylab_helpers.py:99(get_active)
       52    0.000    0.000    0.000    0.000 text.py:739(get_color)
       48    0.000    0.000    0.000    0.000 markers.py:266(get_capstyle)
      8/4    0.000    0.000    0.000    0.000 transforms.py:2348(<lambda>)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:840(path_stats)
       30    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.BytesIO' objects}
       38    0.000    0.000    0.000    0.000 backend_pdf.py:302(pdfRepr)
        5    0.000    0.000    0.000    0.000 functional.py:1109(get_node_index)
       18    0.000    0.000    0.000    0.000 json_utils.py:68(<genexpr>)
        4    0.000    0.000    0.000    0.000 tf_utils.py:434(<listcomp>)
       30    0.000    0.000    0.000    0.000 constraints.py:299(get)
       21    0.000    0.000    0.000    0.000 generic_utils.py:772(validate_kwargs)
        6    0.000    0.000    0.000    0.000 backend.py:360(global_learning_phase_is_set)
        3    0.000    0.000    0.000    0.000 origin_info.py:169(__init__)
        9    0.000    0.000    0.000    0.000 unparser.py:523(_NameConstant)
        1    0.000    0.000    0.000    0.000 inspect_utils.py:60(islambda)
       31    0.000    0.000    0.000    0.000 def_function.py:926(_initialize_uninitialized_variables)
        2    0.000    0.000    0.000    0.000 file_io.py:183(tell)
       18    0.000    0.000    0.000    0.000 resource_variable_ops.py:460(_assign_dependencies)
        1    0.000    0.000    0.000    0.000 errors_impl.py:297(__init__)
        4    0.000    0.000    0.000    0.000 figure.py:78(get)
       48    0.000    0.000    0.000    0.000 backend_bases.py:660(points_to_pixels)
       74    0.000    0.000    0.000    0.000 backend_bases.py:990(get_hatch)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:109(set_active)
       48    0.000    0.000    0.000    0.000 lines.py:896(get_drawstyle)
        4    0.000    0.000    0.000    0.000 core.py:677(getdata)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
        2    0.000    0.000    0.000    0.000 warnings.py:468(__exit__)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2236(joinstyle_cmd)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2242(dash_cmd)
        4    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:32(option_image_nocomposite)
       20    0.000    0.000    0.000    0.000 activations.py:405(linear)
        8    0.000    0.000    0.000    0.000 compile_utils.py:579(<genexpr>)
        3    0.000    0.000    0.000    0.000 training_utils.py:1926(_is_graph_model)
       10    0.000    0.000    0.000    0.000 callbacks.py:934(set_params)
        9    0.000    0.000    0.000    0.000 nested_structure_coder.py:247(<listcomp>)
       46    0.000    0.000    0.000    0.000 regularizers.py:360(get)
       18    0.000    0.000    0.000    0.000 base_layer.py:1223(supports_masking)
       18    0.000    0.000    0.000    0.000 base_layer.py:2194(inbound_nodes)
        2    0.000    0.000    0.000    0.000 reaching_definitions.py:181(__init__)
       20    0.000    0.000    0.000    0.000 reaching_fndefs.py:85(init_state)
        3    0.000    0.000    0.000    0.000 loss_reduction.py:65(validate)
        1    0.000    0.000    0.000    0.000 call_trees.py:64(_consume_args)
       23    0.000    0.000    0.000    0.000 importer.py:193(<genexpr>)
        4    0.000    0.000    0.000    0.000 array_ops.py:778(<genexpr>)
        4    0.000    0.000    0.000    0.000 axis.py:2460(get_minpos)
        2    0.000    0.000    0.000    0.000 figure.py:487(set_tight_layout)
       12    0.000    0.000    0.000    0.000 figure.py:74(<listcomp>)
       13    0.000    0.000    0.000    0.000 __init__.py:60(__hash__)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2473(_ptp_dispatcher)
       13    0.000    0.000    0.000    0.000 inspect.py:229(istraceback)
        3    0.000    0.000    0.000    0.000 __init__.py:329(getMessage)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
       38    0.000    0.000    0.000    0.000 backend_pdf.py:323(_paint_path)
       16    0.000    0.000    0.000    0.000 training.py:2563(_assert_compile_was_called)
       12    0.000    0.000    0.000    0.000 compile_utils.py:596(map_missing_dict_keys)
       21    0.000    0.000    0.000    0.000 layer_serialization.py:144(objects_to_serialize)
        8    0.000    0.000    0.000    0.000 node.py:116(<listcomp>)
       10    0.000    0.000    0.000    0.000 generic_utils.py:781(validate_config)
       12    0.000    0.000    0.000    0.000 base_layer_utils.py:165(<genexpr>)
        6    0.000    0.000    0.000    0.000 init_ops_v2.py:1020(__init__)
        6    0.000    0.000    0.000    0.000 base_layer.py:2489(_set_mask_keras_history_checked)
        3    0.000    0.000    0.000    0.000 liveness.py:156(_block_statement_live_in)
        3    0.000    0.000    0.000    0.000 return_statements.py:74(_postprocess_statement)
        1    0.000    0.000    0.000    0.000 continue_statements.py:79(_postprocess_statement)
      105    0.000    0.000    0.000    0.000 qual_names.py:107(has_attr)
        4    0.000    0.000    0.000    0.000 templates.py:228(<listcomp>)
       12    0.000    0.000    0.000    0.000 distribute_lib.py:253(__init__)
        2    0.000    0.000    0.000    0.000 data_structures.py:66(_should_wrap_tuple)
       27    0.000    0.000    0.000    0.000 data_structures.py:747(<dictcomp>)
       27    0.000    0.000    0.000    0.000 def_function.py:915(function_spec)
       19    0.000    0.000    0.000    0.000 function.py:1969(inputs)
        6    0.000    0.000    0.000    0.000 tensor_spec.py:107(_serialize)
       12    0.000    0.000    0.000    0.000 axis.py:822(get_scale)
       64    0.000    0.000    0.000    0.000 backend_bases.py:857(get_snap)
       48    0.000    0.000    0.000    0.000 markers.py:263(get_joinstyle)
       48    0.000    0.000    0.000    0.000 markers.py:298(get_path)
        8    0.000    0.000    0.000    0.000 transforms.py:296(y0)
       30    0.000    0.000    0.000    0.000 {method 'get_char_index' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 rcsetup.py:123(validate_bool)
        2    0.000    0.000    0.000    0.000 tokenize.py:385(find_cookie)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:373(_calc_mode)
       21    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
       26    0.000    0.000    0.000    0.000 {built-in method math.cos}
       52    0.000    0.000    0.000    0.000 {built-in method math.radians}
        1    0.000    0.000    0.000    0.000 tmpp97_pviq.py:2(<module>)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:271(__hash__)
       10    0.000    0.000    0.000    0.000 training.py:2544(_maybe_load_initial_epoch_from_ckpt)
        2    0.000    0.000    0.000    0.000 training.py:2629(_get_distribution_strategy)
        2    0.000    0.000    0.000    0.000 compile_utils.py:280(__init__)
       10    0.000    0.000    0.000    0.000 nested_structure_coder.py:365(do_decode)
       30    0.000    0.000    0.000    0.000 base_layer.py:2821(<genexpr>)
       10    0.000    0.000    0.000    0.000 checkpoint_options.py:44(__init__)
        1    0.000    0.000    0.000    0.000 transpiler.py:123(<listcomp>)
       13    0.000    0.000    0.000    0.000 cache.py:74(_get_key)
       36    0.000    0.000    0.000    0.000 distribute_lib.py:2970(_local_results)
       22    0.000    0.000    0.000    0.000 transformer.py:191(__init__)
       12    0.000    0.000    0.000    0.000 distribute_lib.py:242(get_update_replica_id)
        2    0.000    0.000    0.000    0.000 distribution_strategy_context.py:154(in_cross_replica_context)
       12    0.000    0.000    0.000    0.000 layer_utils.py:273(<listcomp>)
       30    0.000    0.000    0.000    0.000 def_function.py:906(python_function)
       17    0.000    0.000    0.000    0.000 ops.py:6423(<genexpr>)
        8    0.000    0.000    0.000    0.000 figure.py:1703(<genexpr>)
        8    0.000    0.000    0.000    0.000 figure.py:140(current_key_axes)
       28    0.000    0.000    0.000    0.000 transforms.py:2053(get_matrix)
        2    0.000    0.000    0.000    0.000 gridspec.py:31(__init__)
        4    0.000    0.000    0.000    0.000 pickle.py:188(__init__)
        3    0.000    0.000    0.000    0.000 __init__.py:387(usesTime)
        6    0.000    0.000    0.000    0.000 weakref.py:389(__delitem__)
       80    0.000    0.000    0.000    0.000 _collections_abc.py:252(__subclasshook__)
        6    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsTensor}
       26    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:24(flipy)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:921(<listcomp>)
        3    0.000    0.000    0.000    0.000 training.py:677(<listcomp>)
        9    0.000    0.000    0.000    0.000 functional.py:776(<setcomp>)
        1    0.000    0.000    0.000    0.000 util.py:700(__init__)
        1    0.000    0.000    0.000    0.000 util.py:855(expect_partial)
       13    0.000    0.000    0.000    0.000 cfg.py:72(__init__)
        2    0.000    0.000    0.000    0.000 liveness.py:148(_block_statement_live_out)
        1    0.000    0.000    0.000    0.000 unparser.py:88(_Expr)
        2    0.000    0.000    0.000    0.000 unparser.py:772(_arg)
        7    0.000    0.000    0.000    0.000 distribution_strategy_context.py:42(__init__)
       23    0.000    0.000    0.000    0.000 tensor_shape.py:849(__bool__)
        1    0.000    0.000    0.000    0.000 device_spec.py:280(_get_combined_properties)
       14    0.000    0.000    0.000    0.000 _base.py:2470(_get_axis_list)
        6    0.000    0.000    0.000    0.000 _base.py:3635(get_yscale)
       28    0.000    0.000    0.000    0.000 axis.py:361(<dictcomp>)
       28    0.000    0.000    0.000    0.000 axis.py:372(<dictcomp>)
       16    0.000    0.000    0.000    0.000 axis.py:788(get_remove_overlapping_locs)
        4    0.000    0.000    0.000    0.000 figure.py:152(__call__)
       64    0.000    0.000    0.000    0.000 backend_bases.py:1009(get_hatch_linewidth)
       60    0.000    0.000    0.000    0.000 ticker.py:295(_set_locator)
        2    0.000    0.000    0.000    0.000 type_check.py:280(iscomplexobj)
        6    0.000    0.000    0.000    0.000 pickle.py:645(save_bool)
       13    0.000    0.000    0.000    0.000 inspect.py:239(isframe)
       66    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        2    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.StringIO' objects}
        6    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2233(capstyle_cmd)
        9    0.000    0.000    0.000    0.000 training.py:2632(_compile_was_called)
        2    0.000    0.000    0.000    0.000 compile_utils.py:416(_get_metric_objects)
        6    0.000    0.000    0.000    0.000 layer_utils.py:107(<listcomp>)
        8    0.000    0.000    0.000    0.000 node.py:115(<listcomp>)
       15    0.000    0.000    0.000    0.000 base_layer.py:2825(<genexpr>)
        2    0.000    0.000    0.000    0.000 cfg.py:496(exit_section)
      9/3    0.000    0.000    0.000    0.000 activity.py:133(referenced)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:1397(num_replicas_in_sync)
        8    0.000    0.000    0.000    0.000 revived_types.py:170(registered_identifiers)
       23    0.000    0.000    0.000    0.000 importer.py:128(_ProcessReturnElementsParam)
        6    0.000    0.000    0.000    0.000 meta_graph.py:171(<listcomp>)
        2    0.000    0.000    0.000    0.000 tensor_shape.py:916(num_elements)
       32    0.000    0.000    0.000    0.000 scale.py:43(__init__)
       24    0.000    0.000    0.000    0.000 spines.py:217(get_path)
       28    0.000    0.000    0.000    0.000 axis.py:383(<dictcomp>)
       26    0.000    0.000    0.000    0.000 backend_bases.py:637(flipy)
       32    0.000    0.000    0.000    0.000 ticker.py:556(set_useMathText)
        2    0.000    0.000    0.000    0.000 transforms.py:394(width)
        2    0.000    0.000    0.000    0.000 __init__.py:573(__init__)
        4    0.000    0.000    0.000    0.000 __init__.py:827(__init__)
       24    0.000    0.000    0.000    0.000 fromnumeric.py:2838(_prod_dispatcher)
        1    0.000    0.000    0.000    0.000 tempfile.py:285(rng)
        1    0.000    0.000    0.000    0.000 inspect.py:485(unwrap)
        3    0.000    0.000    0.000    0.000 threading.py:1230(current_thread)
        3    0.000    0.000    0.000    0.000 __init__.py:120(getLevelName)
        2    0.000    0.000    0.000    0.000 os.py:794(fsencode)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:63(_path_split)
       11    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method 'read' of '_io.FileIO' objects}
        8    0.000    0.000    0.000    0.000 {built-in method math.copysign}
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeWatchedVariables}
        4    0.000    0.000    0.000    0.000 training.py:2475(<genexpr>)
       49    0.000    0.000    0.000    0.000 nested_structure_coder.py:342(do_decode)
        1    0.000    0.000    0.000    0.000 load.py:300(<listcomp>)
        2    0.000    0.000    0.000    0.000 losses.py:185(_get_reduction)
        4    0.000    0.000    0.000    0.000 load.py:146(_is_graph_network)
        2    0.000    0.000    0.000    0.000 optimizer_v2.py:379(_clip_gradients)
        4    0.000    0.000    0.000    0.000 functional.py:626(<setcomp>)
        3    0.000    0.000    0.000    0.000 functional.py:149(<lambda>)
        3    0.000    0.000    0.000    0.000 cfg.py:669(_get_enclosing_finally_scopes)
       30    0.000    0.000    0.000    0.000 reaching_fndefs.py:49(__init__)
        1    0.000    0.000    0.000    0.000 return_statements.py:223(__init__)
        6    0.000    0.000    0.000    0.000 unparser.py:50(enter)
        3    0.000    0.000    0.000    0.000 unparser.py:445(_Str)
       12    0.000    0.000    0.000    0.000 distribute_lib.py:2901(variable_created_in_scope)
       30    0.000    0.000    0.000    0.000 base.py:633(_tracking_metadata)
        3    0.000    0.000    0.000    0.000 dataset_ops.py:4595(<listcomp>)
        8    0.000    0.000    0.000    0.000 math_ops.py:1800(<genexpr>)
        2    0.000    0.000    0.000    0.000 tape.py:51(push_tape)
       12    0.000    0.000    0.000    0.000 tensor_shape.py:700(__reduce__)
        6    0.000    0.000    0.000    0.000 tensor_shape.py:1223(__reduce__)
       24    0.000    0.000    0.000    0.000 axis.py:1579(set_units)
        2    0.000    0.000    0.000    0.000 __init__.py:44(get_projection_class)
       64    0.000    0.000    0.000    0.000 backend_bases.py:1001(get_hatch_color)
        2    0.000    0.000    0.000    0.000 gridspec.py:508(__init__)
        6    0.000    0.000    0.000    0.000 transforms.py:931(minposx)
        2    0.000    0.000    0.000    0.000 __init__.py:1294(get_backend)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1800(_nonzero_dispatcher)
        1    0.000    0.000    0.000    0.000 tempfile.py:257(_sanitize_params)
        1    0.000    0.000    0.000    0.000 tempfile.py:608(__init__)
        1    0.000    0.000    0.000    0.000 tempfile.py:635(__enter__)
       12    0.000    0.000    0.000    0.000 inspect.py:253(iscode)
        5    0.000    0.000    0.000    0.000 codecs.py:185(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:57(_path_join)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
       25    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
        3    0.000    0.000    0.000    0.000 data_adapter.py:1412(unpack_x_y_sample_weight)
        4    0.000    0.000    0.000    0.000 functional.py:938(<listcomp>)
       17    0.000    0.000    0.000    0.000 load.py:539(<genexpr>)
        1    0.000    0.000    0.000    0.000 load.py:589(<dictcomp>)
        4    0.000    0.000    0.000    0.000 metrics_utils.py:500(<genexpr>)
       18    0.000    0.000    0.000    0.000 base_layer.py:2200(outbound_nodes)
        9    0.000    0.000    0.000    0.000 functional.py:255(output)
       10    0.000    0.000    0.000    0.000 reaching_definitions.py:51(__init__)
        2    0.000    0.000    0.000    0.000 cfg.py:653(__init__)
        6    0.000    0.000    0.000    0.000 api.py:119(__init__)
        2    0.000    0.000    0.000    0.000 collective_util.py:50(__init__)
        8    0.000    0.000    0.000    0.000 math_ops.py:3500(<genexpr>)
        2    0.000    0.000    0.000    0.000 _base.py:886(set_axes_locator)
        8    0.000    0.000    0.000    0.000 _base.py:897(get_axes_locator)
        8    0.000    0.000    0.000    0.000 _base.py:2432(tol)
        2    0.000    0.000    0.000    0.000 gridspec.py:382(<dictcomp>)
        4    0.000    0.000    0.000    0.000 transforms.py:1271(_iter_break_from_left_to_right)
        2    0.000    0.000    0.000    0.000 pyplot.py:619(get_fignums)
        6    0.000    0.000    0.000    0.000 __init__.py:626(clear)
        2    0.000    0.000    0.000    0.000 __init__.py:1997(__init__)
       22    0.000    0.000    0.000    0.000 fromnumeric.py:2320(_all_dispatcher)
        2    0.000    0.000    0.000    0.000 py3k.py:50(asstr)
        4    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 inspect.py:882(__init__)
        6    0.000    0.000    0.000    0.000 __init__.py:705(filter)
        6    0.000    0.000    0.000    0.000 tokenize.py:739(generate_tokens)
       10    0.000    0.000    0.000    0.000 weakref.py:371(_commit_removals)
        4    0.000    0.000    0.000    0.000 weakref.py:73(__eq__)
       12    0.000    0.000    0.000    0.000 __init__.py:537(__missing__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:99(_path_isdir)
        4    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
       12    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {method 'isdigit' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRemove}
        4    0.000    0.000    0.000    0.000 compile_utils.py:37(__init__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:370(_create_ordered_metrics)
        4    0.000    0.000    0.000    0.000 signature_serialization.py:203(__init__)
        4    0.000    0.000    0.000    0.000 signature_serialization.py:206(_add_signature)
       15    0.000    0.000    0.000    0.000 signature_serialization.py:212(__getitem__)
        1    0.000    0.000    0.000    0.000 signature_serialization.py:237(<lambda>)
       14    0.000    0.000    0.000    0.000 load.py:673(_config_node_setter)
        1    0.000    0.000    0.000    0.000 losses.py:107(_set_name_scope)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:1246(_distribution_strategy_scope)
        7    0.000    0.000    0.000    0.000 functional.py:768(<genexpr>)
        6    0.000    0.000    0.000    0.000 base_layer.py:2442(_handle_activity_regularization)
        1    0.000    0.000    0.000    0.000 util.py:254(expect_partial)
       18    0.000    0.000    0.000    0.000 transpiler.py:203(<genexpr>)
        3    0.000    0.000    0.000    0.000 loss_reduction.py:61(all)
        1    0.000    0.000    0.000    0.000 liveness.py:114(__init__)
        1    0.000    0.000    0.000    0.000 reaching_fndefs.py:122(__init__)
        1    0.000    0.000    0.000    0.000 conversion.py:60(get_transformed_name)
        8    0.000    0.000    0.000    0.000 tpu.py:209(<lambda>)
        3    0.000    0.000    0.000    0.000 distribution_strategy_context.py:327(_get_default_replica_context)
        8    0.000    0.000    0.000    0.000 axis.py:1559(have_units)
       12    0.000    0.000    0.000    0.000 _base.py:535(get_window_extent)
        2    0.000    0.000    0.000    0.000 figure.py:932(get_facecolor)
        2    0.000    0.000    0.000    0.000 figure.py:944(get_dpi)
        8    0.000    0.000    0.000    0.000 figure.py:505(get_constrained_layout)
        2    0.000    0.000    0.000    0.000 backend_bases.py:117(get_registered_canvas_class)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1236(__init__)
        6    0.000    0.000    0.000    0.000 transforms.py:935(minposy)
        4    0.000    0.000    0.000    0.000 transforms.py:286(x0)
        2    0.000    0.000    0.000    0.000 __init__.py:2148(_check_getitem)
        2    0.000    0.000    0.000    0.000 _datasource.py:332(__del__)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2017(_clip_dispatcher)
        2    0.000    0.000    0.000    0.000 contextlib.py:271(__init__)
        3    0.000    0.000    0.000    0.000 enum.py:28(_is_dunder)
        2    0.000    0.000    0.000    0.000 warnings.py:428(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1359(_get_supported_file_loaders)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:85(_path_is_mode_type)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:47(_w_long)
       21    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       18    0.000    0.000    0.000    0.000 {method 'end' of '_sre.SRE_Match' objects}
        8    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetAdd}
       20    0.000    0.000    0.000    0.000 callbacks.py:758(on_train_end)
        6    0.000    0.000    0.000    0.000 signature_serialization.py:218(__len__)
        1    0.000    0.000    0.000    0.000 load.py:604(<listcomp>)
       12    0.000    0.000    0.000    0.000 save_impl.py:117(<dictcomp>)
       18    0.000    0.000    0.000    0.000 layer_serialization.py:34(object_identifier)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:635(<genexpr>)
        6    0.000    0.000    0.000    0.000 base_layer.py:2629(<genexpr>)
        7    0.000    0.000    0.000    0.000 functional.py:141(<genexpr>)
        1    0.000    0.000    0.000    0.000 transpiler.py:290(_erase_arg_defaults)
       14    0.000    0.000    0.000    0.000 activity.py:223(__init__)
        4    0.000    0.000    0.000    0.000 parser.py:217(<genexpr>)
        3    0.000    0.000    0.000    0.000 unparser.py:854(_alias)
       38    0.000    0.000    0.000    0.000 base.py:621(_object_identifier)
        3    0.000    0.000    0.000    0.000 type_spec.py:286(_deserialize)
       16    0.000    0.000    0.000    0.000 axis.py:1364(<listcomp>)
       12    0.000    0.000    0.000    0.000 axis.py:1865(get_label_position)
        8    0.000    0.000    0.000    0.000 _base.py:1202(get_aspect)
        8    0.000    0.000    0.000    0.000 axis.py:645(__init__)
        6    0.000    0.000    0.000    0.000 widgets.py:34(__init__)
       16    0.000    0.000    0.000    0.000 ticker.py:1822(tick_values)
        8    0.000    0.000    0.000    0.000 path.py:630(unit_rectangle)
        4    0.000    0.000    0.000    0.000 __init__.py:1312(is_interactive)
       34    0.000    0.000    0.000    0.000 shape_base.py:21(_atleast_1d_dispatcher)
        1    0.000    0.000    0.000    0.000 tempfile.py:622(func_wrapper)
        1    0.000    0.000    0.000    0.000 tempfile.py:646(close)
        3    0.000    0.000    0.000    0.000 threading.py:1076(name)
        4    0.000    0.000    0.000    0.000 __init__.py:586(update)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:59(<listcomp>)
        2    0.000    0.000    0.000    0.000 {method 'flush' of '_io._IOBase' objects}
        6    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        6    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        8    0.000    0.000    0.000    0.000 {built-in method sys.is_finalizing}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1629(is_string_like)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:268(__lt__)
        6    0.000    0.000    0.000    0.000 network_serialization.py:28(object_identifier)
        4    0.000    0.000    0.000    0.000 compile_utils.py:98(<lambda>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:270(_should_broadcast)
        2    0.000    0.000    0.000    0.000 compile_utils.py:419(<listcomp>)
       10    0.000    0.000    0.000    0.000 callbacks.py:944(on_train_begin)
       12    0.000    0.000    0.000    0.000 functional.py:905(<lambda>)
       23    0.000    0.000    0.000    0.000 function_deserialization.py:363(<lambda>)
        1    0.000    0.000    0.000    0.000 layer_utils.py:168(<listcomp>)
       12    0.000    0.000    0.000    0.000 save_impl.py:113(<listcomp>)
        1    0.000    0.000    0.000    0.000 transpiler.py:150(__init__)
       20    0.000    0.000    0.000    0.000 liveness.py:47(init_state)
        2    0.000    0.000    0.000    0.000 unparser.py:113(<lambda>)
       12    0.000    0.000    0.000    0.000 resource_variable_ops.py:573(constraint)
       12    0.000    0.000    0.000    0.000 resource_variable_ops.py:664(<lambda>)
       16    0.000    0.000    0.000    0.000 resource_variable_ops.py:2042(op)
        2    0.000    0.000    0.000    0.000 math_ops.py:1801(<listcomp>)
        6    0.000    0.000    0.000    0.000 array_ops.py:1407(<genexpr>)
        6    0.000    0.000    0.000    0.000 tf_stack.py:83(reset)
        1    0.000    0.000    0.000    0.000 Experiment.py:123(__init__)
        4    0.000    0.000    0.000    0.000 _base.py:232(<genexpr>)
        4    0.000    0.000    0.000    0.000 _base.py:2405(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:2971(set_axis_on)
        2    0.000    0.000    0.000    0.000 figure.py:2059(add_axobserver)
        4    0.000    0.000    0.000    0.000 figure.py:483(get_tight_layout)
       12    0.000    0.000    0.000    0.000 figure.py:76(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1679(_idle_draw_cntx)
        4    0.000    0.000    0.000    0.000 lines.py:1447(is_dashed)
        2    0.000    0.000    0.000    0.000 transforms.py:400(height)
        6    0.000    0.000    0.000    0.000 __init__.py:51(__init__)
       12    0.000    0.000    0.000    0.000 _datasource.py:173(_load)
       32    0.000    0.000    0.000    0.000 function_base.py:1137(_diff_dispatcher)
        3    0.000    0.000    0.000    0.000 process.py:146(name)
        2    0.000    0.000    0.000    0.000 tempfile.py:580(close)
        6    0.000    0.000    0.000    0.000 posixpath.py:135(splitdrive)
        2    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
        1    0.000    0.000    0.000    0.000 codecs.py:308(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:369(__init__)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:917(_sanity_check)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:393(_check_name_wrapper)
        3    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
       11    0.000    0.000    0.000    0.000 {method 'discard' of 'set' objects}
        1    0.000    0.000    0.000    0.000 {built-in method gc.collect}
        2    0.000    0.000    0.000    0.000 tmpp97_pviq.py:7(inner_factory)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1632(is_date)
        3    0.000    0.000    0.000    0.000 tmpdswf691e.py:7(inner_factory)
        6    0.000    0.000    0.000    0.000 save.py:187(<dictcomp>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:40(build)
        4    0.000    0.000    0.000    0.000 compile_utils.py:93(_broadcast_fn)
        1    0.000    0.000    0.000    0.000 compile_utils.py:334(_set_metric_names)
        2    0.000    0.000    0.000    0.000 compile_utils.py:626(get_mask)
        1    0.000    0.000    0.000    0.000 load_options.py:35(__init__)
        1    0.000    0.000    0.000    0.000 function_deserialization.py:390(<listcomp>)
        8    0.000    0.000    0.000    0.000 node.py:74(<lambda>)
        3    0.000    0.000    0.000    0.000 tf_utils.py:194(<lambda>)
        1    0.000    0.000    0.000    0.000 util.py:127(__init__)
        6    0.000    0.000    0.000    0.000 backend.py:166(backend)
        1    0.000    0.000    0.000    0.000 naming.py:27(__init__)
        4    0.000    0.000    0.000    0.000 origin_info.py:162(__init__)
        3    0.000    0.000    0.000    0.000 cfg.py:665(_exit_lexical_scope)
       10    0.000    0.000    0.000    0.000 reaching_fndefs.py:58(__ne__)
        1    0.000    0.000    0.000    0.000 functions.py:41(_function_scope_options)
        1    0.000    0.000    0.000    0.000 return_statements.py:70(visit_Return)
        6    0.000    0.000    0.000    0.000 conversion.py:251(_create_custom_vars)
        1    0.000    0.000    0.000    0.000 call_trees.py:86(to_ast)
        2    0.000    0.000    0.000    0.000 backprop.py:875(__del__)
        1    0.000    0.000    0.000    0.000 def_function.py:57(__init__)
        6    0.000    0.000    0.000    0.000 tf_stack.py:95(reset)
       12    0.000    0.000    0.000    0.000 scale.py:79(limit_range_for_scale)
        2    0.000    0.000    0.000    0.000 _base.py:242(_setdefaults)
        2    0.000    0.000    0.000    0.000 _base.py:2133(use_sticky_edges)
        2    0.000    0.000    0.000    0.000 __init__.py:19(get_projection_class)
        2    0.000    0.000    0.000    0.000 figure.py:928(get_edgecolor)
        2    0.000    0.000    0.000    0.000 figure.py:1073(fixitems)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2582(notify_axes_change)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1687(is_saving)
        2    0.000    0.000    0.000    0.000 gridspec.py:204(_normalize)
        6    0.000    0.000    0.000    0.000 gridspec.py:67(get_geometry)
        4    0.000    0.000    0.000    0.000 transforms.py:2085(inverted)
        4    0.000    0.000    0.000    0.000 artist.py:1033(get_zorder)
        2    0.000    0.000    0.000    0.000 _datasource.py:225(__getitem__)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2401(_cumsum_dispatcher)
        6    0.000    0.000    0.000    0.000 numeric.py:2163(_isclose_dispatcher)
        3    0.000    0.000    0.000    0.000 process.py:35(current_process)
        1    0.000    0.000    0.000    0.000 tempfile.py:565(__init__)
        1    0.000    0.000    0.000    0.000 tempfile.py:590(__del__)
        2    0.000    0.000    0.000    0.000 linecache.py:37(getlines)
        9    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
        2    0.000    0.000    0.000    0.000 {method 'to_bytes' of 'int' objects}
        2    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        3    0.000    0.000    0.000    0.000 {method 'extend' of 'bytearray' objects}
        1    0.000    0.000    0.000    0.000 {method 'rsplit' of 'str' objects}
        1    0.000    0.000    0.000    0.000 {method '__enter__' of '_io._IOBase' objects}
        1    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISREG}
        2    0.000    0.000    0.000    0.000 {method 'utcoffset' of 'datetime.datetime' objects}
        7    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        1    0.000    0.000    0.000    0.000 tmpp97_pviq.py:3(outer_factory)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1493(writeImages)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1533(writeMarkers)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1556(writePathCollectionTemplates)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:508(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1273(_write_soft_mask_groups)
        1    0.000    0.000    0.000    0.000 tmp_c03j0ll.py:7(inner_factory)
        1    0.000    0.000    0.000    0.000 compile_utils.py:151(_create_metrics)
        4    0.000    0.000    0.000    0.000 compile_utils.py:398(<genexpr>)
        3    0.000    0.000    0.000    0.000 save_options.py:98(_validate_namespace_whitelist)
        6    0.000    0.000    0.000    0.000 distributed_training_utils.py:439(is_tpu_strategy)
        5    0.000    0.000    0.000    0.000 load.py:408(_UserObject)
        4    0.000    0.000    0.000    0.000 load.py:266(<dictcomp>)
        3    0.000    0.000    0.000    0.000 saving_utils.py:142(<dictcomp>)
        1    0.000    0.000    0.000    0.000 saving_utils.py:248(_is_single_object)
        1    0.000    0.000    0.000    0.000 losses.py:1857(get)
        6    0.000    0.000    0.000    0.000 layer_serialization.py:128(object_identifier)
        2    0.000    0.000    0.000    0.000 optimizer_v2.py:514(<listcomp>)
        2    0.000    0.000    0.000    0.000 base_layer_utils.py:483(frozen)
        6    0.000    0.000    0.000    0.000 node.py:72(<lambda>)
        6    0.000    0.000    0.000    0.000 metric_serialization.py:28(object_identifier)
        1    0.000    0.000    0.000    0.000 transpiler.py:279(get_transformed_name)
        1    0.000    0.000    0.000    0.000 directives.py:50(__init__)
        2    0.000    0.000    0.000    0.000 cfg.py:372(begin_statement)
        2    0.000    0.000    0.000    0.000 cfg.py:381(end_statement)
        3    0.000    0.000    0.000    0.000 cfg.py:425(_connect_jump_to_finally_sections)
        2    0.000    0.000    0.000    0.000 cfg.py:484(enter_section)
        2    0.000    0.000    0.000    0.000 cfg.py:553(new_cond_branch)
        1    0.000    0.000    0.000    0.000 cfg.py:567(exit_cond_section)
        3    0.000    0.000    0.000    0.000 cfg.py:662(_enter_lexical_scope)
        1    0.000    0.000    0.000    0.000 cfg.py:678(_get_enclosing_except_scopes)
        2    0.000    0.000    0.000    0.000 functions.py:34(__init__)
        3    0.000    0.000    0.000    0.000 return_statements.py:39(__init__)
        4    0.000    0.000    0.000    0.000 return_statements.py:161(__init__)
        2    0.000    0.000    0.000    0.000 return_statements.py:174(__init__)
        1    0.000    0.000    0.000    0.000 continue_statements.py:31(__init__)
        1    0.000    0.000    0.000    0.000 call_trees.py:59(__init__)
        1    0.000    0.000    0.000    0.000 parser.py:54(_unfold_continuations)
        6    0.000    0.000    0.000    0.000 unparser.py:55(leave)
        4    0.000    0.000    0.000    0.000 unparser.py:106(<genexpr>)
        1    0.000    0.000    0.000    0.000 unparser.py:223(_Raise)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2745(strategy)
       12    0.000    0.000    0.000    0.000 distribute_lib.py:2947(_reduce_to)
        1    0.000    0.000    0.000    0.000 transformer.py:55(__init__)
        2    0.000    0.000    0.000    0.000 def_function.py:80(get_tracing_count)
        6    0.000    0.000    0.000    0.000 iterator_ops.py:881(value_type)
        3    0.000    0.000    0.000    0.000 file_io.py:193(__enter__)
        4    0.000    0.000    0.000    0.000 backend_agg.py:272(option_image_nocomposite)
        8    0.000    0.000    0.000    0.000 axis.py:1486(<dictcomp>)
        4    0.000    0.000    0.000    0.000 _base.py:321(<genexpr>)
        2    0.000    0.000    0.000    0.000 _base.py:604(_request_autoscale_view)
        2    0.000    0.000    0.000    0.000 _base.py:3884(set_navigate)
        2    0.000    0.000    0.000    0.000 _base.py:3900(set_navigate_mode)
        4    0.000    0.000    0.000    0.000 backend_bases.py:895(set_clip_rectangle)
        2    0.000    0.000    0.000    0.000 gridspec.py:532(num2)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:29(get_fig_manager)
        2    0.000    0.000    0.000    0.000 gridspec.py:113(set_height_ratios)
        2    0.000    0.000    0.000    0.000 patches.py:290(get_facecolor)
       12    0.000    0.000    0.000    0.000 transforms.py:1284(depth)
        8    0.000    0.000    0.000    0.000 artist.py:350(is_transform_set)
        2    0.000    0.000    0.000    0.000 artist.py:961(set_in_layout)
        4    0.000    0.000    0.000    0.000 __init__.py:828(<dictcomp>)
        2    0.000    0.000    0.000    0.000 npyio.py:1205(_savetxt_dispatcher)
        2    0.000    0.000    0.000    0.000 type_check.py:207(_is_type_dispatcher)
        6    0.000    0.000    0.000    0.000 multiarray.py:635(result_type)
        4    0.000    0.000    0.000    0.000 pickle.py:195(end_framing)
        1    0.000    0.000    0.000    0.000 tempfile.py:236(_infer_return_type)
        2    0.000    0.000    0.000    0.000 parse.py:394(_checknetloc)
       16    0.000    0.000    0.000    0.000 parse.py:98(_noop)
        1    0.000    0.000    0.000    0.000 inspect.py:502(_is_wrapper)
        1    0.000    0.000    0.000    0.000 tokenize.py:224(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:800(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
        4    0.000    0.000    0.000    0.000 {method 'endswith' of 'bytes' objects}
        1    0.000    0.000    0.000    0.000 {built-in method atexit.register}
        1    0.000    0.000    0.000    0.000 {built-in method _imp.extension_suffixes}
        1    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:521(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:525(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:529(<genexpr>)
        4    0.000    0.000    0.000    0.000 fractions.py:504(__trunc__)
        4    0.000    0.000    0.000    0.000 compile_utils.py:399(<genexpr>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:480(_should_broadcast)
        3    0.000    0.000    0.000    0.000 functional.py:1103(add_unprocessed_node)
        2    0.000    0.000    0.000    0.000 policy.py:444(loss_scale)
        3    0.000    0.000    0.000    0.000 layer_serialization.py:147(functions_to_serialize)
        3    0.000    0.000    0.000    0.000 tf_utils.py:181(<listcomp>)
        3    0.000    0.000    0.000    0.000 functional.py:355(_should_compute_mask)
        6    0.000    0.000    0.000    0.000 base_layer.py:2798(<genexpr>)
        1    0.000    0.000    0.000    0.000 util.py:134(set_expect_partial)
        1    0.000    0.000    0.000    0.000 util.py:137(__del__)
        1    0.000    0.000    0.000    0.000 cfg.py:574(enter_except_section)
        1    0.000    0.000    0.000    0.000 call_trees.py:44(__init__)
        2    0.000    0.000    0.000    0.000 call_trees.py:70(add_arg)
        2    0.000    0.000    0.000    0.000 continue_statements.py:54(__init__)
        1    0.000    0.000    0.000    0.000 unparser.py:658(<lambda>)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:2976(_num_replicas_in_sync)
        2    0.000    0.000    0.000    0.000 tensor_util.py:499(<listcomp>)
        2    0.000    0.000    0.000    0.000 tape.py:38(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:97(<dictcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:528(num2)
        2    0.000    0.000    0.000    0.000 gridspec.py:549(get_gridspec)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:78(has_fignum)
        2    0.000    0.000    0.000    0.000 gridspec.py:93(set_width_ratios)
        2    0.000    0.000    0.000    0.000 patches.py:286(get_edgecolor)
        2    0.000    0.000    0.000    0.000 artist.py:827(get_clip_path)
        8    0.000    0.000    0.000    0.000 artist.py:1201(mouseover)
        2    0.000    0.000    0.000    0.000 _iotools.py:46(_is_string_like)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:833(_sort_dispatcher)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 tempfile.py:376(_get_candidate_names)
        1    0.000    0.000    0.000    0.000 tempfile.py:430(gettempdir)
        2    0.000    0.000    0.000    0.000 contextlib.py:17(__enter__)
        1    0.000    0.000    0.000    0.000 codecs.py:259(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:669(create_module)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:825(get_filename)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:424(has_location)
        8    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:601(<dictcomp>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:421(_get_metric_object)
        2    0.000    0.000    0.000    0.000 compile_utils.py:631(apply_mask)
        1    0.000    0.000    0.000    0.000 load.py:682(_finalize_saved_model_layers)
        4    0.000    0.000    0.000    0.000 load.py:851(<dictcomp>)
        1    0.000    0.000    0.000    0.000 load.py:223(_expect_partial_checkpoint)
        1    0.000    0.000    0.000    0.000 functional.py:139(<genexpr>)
        1    0.000    0.000    0.000    0.000 cfg.py:469(connect_raise_node)
        1    0.000    0.000    0.000    0.000 cfg.py:539(enter_cond_section)
        3    0.000    0.000    0.000    0.000 ast3.py:380(<listcomp>)
        1    0.000    0.000    0.000    0.000 converter.py:218(<genexpr>)
        1    0.000    0.000    0.000    0.000 transformer.py:137(stack)
        2    0.000    0.000    0.000    0.000 _subplots.py:117(get_subplotspec)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2597(destroy)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1929(draw)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:115(<listcomp>)
        2    0.000    0.000    0.000    0.000 artist.py:1013(get_label)
        2    0.000    0.000    0.000    0.000 multiarray.py:990(unravel_index)


