         1612064486 function calls (1540329159 primitive calls) in 3894.139 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        2    0.001    0.000 3800.137 1900.068 Experiment.py:191(run)
    52944    2.196    0.000 2548.381    0.048 training.py:126(_method_wrapper)
    52944    4.944    0.000 2513.269    0.047 training.py:1486(predict)
       50    0.003    0.000 2309.342   46.187 Experiment.py:184(train)
       50    0.547    0.011 2309.339   46.187 Experiment.py:113(train)
    52994    1.635    0.000 1524.418    0.029 data_adapter.py:1073(__init__)
    52994    1.954    0.000 1506.602    0.028 data_adapter.py:254(__init__)
130146/130050    2.986    0.000 1392.914    0.011 def_function.py:757(__call__)
130146/130050    0.865    0.000 1384.933    0.011 def_function.py:798(_call)
130121/130025    0.828    0.000 1382.512    0.011 function.py:2825(__call__)
   130146    1.020    0.000 1353.712    0.010 function.py:1827(_filtered_call)
   130170    2.594    0.000 1349.744    0.010 function.py:1850(_call_flat)
   130170    4.408    0.000 1339.153    0.010 function.py:509(call)
   129810    0.909    0.000 1332.979    0.010 execute.py:33(quick_execute)
   129810 1331.835    0.010 1331.835    0.010 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
       52    0.908    0.017 1323.561   25.453 Experiment.py:171(play_episode)
   158982    5.779    0.000 1320.156    0.008 dataset_ops.py:3186(__init__)
       50    0.002    0.000 1312.966   26.259 function_base.py:2063(__call__)
       50    0.529    0.011 1312.964   26.259 function_base.py:2154(_vectorize_call)
    27673    1.721    0.000 1312.431    0.047 Experiment.py:101(Q)
    39285    1.210    0.000 1302.142    0.033 Experiment.py:82(move)
294373/293557    4.490    0.000 1300.918    0.004 function.py:3147(_maybe_define_function)
164082/163890    2.999    0.000 1281.480    0.008 function.py:2870(_get_concrete_function_garbage_collected)
   158982    0.635    0.000 1279.231    0.008 function.py:2931(get_concrete_function)
159346/159226    3.538    0.000 1258.503    0.008 function.py:3047(_create_graph_function)
159346/159226    9.201    0.000 1176.293    0.007 func_graph.py:801(func_graph_from_py_func)
       50    0.001    0.000  986.470   19.729 training.py:106(_method_wrapper)
       50    1.321    0.026  986.467   19.729 training.py:824(fit)
   105988    0.398    0.000  710.006    0.007 dataset_ops.py:1557(map)
    52994    0.157    0.000  696.567    0.013 dataset_ops.py:1704(flat_map)
    52994    1.711    0.000  696.411    0.013 dataset_ops.py:4119(__init__)
   158982    0.990    0.000  644.616    0.004 dataset_ops.py:3358(wrapper_fn)
   158982    1.765    0.000  636.875    0.004 dataset_ops.py:3292(_wrapper_helper)
159025/158986    1.230    0.000  615.435    0.004 api.py:247(wrapper)
159072/158998    2.463    0.000  612.696    0.004 api.py:417(converted_call)
   905998  580.059    0.001  583.536    0.001 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
159053/159010    0.624    0.000  579.677    0.004 api.py:330(_call_unconverted)
586545/586225   49.660    0.000  524.155    0.001 op_def_library.py:299(_apply_op_helper)
708241/534709    1.262    0.000  518.409    0.001 dispatch.py:198(wrapper)
  4454839    1.450    0.000  488.292    0.000 {built-in method builtins.iter}
   107862    0.745    0.000  488.136    0.005 data_adapter.py:1135(enumerate_epochs)
    52994    0.255    0.000  486.842    0.009 dataset_ops.py:403(__iter__)
    53003    0.678    0.000  486.511    0.009 iterator_ops.py:648(__init__)
    52994    1.623    0.000  484.462    0.009 iterator_ops.py:700(_create_iterator)
    52994    0.246    0.000  451.665    0.009 gen_dataset_ops.py:2987(make_iterator)
1278072/1277508   12.009    0.000  411.475    0.000 func_graph.py:528(_create_op_internal)
  1278708   16.727    0.000  395.331    0.000 ops.py:3418(_create_op_internal)
    52994    0.972    0.000  381.743    0.007 data_adapter.py:330(slice_batch_indices)
    52994    0.834    0.000  377.892    0.007 data_adapter.py:373(slice_inputs)
    52994    1.752    0.000  375.514    0.007 dataset_ops.py:4031(__init__)
    52994    1.811    0.000  334.094    0.006 dataset_ops.py:4069(__init__)
  1278708   32.625    0.000  262.885    0.000 ops.py:1839(__init__)
       13    0.382    0.029  259.655   19.973 _dill.py:253(dump)
       13    0.000    0.000  259.272   19.944 _dill.py:414(dump)
       13    0.000    0.000  259.271   19.944 pickle.py:398(dump)
46606354/13   88.107    0.000  259.271   19.944 pickle.py:457(save)
402802/37    0.598    0.000  259.268    7.007 pickle.py:774(save_list)
402802/37    1.922    0.000  259.267    7.007 pickle.py:787(_batch_appends)
2294826/13588   11.974    0.000  258.763    0.019 _dill.py:903(save_module_dict)
1825969/33501    8.732    0.000  258.656    0.008 pickle.py:539(save_reduce)
2294826/13588    4.341    0.000  258.637    0.019 pickle.py:814(save_dict)
2294826/13588   22.042    0.000  258.547    0.019 pickle.py:827(_batch_setitems)
2578624/2578029    8.931    0.000  252.185    0.000 ops.py:1448(convert_to_tensor)
   968787    1.836    0.000  226.202    0.000 constant_op.py:166(constant)
   968787    9.804    0.000  224.367    0.000 constant_op.py:267(_constant_impl)
   159346   11.102    0.000  207.701    0.001 auto_control_deps.py:301(__exit__)
855154/853624    4.940    0.000  199.929    0.000 nest.py:573(map_structure)
855154/853624    1.322    0.000  177.803    0.000 nest.py:635(<listcomp>)
   105987    0.252    0.000  177.648    0.002 array_ops.py:1028(slice)
   105987    0.998    0.000  177.396    0.002 gen_array_ops.py:9212(_slice)
  1280040    7.240    0.000  176.623    0.000 auto_control_deps.py:519(_get_resource_inputs)
       12    0.019    0.002  165.269   13.772 Experiment.py:226(save_status)
  1278044    7.408    0.000  145.817    0.000 auto_control_deps_utils.py:89(get_read_write_resource_inputs)
   265065    0.269    0.000  120.844    0.000 constant_op.py:335(_constant_tensor_conversion_function)
  1278708   20.008    0.000  116.022    0.000 ops.py:1764(_create_c_op)
    52994    0.268    0.000  115.831    0.002 data_adapter.py:315(permutation)
    52997    0.946    0.000  115.385    0.002 math_ops.py:1731(range)
  1708357   10.004    0.000  109.820    0.000 ops.py:2471(get_attr)
   318692    6.436    0.000  109.784    0.000 func_graph.py:1148(_get_defun_inputs)
   159346    0.287    0.000  106.367    0.001 func_graph.py:1136(_get_defun_inputs_from_args)
   650548    0.883    0.000  105.497    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
        1    0.002    0.002  104.952  104.952 Experiment.py:204(save)
13847737/8781915    8.692    0.000   87.310    0.000 {built-in method builtins.next}
   159396    0.716    0.000   87.290    0.001 func_graph.py:930(convert)
   214580    4.252    0.000   85.149    0.000 graph_only_ops.py:29(graph_placeholder)
   159396    1.040    0.000   84.898    0.001 auto_control_deps.py:182(mark_as_return)
   223973    1.071    0.000   84.406    0.000 array_ops.py:244(identity)
   223973    1.294    0.000   81.276    0.000 gen_array_ops.py:3973(identity)
    52994    0.163    0.000   78.738    0.001 data_adapter.py:393(grab_batch)
  1708357   73.592    0.000   78.350    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
   159346    2.981    0.000   77.667    0.000 function.py:1460(__init__)
    53044    0.216    0.000   77.598    0.001 data_adapter.py:394(<lambda>)
    53044    0.435    0.000   77.257    0.001 array_ops.py:4589(gather)
    53044    0.970    0.000   76.420    0.001 gen_array_ops.py:3790(gather_v2)
7456466/4925867    3.874    0.000   66.763    0.000 contextlib.py:79(__enter__)
   105987    0.257    0.000   64.267    0.001 dataset_ops.py:569(from_tensors)
   105987    1.180    0.000   64.010    0.001 dataset_ops.py:2980(__init__)
   159346    1.208    0.000   59.722    0.000 function.py:597(__init__)
   159346    9.058    0.000   57.659    0.000 function.py:412(__init__)
    53011    0.206    0.000   56.062    0.001 array_ops.py:59(reshape)
    53011    0.443    0.000   54.299    0.001 gen_array_ops.py:8143(reshape)
  1490828   10.200    0.000   53.093    0.000 func_graph.py:365(inner_cm)
   477199   14.540    0.000   52.808    0.000 tensor_util.py:360(make_tensor_proto)
   741914    8.287    0.000   52.561    0.000 dataset_ops.py:186(__init__)
    52994    0.188    0.000   49.529    0.001 dataset_ops.py:606(from_tensor_slices)
    52994    1.071    0.000   49.341    0.001 dataset_ops.py:2999(__init__)
    52993    0.155    0.000   49.181    0.001 dataset_ops.py:1002(concatenate)
    52993    1.082    0.000   49.025    0.001 dataset_ops.py:3504(__init__)
100231496/100229996   25.820    0.000   41.506    0.000 {built-in method builtins.isinstance}
   105987    0.788    0.000   40.346    0.000 gen_dataset_ops.py:6595(tensor_dataset)
    52997    0.602    0.000   38.252    0.001 gen_math_ops.py:7268(_range)
  1278708   11.752    0.000   38.121    0.000 ops.py:3521(_create_op_helper)
    52993    0.720    0.000   35.652    0.001 gen_dataset_ops.py:853(concatenate_dataset)
   745414    3.416    0.000   35.528    0.000 func_graph.py:362(as_default)
7456466/4930429   10.017    0.000   34.863    0.000 contextlib.py:85(__exit__)
    69014    0.181    0.000   34.551    0.001 callbacks.py:281(_call_batch_hook)
   423952    0.806    0.000   34.237    0.000 dataset_ops.py:2956(__init__)
    52994    0.649    0.000   33.909    0.001 gen_dataset_ops.py:6664(tensor_slice_dataset)
    69014    0.686    0.000   33.871    0.000 callbacks.py:332(_call_batch_hook_helper)
   159528    5.584    0.000   33.541    0.000 func_graph.py:165(__init__)
  2037104    1.604    0.000   33.387    0.000 nest.py:536(pack_sequence_as)
  2090102    5.706    0.000   32.854    0.000 nest.py:496(_pack_sequence_as)
  1278708   19.711    0.000   32.781    0.000 ops.py:1737(_NodeDef)
  1598773    2.860    0.000   32.768    0.000 tf_stack.py:131(extract_stack)
    34507    0.178    0.000   32.519    0.001 callbacks.py:432(on_train_batch_end)
    34507    0.150    0.000   32.224    0.001 callbacks.py:302(_call_batch_end_hook)
  1278708   31.842    0.000   31.842    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
    52994    0.898    0.000   31.506    0.001 iterator_ops.py:531(__del__)
  1598773   29.241    0.000   29.247    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
    36431    2.086    0.000   28.555    0.001 generic_utils.py:528(update)
   318908    1.189    0.000   28.438    0.000 func_graph.py:69(convert_structure_to_signature)
  1497020    8.878    0.000   27.591    0.000 ops.py:5580(get_controller)
    34507    0.089    0.000   27.383    0.001 callbacks.py:960(on_train_batch_end)
    34507    0.423    0.000   27.294    0.001 callbacks.py:999(_batch_update_progbar)
    52994    0.221    0.000   27.033    0.001 gen_dataset_ops.py:1262(delete_iterator)
 58016855   16.488    0.000   26.832    0.000 pickle.py:213(write)
  7456466    7.549    0.000   26.111    0.000 contextlib.py:157(helper)
   742912    5.192    0.000   25.333    0.000 base.py:800(_track_trackable)
  1283595   14.171    0.000   25.328    0.000 ops.py:2312(inputs)
   159322    1.174    0.000   24.634    0.000 function.py:3632(decorated)
    52994    0.222    0.000   24.302    0.000 gen_dataset_ops.py:2003(flat_map_dataset)
   104927    0.489    0.000   24.250    0.000 Hanabi.py:371(save)
745428/745427    2.155    0.000   23.830    0.000 tf_contextlib.py:25(contextmanager)
 37936148   14.686    0.000   23.030    0.000 pickle.py:448(get)
7482121/7371028   13.842    0.000   22.964    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    52994    0.668    0.000   22.910    0.000 dataset_ops.py:356(_apply_options)
   159540   12.015    0.000   22.591    0.000 ops.py:2862(__init__)
   264970    0.404    0.000   22.229    0.000 dataset_ops.py:2967(__init__)
   105988    0.209    0.000   21.330    0.000 dataset_ops.py:1128(repeat)
   105988    1.162    0.000   21.121    0.000 dataset_ops.py:3552(__init__)
 61097874   14.477    0.000   21.043    0.000 {method 'get' of 'dict' objects}
  7965519    4.523    0.000   20.996    0.000 nest.py:274(flatten)
 19288102    6.989    0.000   20.239    0.000 ops.py:2376(type)
    18607    0.228    0.000   20.152    0.001 iostream.py:334(flush)
  2131007    5.522    0.000   20.001    0.000 Hanabi.py:159(toarray)
31537331/31533647   15.613    0.000   19.673    0.000 {built-in method builtins.getattr}
3410636/2613870    4.884    0.000   19.409    0.000 {built-in method builtins.any}
   159322    1.747    0.000   18.702    0.000 function.py:2767(__init__)
   294883    3.631    0.000   18.452    0.000 function.py:2977(_cache_key)
  7456466   15.122    0.000   18.374    0.000 contextlib.py:59(__init__)
   692163    4.502    0.000   18.340    0.000 ops.py:3868(_get_op_def)
    52994    0.676    0.000   18.209    0.000 dataset_ops.py:4375(__init__)
  8384353   15.031    0.000   17.908    0.000 dtypes.py:606(as_dtype)
   747620    2.170    0.000   17.745    0.000 ops.py:6458(__enter__)
  7012413    3.766    0.000   17.398    0.000 <__array_function__ internals>:2(concatenate)
    52994    0.216    0.000   17.321    0.000 gen_dataset_ops.py:5057(parallel_map_dataset_v2)
   982988    1.551    0.000   17.207    0.000 Experiment.py:93(<lambda>)
    52994    0.253    0.000   17.200    0.000 gen_dataset_ops.py:3036(map_dataset)
  1801810    1.901    0.000   17.174    0.000 {built-in method _functools.reduce}
    52994    0.232    0.000   17.101    0.000 dataset_ops.py:920(range)
    52994    0.776    0.000   16.868    0.000 dataset_ops.py:3570(__init__)
  4194594   16.824    0.000   16.824    0.000 {method 'acquire' of '_thread.lock' objects}
  1278604    1.704    0.000   16.598    0.000 ops.py:386(_create_with_tf_output)
  7965519   16.118    0.000   16.473    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
  4524377    8.387    0.000   16.462    0.000 pickle.py:413(memoize)
   158981    2.993    0.000   16.306    0.000 structure.py:70(normalize_element)
    80567    1.117    0.000   16.177    0.000 Hanabi.py:259(toarray)
  1278708    0.994    0.000   15.746    0.000 lock_util.py:123(__enter__)
  5370225    8.953    0.000   15.664    0.000 abc.py:180(__instancecheck__)
745428/745427    2.783    0.000   15.623    0.000 contextlib.py:129(contextmanager)
   104927    0.250    0.000   15.551    0.000 Hanabi.py:379(<listcomp>)
37899706/37898746   14.506    0.000   15.369    0.000 {built-in method builtins.hasattr}
  2340362    7.723    0.000   15.345    0.000 Hanabi.py:111(save)
   524635    0.685    0.000   15.301    0.000 Hanabi.py:245(save)
    18607    0.168    0.000   15.298    0.001 threading.py:533(wait)
   908387   15.166    0.000   15.166    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
    18545    0.202    0.000   15.058    0.001 threading.py:263(wait)
   159492    1.032    0.000   15.054    0.000 function.py:2299(from_function_and_signature)
  1278604    4.706    0.000   14.894    0.000 ops.py:359(__init__)
    52994    0.138    0.000   14.826    0.000 dataset_ops.py:1031(prefetch)
  1278708    3.445    0.000   14.752    0.000 lock_util.py:86(acquire)
    52994    0.960    0.000   14.688    0.000 dataset_ops.py:4289(__init__)
  1278708    1.263    0.000   14.651    0.000 lock_util.py:126(__exit__)
   529939    1.104    0.000   14.528    0.000 dataset_ops.py:546(_flat_structure)
   524635    0.769    0.000   14.347    0.000 Hanabi.py:246(<listcomp>)
  1064807    6.759    0.000   14.332    0.000 tf_decorator.py:67(make_decorator)
   318908    0.220    0.000   14.288    0.000 func_graph.py:130(<listcomp>)
   268225    0.619    0.000   14.068    0.000 tf_utils.py:513(to_numpy_or_python_type)
   212846    1.779    0.000   14.068    0.000 func_graph.py:82(encode_arg)
   159346   13.724    0.000   13.724    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
  1120396    1.057    0.000   13.598    0.000 Experiment.py:108(<lambda>)
  1278708    4.404    0.000   13.388    0.000 lock_util.py:96(release)
 10502540    5.997    0.000   13.365    0.000 compat.py:114(as_str)
 19288102   13.250    0.000   13.250    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
    56888    0.942    0.000   13.075    0.000 resource_variable_ops.py:838(assign)
   317963    1.233    0.000   12.746    0.000 structure.py:299(_to_tensor_list_helper)
2346157/2346117    3.433    0.000   12.671    0.000 base.py:453(_method_wrapper)
  5552340   12.497    0.000   12.499    0.000 {built-in method numpy.array}
  3833784    4.479    0.000   12.484    0.000 object_identity.py:195(update)
   688920    0.995    0.000   12.433    0.000 dataset_ops.py:2927(merge)
  1496008    4.579    0.000   12.308    0.000 ops.py:4091(name_scope)
    52994    0.121    0.000   12.218    0.000 dataset_ops.py:957(zip)
  2557416   12.209    0.000   12.209    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
  2451316   12.119    0.000   12.119    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
    52994    0.633    0.000   12.098    0.000 dataset_ops.py:3472(__init__)
  1476626    6.609    0.000   11.867    0.000 nest.py:129(_sequence_like)
2694626/1504384    3.719    0.000   11.798    0.000 {built-in method builtins.hash}
   688920    3.325    0.000   11.438    0.000 options.py:89(merge_options)
  2830934   11.421    0.000   11.421    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
1476338/1473898    2.911    0.000   11.328    0.000 nest.py:461(_packed_nest_with_indices)
  1278708   11.278    0.000   11.278    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
  1278044    1.949    0.000   11.254    0.000 tpu.py:223(tpu_replicated_input_resolver)
  1483847    2.124    0.000   11.164    0.000 structure.py:257(get_flat_tensor_specs)
   402835    1.409    0.000   10.918    0.000 Hanabi.py:212(toarray)
   742902    3.086    0.000   10.850    0.000 base.py:854(_handle_deferred_dependencies)
477194/476994    0.708    0.000   10.690    0.000 structure.py:407(type_spec_from_value)
   904450    5.167    0.000   10.610    0.000 functools.py:44(update_wrapper)
  1278708    4.002    0.000   10.589    0.000 ops.py:4439(_apply_device_functions)
   160451    0.645    0.000   10.589    0.000 tf_inspect.py:238(getfullargspec)
   390896    0.531    0.000   10.563    0.000 type_spec.py:301(__hash__)
   264969    0.364    0.000   10.562    0.000 structure.py:355(to_tensor_list)
   652498    1.146    0.000   10.537    0.000 type_spec.py:337(__get_cmp_key)
  2300966    4.786    0.000   10.482    0.000 dtypes.py:172(is_compatible_with)
 58017691   10.345    0.000   10.345    0.000 {method 'write' of '_io.BufferedWriter' objects}
       12    0.000    0.000   10.193    0.849 training.py:1918(save)
       12    0.000    0.000   10.193    0.849 save.py:47(save_model)
       12    0.037    0.003   10.192    0.849 save.py:40(save)
    52994    0.491    0.000   10.144    0.000 callbacks.py:202(__init__)
 44392629   10.122    0.000   10.128    0.000 {built-in method _struct.pack}
       12    0.005    0.000   10.114    0.843 save.py:788(save)
  7054456    6.111    0.000   10.015    0.000 ops.py:5989(get_default_graph)
  1278708    6.949    0.000    9.999    0.000 lock_util.py:106(_another_group_active)
   477194    1.433    0.000    9.981    0.000 type_spec.py:555(_type_spec_from_value)
916364/294883    1.842    0.000    9.845    0.000 function.py:95(_make_input_signature_hashable)
  1605533    1.870    0.000    9.706    0.000 {built-in method builtins.all}
   159006    3.219    0.000    9.698    0.000 conversion.py:129(is_whitelisted)
   160379    1.809    0.000    9.568    0.000 inspect.py:1089(getfullargspec)
  2305523    5.042    0.000    9.417    0.000 tensor_shape.py:746(__init__)
   318063    0.290    0.000    9.369    0.000 structure.py:321(reduce_fn)
    53092    0.304    0.000    9.353    0.000 resource_variable_ops.py:606(numpy)
    95281    0.316    0.000    9.193    0.000 nest.py:1061(map_structure_up_to)
  2938740    9.127    0.000    9.127    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
1657204/652498    2.789    0.000    9.110    0.000 type_spec.py:342(__make_cmp_key)
   857289    6.347    0.000    9.059    0.000 tensor_shape.py:1193(as_proto)
   797829    3.030    0.000    8.948    0.000 tensor_spec.py:39(__init__)
  8670206    4.505    0.000    8.935    0.000 _dill.py:380(get)
    95281    0.861    0.000    8.877    0.000 nest.py:1142(map_structure_with_tuple_paths_up_to)
  3747304    8.737    0.000    8.748    0.000 _collections_abc.py:742(__iter__)
  1230412    0.970    0.000    8.747    0.000 ops.py:421(shape)
    52994    0.188    0.000    8.718    0.000 data_adapter.py:995(_process_tensorlike)
       12    0.018    0.002    8.707    0.726 save.py:1030(_build_meta_graph)
   135537    0.587    0.000    8.707    0.000 iostream.py:195(schedule)
  4372598    3.489    0.000    8.614    0.000 c_api_util.py:157(tf_buffer)
   529939    1.157    0.000    8.395    0.000 dataset_ops.py:528(_flat_shapes)
   159028    1.188    0.000    8.370    0.000 api.py:157(tf_convert)
  3373864    7.275    0.000    8.296    0.000 object_identity.py:174(__init__)
  2035023    4.523    0.000    8.267    0.000 Hanabi.py:70(toarray)
    53368    0.551    0.000    8.266    0.000 resource_variable_ops.py:668(read_value)
   741923    0.939    0.000    8.240    0.000 structure.py:273(get_flat_tensor_shapes)
  2556088    3.397    0.000    8.149    0.000 tpu.py:239(replace_with_unreplicated_resources)
277663/56685    0.976    0.000    8.112    0.000 training.py:322(__setattr__)
    80567    0.329    0.000    8.003    0.000 Hanabi.py:272(<listcomp>)
  5766352    3.340    0.000    7.998    0.000 dtypes.py:84(base_dtype)
  3776246    4.643    0.000    7.982    0.000 nest.py:203(_yield_sorted_items)
  5709983    6.910    0.000    7.969    0.000 dtypes.py:192(__eq__)
   159346    0.428    0.000    7.915    0.000 function.py:1549(_set_function_spec)
    52994    0.201    0.000    7.797    0.000 callbacks.py:274(set_model)
  3943407    4.409    0.000    7.791    0.000 compat.py:64(as_bytes)
   587234    2.500    0.000    7.777    0.000 ops.py:444(_c_api_shape)
   325724    1.076    0.000    7.704    0.000 nest.py:1379(flatten_with_tuple_paths)
   159322    0.242    0.000    7.596    0.000 context.py:2346(add_function)
  1278708    2.210    0.000    7.590    0.000 threading.py:357(notify_all)
  1278708    7.076    0.000    7.553    0.000 ops.py:6880(_reconstruct_sequence_inputs)
   105988    0.260    0.000    7.531    0.000 gen_dataset_ops.py:5498(repeat_dataset)
   104927    5.268    0.000    7.519    0.000 Hanabi.py:365(count_discarded)
  2707026    1.715    0.000    7.455    0.000 nest.py:198(_yield_value)
   159346    3.381    0.000    7.408    0.000 function.py:1562(_initialize_function_spec)
 10503104    4.975    0.000    7.369    0.000 compat.py:90(as_text)
   135537    7.348    0.000    7.348    0.000 socket.py:357(send)
  1278708    5.870    0.000    7.342    0.000 ops.py:3052(_add_op)
   159322    0.417    0.000    7.334    0.000 context.py:1085(add_function)
 58287809    7.224    0.000    7.224    0.000 {built-in method builtins.id}
   158986    0.223    0.000    7.208    0.000 structure.py:210(from_compatible_tensor_list)
   265069    0.547    0.000    7.127    0.000 type_spec.py:211(_to_tensor_list)
   265069    0.387    0.000    7.120    0.000 structure.py:376(<lambda>)
161311/160379    1.006    0.000    7.075    0.000 inspect.py:2183(_signature_from_callable)
   158986    1.106    0.000    6.985    0.000 structure.py:175(_from_tensor_list_helper)
  3833784    2.906    0.000    6.954    0.000 object_identity.py:196(<listcomp>)
   159022    0.751    0.000    6.825    0.000 inspect_utils.py:82(isbuiltin)
   159322    6.816    0.000    6.816    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
  1649858    3.513    0.000    6.813    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
  1385024    3.737    0.000    6.795    0.000 ops.py:4206(unique_name)
  9164855    6.768    0.000    6.780    0.000 _weakrefset.py:70(__contains__)
 46606354    6.763    0.000    6.763    0.000 pickle.py:200(commit_frame)
291829/66457    1.533    0.000    6.746    0.000 base_layer.py:2756(__setattr__)
    39285    0.263    0.000    6.743    0.000 Experiment.py:39(availableActions)
  3284634    3.892    0.000    6.624    0.000 context.py:1851(executing_eagerly)
  1119236    2.828    0.000    6.570    0.000 ops.py:3848(_get_tensor_by_tf_output)
   954132    0.537    0.000    6.485    0.000 api.py:519(<genexpr>)
   130170    2.112    0.000    6.481    0.000 function.py:2151(_build_call_outputs)
   491588    0.488    0.000    6.440    0.000 constant_op.py:298(_constant_eager_impl)
   159025    1.010    0.000    6.377    0.000 api.py:244(decorator)
    52994    0.150    0.000    6.306    0.000 gen_dataset_ops.py:3266(model_dataset)
  1918984    1.521    0.000    6.284    0.000 ops.py:1925(<genexpr>)
    52994    0.167    0.000    6.204    0.000 gen_dataset_ops.py:5296(range_dataset)
   159071    0.373    0.000    6.171    0.000 <__array_function__ internals>:2(array_equal)
   159656    0.106    0.000    6.151    0.000 c_api_util.py:53(__del__)
    95281    0.139    0.000    6.132    0.000 nest.py:1234(<listcomp>)
   159656    6.045    0.000    6.045    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteGraph}
   265069    0.752    0.000    6.037    0.000 tensor_spec.py:155(_to_components)
    95281    0.137    0.000    5.993    0.000 nest.py:1137(<lambda>)
  1278604    5.969    0.000    5.969    0.000 c_api_util.py:190(tf_output)
   491588    5.274    0.000    5.952    0.000 constant_op.py:70(convert_to_eager_tensor)
   795110    1.179    0.000    5.949    0.000 api.py:343(_is_of_known_loaded_module)
  4589872    2.084    0.000    5.936    0.000 __init__.py:1298(info)
   160379    2.490    0.000    5.909    0.000 inspect.py:2102(_signature_from_function)
  1643443    1.458    0.000    5.901    0.000 structure.py:269(<lambda>)
  2235655    3.762    0.000    5.855    0.000 base.py:577(_maybe_initialize_trackable)
    53951    0.267    0.000    5.821    0.000 resource_variable_ops.py:643(_read_variable_op)
    52944    0.423    0.000    5.794    0.000 training.py:2667(concat)
   544474    0.490    0.000    5.778    0.000 nest.py:1310(yield_flat_paths)
   852177    2.225    0.000    5.760    0.000 op_def_library.py:173(_MakeType)
  2556139    2.551    0.000    5.710    0.000 registry.py:82(lookup)
   322268    0.559    0.000    5.622    0.000 Hanabi.py:219(<listcomp>)
1437928/1010328    2.888    0.000    5.565    0.000 nest.py:720(_yield_flat_up_to)
   159540    0.755    0.000    5.529    0.000 c_api_util.py:45(__init__)
   159071    2.311    0.000    5.477    0.000 numeric.py:2287(array_equal)
    56898    0.485    0.000    5.394    0.000 resource_variable_ops.py:830(_lazy_read)
  5564820    3.288    0.000    5.370    0.000 options.py:74(get_fn)
    52994    0.152    0.000    5.362    0.000 gen_dataset_ops.py:5189(prefetch_dataset)
  1283247    1.366    0.000    5.266    0.000 tensor_shape.py:1230(as_shape)
    78600    0.433    0.000    5.223    0.000 iostream.py:382(write)
  1278708    1.325    0.000    5.217    0.000 ops.py:5153(_mutation_lock)
   748510    0.893    0.000    5.207    0.000 ops.py:3886(as_default)
   125856    0.995    0.000    5.149    0.000 tf_utils.py:531(_to_single_numpy_or_python_type)
  3523126    4.804    0.000    5.067    0.000 {built-in method builtins.sorted}
 46606354    5.032    0.000    5.032    0.000 pickle.py:523(persistent_id)
   529939    0.724    0.000    5.028    0.000 dataset_ops.py:537(_flat_types)
  1855476    2.280    0.000    4.980    0.000 type_spec.py:262(_flat_tensor_specs)
 11696166    4.765    0.000    4.967    0.000 enum.py:332(<genexpr>)
  1278708    3.283    0.000    4.966    0.000 threading.py:334(notify)
   318838    3.230    0.000    4.880    0.000 function.py:2388(__init__)
  1278708    2.139    0.000    4.876    0.000 ops.py:1995(_control_flow_post_processing)
5100/4716    0.018    0.000    4.871    0.001 def_function.py:1052(_get_concrete_function_garbage_collected)
    52994    0.270    0.000    4.852    0.000 gen_dataset_ops.py:106(anonymous_iterator_v2)
   477182    0.905    0.000    4.780    0.000 tensor_util.py:309(_AssertCompatible)
  1277912    2.018    0.000    4.758    0.000 errors_impl.py:264(__init__)
5076/4692    0.008    0.000    4.733    0.001 def_function.py:1091(get_concrete_function)
24450397/24450316    4.718    0.000    4.718    0.000 {built-in method builtins.len}
  1278708    1.997    0.000    4.705    0.000 ops.py:5059(_snapshot_colocation_stack_metadata)
   370952    1.081    0.000    4.659    0.000 nest.py:195(map_structure)
  5766400    4.658    0.000    4.658    0.000 dtypes.py:71(_is_ref_dtype)
   159540    4.650    0.000    4.650    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
  364/244    0.003    0.000    4.643    0.019 def_function.py:583(wrapped_fn)
  2556088    2.007    0.000    4.610    0.000 auto_control_deps.py:125(op_is_stateful)
   318692    1.217    0.000    4.605    0.000 func_graph.py:1061(check_mutation)
   318144    0.282    0.000    4.605    0.000 ag_logging.py:138(log)
   582942    0.614    0.000    4.583    0.000 structure.py:286(get_flat_tensor_types)
    52994    0.158    0.000    4.537    0.000 data_adapter.py:963(select_data_adapter)
4944/1200    0.013    0.000    4.499    0.004 save_impl.py:546(get_concrete_function)
423952/317964    1.639    0.000    4.498    0.000 options.py:37(__eq__)
    52944    0.385    0.000    4.495    0.000 array_ops.py:1562(concat)
   158982    0.502    0.000    4.487    0.000 data_adapter.py:1011(_convert_numpy_and_scipy)
  1360894    1.712    0.000    4.485    0.000 tensor_spec.py:87(__hash__)
    52994    0.177    0.000    4.458    0.000 gen_dataset_ops.py:7053(zip_dataset)
  4909588    3.096    0.000    4.447    0.000 __init__.py:1544(isEnabledFor)
  1826060    4.033    0.000    4.430    0.000 _dill.py:386(__missing__)
  1278044    1.495    0.000    4.385    0.000 dataset_ops.py:4572(_resource_resolver)
1344/1152    0.010    0.000    4.379    0.004 save_impl.py:401(add_trace)
    52994    0.669    0.000    4.369    0.000 data_adapter.py:965(<listcomp>)
  1280131    1.576    0.000    4.362    0.000 func_graph.py:595(capture)
   213470    0.758    0.000    4.361    0.000 ops.py:2422(_set_attr)
   748510    1.279    0.000    4.349    0.000 context.py:2001(graph_mode)
   159457    0.250    0.000    4.333    0.000 c_api_util.py:94(__del__)
   318160    0.273    0.000    4.324    0.000 ag_logging.py:121(has_verbosity)
  1278324    2.364    0.000    4.312    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
  3391674    4.280    0.000    4.280    0.000 {built-in method tensorflow.python._pywrap_utils.FlattenForData}
     1924    0.023    0.000    4.235    0.002 callbacks.py:397(on_epoch_end)
   847899    1.680    0.000    4.200    0.000 nest.py:157(pack_sequence_as)
  4647515    2.835    0.000    4.194    0.000 ops.py:4998(_device_function_stack)
   130801    0.438    0.000    4.192    0.000 type_spec.py:293(__eq__)
    52994    0.120    0.000    4.157    0.000 dataset_ops.py:2112(with_options)
   449796    1.043    0.000    4.106    0.000 ops.py:5639(init_scope)
   159457    4.083    0.000    4.083    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteFunction}
    55254    0.053    0.000    4.074    0.000 <__array_function__ internals>:2(vstack)
    52994    0.400    0.000    4.072    0.000 dataset_ops.py:3581(_parse_args)
   158984    0.154    0.000    4.070    0.000 op_def_library.py:700(<listcomp>)
  2026292    4.058    0.000    4.058    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
828602/652498    1.039    0.000    4.056    0.000 type_spec.py:357(<listcomp>)
   318160    0.710    0.000    4.051    0.000 ag_logging.py:114(get_verbosity)
    52994    0.209    0.000    4.037    0.000 dataset_ops.py:4358(__init__)
   795110    4.027    0.000    4.027    0.000 api.py:347(<genexpr>)
   865718    2.319    0.000    3.971    0.000 ops.py:6385(name_scope)
  4524377    2.624    0.000    3.962    0.000 pickle.py:436(put)
57234/57204    0.323    0.000    3.923    0.000 variables.py:258(__call__)
   159288    0.376    0.000    3.922    0.000 op_def_library.py:184(_MakeShape)
   159346    0.216    0.000    3.921    0.000 func_graph.py:1258(_get_defun_inputs_from_kwargs)
  7054456    3.903    0.000    3.903    0.000 ops.py:5557(get_default)
  1278708    2.135    0.000    3.892    0.000 lock_util.py:74(group)
    53951    0.253    0.000    3.870    0.000 resource_variable_ops.py:646(read_and_set_handle)
  2571552    2.378    0.000    3.856    0.000 ops.py:5075(_control_dependencies_stack)
    55254    0.103    0.000    3.820    0.000 shape_base.py:224(vstack)
  1011536    3.802    0.000    3.802    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
   318584    3.788    0.000    3.788    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
  1277438    1.583    0.000    3.775    0.000 auto_control_deps_utils.py:112(<genexpr>)
  2186299    3.737    0.000    3.737    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
  1598600    1.316    0.000    3.683    0.000 ops.py:216(uid)
   741914    1.683    0.000    3.673    0.000 dataset_ops.py:3795(__init__)
 24807432    3.671    0.000    3.671    0.000 inspect_utils.py:84(<genexpr>)
   158982    0.207    0.000    3.661    0.000 dataset_ops.py:3602(_build_tensor)
  1064807    2.954    0.000    3.642    0.000 tf_decorator.py:236(__init__)
    26587    0.418    0.000    3.598    0.000 Experiment.py:58(availableActionsData)
  2862108    1.399    0.000    3.587    0.000 config_lib.py:50(get_action)
     2280    0.010    0.000    3.562    0.002 save_impl.py:415(trace_with_training)
   265089    0.299    0.000    3.529    0.000 array_ops.py:1489(_autopacking_conversion_function)
   178948    0.565    0.000    3.515    0.000 ops.py:1039(numpy)
  1119236    1.043    0.000    3.487    0.000 ops.py:3823(_get_operation_by_tf_operation)
     1924    0.007    0.000    3.482    0.002 callbacks.py:971(on_epoch_end)
     1924    0.025    0.000    3.475    0.002 callbacks.py:1019(_finalize_progbar)
745428/745427    2.936    0.000    3.444    0.000 functools.py:74(wraps)
  1776638    1.484    0.000    3.431    0.000 nest.py:96(_sorted)
    54251    0.147    0.000    3.428    0.000 gen_resource_variable_ops.py:452(read_variable_op)
   855154    0.801    0.000    3.427    0.000 nest.py:631(<listcomp>)
  2914664    3.280    0.000    3.422    0.000 options.py:33(__init__)
   386384    0.842    0.000    3.368    0.000 _collections_abc.py:657(get)
   129783    0.780    0.000    3.354    0.000 def_function.py:97(called_without_tracing)
   586545    1.034    0.000    3.347    0.000 op_def_library.py:84(_Flatten)
   586135    1.026    0.000    3.344    0.000 func_graph.py:1055(device_stack_has_callable)
   318162    0.519    0.000    3.341    0.000 os.py:760(getenv)
   212033    0.261    0.000    3.337    0.000 structure.py:229(<lambda>)
  1865175    3.228    0.000    3.311    0.000 traceable_stack.py:119(peek_objs)
  5849028    3.300    0.000    3.300    0.000 context.py:791(executing_eagerly)
  1117565    0.965    0.000    3.285    0.000 op_def_library.py:510(<listcomp>)
  1278044    1.145    0.000    3.275    0.000 auto_control_deps.py:136(collective_manager_ids_from_op)
   477199    2.026    0.000    3.260    0.000 tensor_util.py:339(_is_array_like)
   747620    0.934    0.000    3.237    0.000 ops.py:6498(__exit__)
  2744782    2.088    0.000    3.228    0.000 ops.py:5094(_distribution_strategy_stack)
   170/74    0.002    0.000    3.228    0.044 def_function.py:663(_initialize)
   265089    1.039    0.000    3.220    0.000 array_ops.py:1479(_should_not_autopack)
   135248    0.706    0.000    3.197    0.000 function.py:2513(canonicalize_function_inputs)
  5434933    3.087    0.000    3.195    0.000 object_identity.py:211(__iter__)
     2856    0.008    0.000    3.189    0.001 save.py:141(list_functions)
   159346    3.179    0.000    3.179    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
   170/74    0.001    0.000    3.172    0.043 function.py:2850(_get_concrete_function_internal_garbage_collected)
   322714    1.418    0.000    3.150    0.000 tensor_shape.py:1074(is_compatible_with)
       24    0.008    0.000    3.131    0.130 save.py:168(__init__)
  1278708    1.091    0.000    3.127    0.000 ops.py:4637(_record_op_seen_by_control_dependencies)
    56898    0.273    0.000    3.120    0.000 resource_variable_ops.py:1924(__init__)
   205920    3.021    0.000    3.093    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   213327    0.509    0.000    3.085    0.000 ops.py:5202(device)
       84    0.000    0.000    3.078    0.037 base_layer.py:3017(_list_functions_for_serialization)
       84    0.001    0.000    3.077    0.037 base_serialization.py:76(list_functions_for_serialization)
   212033    0.411    0.000    3.076    0.000 tensor_spec.py:169(_from_compatible_tensor_list)
   318091    0.571    0.000    3.059    0.000 tensor_util.py:263(inner)
  1703024    2.022    0.000    3.046    0.000 six.py:588(iteritems)
   804846    1.570    0.000    3.039    0.000 context.py:219(push)
    57194    0.154    0.000    3.021    0.000 gen_resource_variable_ops.py:123(assign_variable_op)
  3363475    1.975    0.000    3.018    0.000 ops.py:4079(_name_stack)
  1278708    1.431    0.000    3.001    0.000 ops.py:5019(_snapshot_device_function_stack_metadata)
  1557914    1.522    0.000    2.971    0.000 tensor_shape.py:756(<listcomp>)
    30774    0.429    0.000    2.958    0.000 Experiment.py:47(<listcomp>)
   111905    0.462    0.000    2.956    0.000 resource_variable_ops.py:329(variable_accessed)
  3838334    2.931    0.000    2.931    0.000 {built-in method numpy.zeros}
  1278708    1.102    0.000    2.925    0.000 ops.py:4603(_control_dependencies_for_inputs)
  2181954    2.916    0.000    2.918    0.000 <string>:1(__init__)
  312/192    0.007    0.000    2.903    0.015 save_impl.py:511(wrapper)
   372916    1.479    0.000    2.873    0.000 distribution_strategy_context.py:79(_get_per_thread_mode)
   424115    0.656    0.000    2.865    0.000 tensor_util.py:194(GetNumpyAppendFn)
  1278604    2.857    0.000    2.857    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
  1123186    1.274    0.000    2.830    0.000 tf_decorator.py:200(unwrap)
  1277962    0.958    0.000    2.815    0.000 {method 'throw' of 'generator' objects}
  1917347    1.454    0.000    2.812    0.000 pickle.py:652(save_long)
    57204    0.934    0.000    2.767    0.000 resource_variable_ops.py:341(__init__)
       12    0.000    0.000    2.759    0.230 signature_serialization.py:71(find_function_to_export)
       12    0.000    0.000    2.754    0.230 training.py:2581(_list_functions_for_serialization)
  1277914    2.680    0.000    2.740    0.000 errors_impl.py:64(__init__)
    42335    0.148    0.000    2.725    0.000 gen_array_ops.py:1183(concat_v2)
  1007744    1.695    0.000    2.710    0.000 tensor_shape.py:866(__getitem__)
   854997    2.421    0.000    2.695    0.000 tensor_shape.py:1199(<listcomp>)
    52994    0.388    0.000    2.693    0.000 dataset_ops.py:2889(_graph_rewrites)
  1497020    1.873    0.000    2.689    0.000 ops.py:5387(get_controller)
   159322    0.290    0.000    2.673    0.000 function.py:3595(defun_with_attributes)
  3416238    2.671    0.000    2.671    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
   318742    0.266    0.000    2.654    0.000 function.py:1529(<genexpr>)
   212509    1.103    0.000    2.645    0.000 ops.py:616(set_shape)
    52994    0.082    0.000    2.631    0.000 structure.py:329(to_batched_tensor_list)
   478280    2.068    0.000    2.628    0.000 ops.py:3761(get_operations)
      780    0.011    0.000    2.621    0.003 def_function.py:1024(_list_all_concrete_functions_for_serialization)
  636/588    0.002    0.000    2.568    0.004 layer_serialization.py:81(_get_serialized_attributes)
       72    0.000    0.000    2.563    0.036 layer_serialization.py:77(functions_to_serialize)
       12    0.000    0.000    2.556    0.213 model_serialization.py:45(_get_serialized_attributes_internal)
  3021114    1.987    0.000    2.553    0.000 config_lib.py:33(matches)
  1609692    1.970    0.000    2.553    0.000 context.py:773(_mode)
   819736    1.044    0.000    2.546    0.000 Hanabi.py:200(save)
  2558647    1.521    0.000    2.539    0.000 ops.py:5044(_colocation_stack)
   120/96    0.001    0.000    2.523    0.026 utils.py:153(wrap_with_training_arg)
   159346    0.519    0.000    2.512    0.000 auto_control_deps.py:225(__enter__)
   120/96    0.001    0.000    2.512    0.026 tf_utils.py:42(smart_cond)
   120/96    0.000    0.000    2.512    0.026 smart_cond.py:27(smart_cond)
   120/96    0.000    0.000    2.511    0.026 utils.py:163(replace_training_and_call)
   159088    0.269    0.000    2.504    0.000 {method 'all' of 'numpy.ndarray' objects}
  1119959    1.376    0.000    2.486    0.000 control_flow_util.py:266(CheckInputFromValidContext)
   270424    0.786    0.000    2.485    0.000 function.py:2646(_convert_numpy_inputs)
  4038631    2.464    0.000    2.464    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
    52944    0.298    0.000    2.462    0.000 callbacks.py:571(on_predict_end)
       50    0.001    0.000    2.419    0.048 function_base.py:2093(_get_ufunc_and_otypes)
    30774    0.349    0.000    2.407    0.000 Experiment.py:52(<listcomp>)
   178948    0.244    0.000    2.401    0.000 ops.py:1027(_numpy)
  1598600    2.367    0.000    2.367    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
  2473810    2.341    0.000    2.341    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceOrComposite}
   159066    0.503    0.000    2.326    0.000 function.py:3245(validate_signature)
 10686705    2.302    0.000    2.302    0.000 context.py:1826(context_safe)
   265055    0.292    0.000    2.302    0.000 distribution_strategy_context.py:179(get_strategy)
    34507    0.085    0.000    2.296    0.000 callbacks.py:418(on_train_batch_begin)
  1281936    1.492    0.000    2.294    0.000 _collections_abc.py:676(items)
   110416    0.349    0.000    2.274    0.000 base_layer.py:2690(_obj_reference_counts)
   106029    1.648    0.000    2.253    0.000 ops.py:1523(internal_convert_n_to_tensor)
   158982    0.574    0.000    2.252    0.000 function_utils.py:89(get_func_name)
   319710    0.910    0.000    2.241    0.000 tf_logging.py:210(vlog)
    55166    0.465    0.000    2.235    0.000 base_layer.py:2714(__delattr__)
   159100    0.158    0.000    2.235    0.000 _methods.py:47(_all)
   135721    1.596    0.000    2.232    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_EncodeArg}
   424115    1.348    0.000    2.209    0.000 tensor_util.py:186(GetFromNumpyDTypeDict)
  1278320    2.207    0.000    2.207    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
   104927    0.515    0.000    2.202    0.000 Hanabi.py:366(<dictcomp>)
  336/192    0.002    0.000    2.199    0.011 save_impl.py:541(__call__)
       12    0.003    0.000    2.170    0.181 save.py:594(_fill_meta_graph_def)
  372/308    0.012    0.000    2.168    0.007 base_layer.py:875(__call__)
   212655    0.454    0.000    2.165    0.000 context.py:2016(device)
   178948    2.157    0.000    2.157    0.000 {method '_numpy_internal' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   129786    0.935    0.000    2.151    0.000 def_function.py:91(_get_counter)
    34507    0.104    0.000    2.147    0.000 callbacks.py:293(_call_batch_begin_hook)
       88    0.000    0.000    2.139    0.024 functional.py:367(call)
       88    0.007    0.000    2.138    0.024 functional.py:464(_run_internal_graph)
   318162    1.377    0.000    2.136    0.000 os.py:664(__getitem__)
 10727139    2.125    0.000    2.125    0.000 {method 'append' of 'list' objects}
  6013367    1.729    0.000    2.122    0.000 {built-in method builtins.setattr}
    60/12    0.000    0.000    2.119    0.177 layer_serialization.py:101(_get_serialized_attributes_internal)
     1924    0.029    0.000    2.111    0.001 training.py:1617(reset_metrics)
    60/12    0.002    0.000    2.102    0.175 save_impl.py:134(wrap_layer_functions)
   159346    0.689    0.000    2.095    0.000 auto_control_deps.py:178(__init__)
  1949361    1.911    0.000    2.094    0.000 enum.py:331(__iter__)
  1825922    2.075    0.000    2.078    0.000 {method '__reduce_ex__' of 'object' objects}
   107714    0.681    0.000    2.069    0.000 tape.py:104(variable_accessed)
  3569607    2.058    0.000    2.058    0.000 {method 'encode' of 'str' objects}
    52944    0.234    0.000    2.043    0.000 callbacks.py:554(on_predict_begin)
   213470    0.331    0.000    2.041    0.000 ops.py:2431(_set_attr_with_buf)
  1278044    1.429    0.000    2.022    0.000 control_flow_util.py:82(IsInWhileLoop)
      120    0.001    0.000    2.009    0.017 save_impl.py:495(add_function)
    39285    0.383    0.000    2.006    0.000 Hanabi.py:312(move)
    80567    0.442    0.000    1.993    0.000 Hanabi.py:215(<listcomp>)
   320408    0.239    0.000    1.988    0.000 nest.py:357(assert_same_structure)
   741914    1.513    0.000    1.983    0.000 tracking.py:215(__init__)
   370952    0.337    0.000    1.983    0.000 nest.py:245(<listcomp>)
  168/120    0.002    0.000    1.983    0.017 save_impl.py:567(call_and_return_conditional_losses)
  2392075    1.965    0.000    1.978    0.000 {built-in method __new__ of type object at 0x9d12c0}
   587234    1.976    0.000    1.976    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
   289572    0.880    0.000    1.963    0.000 function.py:2008(captured_inputs)
    52994    0.518    0.000    1.962    0.000 optimization_options.py:215(_graph_rewrites)
    52994    0.105    0.000    1.960    0.000 structure.py:351(<lambda>)
       52    0.433    0.008    1.953    0.038 Experiment.py:160(create_episode)
  1825969    1.072    0.000    1.944    0.000 pickle.py:723(save_tuple)
   159006    0.390    0.000    1.926    0.000 conversion.py:242(cache_whitelisted)
     1923    0.021    0.000    1.918    0.001 metrics.py:241(reset_states)
   797708    1.889    0.000    1.889    0.000 op_def_library.py:38(_Attr)
   586545    0.840    0.000    1.876    0.000 op_def_library.py:87(<listcomp>)
  3096029    1.864    0.000    1.864    0.000 ops.py:3071(_c_graph)
    52994    0.127    0.000    1.854    0.000 type_spec.py:498(_to_batched_tensor_list)
  3836124    1.849    0.000    1.849    0.000 lock_util.py:110(_validate_group_id)
   105986    0.275    0.000    1.822    0.000 dataset_ops.py:2796(get_legacy_output_types)
   957978    0.863    0.000    1.800    0.000 tensor_shape.py:1180(as_list)
    60/48    0.000    0.000    1.776    0.037 utils.py:169(<lambda>)
   586548    0.758    0.000    1.769    0.000 ops.py:6051(_get_graph_from_inputs)
    52993    0.354    0.000    1.766    0.000 structure.py:119(convert_legacy_structure)
   320408    1.749    0.000    1.749    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructure}
   747998    0.452    0.000    1.742    0.000 nest.py:104(_is_namedtuple)
   212630    0.180    0.000    1.726    0.000 func_graph.py:1142(_get_composite_tensor_spec)
   168000    1.131    0.000    1.721    0.000 inspect.py:2452(__init__)
     1923    0.079    0.000    1.720    0.001 backend.py:3565(batch_set_value)
  1297253    0.937    0.000    1.717    0.000 threading.py:254(_is_owned)
   159540    0.689    0.000    1.717    0.000 lock_util.py:54(__init__)
   159528    0.944    0.000    1.672    0.000 ops.py:4037(get_all_collection_keys)
    80567    0.880    0.000    1.670    0.000 Hanabi.py:266(<listcomp>)
   159396    0.220    0.000    1.642    0.000 ops.py:1602(convert_to_tensor_or_composite)
   159346    1.457    0.000    1.641    0.000 function.py:229(_parse_func_attrs)
   750485    0.489    0.000    1.641    0.000 dtypes.py:205(__ne__)
  6884478    1.622    0.000    1.622    0.000 _dill.py:1515(is_dill)
  1230960    1.478    0.000    1.616    0.000 Hanabi.py:196(__init__)
   213470    1.602    0.000    1.602    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetAttr}
    53027    0.183    0.000    1.598    0.000 distribute_lib.py:2863(__enter__)
  1278708    1.593    0.000    1.593    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
   586157    0.641    0.000    1.560    0.000 backprop.py:170(_must_record_gradient)
    53033    0.274    0.000    1.557    0.000 tensor_util.py:1036(maybe_set_static_shape)
  1442615    1.290    0.000    1.535    0.000 tensor_shape.py:185(__init__)
  1278324    1.526    0.000    1.526    0.000 context.py:1204(op_callbacks)
   477066    0.955    0.000    1.521    0.000 api.py:352(_is_known_loaded_type)
  2399769    1.520    0.000    1.520    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
   159072    0.340    0.000    1.516    0.000 conversion.py:234(is_in_whitelist_cache)
   160379    1.178    0.000    1.513    0.000 inspect.py:2732(__init__)
  1274741    0.870    0.000    1.468    0.000 ag_ctx.py:29(_control_ctx)
   265110    1.461    0.000    1.461    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
  1120668    1.460    0.000    1.460    0.000 ops.py:3800(_get_operation_by_name_unsafe)
    52994    0.302    0.000    1.448    0.000 training.py:2626(_in_multi_worker_mode)
   158982    0.644    0.000    1.448    0.000 data_adapter.py:235(can_handle)
   477954    0.787    0.000    1.439    0.000 function.py:3763(__del__)
   159396    0.301    0.000    1.422    0.000 ops.py:1625(internal_convert_to_tensor_or_composite)
   106054    0.340    0.000    1.421    0.000 variable_scope.py:2738(variable_creator_scope)
   318896    0.609    0.000    1.409    0.000 ag_ctx.py:61(__exit__)
   106013    0.289    0.000    1.409    0.000 training.py:679(distribute_strategy)
   281272    0.519    0.000    1.405    0.000 ops.py:1160(shape)
   212655    1.016    0.000    1.370    0.000 context.py:1738(__enter__)
   916220    0.979    0.000    1.370    0.000 tensor_conversion_registry.py:114(get)
  1490828    0.938    0.000    1.365    0.000 ops.py:5117(_auto_cast_variable_read_dtype)
   159150    0.266    0.000    1.360    0.000 function.py:1494(<listcomp>)
   125266    0.198    0.000    1.359    0.000 Hanabi.py:183(save)
  1810268    0.948    0.000    1.357    0.000 op_def_library.py:80(_IsListValue)
   159346    0.298    0.000    1.356    0.000 variable_scope.py:1433(get_variable_scope)
  4909588    1.350    0.000    1.350    0.000 __init__.py:1530(getEffectiveLevel)
    22838    0.493    0.000    1.340    0.000 Experiment.py:66(<listcomp>)
   212655    0.740    0.000    1.337    0.000 context.py:827(device)
  1277912    1.010    0.000    1.334    0.000 errors_impl.py:117(__str__)
      192    0.001    0.000    1.329    0.007 utils.py:66(return_outputs_and_add_losses)
  2398667    1.104    0.000    1.329    0.000 ops.py:3472(<genexpr>)
  1666749    0.640    0.000    1.327    0.000 {method 'extend' of 'list' objects}
  1336372    0.991    0.000    1.326    0.000 ops.py:402(graph)
    53167    0.334    0.000    1.317    0.000 monitoring.py:335(get_cell)
      384    0.020    0.000    1.310    0.003 functional_ops.py:1112(partitioned_call)
    18595    0.055    0.000    1.303    0.000 <__array_function__ internals>:2(mean)
    52998    0.107    0.000    1.301    0.000 nest.py:1403(list_to_tuple)
   106413    1.300    0.000    1.300    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInputList}
  5687914    1.297    0.000    1.297    0.000 {method 'items' of 'dict' objects}
    26815    0.102    0.000    1.297    0.000 <__array_function__ internals>:2(amax)
   747998    1.290    0.000    1.290    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
      144    0.001    0.000    1.280    0.009 save_impl.py:585(call)
4765751/4764941    1.095    0.000    1.257    0.000 {built-in method builtins.issubclass}
       52    0.002    0.000    1.250    0.024 Experiment.py:169(<listcomp>)
     1040    0.006    0.000    1.249    0.001 Hanabi.py:290(__init__)
  1867829    1.244    0.000    1.244    0.000 op_def_registry.py:34(get)
  2557416    1.222    0.000    1.222    0.000 lock_util.py:108(<genexpr>)
     2312    0.015    0.000    1.211    0.001 func_graph.py:644(_capture_helper)
  1129897    0.485    0.000    1.205    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
  4805572    1.201    0.000    1.201    0.000 ops.py:397(dtype)
   450564    0.646    0.000    1.200    0.000 tape.py:150(stop_recording)
   106038    0.232    0.000    1.199    0.000 data_adapter.py:275(<genexpr>)
   105988    0.254    0.000    1.195    0.000 data_adapter.py:1549(_is_distributed_dataset)
    18595    0.248    0.000    1.192    0.000 fromnumeric.py:3231(mean)
   804846    0.932    0.000    1.187    0.000 context.py:239(pop)
   317963    0.371    0.000    1.184    0.000 nest.py:104(assert_same_structure)
     2186    0.016    0.000    1.181    0.001 func_graph.py:1123(_create_substitute_placeholder)
     1040    0.047    0.000    1.180    0.001 Hanabi.py:129(__init__)
   716327    1.179    0.000    1.179    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
   105986    0.160    0.000    1.177    0.000 dataset_ops.py:2762(get_legacy_output_classes)
   159088    0.445    0.000    1.176    0.000 cache.py:43(has)
    52993    0.132    0.000    1.174    0.000 dataset_ops.py:3523(<listcomp>)
   178147    1.141    0.000    1.164    0.000 threading.py:215(__init__)
   159008    0.146    0.000    1.151    0.000 op_def_library.py:695(<listcomp>)
   212509    1.140    0.000    1.140    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
   116556    0.172    0.000    1.138    0.000 Hanabi.py:191(save)
   159322    0.866    0.000    1.135    0.000 function.py:2728(__init__)
   109736    0.146    0.000    1.134    0.000 data_adapter.py:1164(catch_stop_iteration)
  2557416    1.133    0.000    1.133    0.000 traceable_stack.py:123(peek_traceable_objs)
  1278044    0.847    0.000    1.132    0.000 registry.py:74(list)
   371176    0.286    0.000    1.122    0.000 function.py:3246(<genexpr>)
    22838    0.373    0.000    1.120    0.000 Experiment.py:71(<listcomp>)
      260    0.001    0.000    1.120    0.004 core.py:1192(call)
   319710    0.459    0.000    1.119    0.000 __init__.py:1359(log)
      260    0.003    0.000    1.118    0.004 core.py:30(dense)
       12    0.000    0.000    1.107    0.092 functional_saver.py:172(to_proto)
  1297757    1.102    0.000    1.102    0.000 {built-in method builtins.max}
  4193442    1.101    0.000    1.101    0.000 {method 'pop' of 'dict' objects}
    26815    0.158    0.000    1.100    0.000 fromnumeric.py:2551(amax)
  1907980    1.099    0.000    1.099    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceForData}
   158989    1.091    0.000    1.091    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}
  2295272    1.090    0.000    1.090    0.000 {method 'split' of 'str' objects}
    52994    0.164    0.000    1.089    0.000 data_adapter.py:681(can_handle)
    95281    0.139    0.000    1.086    0.000 nest.py:1226(<listcomp>)
   169378    0.357    0.000    1.083    0.000 object_identity.py:192(add)
   586545    1.082    0.000    1.082    0.000 op_def_library.py:737(<listcomp>)
794910/635928    0.616    0.000    1.072    0.000 dataset_ops.py:2972(element_spec)
   159022    0.506    0.000    1.072    0.000 cache.py:50(__getitem__)
    54018    0.473    0.000    1.070    0.000 tensor_shape.py:1136(most_specific_compatible_shape)
  1231791    0.747    0.000    1.067    0.000 function.py:2840(input_signature)
    52994    0.190    0.000    1.059    0.000 dataset_ops.py:3147(_to_tensor_list)
  1544249    0.732    0.000    1.059    0.000 ops.py:3015(_variable_creator_stack)
   159346    0.297    0.000    1.058    0.000 variable_scope.py:1420(get_variable_scope_store)
    53624    0.089    0.000    1.058    0.000 ops.py:5314(colocate_with)
    52994    0.076    0.000    1.046    0.000 dataset_ops.py:3005(<lambda>)
742219/477182    0.837    0.000    1.035    0.000 tensor_util.py:219(_GetDenseDimensions)
  1938495    1.033    0.000    1.033    0.000 {method 'pop' of 'list' objects}
    52000    0.273    0.000    1.029    0.000 Hanabi.py:90(__init__)
   747620    0.982    0.000    1.023    0.000 ops.py:6439(__init__)
  1272486    0.817    0.000    1.013    0.000 tensor_shape.py:843(__len__)
       24    0.001    0.000    1.013    0.042 functional_saver.py:202(save)
  4640195    1.012    0.000    1.012    0.000 tensor_shape.py:247(value)
   125920    0.368    0.000    1.010    0.000 <__array_function__ internals>:2(ndim)
   158982    0.439    0.000    1.002    0.000 tf_inspect.py:370(isfunction)
   107714    0.139    0.000    1.001    0.000 distribution_strategy_context.py:215(get_strategy_and_replica_context)
   130135    0.989    0.000    0.989    0.000 weakref.py:431(__contains__)
       12    0.001    0.000    0.989    0.082 util.py:1152(save)
  1120836    0.989    0.000    0.989    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
    54880    0.118    0.000    0.988    0.000 context.py:2310(async_wait)
  1331270    0.637    0.000    0.987    0.000 ops.py:2245(_add_control_inputs)
   105986    0.145    0.000    0.987    0.000 dataset_ops.py:2779(get_legacy_output_shapes)
  4089491    0.983    0.000    0.983    0.000 {method 'startswith' of 'str' objects}
       12    0.000    0.000    0.983    0.082 util.py:1117(_save_cached_when_graph_building)
   232105    0.392    0.000    0.982    0.000 object_identity.py:186(__contains__)
   159433    0.155    0.000    0.975    0.000 function.py:384(__del__)
       24    0.001    0.000    0.975    0.041 functional_saver.py:252(save_fn)
   207957    0.396    0.000    0.971    0.000 object_identity.py:131(__getitem__)
    52994    0.211    0.000    0.970    0.000 tensor_spec.py:190(_unbatch)
    53624    0.140    0.000    0.969    0.000 ops.py:5291(_colocate_with_for_gradient)
   159127    0.433    0.000    0.965    0.000 math_ops.py:866(cast)
4047598/4046878    0.949    0.000    0.955    0.000 {method 'update' of 'set' objects}
   158982    0.954    0.000    0.954    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionSetAttrValueProto}
   425255    0.604    0.000    0.954    0.000 tensor_shape.py:252(is_compatible_with)
    27725    0.177    0.000    0.950    0.000 fromnumeric.py:73(_wrapreduction)
   137646    0.476    0.000    0.948    0.000 nest.py:873(flatten_up_to)
    18595    0.350    0.000    0.944    0.000 _methods.py:134(_mean)
   599982    0.938    0.000    0.938    0.000 {method 'format' of 'str' objects}
    53167    0.268    0.000    0.934    0.000 monitoring.py:136(get_cell)
   602597    0.629    0.000    0.933    0.000 ops.py:1033(dtype)
   957930    0.681    0.000    0.933    0.000 tensor_shape.py:1191(<listcomp>)
   172853    0.525    0.000    0.930    0.000 tensor_spec.py:90(__eq__)
   741923    0.624    0.000    0.926    0.000 structure.py:283(<listcomp>)
  3896122    0.923    0.000    0.923    0.000 ops.py:2381(graph)
   323428    0.688    0.000    0.912    0.000 func_graph.py:740(internal_captures)
   212655    0.676    0.000    0.910    0.000 context.py:1772(__exit__)
  1289292    0.642    0.000    0.898    0.000 traceable_stack.py:127(__len__)
   797640    0.641    0.000    0.886    0.000 ops.py:3972(get_collection_ref)
   318692    0.378    0.000    0.884    0.000 variable_scope.py:1202(set_use_resource)
   260652    0.601    0.000    0.884    0.000 iterator_ops.py:766(_type_spec)
  1278708    0.881    0.000    0.881    0.000 lock_util.py:119(__init__)
   159346    0.879    0.000    0.879    0.000 function.py:474(<listcomp>)
   158986    0.303    0.000    0.868    0.000 structure.py:196(<listcomp>)
    54880    0.129    0.000    0.857    0.000 context.py:645(sync_executors)
   318896    0.368    0.000    0.847    0.000 ag_ctx.py:53(__enter__)
  1119959    0.639    0.000    0.843    0.000 control_flow_util.py:180(GetOutputContext)
  1476626    0.840    0.000    0.840    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
  1490828    0.829    0.000    0.829    0.000 ops.py:5101(_distribution_strategy_stack)
   159346    0.428    0.000    0.825    0.000 function.py:356(_inference_name)
  1117565    0.823    0.000    0.823    0.000 op_def_library.py:64(_IsListParameter)
  1496008    0.822    0.000    0.822    0.000 ops.py:4086(_name_stack)
   159433    0.140    0.000    0.820    0.000 context.py:2351(remove_function)
  7012413    0.818    0.000    0.818    0.000 multiarray.py:145(concatenate)
  3403164    0.799    0.000    0.817    0.000 object_identity.py:175(<genexpr>)
   159091    0.283    0.000    0.816    0.000 tensor_util.py:280(_check_not_tensor)
   317963    0.811    0.000    0.813    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructureForData}
106091/106041    0.416    0.000    0.811    0.000 nest.py:126(_packed_nest_with_indices)
   159288    0.326    0.000    0.810    0.000 execute.py:201(make_shape)
    53027    0.200    0.000    0.805    0.000 distribute_lib.py:2872(__exit__)
  1281936    0.802    0.000    0.802    0.000 _collections_abc.py:698(__init__)
   159022    0.213    0.000    0.797    0.000 tf_inspect.py:335(getmodule)
   331968    0.452    0.000    0.797    0.000 training.py:328(<genexpr>)
   742912    0.596    0.000    0.783    0.000 base.py:677(_lookup_dependency)
  2558556    0.782    0.000    0.782    0.000 ops.py:3043(_check_not_finalized)
  2023056    0.750    0.000    0.772    0.000 {method 'values' of 'dict' objects}
       24    0.001    0.000    0.770    0.032 functional_saver.py:57(save)
  2210890    0.766    0.000    0.766    0.000 tensor_spec.py:68(dtype)
  2299728    0.762    0.000    0.762    0.000 ops.py:796(_as_tf_output)
   159346    0.247    0.000    0.762    0.000 ops.py:6351(get_collection)
  3517962    0.761    0.000    0.761    0.000 ops.py:2036(_get_control_flow_context)
   908387    0.751    0.000    0.751    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
   159195    0.745    0.000    0.745    0.000 {method 'astype' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.739    0.031 gen_io_ops.py:1694(save_v2)
  3155364    0.738    0.000    0.738    0.000 ops.py:392(op)
  1114712    0.535    0.000    0.737    0.000 inspect.py:81(ismethod)
   377154    0.511    0.000    0.736    0.000 weakref.py:428(get)
    60/48    0.000    0.000    0.735    0.015 utils.py:170(<lambda>)
  3057078    0.726    0.000    0.732    0.000 {method 'keys' of 'dict' objects}
  1087545    0.578    0.000    0.730    0.000 tensor_shape.py:819(rank)
      384    0.002    0.000    0.728    0.002 functional_ops.py:1175(<listcomp>)
    54880    0.727    0.000    0.727    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextSyncExecutors}
  2706107    0.727    0.000    0.727    0.000 {method 'release' of '_thread.lock' objects}
    52994    0.146    0.000    0.725    0.000 data_adapter.py:529(can_handle)
   482799    0.233    0.000    0.725    0.000 _asarray.py:16(asarray)
  1277964    0.724    0.000    0.724    0.000 {built-in method sys.exc_info}
       24    0.000    0.000    0.724    0.030 function.py:3718(bound_method_wrapper)
   105988    0.120    0.000    0.723    0.000 options.py:45(__ne__)
       16    0.000    0.000    0.723    0.045 func_graph.py:958(wrapper)
   318162    0.423    0.000    0.718    0.000 os.py:742(encode)
    53027    0.115    0.000    0.716    0.000 distribute_lib.py:791(scope)
   429642    0.479    0.000    0.716    0.000 object_identity.py:183(_wrap_key)
   159006    0.350    0.000    0.715    0.000 config_lib.py:62(get_action)
   375360    0.425    0.000    0.705    0.000 {method 'join' of 'str' objects}
   582942    0.469    0.000    0.697    0.000 structure.py:296(<listcomp>)
  4066648    0.693    0.000    0.693    0.000 {built-in method builtins.callable}
   318742    0.236    0.000    0.687    0.000 func_graph.py:1023(<genexpr>)
      583    0.001    0.000    0.685    0.001 resource_variable_ops.py:1908(_dense_var_to_tensor)
   371977    0.439    0.000    0.684    0.000 context.py:1831(ensure_initialized)
      583    0.002    0.000    0.683    0.001 resource_variable_ops.py:1317(_dense_var_to_tensor)
   638797    0.590    0.000    0.682    0.000 inspect.py:159(isfunction)
   318053    0.301    0.000    0.678    0.000 ag_ctx.py:35(control_status_ctx)
   159132    0.299    0.000    0.677    0.000 options.py:51(__setattr__)
      583    0.003    0.000    0.676    0.001 resource_variable_ops.py:550(value)
   159346    0.296    0.000    0.668    0.000 object_identity.py:223(__len__)
    52994    0.351    0.000    0.662    0.000 training.py:2453(_check_call_args)
  1598829    0.662    0.000    0.662    0.000 {built-in method _thread.get_ident}
   160143    0.284    0.000    0.657    0.000 tf_inspect.py:390(ismethod)
    39285    0.135    0.000    0.655    0.000 Experiment.py:42(<listcomp>)
    52997    0.652    0.000    0.652    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
   639120    0.643    0.000    0.651    0.000 traceable_stack.py:83(__init__)
  1386585    0.651    0.000    0.651    0.000 {method 'lower' of 'str' objects}
   159433    0.199    0.000    0.651    0.000 context.py:1154(remove_function)
   159346    0.242    0.000    0.648    0.000 func_graph.py:1081(flatten)
      510    0.010    0.000    0.644    0.001 function.py:3085(_define_function_with_shape_relaxation)
   154144    0.297    0.000    0.639    0.000 threading.py:1104(is_alive)
    39285    0.315    0.000    0.638    0.000 Hanabi.py:340(is_ended)
   106782    0.397    0.000    0.637    0.000 ops.py:2979(_variable_creator_scope)
        4    0.000    0.000    0.633    0.158 distribute_lib.py:1130(run)
        4    0.000    0.000    0.632    0.158 distribute_lib.py:2537(call_for_each_replica)
        4    0.000    0.000    0.632    0.158 distribute_lib.py:2941(_call_for_each_replica)
   159528    0.484    0.000    0.629    0.000 ops.py:4040(<listcomp>)
   762819    0.466    0.000    0.629    0.000 object_identity.py:63(__hash__)
   159545    0.595    0.000    0.628    0.000 weakref.py:354(__init__)
    26357    0.090    0.000    0.619    0.000 <__array_function__ internals>:2(argmax)
   214834    0.432    0.000    0.619    0.000 <frozen importlib._bootstrap>:997(_handle_fromlist)
        3    0.000    0.000    0.618    0.206 tmpu_v700ox.py:9(tf__train_function)
        3    0.000    0.000    0.617    0.206 training.py:785(step_function)
  1806904    0.616    0.000    0.616    0.000 tensor_spec.py:63(shape)
   587414    0.449    0.000    0.614    0.000 func_graph.py:1057(<genexpr>)
        3    0.000    0.000    0.610    0.203 training.py:788(run_step)
        3    0.000    0.000    0.604    0.201 training.py:716(train_step)
   106038    0.086    0.000    0.603    0.000 callbacks.py:235(<genexpr>)
       12    0.000    0.000    0.603    0.050 gen_io_ops.py:1743(save_v2_eager_fallback)
    53027    0.128    0.000    0.602    0.000 distribute_lib.py:2892(_scope)
   159783    0.602    0.000    0.602    0.000 {built-in method tensorflow.python._pywrap_tf_session.AddControlInput}
  1312130    0.596    0.000    0.596    0.000 context.py:514(ensure_initialized)
      156    0.040    0.000    0.592    0.004 tracking.py:103(_list_functions_for_serialization)
   159022    0.283    0.000    0.584    0.000 inspect.py:714(getmodule)
  2401736    0.571    0.000    0.571    0.000 ops.py:2307(outputs)
   370952    0.225    0.000    0.570    0.000 nest.py:241(<listcomp>)
   424354    0.566    0.000    0.566    0.000 {method 'ravel' of 'numpy.ndarray' objects}
    55254    0.040    0.000    0.564    0.000 <__array_function__ internals>:2(atleast_2d)
   641118    0.561    0.000    0.561    0.000 ops.py:2801(name_from_scope_name)
    52994    0.273    0.000    0.560    0.000 iterator_ops.py:525(__init__)
   318078    0.290    0.000    0.560    0.000 cache.py:92(_get_key)
   126004    0.556    0.000    0.556    0.000 {method 'item' of 'numpy.generic' objects}
   319749    0.350    0.000    0.555    0.000 <string>:12(__new__)
   688652    0.368    0.000    0.554    0.000 {method 'add' of 'set' objects}
   213470    0.550    0.000    0.550    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
  1869595    0.548    0.000    0.548    0.000 traceable_stack.py:121(<genexpr>)
   260292    0.548    0.000    0.548    0.000 def_function.py:752(_get_tracing_count)
   741914    0.547    0.000    0.547    0.000 {built-in method _weakref.proxy}
    55932    0.147    0.000    0.547    0.000 Hanabi.py:277(score)
    52994    0.203    0.000    0.545    0.000 data_adapter.py:117(__init__)
     1924    0.028    0.000    0.543    0.000 callbacks.py:1045(on_epoch_end)
   159073    0.529    0.000    0.538    0.000 converter.py:153(__init__)
  1841603    0.538    0.000    0.538    0.000 ops.py:3354(building_function)
      281    0.003    0.000    0.532    0.002 gen_math_ops.py:5591(mat_mul)
  1231713    0.531    0.000    0.531    0.000 {method 'update' of 'dict' objects}
    52994    0.280    0.000    0.527    0.000 callbacks.py:247(_add_default_callbacks)
   141020    0.165    0.000    0.525    0.000 function.py:2632(_is_ndarray)
   318848    0.354    0.000    0.522    0.000 traceable_stack.py:131(copy)
    53044    0.258    0.000    0.517    0.000 callbacks.py:815(_implements_train_batch_hooks)
   184654    0.512    0.000    0.512    0.000 data_adapter.py:1184(steps)
   157140    0.475    0.000    0.511    0.000 Hanabi.py:188(__init__)
    78600    0.077    0.000    0.511    0.000 iostream.py:320(_schedule_flush)
  1490828    0.506    0.000    0.506    0.000 ops.py:3039(_variable_creator_stack)
   159346    0.207    0.000    0.504    0.000 function.py:1581(<listcomp>)
       12    0.000    0.000    0.503    0.042 functional_saver.py:193(_traced_restore)
   430445    0.501    0.000    0.501    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
       12    0.006    0.001    0.500    0.042 save.py:276(map_resources)
     1924    0.033    0.000    0.500    0.000 callbacks.py:377(on_epoch_begin)
    52993    0.138    0.000    0.496    0.000 ops.py:2263(_add_control_input)
  1924469    0.494    0.000    0.494    0.000 tensor_shape.py:826(dims)
   165140    0.490    0.000    0.490    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
       12    0.000    0.000    0.490    0.041 functional_saver.py:297(restore)
       12    0.000    0.000    0.489    0.041 functional_saver.py:310(restore_fn)
       12    0.001    0.000    0.488    0.041 functional_saver.py:80(restore)
        3    0.000    0.000    0.484    0.161 training.py:2696(_minimize)
      260    0.003    0.000    0.477    0.002 nn_ops.py:3307(bias_add)
  1278708    0.475    0.000    0.477    0.000 ops.py:5061(<dictcomp>)
   478656    0.372    0.000    0.475    0.000 memory.py:24(dismantle_ordered_dict)
    53027    0.214    0.000    0.474    0.000 distribute_lib.py:2853(__init__)
    55254    0.185    0.000    0.473    0.000 shape_base.py:83(atleast_2d)
  1536822    0.473    0.000    0.473    0.000 dataset_ops.py:216(_variant_tensor)
      276    0.001    0.000    0.472    0.002 resource_variable_ops.py:636(_map_resources)
   741914    0.470    0.000    0.470    0.000 tracking.py:186(__init__)
  1490828    0.470    0.000    0.470    0.000 ops.py:5133(_auto_cast_variable_read_dtype)
   159085    0.274    0.000    0.464    0.000 converter.py:174(__hash__)
    52994    0.121    0.000    0.462    0.000 data_adapter.py:448(can_handle)
       12    0.005    0.000    0.457    0.038 save.py:703(_serialize_object_graph)
    80567    0.318    0.000    0.457    0.000 Hanabi.py:263(<listcomp>)
  1615503    0.455    0.000    0.455    0.000 context.py:1718(context_switches)
    53717    0.450    0.000    0.450    0.000 {method 'copy' of 'numpy.ndarray' objects}
      276    0.002    0.000    0.449    0.002 saveable_object_util.py:119(restore)
      276    0.003    0.000    0.448    0.002 resource_variable_ops.py:2133(copy_to_graph_uninitialized)
    26357    0.081    0.000    0.448    0.000 fromnumeric.py:1112(argmax)
   971208    0.448    0.000    0.448    0.000 {method 'replace' of 'str' objects}
    52994    0.067    0.000    0.447    0.000 nest.py:1417(sequence_fn)
      289    0.007    0.000    0.444    0.002 resource_variable_ops.py:1821(__init__)
    52994    0.133    0.000    0.444    0.000 dataset_ops.py:565(_type_spec)
   318053    0.186    0.000    0.444    0.000 api.py:153(is_autograph_artifact)
   168326    0.342    0.000    0.441    0.000 enum.py:267(__call__)
   317964    0.408    0.000    0.437    0.000 tracking.py:154(resource_tracker_scope)
       12    0.000    0.000    0.437    0.036 save_impl.py:202(default_save_signature)
    57164    0.060    0.000    0.435    0.000 tensor_shape.py:1121(assert_is_compatible_with)
   106038    0.054    0.000    0.433    0.000 data_adapter.py:550(<genexpr>)
    58851    0.108    0.000    0.433    0.000 ops.py:5744(executing_eagerly_outside_functions)
  1392605    0.432    0.000    0.432    0.000 function.py:2463(input_signature)
   586545    0.426    0.000    0.430    0.000 op_def_library.py:89(<listcomp>)
    56336    0.123    0.000    0.425    0.000 context.py:2006(eager_mode)
    26587    0.176    0.000    0.425    0.000 Experiment.py:61(<listcomp>)
   129783    0.424    0.000    0.424    0.000 def_function.py:72(called_without_tracing)
   159346    0.318    0.000    0.424    0.000 func_graph.py:735(external_captures)
  1173090    0.420    0.000    0.420    0.000 op_def_library.py:235(_MaybeColocateWith)
   130146    0.371    0.000    0.417    0.000 function.py:1844(<listcomp>)
    52994    0.098    0.000    0.416    0.000 dataset_ops.py:2920(_autotune_settings)
   424360    0.148    0.000    0.415    0.000 generic_utils.py:792(is_default)
   274232    0.185    0.000    0.412    0.000 layer_utils.py:43(has_weights)
   130170    0.150    0.000    0.410    0.000 tape.py:220(could_possibly_record)
    52994    0.138    0.000    0.408    0.000 dataset_ops.py:2907(_graph_rewrite_configs)
    36106    0.309    0.000    0.407    0.000 Experiment.py:44(<listcomp>)
    63362    0.061    0.000    0.395    0.000 _collections_abc.py:664(__contains__)
57926/56942    0.140    0.000    0.392    0.000 data_structures.py:103(sticky_attribute_assignment)
   161118    0.276    0.000    0.391    0.000 function.py:1959(name)
   317958    0.257    0.000    0.388    0.000 dataset_ops.py:2738(get_structure)
      389    0.005    0.000    0.387    0.001 deprecation.py:473(new_func)
    52994    0.115    0.000    0.384    0.000 version_utils.py:114(disallow_legacy_graph)
   159433    0.379    0.000    0.379    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextRemoveFunction}
    53044    0.174    0.000    0.379    0.000 data_adapter.py:535(_is_composite)
   129707    0.070    0.000    0.378    0.000 _asarray.py:88(asanyarray)
   748384    0.377    0.000    0.377    0.000 ops.py:5035(_device_function_stack)
    53055    0.110    0.000    0.376    0.000 tensor_util.py:804(constant_value)
    19928    0.080    0.000    0.374    0.000 Hanabi.py:237(getHint)
   104927    0.210    0.000    0.370    0.000 Hanabi.py:377(<dictcomp>)
    26529    0.047    0.000    0.370    0.000 fromnumeric.py:55(_wrapfunc)
   800941    0.369    0.000    0.369    0.000 func_graph.py:427(outer_graph)
   432034    0.369    0.000    0.369    0.000 {method 'decode' of 'bytes' objects}
    53036    0.091    0.000    0.366    0.000 distribution_strategy_context.py:199(has_strategy)
   159346    0.312    0.000    0.365    0.000 ops.py:3997(get_collection)
   275292    0.177    0.000    0.358    0.000 nest.py:954(<genexpr>)
   159346    0.357    0.000    0.357    0.000 function.py:3061(<listcomp>)
    52993    0.074    0.000    0.357    0.000 gen_dataset_ops.py:6628(<listcomp>)
   158982    0.181    0.000    0.356    0.000 dataset_ops.py:3366(<listcomp>)
  1855476    0.356    0.000    0.356    0.000 tensor_spec.py:37(<lambda>)
    52994    0.092    0.000    0.349    0.000 gen_dataset_ops.py:6697(<listcomp>)
   159346    0.117    0.000    0.346    0.000 object_identity.py:225(<listcomp>)
   940153    0.344    0.000    0.344    0.000 context.py:749(_handle)
   120557    0.342    0.000    0.342    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   318544    0.340    0.000    0.340    0.000 {method 'SetInParent' of 'google.protobuf.pyext._message.CMessage' objects}
   584834    0.340    0.000    0.340    0.000 array_ops.py:1485(<genexpr>)
   940050    0.335    0.000    0.335    0.000 context.py:813(device_name)
        3    0.000    0.000    0.335    0.112 optimizer_v2.py:473(apply_gradients)
    54251    0.179    0.000    0.333    0.000 resource_variable_ops.py:317(_maybe_set_handle_data)
   762819    0.332    0.000    0.332    0.000 object_identity.py:35(__init__)
     1924    0.024    0.000    0.328    0.000 callbacks.py:955(on_epoch_begin)
275290/275266    0.157    0.000    0.325    0.000 nest.py:750(assert_shallow_structure)
  1277912    0.325    0.000    0.325    0.000 errors_impl.py:86(message)
   159022    0.204    0.000    0.324    0.000 inspect_utils.py:96(isconstructor)
    52993    0.055    0.000    0.323    0.000 gen_dataset_ops.py:895(<listcomp>)
   328379    0.253    0.000    0.323    0.000 inspect.py:2781(<genexpr>)
   331096    0.228    0.000    0.322    0.000 object_identity.py:128(_wrap_key)
      384    0.002    0.000    0.320    0.001 ops.py:3360(create_op)
     2098    0.020    0.000    0.319    0.000 {built-in method builtins.print}
   267013    0.146    0.000    0.319    0.000 tensor_shape.py:838(ndims)
   748277    0.318    0.000    0.318    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
  1283762    0.314    0.000    0.314    0.000 ops.py:3148(_get_control_flow_context)
   321914    0.313    0.000    0.314    0.000 object_identity.py:227(__iter__)
    52993    0.079    0.000    0.314    0.000 gen_dataset_ops.py:890(<listcomp>)
    55932    0.198    0.000    0.312    0.000 Hanabi.py:278(<listcomp>)
   225282    0.311    0.000    0.311    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
   425310    0.311    0.000    0.311    0.000 context.py:823(_set_device)
   106091    0.192    0.000    0.310    0.000 nest.py:53(_sequence_like)
   586668    0.308    0.000    0.308    0.000 ops.py:452(<listcomp>)
   602885    0.304    0.000    0.304    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
        6    0.000    0.000    0.303    0.051 distribute_lib.py:2683(merge_call)
        6    0.000    0.000    0.303    0.050 distribute_lib.py:2717(_merge_call)
  1278044    0.302    0.000    0.302    0.000 control_flow_util.py:191(GetContainingWhileContext)
    18607    0.089    0.000    0.301    0.000 threading.py:498(__init__)
        3    0.000    0.000    0.301    0.100 optimizer_v2.py:588(_distributed_apply)
   212655    0.260    0.000    0.301    0.000 device.py:45(is_device_spec)
    26357    0.301    0.000    0.301    0.000 {method 'argmax' of 'numpy.ndarray' objects}
   954750    0.300    0.000    0.300    0.000 tensor_shape.py:790(_v2_behavior)
54454/54418    0.128    0.000    0.300    0.000 tracking.py:440(wrapped)
   264970    0.215    0.000    0.299    0.000 dataset_ops.py:4108(element_spec)
     1092    0.010    0.000    0.299    0.000 save.py:725(_write_object_proto)
   747989    0.298    0.000    0.298    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
   748286    0.297    0.000    0.297    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
   748046    0.294    0.000    0.294    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
    79712    0.171    0.000    0.294    0.000 Hanabi.py:99(receive_hint)
   154144    0.159    0.000    0.293    0.000 threading.py:1062(_wait_for_tstate_lock)
    52994    0.108    0.000    0.293    0.000 dataset_ops.py:3122(__init__)
       24    0.000    0.000    0.291    0.012 distribute_lib.py:2233(update)
       24    0.000    0.000    0.289    0.012 distribute_lib.py:2952(_update)
       24    0.000    0.000    0.289    0.012 distribute_lib.py:2957(_update_non_slot)
       12    0.000    0.000    0.287    0.024 saving_utils.py:125(_wrapped_model)
       24    0.000    0.000    0.286    0.012 optimizer_v2.py:591(apply_grad_to_update_var)
       24    0.001    0.000    0.286    0.012 rmsprop.py:175(_resource_apply_dense)
   114354    0.122    0.000    0.285    0.000 resource_variable_ops.py:246(_handle_graph)
   318838    0.268    0.000    0.285    0.000 function.py:2421(<dictcomp>)
   321431    0.142    0.000    0.284    0.000 pickle.py:641(save_none)
    53092    0.099    0.000    0.284    0.000 tensor_shape.py:1166(is_fully_defined)
   159346    0.229    0.000    0.283    0.000 func_graph.py:750(deferred_internal_captures)
  2331986    0.282    0.000    0.282    0.000 options.py:59(<lambda>)
   480486    0.216    0.000    0.279    0.000 tensor_shape.py:704(as_dimension)
    52994    0.149    0.000    0.277    0.000 optimization_options.py:196(_autotune_settings)
   264970    0.206    0.000    0.276    0.000 dataset_ops.py:4058(element_spec)
      276    0.002    0.000    0.276    0.001 resource_variable_ops.py:307(shape_safe_assign_variable_handle)
   373918    0.223    0.000    0.275    0.000 function.py:422(<genexpr>)
   105986    0.110    0.000    0.274    0.000 dataset_ops.py:2775(<lambda>)
   159584    0.274    0.000    0.274    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
    52994    0.085    0.000    0.273    0.000 training.py:2772(_disallow_inside_tf_function)
    46728    0.028    0.000    0.273    0.000 __init__.py:340(set_verbosity)
   318101    0.272    0.000    0.272    0.000 dtypes.py:103(as_numpy_dtype)
       24    0.002    0.000    0.271    0.011 graph_view.py:336(_serialize_gathered_objects)
   424988    0.270    0.000    0.270    0.000 func_graph.py:97(<genexpr>)
   202785    0.152    0.000    0.269    0.000 object_identity.py:54(__eq__)
   159346    0.218    0.000    0.269    0.000 func_graph.py:745(deferred_external_captures)
   159346    0.267    0.000    0.267    0.000 c_api_util.py:86(__init__)
   748006    0.265    0.000    0.265    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
    57221    0.263    0.000    0.264    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
   318273    0.219    0.000    0.263    0.000 nest.py:81(_yield_value)
   654034    0.258    0.000    0.258    0.000 iterator_ops.py:885(_serialize)
   159334    0.257    0.000    0.257    0.000 func_graph.py:127(<listcomp>)
   159346    0.187    0.000    0.257    0.000 function.py:475(<listcomp>)
    28259    0.038    0.000    0.253    0.000 Experiment.py:166(<lambda>)
   318114    0.139    0.000    0.251    0.000 data_adapter.py:252(<genexpr>)
   159540    0.250    0.000    0.250    0.000 threading.py:74(RLock)
   159346    0.208    0.000    0.248    0.000 func_graph.py:491(variables)
   742284    0.247    0.000    0.247    0.000 tracking.py:199(__del__)
   477966    0.238    0.000    0.247    0.000 function.py:3760(__init__)
       12    0.000    0.000    0.246    0.021 file_io.py:549(atomic_write_string_to_file)
    55256    0.163    0.000    0.246    0.000 tensor_util.py:986(is_tensor)
    46728    0.058    0.000    0.245    0.000 _flagvalues.py:500(__setattr__)
   371005    0.243    0.000    0.243    0.000 distribution_strategy_context.py:337(_get_default_replica_mode)
    78600    0.108    0.000    0.242    0.000 iostream.py:307(_is_master_process)
   582932    0.242    0.000    0.242    0.000 dataset_ops.py:348(options)
    54496    0.100    0.000    0.241    0.000 execute.py:191(make_type)
   266707    0.241    0.000    0.241    0.000 function.py:484(<genexpr>)
    52994    0.087    0.000    0.236    0.000 data_adapter.py:617(can_handle)
    52994    0.129    0.000    0.235    0.000 callbacks.py:1038(__init__)
    52994    0.056    0.000    0.232    0.000 dataset_ops.py:3493(_inputs)
   318050    0.150    0.000    0.231    0.000 api.py:148(autograph_artifact)
   106038    0.060    0.000    0.226    0.000 callbacks.py:239(<genexpr>)
   130111    0.226    0.000    0.226    0.000 weakref.py:393(__getitem__)
   130170    0.226    0.000    0.226    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
   159540    0.226    0.000    0.226    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
   106038    0.068    0.000    0.224    0.000 callbacks.py:237(<genexpr>)
       48    0.014    0.000    0.222    0.005 graph_view.py:89(_serialize_slot_variables)
       12    0.000    0.000    0.221    0.018 functional_saver.py:184(_traced_save)
   212655    0.218    0.000    0.218    0.000 context.py:1733(__init__)
        2    0.000    0.000    0.217    0.108 pyplot.py:720(savefig)
   260340    0.212    0.000    0.212    0.000 context.py:135(config_proto_serialized)
   319722    0.211    0.000    0.211    0.000 tf_logging.py:93(get_logger)
    53099    0.097    0.000    0.208    0.000 object_identity.py:137(__delitem__)
   159346    0.208    0.000    0.208    0.000 function.py:423(<listcomp>)
   130170    0.207    0.000    0.207    0.000 function.py:271(__exit__)
   105988    0.122    0.000    0.207    0.000 type_spec.py:501(<genexpr>)
   159346    0.175    0.000    0.207    0.000 func_graph.py:919(<listcomp>)
   159346    0.146    0.000    0.206    0.000 function.py:442(<listcomp>)
       24    0.002    0.000    0.206    0.009 graph_view.py:412(objects_ids_and_slot_variables)
   164665    0.206    0.000    0.206    0.000 trace.py:52(__init__)
    39285    0.112    0.000    0.205    0.000 Hanabi.py:341(<listcomp>)
   743073    0.204    0.000    0.204    0.000 base.py:662(_deferred_dependencies)
   426870    0.203    0.000    0.203    0.000 op_def_library.py:46(_AttrValue)
    52994    0.050    0.000    0.202    0.000 data_adapter.py:756(can_handle)
57928/57926    0.177    0.000    0.201    0.000 data_structures.py:80(wrap_or_unwrap)
     3564    0.200    0.000    0.200    0.000 {built-in method builtins.dir}
     2980    0.009    0.000    0.200    0.000 base_layer.py:1347(weights)
   159346    0.158    0.000    0.198    0.000 func_graph.py:1093(<listcomp>)
    70040    0.094    0.000    0.197    0.000 object_identity.py:134(__setitem__)
   356192    0.197    0.000    0.197    0.000 {built-in method _thread.allocate_lock}
   107714    0.194    0.000    0.194    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
   805252    0.194    0.000    0.194    0.000 {method 'values' of 'collections.OrderedDict' objects}
    52994    0.095    0.000    0.193    0.000 optimization_options.py:259(_graph_rewrite_configs)
      168    0.000    0.000    0.190    0.001 base_layer.py:3009(_tracking_metadata)
      168    0.001    0.000    0.189    0.001 base_serialization.py:45(tracking_metadata)
    416/4    0.001    0.000    0.188    0.047 artist.py:30(draw_wrapper)
        4    0.000    0.000    0.188    0.047 figure.py:1688(draw)
    53077    0.095    0.000    0.188    0.000 ops.py:5777(inside_function)
    52994    0.102    0.000    0.187    0.000 dataset_ops.py:3487(<listcomp>)
      202    0.001    0.000    0.187    0.001 math_ops.py:1122(binary_op_wrapper)
       12    0.000    0.000    0.186    0.016 graph_view.py:389(frozen_saveable_objects)
    25132    0.066    0.000    0.186    0.000 Experiment.py:63(<listcomp>)
      8/4    0.000    0.000    0.186    0.046 image.py:119(_draw_list_compositing_images)
        4    0.000    0.000    0.186    0.046 _base.py:2555(draw)
   635928    0.183    0.000    0.183    0.000 dataset_ops.py:3387(output_structure)
      132    0.002    0.000    0.183    0.001 function_serialization.py:94(serialize_function)
      306    0.003    0.000    0.182    0.001 resource_variable_ops.py:146(_variable_handle_from_shape_and_dtype)
   168525    0.182    0.000    0.182    0.000 weakref.py:406(__setitem__)
    95281    0.085    0.000    0.181    0.000 nest.py:1232(<listcomp>)
     2079    0.004    0.000    0.181    0.000 base_layer.py:2235(variables)
    53006    0.178    0.000    0.178    0.000 {built-in method math.ceil}
   159346    0.178    0.000    0.178    0.000 function.py:441(<listcomp>)
   423952    0.178    0.000    0.178    0.000 dataset_ops.py:2960(_inputs)
    53167    0.104    0.000    0.178    0.000 monitoring.py:303(set)
   478304    0.178    0.000    0.178    0.000 context.py:818(device_spec)
       24    0.000    0.000    0.176    0.007 gen_io_ops.py:466(merge_v2_checkpoints)
    52994    0.159    0.000    0.176    0.000 distribute_lib.py:943(experimental_distribute_dataset)
   159222    0.131    0.000    0.174    0.000 function.py:2845(flat_input_signature)
       12    0.001    0.000    0.173    0.014 util.py:1100(_gather_saveables)
   125920    0.172    0.000    0.172    0.000 fromnumeric.py:3037(ndim)
   105986    0.118    0.000    0.171    0.000 dataset_ops.py:2809(<lambda>)
   106413    0.122    0.000    0.170    0.000 ops.py:1794(<listcomp>)
      260    0.003    0.000    0.169    0.001 gen_nn_ops.py:648(bias_add)
       12    0.000    0.000    0.169    0.014 ops.py:3268(as_graph_def)
       12    0.045    0.004    0.169    0.014 ops.py:3178(_as_graph_def)
     2013    0.053    0.000    0.168    0.000 training.py:589(metrics)
       12    0.000    0.000    0.168    0.014 graph_view.py:364(serialize_object_graph)
   160202    0.167    0.000    0.168    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
   159091    0.135    0.000    0.168    0.000 tensor_util.py:281(<listcomp>)
   105988    0.098    0.000    0.167    0.000 optimization_options.py:189(_autotune_buffers)
    55049    0.109    0.000    0.167    0.000 tensor_shape.py:215(__eq__)
    53044    0.084    0.000    0.166    0.000 callbacks.py:827(_implements_predict_batch_hooks)
        8    0.000    0.000    0.166    0.021 axis.py:1219(draw)
   105986    0.120    0.000    0.164    0.000 tensor_spec.py:116(_to_legacy_output_classes)
53285/53007    0.087    0.000    0.163    0.000 abc.py:196(__subclasscheck__)
   318838    0.163    0.000    0.163    0.000 function.py:2427(<dictcomp>)
    52994    0.088    0.000    0.160    0.000 iterator_ops.py:71(_device_stack_is_empty)
    69014    0.136    0.000    0.160    0.000 callbacks.py:675(on_train_batch_end)
      144    0.000    0.000    0.159    0.001 layer_serialization.py:38(python_properties)
    53517    0.136    0.000    0.158    0.000 {method 'sort' of 'list' objects}
       12    0.000    0.000    0.158    0.013 gen_io_ops.py:521(merge_v2_checkpoints_eager_fallback)
      306    0.004    0.000    0.158    0.001 gen_resource_variable_ops.py:1163(var_handle_op)
    53044    0.083    0.000    0.157    0.000 callbacks.py:822(_implements_test_batch_hooks)
    52994    0.115    0.000    0.155    0.000 data_adapter.py:1239(_infer_steps)
   105986    0.106    0.000    0.154    0.000 dataset_ops.py:2792(<lambda>)
    17268    0.029    0.000    0.154    0.000 save.py:108(list_dependencies)
     4584    0.022    0.000    0.153    0.000 backend.py:489(deprecated_internal_learning_phase_scope)
       12    0.000    0.000    0.153    0.013 signature_serialization.py:96(canonicalize_signatures)
   408035    0.152    0.000    0.152    0.000 Hanabi.py:16(handSize)
   159139    0.149    0.000    0.151    0.000 weakref.py:356(remove)
   261675    0.151    0.000    0.151    0.000 iterator_ops.py:878(__init__)
    53549    0.106    0.000    0.150    0.000 types.py:135(__get__)
    53044    0.095    0.000    0.149    0.000 data_adapter.py:625(_is_list_of_scalars)
   160379    0.149    0.000    0.149    0.000 {method 'values' of 'mappingproxy' objects}
   130170    0.149    0.000    0.149    0.000 context.py:1056(function_call_options)
   477583    0.145    0.000    0.148    0.000 ops.py:1922(<listcomp>)
        3    0.000    0.000    0.147    0.049 backprop.py:983(gradient)
        3    0.000    0.000    0.147    0.049 imperative_grad.py:33(imperative_grad)
        3    0.001    0.000    0.147    0.049 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeGradient}
   135537    0.145    0.000    0.145    0.000 iostream.py:93(_event_pipe)
   159346    0.107    0.000    0.145    0.000 object_identity.py:208(__len__)
       51    0.001    0.000    0.144    0.003 backprop.py:132(_gradient_function)
   317961    0.143    0.000    0.143    0.000 dataset_ops.py:2991(element_spec)
        2    0.000    0.000    0.143    0.071 figure.py:2063(savefig)
        2    0.000    0.000    0.143    0.071 backend_bases.py:2001(print_figure)
   159132    0.116    0.000    0.143    0.000 options.py:80(set_fn)
       12    0.000    0.000    0.141    0.012 file_io.py:323(write_string_to_file)
       48    0.015    0.000    0.141    0.003 graph_view.py:185(_breadth_first_traversal)
   159038    0.112    0.000    0.141    0.000 inspect.py:64(ismodule)
        2    0.000    0.000    0.140    0.070 backend_pdf.py:2532(print_pdf)
   321064    0.140    0.000    0.140    0.000 function.py:763(forward)
   159268    0.115    0.000    0.139    0.000 context.py:1841(global_seed)
    78612    0.135    0.000    0.135    0.000 {built-in method posix.getpid}
    36431    0.080    0.000    0.133    0.000 callbacks.py:985(_maybe_init_progbar)
   159022    0.108    0.000    0.133    0.000 inspect.py:277(isbuiltin)
   159346    0.103    0.000    0.133    0.000 function.py:443(<listcomp>)
   260652    0.132    0.000    0.132    0.000 iterator_ops.py:820(element_spec)
    46728    0.019    0.000    0.131    0.000 __init__.py:174(value)
   103521    0.106    0.000    0.130    0.000 callbacks.py:659(on_train_batch_begin)
    52994    0.088    0.000    0.129    0.000 callbacks.py:269(set_params)
   159296    0.128    0.000    0.128    0.000 ops.py:3112(seed)
   130170    0.128    0.000    0.128    0.000 function.py:265(__init__)
   214977    0.126    0.000    0.128    0.000 {built-in method builtins.sum}
   168000    0.126    0.000    0.126    0.000 {method 'isidentifier' of 'str' objects}
   106029    0.098    0.000    0.126    0.000 op_def_library.py:447(<listcomp>)
   159025    0.125    0.000    0.125    0.000 api.py:217(convert)
      510    0.002    0.000    0.125    0.000 function.py:177(_shape_relaxed_type_for_composite_tensor)
   225188    0.124    0.000    0.124    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
   158982    0.124    0.000    0.124    0.000 tracking.py:143(__init__)
   323428    0.123    0.000    0.123    0.000 func_graph.py:743(<listcomp>)
   214055    0.122    0.000    0.122    0.000 tensor_spec.py:73(name)
   158982    0.097    0.000    0.122    0.000 base.py:1192(isspmatrix)
   318944    0.121    0.000    0.121    0.000 function.py:2447(fullargspec)
   107714    0.121    0.000    0.121    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
   322876    0.121    0.000    0.121    0.000 function.py:501(name)
       24    0.000    0.000    0.121    0.005 model_serialization.py:34(_python_properties_internal)
 1530/510    0.006    0.000    0.121    0.000 type_spec.py:134(_with_tensor_ranks_only)
   159059    0.094    0.000    0.120    0.000 inspect.py:73(isclass)
   225188    0.119    0.000    0.119    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
   320780    0.118    0.000    0.118    0.000 function.py:1974(structured_input_signature)
   157140    0.118    0.000    0.118    0.000 Hanabi.py:304(availableActions)
   159346    0.118    0.000    0.118    0.000 function.py:2479(vararg_name)
     2570    0.031    0.000    0.117    0.000 custom_gradient.py:45(copy_handle_data)
   202785    0.087    0.000    0.116    0.000 object_identity.py:42(_assert_type)
      195    0.001    0.000    0.114    0.001 activations.py:190(softplus)
   159130    0.089    0.000    0.114    0.000 tensor_shape.py:1169(<genexpr>)
      195    0.002    0.000    0.113    0.001 gen_nn_ops.py:10917(softplus)
   158982    0.113    0.000    0.113    0.000 dataset_ops.py:4023(_should_unpack_args)
   159132    0.078    0.000    0.112    0.000 data_adapter.py:247(_is_tensor)
    46728    0.046    0.000    0.112    0.000 __init__.py:179(_update_logging_levels)
    52994    0.063    0.000    0.112    0.000 optimization_options.py:55(_graph_rewrites)
    52994    0.101    0.000    0.112    0.000 data_adapter.py:884(can_handle)
    63888    0.079    0.000    0.112    0.000 random.py:223(_randbelow)
   159871    0.110    0.000    0.110    0.000 ag_ctx.py:49(__init__)
   110464    0.066    0.000    0.110    0.000 base_layer.py:2697(_maybe_create_attribute)
 6744/360    0.013    0.000    0.110    0.000 generic_utils.py:235(serialize_keras_object)
       12    0.044    0.004    0.109    0.009 file_io.py:99(write)
   166812    0.109    0.000    0.109    0.000 object_identity.py:38(unwrapped)
    79761    0.109    0.000    0.109    0.000 Hanabi.py:280(availableActions)
     3372    0.015    0.000    0.108    0.000 base_layer.py:1311(trainable_weights)
    10609    0.013    0.000    0.108    0.000 ops.py:1173(get_shape)
    39285    0.068    0.000    0.107    0.000 Hanabi.py:354(next_player)
    53094    0.107    0.000    0.107    0.000 callbacks.py:607(__init__)
   159243    0.107    0.000    0.107    0.000 converter.py:170(as_tuple)
   159457    0.077    0.000    0.105    0.000 function.py:3784(__del__)
    53198    0.089    0.000    0.105    0.000 op_def_library.py:148(_MakeInt)
   159346    0.105    0.000    0.105    0.000 variable_scope.py:1166(use_resource)
       12    0.000    0.000    0.104    0.009 file_io.py:516(rename)
       12    0.000    0.000    0.104    0.009 file_io.py:532(rename_v2)
   129786    0.103    0.000    0.103    0.000 data_adapter.py:1232(should_sync)
   336000    0.103    0.000    0.103    0.000 inspect.py:2502(name)
       12    0.103    0.009    0.103    0.009 {built-in method tensorflow.python._pywrap_file_io.RenameFile}
       48    0.000    0.000    0.103    0.002 functional.py:597(get_config)
   317964    0.102    0.000    0.102    0.000 dataset_ops.py:3409(function)
      103    0.001    0.000    0.102    0.001 gen_math_ops.py:6143(mul)
    60/12    0.001    0.000    0.101    0.008 save_impl.py:210(_replace_child_layer_functions)
   129821    0.101    0.000    0.101    0.000 iterator_ops.py:895(_to_components)
    52944    0.100    0.000    0.101    0.000 training.py:1420(make_predict_function)
     1018    0.001    0.000    0.101    0.000 function.py:3110(<genexpr>)
   159322    0.100    0.000    0.100    0.000 function.py:381(__init__)
      509    0.002    0.000    0.100    0.000 function.py:169(_is_type_subset)
      384    0.002    0.000    0.099    0.000 functional_ops.py:1217(_set_read_only_resource_inputs_attr)
       97    0.000    0.000    0.099    0.001 math_ops.py:463(multiply)
   159346    0.099    0.000    0.099    0.000 function.py:3777(__init__)
   168326    0.098    0.000    0.098    0.000 enum.py:517(__new__)
   164665    0.098    0.000    0.098    0.000 trace.py:123(__exit__)
   328464    0.097    0.000    0.097    0.000 function.py:1964(graph)
4080/1020    0.007    0.000    0.096    0.000 type_spec.py:148(relax)
     3357    0.016    0.000    0.096    0.000 base_layer.py:1326(non_trainable_weights)
       91    0.000    0.000    0.096    0.001 math_ops.py:1450(_mul_dispatch)
      216    0.004    0.000    0.096    0.000 function_serialization.py:52(serialize_concrete_function)
    64637    0.095    0.000    0.095    0.000 ops.py:1217(graph)
    53171    0.078    0.000    0.095    0.000 execute.py:166(make_int)
   159540    0.095    0.000    0.095    0.000 ops.py:4981(switch_to_thread_local)
      120    0.002    0.000    0.095    0.001 layer_serialization.py:43(_python_properties_internal)
   318692    0.093    0.000    0.093    0.000 function.py:2475(arg_names)
   129786    0.093    0.000    0.093    0.000 data_adapter.py:1212(step_increment)
    55286    0.030    0.000    0.093    0.000 shape_base.py:220(_vhstack_dispatcher)
   158982    0.092    0.000    0.092    0.000 tracking.py:146(resources)
    18595    0.087    0.000    0.091    0.000 _methods.py:50(_count_reduce_items)
   166396    0.090    0.000    0.090    0.000 distribute_lib.py:771(extended)
       16    0.001    0.000    0.089    0.006 axis.py:1098(_update_ticks)
   160048    0.088    0.000    0.088    0.000 tf2.py:42(enabled)
   289572    0.088    0.000    0.088    0.000 function.py:2014(<listcomp>)
   130146    0.088    0.000    0.088    0.000 trace.py:89(set_metadata)
     6729    0.037    0.000    0.087    0.000 base_layer.py:2835(_gather_children_attribute)
    12928    0.034    0.000    0.086    0.000 random.py:255(choice)
   105988    0.086    0.000    0.086    0.000 data_adapter.py:1147(_truncate_execution_to_epoch)
      144    0.001    0.000    0.085    0.001 layer_serialization.py:113(get_config)
   164058    0.085    0.000    0.085    0.000 function.py:3780(release)
     1040    0.022    0.000    0.084    0.000 random.py:263(shuffle)
      600    0.004    0.000    0.084    0.000 function.py:489(add_to_graph)
     6842    0.022    0.000    0.082    0.000 base_layer.py:2958(_dedup_weights)
    52994    0.059    0.000    0.082    0.000 dataset_ops.py:3489(<listcomp>)
       24    0.013    0.001    0.080    0.003 graph_view.py:318(_fill_object_graph_proto)
    20740    0.050    0.000    0.080    0.000 base_layer.py:2847(_flatten_layers)
    67014    0.050    0.000    0.080    0.000 pickle.py:645(save_bool)
      384    0.010    0.000    0.079    0.000 auto_control_deps_utils.py:36(get_read_only_resource_input_indices_graph)
   158982    0.078    0.000    0.078    0.000 def_function.py:423(functions_run_eagerly)
       48    0.003    0.000    0.078    0.002 functional.py:1244(get_network_config)
       12    0.003    0.000    0.077    0.006 meta_graph.py:457(strip_graph_default_valued_attrs)
    56793    0.042    0.000    0.077    0.000 ops.py:535(get_shape)
       12    0.000    0.000    0.076    0.006 tmpjrr6y7yw.py:9(tf__signature_wrapper)
   159346    0.076    0.000    0.076    0.000 function.py:2836(function_spec)
      852    0.005    0.000    0.076    0.000 ops.py:3319(_add_function)
     6264    0.007    0.000    0.075    0.000 graph_view.py:158(list_dependencies)
      696    0.001    0.000    0.075    0.000 nested_structure_coder.py:86(encode_structure)
   264970    0.075    0.000    0.075    0.000 dataset_ops.py:3605(element_spec)
    53167    0.074    0.000    0.074    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
        2    0.000    0.000    0.074    0.037 backend_bases.py:1932(draw_idle)
        2    0.000    0.000    0.074    0.037 backend_agg.py:384(draw)
     3168    0.019    0.000    0.074    0.000 meta_graph.py:474(_strip_node_default_valued_attrs)
   130170    0.074    0.000    0.074    0.000 context.py:127(executor_type)
   144424    0.069    0.000    0.073    0.000 Hanabi.py:180(__init__)
      340    0.002    0.000    0.073    0.000 def_function.py:579(_defun_with_scope)
       71    0.002    0.000    0.073    0.001 axis.py:56(__init__)
       12    0.000    0.000    0.072    0.006 function.py:1605(__call__)
       12    0.000    0.000    0.072    0.006 function.py:1657(_call_impl)
       12    0.000    0.000    0.072    0.006 function.py:1675(_call_with_flat_signature)
 3912/696    0.012    0.000    0.071    0.000 nested_structure_coder.py:78(_map_structure)
   159528    0.071    0.000    0.071    0.000 ops.py:3117(seed)
      513    0.002    0.000    0.071    0.000 type_spec.py:110(most_specific_compatible_type)
   158980    0.071    0.000    0.071    0.000 dataset_ops.py:3018(element_spec)
    52994    0.044    0.000    0.070    0.000 data_adapter.py:1474(pack_x_y_sample_weight)
     3846    0.036    0.000    0.068    0.000 backend.py:1341(dtype)
 2050/513    0.014    0.000    0.068    0.000 type_spec.py:395(__most_specific_compatible_type_serialization)
      852    0.068    0.000    0.068    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
   159346    0.066    0.000    0.066    0.000 function.py:2471(is_pure)
       19    0.065    0.003    0.066    0.003 {built-in method io.open}
       12    0.065    0.005    0.065    0.005 file_io.py:81(_prewrite_check)
   159071    0.064    0.000    0.064    0.000 numeric.py:2283(_array_equal_dispatcher)
   110704    0.064    0.000    0.064    0.000 object_identity.py:125(__init__)
   112467    0.063    0.000    0.063    0.000 resource_variable_ops.py:588(trainable)
2562/1026    0.002    0.000    0.063    0.000 type_spec.py:429(<genexpr>)
      288    0.003    0.000    0.063    0.000 core.py:1209(get_config)
   322268    0.063    0.000    0.063    0.000 Hanabi.py:220(<listcomp>)
    55419    0.033    0.000    0.063    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)
   211975    0.063    0.000    0.063    0.000 dataset_ops.py:2949(_inputs)
    60085    0.051    0.000    0.063    0.000 Hanabi.py:147(numberOfTiles)
       24    0.001    0.000    0.063    0.003 saving_utils.py:147(model_metadata)
   159610    0.062    0.000    0.062    0.000 function.py:2451(is_method)
   114750    0.062    0.000    0.062    0.000 resource_variable_ops.py:545(handle)
      340    0.002    0.000    0.062    0.000 def_function.py:629(_defun)
    42335    0.045    0.000    0.062    0.000 training.py:1609(<lambda>)
    53000    0.061    0.000    0.061    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
   168000    0.061    0.000    0.061    0.000 inspect.py:2514(kind)
      387    0.005    0.000    0.060    0.000 tf_inspect.py:260(getcallargs)
   159346    0.056    0.000    0.060    0.000 func_graph.py:1016(<listcomp>)
   159358    0.060    0.000    0.060    0.000 function.py:1586(<genexpr>)
   160379    0.060    0.000    0.060    0.000 inspect.py:2821(return_annotation)
     1040    0.004    0.000    0.059    0.000 Hanabi.py:301(<listcomp>)
  242/218    0.022    0.000    0.058    0.000 ops.py:6267(dismantle_graph)
   160379    0.058    0.000    0.058    0.000 inspect.py:2817(parameters)
    95279    0.057    0.000    0.057    0.000 callbacks.py:464(on_predict_batch_begin)
       24    0.013    0.001    0.057    0.002 graph_view.py:209(_add_attributes_to_object_graph)
        9    0.000    0.000    0.056    0.006 math_grad.py:147(_SumGrad)
        3    0.000    0.000    0.056    0.019 math_grad.py:249(_MeanGrad)
    52994    0.036    0.000    0.056    0.000 optimization_options.py:60(_graph_rewrite_configs)
    95279    0.055    0.000    0.055    0.000 callbacks.py:476(on_predict_batch_end)
    52994    0.045    0.000    0.055    0.000 dataset_ops.py:3150(<lambda>)
     5200    0.012    0.000    0.055    0.000 Hanabi.py:226(__init__)
    18545    0.038    0.000    0.054    0.000 threading.py:251(_acquire_restore)
       12    0.010    0.001    0.054    0.005 save.py:247(fill_object_graph_proto)
   159346    0.054    0.000    0.054    0.000 func_graph.py:738(<listcomp>)
        3    0.000    0.000    0.054    0.018 compile_utils.py:164(__call__)
    53618    0.054    0.000    0.054    0.000 device_spec.py:272(device_type)
   105986    0.053    0.000    0.053    0.000 tensor_spec.py:110(_to_legacy_output_types)
   158979    0.053    0.000    0.053    0.000 dataset_ops.py:3544(element_spec)
   158982    0.052    0.000    0.052    0.000 dataset_ops.py:4139(element_spec)
   164665    0.052    0.000    0.052    0.000 trace.py:85(__enter__)
   105988    0.051    0.000    0.051    0.000 dataset_ops.py:4368(options)
       84    0.000    0.000    0.051    0.001 module.py:171(submodules)
  204/144    0.009    0.000    0.051    0.000 module.py:317(_flatten_module)
    38667    0.051    0.000    0.051    0.000 {built-in method time.time}
      384    0.007    0.000    0.050    0.000 save_impl.py:309(_reset_layer_losses)
     1924    0.030    0.000    0.050    0.000 generic_utils.py:497(__init__)
     5811    0.031    0.000    0.049    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
     1924    0.036    0.000    0.049    0.000 callbacks.py:1660(on_epoch_end)
     1025    0.008    0.000    0.049    0.000 tensor_spec.py:100(most_specific_compatible_type)
   119156    0.049    0.000    0.049    0.000 resource_variable_ops.py:498(dtype)
    53167    0.049    0.000    0.049    0.000 monitoring.py:295(__init__)
   154144    0.049    0.000    0.049    0.000 threading.py:506(is_set)
    53006    0.039    0.000    0.048    0.000 tensor_shape.py:97(dimension_value)
   168000    0.048    0.000    0.048    0.000 inspect.py:2510(annotation)
   105986    0.048    0.000    0.048    0.000 tensor_spec.py:113(_to_legacy_output_shapes)
    46728    0.020    0.000    0.048    0.000 _flagvalues.py:525(_assert_validators)
   125920    0.047    0.000    0.047    0.000 fromnumeric.py:3033(_ndim_dispatcher)
   159346    0.047    0.000    0.047    0.000 function.py:445(<listcomp>)
        4    0.000    0.000    0.047    0.012 base_layer.py:996(_functional_construction_call)
      288    0.002    0.000    0.046    0.000 base_layer.py:640(get_config)
   157442    0.046    0.000    0.046    0.000 {method 'append' of 'collections.deque' objects}
     4559    0.008    0.000    0.045    0.000 ops.py:5325(control_dependencies)
       48    0.000    0.000    0.045    0.001 state_ops.py:198(assign)
   130170    0.045    0.000    0.045    0.000 function.py:268(__enter__)
     2292    0.009    0.000    0.045    0.000 backend.py:429(deprecated_internal_set_learning_phase)
   106070    0.045    0.000    0.045    0.000 tensor_spec.py:153(<lambda>)
       60    0.001    0.000    0.045    0.001 save_impl.py:83(wrap_layer_objects)
     6729    0.007    0.000    0.044    0.000 base_layer.py:2844(<genexpr>)
    53052    0.044    0.000    0.044    0.000 backend_config.py:67(floatx)
    53549    0.043    0.000    0.043    0.000 enum.py:599(value)
    27725    0.043    0.000    0.043    0.000 fromnumeric.py:74(<dictcomp>)
       54    0.001    0.000    0.043    0.001 axis.py:289(draw)
   159222    0.043    0.000    0.043    0.000 function.py:2467(flat_input_signature)
   158982    0.042    0.000    0.042    0.000 dataset_ops.py:3496(element_spec)
     7929    0.019    0.000    0.042    0.000 layer_utils.py:234(filter_empty_layer_containers)
   119986    0.042    0.000    0.042    0.000 ops.py:167(__init__)
       32    0.000    0.000    0.042    0.001 ticker.py:2201(__call__)
       12    0.000    0.000    0.041    0.003 save.py:481(_generate_signatures)
    20800    0.020    0.000    0.041    0.000 Hanabi.py:233(draw)
       32    0.000    0.000    0.041    0.001 ticker.py:2205(tick_values)
        4    0.000    0.000    0.041    0.010 pyplot.py:2759(plot)
    53044    0.041    0.000    0.041    0.000 callbacks.py:616(set_params)
       32    0.002    0.000    0.040    0.001 ticker.py:2141(_raw_ticks)
    52994    0.040    0.000    0.040    0.000 data_adapter.py:413(get_size)
   159346    0.040    0.000    0.040    0.000 func_graph.py:493(<listcomp>)
      217    0.005    0.000    0.040    0.000 lines.py:269(__init__)
   119986    0.039    0.000    0.039    0.000 ops.py:170(__enter__)
   119986    0.039    0.000    0.039    0.000 ops.py:173(__exit__)
       51    0.000    0.000    0.039    0.001 math_ops.py:1419(_add_dispatch)
    28142    0.039    0.000    0.039    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       51    0.000    0.000    0.039    0.001 gen_math_ops.py:463(add_v2)
       24    0.000    0.000    0.038    0.002 math_ops.py:4739(sqrt)
       24    0.000    0.000    0.038    0.002 gen_math_ops.py:10161(sqrt)
    18607    0.031    0.000    0.038    0.000 threading.py:242(__exit__)
     3516    0.002    0.000    0.038    0.000 def_function.py:1042(<genexpr>)
       37    0.000    0.000    0.038    0.001 axis.py:2225(_get_tick)
        6    0.000    0.000    0.037    0.006 pyplot.py:861(gca)
     2013    0.023    0.000    0.037    0.000 compile_utils.py:123(metrics)
    52994    0.037    0.000    0.037    0.000 training_utils.py:643(handle_partial_sample_weights)
    39285    0.037    0.000    0.037    0.000 {method 'random' of '_random.Random' objects}
  540/324    0.004    0.000    0.036    0.000 nested_structure_coder.py:179(do_encode)
       24    0.000    0.000    0.036    0.002 variables.py:1072(_run_op)
     1716    0.006    0.000    0.036    0.000 function.py:211(is_same_structure)
    23364    0.017    0.000    0.036    0.000 __init__.py:335(get_verbosity)
        6    0.000    0.000    0.036    0.006 figure.py:1913(gca)
     1152    0.005    0.000    0.036    0.000 auto_control_deps_utils.py:63(_get_read_only_resource_input_indices_op)
        2    0.000    0.000    0.036    0.018 figure.py:1259(add_subplot)
        2    0.000    0.000    0.035    0.018 _subplots.py:18(__init__)
    52994    0.035    0.000    0.035    0.000 data_adapter.py:1272(_validate_data_handler)
       34    0.000    0.000    0.035    0.001 axis.py:1938(_get_tick)
 11856/72    0.013    0.000    0.035    0.000 copy.py:132(deepcopy)
        2    0.000    0.000    0.035    0.017 _base.py:378(__init__)
     4608    0.006    0.000    0.035    0.000 base.py:498(no_automatic_dependency_tracking_scope)
    46728    0.017    0.000    0.035    0.000 __init__.py:1280(setLevel)
      308    0.001    0.000    0.034    0.000 ops.py:2013(colocation_groups)
    18607    0.025    0.000    0.034    0.000 threading.py:239(__enter__)
      230    0.001    0.000    0.034    0.000 func_graph.py:1269(dismantle_func_graph)
    10632    0.020    0.000    0.034    0.000 meta_graph.py:443(_is_default_attr_value)
    80567    0.034    0.000    0.034    0.000 Hanabi.py:216(<listcomp>)
       16    0.000    0.000    0.033    0.002 axis.py:1428(get_major_ticks)
      132    0.002    0.000    0.033    0.000 function_serialization.py:29(_serialize_function_spec)
   159346    0.033    0.000    0.033    0.000 func_graph.py:753(<listcomp>)
       12    0.000    0.000    0.032    0.003 save.py:468(_call_function_with_mapped_captures)
     1372    0.003    0.000    0.032    0.000 ops.py:4368(device)
    46728    0.027    0.000    0.032    0.000 converter.py:138(absl_to_standard)
       12    0.000    0.000    0.032    0.003 file_io.py:197(__exit__)
       12    0.032    0.003    0.032    0.003 file_io.py:223(close)
    52944    0.032    0.000    0.032    0.000 training.py:1604(<lambda>)
    10609    0.019    0.000    0.032    0.000 tensor_shape.py:1004(assert_has_rank)
    52994    0.031    0.000    0.031    0.000 data_adapter.py:1034(broadcast_sample_weight_modes)
    53094    0.031    0.000    0.031    0.000 callbacks.py:619(set_model)
     2532    0.003    0.000    0.031    0.000 ops.py:3264(<listcomp>)
      384    0.005    0.000    0.031    0.000 save_impl.py:321(_restore_layer_losses)
       15    0.000    0.000    0.031    0.002 base.py:691(_add_variable_with_custom_getter)
   159346    0.031    0.000    0.031    0.000 func_graph.py:748(<listcomp>)
      120    0.001    0.000    0.030    0.000 text.py:867(get_window_extent)
   107666    0.030    0.000    0.030    0.000 distribute_lib.py:2973(value_container)
       17    0.000    0.000    0.030    0.002 resource_variable_ops.py:1419(__init__)
       17    0.001    0.000    0.030    0.002 resource_variable_ops.py:1520(_init_from_args)
       15    0.000    0.000    0.029    0.002 base_layer_utils.py:55(make_variable)
       15    0.000    0.000    0.029    0.002 variables.py:182(_variable_v1_call)
4230/1830    0.006    0.000    0.029    0.000 tracking.py:80(__setattr__)
       12    0.000    0.000    0.029    0.002 gen_io_ops.py:1463(restore_v2)
    53036    0.028    0.000    0.028    0.000 distribution_strategy_context.py:312(_get_default_strategy)
      576    0.001    0.000    0.028    0.000 saveable_object.py:53(tensor)
       50    0.000    0.000    0.028    0.001 random_ops.py:319(random_shuffle)
      168    0.001    0.000    0.028    0.000 json_utils.py:43(encode)
       10    0.000    0.000    0.028    0.003 base_layer.py:477(add_weight)
      432    0.001    0.000    0.028    0.000 data_structures.py:414(__init__)
      276    0.002    0.000    0.028    0.000 saveable_object_util.py:100(f)
        4    0.000    0.000    0.028    0.007 base_layer.py:2614(_maybe_build)
       50    0.001    0.000    0.028    0.001 gen_random_ops.py:528(random_shuffle)
    52993    0.027    0.000    0.027    0.000 dataset_ops.py:3541(_inputs)
       16    0.000    0.000    0.027    0.002 axis.py:1171(_get_tick_bboxes)
       16    0.000    0.000    0.027    0.002 axis.py:1173(<listcomp>)
        4    0.000    0.000    0.027    0.007 core.py:1159(build)
      432    0.002    0.000    0.027    0.000 data_structures.py:309(__init__)
    54868    0.026    0.000    0.026    0.000 data_adapter.py:425(should_recreate_iterator)
       10    0.000    0.000    0.026    0.003 variables.py:199(<lambda>)
      170    0.003    0.000    0.026    0.000 lines.py:751(draw)
       10    0.000    0.000    0.026    0.003 variable_scope.py:2557(default_variable_creator)
      768    0.009    0.000    0.026    0.000 ops.py:6937(set_int_list_attr)
      686    0.002    0.000    0.026    0.000 ops.py:4361(_add_device_to_stack)
     2610    0.009    0.000    0.026    0.000 func_graph.py:321(control_dependencies)
        2    0.000    0.000    0.025    0.013 _base.py:948(cla)
    52994    0.025    0.000    0.025    0.000 data_adapter.py:410(get_dataset)
       72    0.001    0.000    0.025    0.000 serialized_attributes.py:205(set_and_validate_objects)
        3    0.000    0.000    0.025    0.008 math_ops.py:3894(reduced_shape)
        2    0.000    0.000    0.025    0.012 <__array_function__ internals>:2(savetxt)
        2    0.013    0.007    0.025    0.012 npyio.py:1211(savetxt)
  888/168    0.001    0.000    0.024    0.000 copy.py:210(_deepcopy_list)
      780    0.004    0.000    0.024    0.000 def_function.py:1009(_list_all_concrete_functions)
  1488/48    0.004    0.000    0.024    0.001 copy.py:236(_deepcopy_dict)
        3    0.000    0.000    0.024    0.008 losses.py:117(__call__)
      120    0.001    0.000    0.024    0.000 save_impl.py:535(__init__)
    18545    0.016    0.000    0.024    0.000 threading.py:248(_release_save)
      108    0.001    0.000    0.024    0.000 functional.py:332(_checkpoint_dependencies)
    69014    0.024    0.000    0.024    0.000 callbacks.py:627(on_batch_end)
    52994    0.024    0.000    0.024    0.000 distribute_lib.py:2993(_in_multi_worker_mode)
       12    0.023    0.002    0.023    0.002 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToGraphDef}
    95057    0.023    0.000    0.023    0.000 {method 'getrandbits' of '_random.Random' objects}
   103521    0.023    0.000    0.023    0.000 callbacks.py:622(on_batch_begin)
      121    0.002    0.000    0.023    0.000 functional.py:308(_layer_checkpoint_dependencies)
        3    0.000    0.000    0.023    0.008 math_grad.py:1424(_DivNoNanGrad)
      170    0.003    0.000    0.023    0.000 text.py:272(_get_layout)
     3534    0.010    0.000    0.023    0.000 ops.py:4557(__enter__)
    52994    0.023    0.000    0.023    0.000 data_adapter.py:1217(inferred_steps)
     6264    0.005    0.000    0.023    0.000 save.py:137(list_extra_dependencies)
      170    0.002    0.000    0.023    0.000 def_function.py:451(__init__)
     3534    0.007    0.000    0.023    0.000 ops.py:4567(__exit__)
       27    0.000    0.000    0.023    0.001 math_ops.py:1267(truediv)
       27    0.000    0.000    0.022    0.001 math_ops.py:1220(_truediv_python3)
10380/5580    0.014    0.000    0.022    0.000 data_structures.py:756(__getattribute__)
      480    0.001    0.000    0.022    0.000 data_structures.py:635(_track_value)
        3    0.000    0.000    0.022    0.007 optimizer_v2.py:778(_prepare)
       34    0.000    0.000    0.022    0.001 math_ops.py:524(subtract)
       34    0.000    0.000    0.022    0.001 gen_math_ops.py:10433(sub)
      444    0.005    0.000    0.022    0.000 nested_structure_coder.py:428(do_encode)
      480    0.001    0.000    0.022    0.000 data_structures.py:173(_track_value)
    53631    0.022    0.000    0.022    0.000 ops.py:3003(<lambda>)
        1    0.000    0.000    0.022    0.022 tmpzwdntdj_.py:9(tf__predict_function)
      552    0.001    0.000    0.022    0.000 variables.py:1079(__hash__)
        3    0.000    0.000    0.022    0.007 rmsprop.py:163(_prepare_local)
      136    0.002    0.000    0.022    0.000 text.py:670(draw)
        1    0.000    0.000    0.022    0.022 training.py:1441(step_function)
       16    0.000    0.000    0.021    0.001 axis.py:1346(get_majorticklocs)
       27    0.000    0.000    0.021    0.001 gen_math_ops.py:7416(real_div)
       16    0.000    0.000    0.021    0.001 axis.py:1350(get_minorticklocs)
      216    0.001    0.000    0.021    0.000 function.py:2041(add_to_graph)
      132    0.004    0.000    0.021    0.000 nested_structure_coder.py:229(do_encode)
    54818    0.020    0.000    0.020    0.000 data_adapter.py:227(on_epoch_end)
       20    0.000    0.000    0.020    0.001 math_ops.py:1921(reduce_sum)
        3    0.000    0.000    0.020    0.007 metrics_utils.py:73(decorated)
     7776    0.009    0.000    0.020    0.000 backend.py:639(get_graph)
    52994    0.020    0.000    0.020    0.000 dataset_ops.py:4143(_transformation_name)
       24    0.000    0.000    0.020    0.001 resource_variable_ops.py:1953(value)
       24    0.000    0.000    0.020    0.001 resource_variable_ops.py:1959(_read_variable_op)
       12    0.000    0.000    0.019    0.002 builder_impl.py:757(copy_assets_to_destination_dir)
        1    0.000    0.000    0.019    0.019 training.py:1444(run_step)
      192    0.002    0.000    0.019    0.000 node.py:162(serialize)
        4    0.000    0.000    0.019    0.005 initializers_v2.py:387(__call__)
        4    0.000    0.000    0.019    0.005 init_ops_v2.py:528(__call__)
        3    0.000    0.000    0.019    0.006 metrics.py:173(update_state_fn)
     2043    0.002    0.000    0.019    0.000 type_spec.py:286(_deserialize)
        4    0.000    0.000    0.019    0.005 init_ops_v2.py:1037(random_uniform)
     1697    0.004    0.000    0.019    0.000 func_graph.py:265(watch_variable)
        4    0.001    0.000    0.019    0.005 random_ops.py:207(random_uniform)
       13    0.000    0.000    0.019    0.001 resource_variable_ops.py:806(assign_add)
        3    0.000    0.000    0.019    0.006 metrics.py:336(update_state)
     1898    0.019    0.000    0.019    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
        4    0.000    0.000    0.018    0.005 axis.py:2303(_update_label_position)
    52944    0.018    0.000    0.018    0.000 callbacks.py:804(on_predict_end)
    52994    0.018    0.000    0.018    0.000 dataset_ops.py:4112(_transformation_name)
    46728    0.013    0.000    0.018    0.000 __init__.py:190(_checkLevel)
    52994    0.018    0.000    0.018    0.000 dataset_ops.py:4062(_transformation_name)
       24    0.000    0.000    0.018    0.001 gen_math_ops.py:10278(square)
    14237    0.008    0.000    0.018    0.000 pickle.py:680(save_float)
    52944    0.018    0.000    0.018    0.000 callbacks.py:793(on_predict_begin)
        1    0.000    0.000    0.017    0.017 training.py:1396(predict_step)
        4    0.000    0.000    0.017    0.004 axis.py:2011(_update_label_position)
     4020    0.008    0.000    0.017    0.000 weakref.py:242(values)
       16    0.000    0.000    0.017    0.001 axis.py:2187(get_tick_space)
       16    0.000    0.000    0.017    0.001 axis.py:2487(get_tick_space)
    52994    0.017    0.000    0.017    0.000 {method 'pop' of 'set' objects}
      180    0.001    0.000    0.017    0.000 utils.py:202(get_training_arg_index)
    20094    0.017    0.000    0.017    0.000 {method 'index' of 'list' objects}
        3    0.000    0.000    0.017    0.006 losses_utils.py:71(compute_weighted_loss)
11784/168    0.008    0.000    0.017    0.000 json_utils.py:47(_encode_tuple)
    52994    0.017    0.000    0.017    0.000 distribute_lib.py:2904(_experimental_distribute_dataset)
      712    0.003    0.000    0.017    0.000 traceable_stack.py:92(push_obj)
     3534    0.005    0.000    0.016    0.000 ops.py:4646(control_dependencies)
 2568/168    0.004    0.000    0.016    0.000 json_utils.py:54(<dictcomp>)
       25    0.000    0.000    0.016    0.001 array_ops.py:3058(placeholder)
        4    0.000    0.000    0.016    0.004 axis.py:2284(_get_tick_boxes_siblings)
       25    0.000    0.000    0.016    0.001 gen_array_ops.py:6769(placeholder)
      948    0.002    0.000    0.016    0.000 _collections_abc.py:824(update)
     2532    0.002    0.000    0.016    0.000 ops.py:3779(get_operation_by_name)
       60    0.001    0.000    0.016    0.000 save_impl.py:339(__init__)
        4    0.000    0.000    0.016    0.004 axis.py:1992(_get_tick_boxes_siblings)
        2    0.000    0.000    0.015    0.008 backend_pdf.py:592(finalize)
 1104/384    0.003    0.000    0.015    0.000 utils.py:124(list_all_layers_and_sublayers)
       20    0.000    0.000    0.015    0.001 math_ops.py:1987(reduce_sum_with_dims)
     1104    0.002    0.000    0.015    0.000 saveable_object_util.py:134(saveable_objects_for_op)
     3408    0.002    0.000    0.015    0.000 graph_view.py:61(_object_prefix_from_path)
     2905    0.003    0.000    0.015    0.000 ops.py:3636(as_graph_element)
      372    0.001    0.000    0.015    0.000 ops.py:819(__hash__)
       20    0.000    0.000    0.015    0.001 gen_math_ops.py:10493(_sum)
    26357    0.015    0.000    0.015    0.000 fromnumeric.py:1108(_argmax_dispatcher)
       16    0.000    0.000    0.015    0.001 axis.py:884(set_tick_params)
       88    0.001    0.000    0.015    0.000 functional.py:556(_conform_to_reference_input)
    23364    0.010    0.000    0.015    0.000 _flagvalues.py:468(__getitem__)
     1725    0.002    0.000    0.014    0.000 ops.py:158(string_merge)
      600    0.001    0.000    0.014    0.000 base_layer.py:3013(_list_extra_dependencies_for_serialization)
    18607    0.014    0.000    0.014    0.000 {built-in method _imp.lock_held}
        3    0.000    0.000    0.014    0.005 math_grad.py:1554(_SquaredDifferenceGrad)
        2    0.000    0.000    0.014    0.007 backend_pdf.py:711(writeFonts)
      376    0.005    0.000    0.014    0.000 input_spec.py:132(assert_input_compatibility)
        2    0.000    0.000    0.014    0.007 backend_pdf.py:896(embedTTF)
    26815    0.014    0.000    0.014    0.000 fromnumeric.py:2546(_amax_dispatcher)
        2    0.000    0.000    0.014    0.007 backend_pdf.py:913(embedTTFType3)
     1415    0.005    0.000    0.014    0.000 ops.py:6601(__enter__)
       24    0.000    0.000    0.014    0.001 array_ops.py:631(shape_internal)
    18921    0.014    0.000    0.014    0.000 {built-in method builtins.abs}
       12    0.000    0.000    0.014    0.001 tf_logging.py:166(info)
       15    0.000    0.000    0.014    0.001 math_ops.py:1327(div_no_nan)
      552    0.003    0.000    0.013    0.000 resource_variable_ops.py:64(get_resource_handle_data)
       13    0.000    0.000    0.013    0.001 gen_resource_variable_ops.py:23(assign_add_variable_op)
       12    0.000    0.000    0.013    0.001 __init__.py:1421(_log)
        3    0.000    0.000    0.013    0.004 losses_utils.py:59(reduce_weighted_loss)
      712    0.007    0.000    0.013    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
       12    0.000    0.000    0.013    0.001 saving_utils.py:100(trace_model_call)
    70092    0.013    0.000    0.013    0.000 _flagvalues.py:148(_flags)
       12    0.000    0.000    0.013    0.001 math_grad.py:1672(_MatMulGrad)
       24    0.001    0.000    0.013    0.001 functional_saver.py:137(__init__)
     1218    0.002    0.000    0.013    0.000 ops.py:4275(_colocate_with_for_gradient)
        4    0.000    0.000    0.013    0.003 gen_random_ops.py:695(random_uniform)
       24    0.000    0.000    0.013    0.001 saving_utils.py:57(model_input_signature)
      552    0.004    0.000    0.013    0.000 saveable_object_util.py:91(__init__)
     1380    0.004    0.000    0.013    0.000 utils.py:116(list_all_layers)
       24    0.000    0.000    0.013    0.001 functional_saver.py:115(sharded_filename)
      624    0.001    0.000    0.013    0.000 saveable_object_util.py:54(set_cpu0)
     3534    0.005    0.000    0.013    0.000 ops.py:4592(_pop_control_dependencies_controller)
       24    0.000    0.000    0.013    0.001 gen_io_ops.py:1756(sharded_filename)
     1560    0.007    0.000    0.012    0.000 function.py:2748(all_values)
        4    0.000    0.000    0.012    0.003 _base.py:2727(grid)
     12/8    0.000    0.000    0.012    0.002 axis.py:687(__get__)
     1725    0.003    0.000    0.012    0.000 device.py:133(shortcut_string_merge)
      360    0.001    0.000    0.012    0.000 encoder.py:182(encode)
        8    0.000    0.000    0.012    0.002 axis.py:1456(grid)
       24    0.000    0.000    0.012    0.001 rmsprop.py:288(get_config)
     1924    0.012    0.000    0.012    0.000 callbacks.py:981(_reset_progbar)
       96    0.000    0.000    0.012    0.000 deprecation.py:311(new_func)
       12    0.000    0.000    0.012    0.001 __init__.py:1446(handle)
    55/16    0.000    0.000    0.012    0.001 variables.py:66(getter)
       24    0.000    0.000    0.012    0.000 base_layer.py:2993(_get_save_spec)
    42/16    0.000    0.000    0.012    0.001 distribute_lib.py:2855(creator)
       12    0.000    0.000    0.012    0.001 __init__.py:1500(callHandlers)
       12    0.000    0.000    0.012    0.001 __init__.py:852(handle)
     2905    0.006    0.000    0.012    0.000 ops.py:3672(_as_graph_element_locked)
       96    0.000    0.000    0.012    0.000 optimizer_v2.py:904(_serialize_hyperparameter)
      600    0.001    0.000    0.012    0.000 base_serialization.py:56(list_extra_dependencies_for_serialization)
       12    0.000    0.000    0.012    0.001 __init__.py:982(emit)
       30    0.000    0.000    0.011    0.000 tf_utils.py:484(get_tensor_spec)
       20    0.000    0.000    0.011    0.001 array_ops.py:604(shape)
     1432    0.003    0.000    0.011    0.000 ops.py:762(consumers)
       24    0.000    0.000    0.011    0.000 base_layer.py:2998(<lambda>)
       84    0.001    0.000    0.011    0.000 base_layer.py:1356(updates)
      129    0.003    0.000    0.011    0.000 lines.py:667(recache)
      516    0.001    0.000    0.011    0.000 layer_serialization.py:73(objects_to_serialize)
      360    0.009    0.000    0.011    0.000 encoder.py:204(iterencode)
      276    0.001    0.000    0.011    0.000 resource_variable_ops.py:110(_combine_handle_data)
       96    0.000    0.000    0.011    0.000 backend.py:3469(get_value)
        9    0.000    0.000    0.011    0.001 nn_grad.py:473(_SoftplusGrad)
        1    0.000    0.000    0.011    0.011 Experiment.py:33(__init__)
        1    0.000    0.000    0.011    0.011 training.py:462(compile)
      521    0.002    0.000    0.011    0.000 artist.py:974(update)
     3024    0.005    0.000    0.011    0.000 data_structures.py:497(_checkpoint_dependencies)
      298    0.000    0.000    0.010    0.000 markers.py:205(__init__)
        9    0.000    0.000    0.010    0.001 optimizer_v2.py:673(_get_hyper)
        3    0.000    0.000    0.010    0.003 optimizer_v2.py:689(_create_all_weights)
   122/26    0.001    0.000    0.010    0.000 copy.py:268(_reconstruct)
     2174    0.010    0.000    0.010    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
     4608    0.004    0.000    0.010    0.000 base.py:549(_setattr_tracking)
       12    0.000    0.000    0.010    0.001 utils_impl.py:210(get_or_create_variables_dir)
    20800    0.007    0.000    0.010    0.000 Hanabi.py:144(draw)
    10992    0.003    0.000    0.010    0.000 graph_view.py:63(<genexpr>)
       24    0.000    0.000    0.010    0.000 array_ops.py:1393(_autopacking_helper)
      986    0.001    0.000    0.010    0.000 ops.py:521(_shape_tuple)
      372    0.002    0.000    0.010    0.000 base_layer.py:3208(_in_functional_construction_mode)
     1924    0.007    0.000    0.010    0.000 {method 'isatty' of '_io._IOBase' objects}
     1898    0.010    0.000    0.010    0.000 custom_gradient.py:75(<listcomp>)
       15    0.000    0.000    0.010    0.001 variables.py:223(_variable_v2_call)
       92    0.001    0.000    0.010    0.000 tensor_shape.py:926(merge_with)
       37    0.000    0.000    0.009    0.000 axis.py:603(_get_gridline)
   288/96    0.000    0.000    0.009    0.000 copy.py:273(<genexpr>)
    13140    0.009    0.000    0.009    0.000 {method 'add' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
    55254    0.009    0.000    0.009    0.000 shape_base.py:79(_atleast_2d_dispatcher)
      552    0.004    0.000    0.009    0.000 saveable_object_util.py:224(op_list_to_dict)
       24    0.000    0.000    0.009    0.000 file_io.py:235(file_exists)
    63888    0.009    0.000    0.009    0.000 {method 'bit_length' of 'int' objects}
       14    0.000    0.000    0.009    0.001 file_io.py:453(recursive_create_dir)
       14    0.000    0.000    0.009    0.001 file_io.py:468(recursive_create_dir_v2)
       24    0.000    0.000    0.009    0.000 file_io.py:252(file_exists_v2)
    18607    0.009    0.000    0.009    0.000 {method '__enter__' of '_thread.lock' objects}
      298    0.001    0.000    0.009    0.000 markers.py:272(set_marker)
       14    0.009    0.001    0.009    0.001 {built-in method tensorflow.python._pywrap_file_io.RecursivelyCreateDir}
  864/144    0.001    0.000    0.009    0.000 json_utils.py:52(<listcomp>)
       24    0.000    0.000    0.009    0.000 gen_array_ops.py:6416(pack)
       27    0.000    0.000    0.009    0.000 gen_control_flow_ops.py:470(no_op)
      120    0.005    0.000    0.009    0.000 save_impl.py:509(layer_call_wrapper)
       24    0.009    0.000    0.009    0.000 {built-in method tensorflow.python._pywrap_file_io.FileExists}
       34    0.000    0.000    0.009    0.000 axis.py:485(_get_gridline)
     2895    0.003    0.000    0.009    0.000 tape.py:177(record_operation)
        3    0.000    0.000    0.009    0.003 training.py:760(<dictcomp>)
    18595    0.009    0.000    0.009    0.000 fromnumeric.py:3227(_mean_dispatcher)
        3    0.000    0.000    0.009    0.003 metrics_utils.py:117(decorated)
       15    0.000    0.000    0.009    0.001 gen_math_ops.py:3113(div_no_nan)
     3432    0.002    0.000    0.009    0.000 optimizer_v2.py:773(get_slot)
      420    0.001    0.000    0.009    0.000 data_structures.py:793(_checkpoint_dependencies)
        4    0.000    0.000    0.009    0.002 axis.py:967(set_clip_path)
     1218    0.004    0.000    0.008    0.000 ops.py:4288(colocate_with)
       37    0.000    0.000    0.008    0.000 axis.py:574(_get_tick1line)
10060/8472    0.005    0.000    0.008    0.000 artist.py:217(stale)
       24    0.000    0.000    0.008    0.000 string_ops.py:540(string_join)
     1926    0.007    0.000    0.008    0.000 copy.py:66(copy)
       24    0.000    0.000    0.008    0.000 gen_string_ops.py:819(string_join)
      986    0.003    0.000    0.008    0.000 ops.py:515(_shape_as_list)
       24    0.000    0.000    0.008    0.000 string_ops.py:48(regex_full_match)
       34    0.000    0.000    0.008    0.000 axis.py:459(_get_tick1line)
       12    0.000    0.000    0.008    0.001 __init__.py:971(flush)
       24    0.000    0.000    0.008    0.000 gen_string_ops.py:586(static_regex_full_match)
     8520    0.005    0.000    0.008    0.000 graph_view.py:51(_escape_local_name)
       14    0.000    0.000    0.008    0.001 gen_array_ops.py:8994(shape)
       13    0.000    0.000    0.008    0.001 def_function.py:681(variable_capturing_scope)
      156    0.001    0.000    0.008    0.000 text.py:121(__init__)
        1    0.000    0.000    0.008    0.008 compile_utils.py:110(__init__)
      686    0.004    0.000    0.008    0.000 ops.py:121(__init__)
       13    0.000    0.000    0.008    0.001 def_function.py:136(__init__)
       24    0.000    0.000    0.008    0.000 array_ops.py:4314(where)
       24    0.000    0.000    0.008    0.000 gen_math_ops.py:8744(select)
       48    0.000    0.000    0.008    0.000 training.py:2322(_undeduplicated_weights)
      147    0.000    0.000    0.007    0.000 base_layer.py:2247(trainable_variables)
      276    0.001    0.000    0.007    0.000 resource_variable_ops.py:74(get_eager_safe_handle_data)
     4107    0.002    0.000    0.007    0.000 resource_variable_ops.py:2127(is_resource_variable)
       37    0.000    0.000    0.007    0.000 axis.py:589(_get_tick2line)
      425    0.002    0.000    0.007    0.000 training.py:2361(layers)
     7755    0.007    0.000    0.007    0.000 base_layer.py:1246(trainable)
        2    0.000    0.000    0.007    0.004 backend_pdf.py:954(<listcomp>)
     3528    0.001    0.000    0.007    0.000 nested_structure_coder.py:176(can_encode)
      145    0.007    0.000    0.007    0.000 {method 'set_text' of 'matplotlib.ft2font.FT2Font' objects}
       12    0.000    0.000    0.007    0.001 save.py:399(_map_function_arguments_to_created_inputs)
      512    0.001    0.000    0.007    0.000 backend_pdf.py:943(get_char_width)
      186    0.001    0.000    0.007    0.000 transforms.py:1388(transform)
     3534    0.007    0.000    0.007    0.000 ops.py:4522(__init__)
    16753    0.007    0.000    0.007    0.000 {method 'popleft' of 'collections.deque' objects}
      180    0.005    0.000    0.007    0.000 tensor_shape.py:282(merge_with)
        3    0.000    0.000    0.007    0.002 array_ops.py:872(_slice_helper)
       12    0.000    0.000    0.007    0.001 nn_grad.py:327(_BiasAddGrad)
    18607    0.007    0.000    0.007    0.000 {method '__exit__' of '_thread.lock' objects}
        2    0.000    0.000    0.007    0.003 math_grad.py:189(EvaluateAsTuple)
     1248    0.003    0.000    0.007    0.000 device_spec.py:111(__init__)
       36    0.000    0.000    0.007    0.000 training.py:2313(weights)
        2    0.007    0.003    0.007    0.003 {built-in method tensorflow.python._pywrap_tf_session.TF_TryEvaluateConstant_wrapper}
       34    0.000    0.000    0.007    0.000 axis.py:470(_get_tick2line)
        3    0.000    0.000    0.007    0.002 rmsprop.py:153(_create_slots)
       12    0.000    0.000    0.007    0.001 gen_nn_ops.py:725(bias_add_grad)
       24    0.000    0.000    0.007    0.000 optimizer_v2.py:735(add_slot)
     3141    0.005    0.000    0.007    0.000 traceable_stack.py:75(copy_metadata)
       43    0.000    0.000    0.007    0.000 backend_pdf.py:1768(draw_path)
        1    0.000    0.000    0.007    0.007 input_layer.py:210(Input)
      840    0.003    0.000    0.007    0.000 function.py:361(_enclosing_xla_context)
      306    0.002    0.000    0.007    0.000 resource_variable_ops.py:84(_set_handle_shapes_and_types)
       24    0.000    0.000    0.007    0.000 patches.py:585(draw)
        3    0.000    0.000    0.007    0.002 metrics.py:188(result_fn)
       27    0.000    0.000    0.007    0.000 math_ops.py:1826(_ReductionDims)
1824/1104    0.001    0.000    0.007    0.000 utils.py:127(<genexpr>)
 1596/732    0.003    0.000    0.006    0.000 backend_pdf.py:134(pdfRepr)
       50    0.000    0.000    0.006    0.000 callbacks.py:503(on_train_end)
     3464    0.003    0.000    0.006    0.000 optimizer_v2.py:1279(_var_key)
        1    0.000    0.000    0.006    0.006 input_layer.py:91(__init__)
     3534    0.003    0.000    0.006    0.000 ops.py:4589(_push_control_dependencies_controller)
       29    0.000    0.000    0.006    0.000 backend_pdf.py:2090(draw_text)
       75    0.000    0.000    0.006    0.000 lines.py:1021(get_path)
      596    0.001    0.000    0.006    0.000 markers.py:227(_recache)
       32    0.000    0.000    0.006    0.000 ticker.py:672(set_locs)
     1641    0.005    0.000    0.006    0.000 _weakrefset.py:26(__exit__)
6976/6695    0.005    0.000    0.006    0.000 optimizer_v2.py:706(__getattribute__)
      168    0.000    0.000    0.006    0.000 def_function.py:434(__del__)
        3    0.000    0.000    0.006    0.002 math_grad.py:35(_safe_shape_div)
     2081    0.002    0.000    0.006    0.000 object_identity.py:220(_wrap_key)
      512    0.006    0.000    0.006    0.000 {method 'load_char' of 'matplotlib.ft2font.FT2Font' objects}
     2895    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
      524    0.001    0.000    0.006    0.000 <__array_function__ internals>:2(any)
      120    0.001    0.000    0.006    0.000 save_impl.py:600(_create_call_fn_decorator)
       24    0.001    0.000    0.006    0.000 save.py:224(_add_saveable_objects)
      444    0.001    0.000    0.006    0.000 nested_structure_coder.py:379(do_encode)
        3    0.000    0.000    0.006    0.002 metrics.py:394(result)
      624    0.002    0.000    0.006    0.000 device_spec.py:236(replace)
       24    0.000    0.000    0.006    0.000 def_function.py:1171(__get__)
      243    0.001    0.000    0.006    0.000 backend_pdf.py:641(output)
     3528    0.002    0.000    0.006    0.000 nested_structure_coder.py:153(_is_tuple)
       28    0.000    0.000    0.006    0.000 axis.py:334(_apply_params)
        3    0.000    0.000    0.006    0.002 losses.py:239(call)
       18    0.000    0.000    0.006    0.000 array_ops.py:200(fill)
      576    0.000    0.000    0.006    0.000 __init__.py:133(serialize)
        7    0.000    0.000    0.006    0.001 version_utils.py:63(__new__)
       40    0.000    0.000    0.006    0.000 training.py:1890(trainable_weights)
      510    0.001    0.000    0.006    0.000 function.py:3103(<listcomp>)
       60    0.000    0.000    0.006    0.000 save_impl.py:367(_generate_input_signature)
       58    0.000    0.000    0.006    0.000 backend_agg.py:196(get_text_width_height_descent)
        3    0.000    0.000    0.006    0.002 losses.py:1162(mean_squared_error)
     1365    0.002    0.000    0.006    0.000 ops.py:2180(_set_device_from_string)
       18    0.000    0.000    0.006    0.000 gen_array_ops.py:3357(fill)
     21/8    0.006    0.000    0.006    0.001 version_utils.py:98(swap_class)
      210    0.002    0.000    0.006    0.000 font_manager.py:623(__init__)
     2616    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tf_session.EqualAttrValueWrapper}
      384    0.003    0.000    0.006    0.000 function.py:2071(_select_forward_and_backward_functions)
     1415    0.002    0.000    0.006    0.000 ops.py:6635(__exit__)
       27    0.000    0.000    0.006    0.000 axis.py:1398(_copy_tick_props)
     3238    0.004    0.000    0.006    0.000 ops.py:4579(add_op)
       24    0.000    0.000    0.006    0.000 function.py:3700(class_method_to_instance_method)
     6120    0.002    0.000    0.006    0.000 nested_structure_coder.py:157(_is_named_tuple)
       27    0.000    0.000    0.006    0.000 backend_pdf.py:1847(draw_markers)
      384    0.002    0.000    0.006    0.000 nested_structure_coder.py:136(do_encode)
        4    0.000    0.000    0.006    0.001 _base.py:2491(_update_title_position)
      288    0.000    0.000    0.006    0.000 tf_utils.py:261(convert_inner_node_data)
     1432    0.002    0.000    0.006    0.000 ops.py:772(<listcomp>)
       29    0.000    0.000    0.006    0.000 backend_agg.py:170(draw_text)
      672    0.001    0.000    0.006    0.000 revived_types.py:140(serialize)
        3    0.000    0.000    0.005    0.002 losses_utils.py:38(_safe_mean)
       27    0.000    0.000    0.005    0.000 backend_bases.py:173(draw_markers)
      140    0.000    0.000    0.005    0.000 artist.py:1095(set)
       12    0.000    0.000    0.005    0.000 utils_impl.py:232(get_or_create_assets_dir)
        2    0.000    0.000    0.005    0.003 functional.py:108(__init__)
     2186    0.005    0.000    0.005    0.000 func_graph.py:669(add_capture)
      372    0.002    0.000    0.005    0.000 base_layer.py:2457(_set_mask_metadata)
        3    0.000    0.000    0.005    0.002 optimizer_v2.py:797(_prepare_local)
      368    0.001    0.000    0.005    0.000 base_layer_utils.py:310(is_in_keras_graph)
  576/288    0.001    0.000    0.005    0.000 tf_utils.py:157(map_structure_with_atomic)
       32    0.000    0.000    0.005    0.000 artist.py:731(set_clip_path)
       72    0.000    0.000    0.005    0.000 backend_pdf.py:1691(check_gc)
      510    0.001    0.000    0.005    0.000 function.py:157(_type_spec_for)
      524    0.001    0.000    0.005    0.000 fromnumeric.py:2236(any)
        9    0.000    0.000    0.005    0.001 math_ops.py:3594(sigmoid)
      624    0.001    0.000    0.005    0.000 device_spec.py:142(from_string)
        8    0.000    0.000    0.005    0.001 gen_math_ops.py:1837(cast)
       32    0.000    0.000    0.005    0.000 axis.py:825(_set_scale)
     1102    0.002    0.000    0.005    0.000 __init__.py:1956(_setattr_cm)
    10475    0.005    0.000    0.005    0.000 __init__.py:815(__getitem__)
        1    0.000    0.000    0.005    0.005 Experiment.py:214(<listcomp>)
        7    0.000    0.000    0.005    0.001 gen_array_ops.py:11337(tile)
       64    0.000    0.000    0.005    0.000 patches.py:260(get_transform)
       50    0.000    0.000    0.005    0.000 <__array_function__ internals>:2(nanmin)
     4718    0.002    0.000    0.005    0.000 ops.py:193(_as_graph_element)
       37    0.000    0.000    0.005    0.000 axis.py:544(_get_text1)
      203    0.001    0.000    0.005    0.000 font_manager.py:1166(findfont)
       16    0.000    0.000    0.005    0.000 transforms.py:695(union)
     2873    0.002    0.000    0.005    0.000 ops.py:2062(device)
       50    0.000    0.000    0.005    0.000 nanfunctions.py:230(nanmin)
        2    0.000    0.000    0.005    0.002 _datasource.py:231(open)
     1092    0.001    0.000    0.005    0.000 _collections_abc.py:851(setdefault)
        9    0.000    0.000    0.005    0.001 gen_math_ops.py:8903(sigmoid)
      255    0.002    0.000    0.005    0.000 base_layer.py:1378(losses)
      408    0.001    0.000    0.005    0.000 policy.py:615(serialize)
       32    0.000    0.000    0.005    0.000 scale.py:105(set_default_locators_and_formatters)
       26    0.000    0.000    0.005    0.000 def_function.py:1423(decorated)
      328    0.002    0.000    0.005    0.000 tf_decorator.py:128(rewrap)
        2    0.000    0.000    0.005    0.002 backend_pdf.py:435(__init__)
        2    0.000    0.000    0.005    0.002 _datasource.py:577(open)
       50    0.001    0.000    0.005    0.000 training_utils.py:1226(__enter__)
      396    0.002    0.000    0.005    0.000 nested_structure_coder.py:202(do_encode)
      258    0.001    0.000    0.005    0.000 transforms.py:1986(scale)
       34    0.000    0.000    0.005    0.000 axis.py:427(_get_text1)
       32    0.000    0.000    0.005    0.000 ticker.py:253(format_ticks)
      186    0.000    0.000    0.004    0.000 transforms.py:2363(transform_affine)
        4    0.000    0.000    0.004    0.001 math_ops.py:1153(r_binary_op_wrapper)
        4    0.000    0.000    0.004    0.001 core.py:1131(__init__)
        4    0.000    0.000    0.004    0.001 math_ops.py:2426(reduce_prod)
       17    0.000    0.000    0.004    0.000 resource_variable_ops.py:198(eager_safe_variable_handle)
       58    0.000    0.000    0.004    0.000 _backend_pdf_ps.py:41(get_text_width_height_descent)
      464    0.003    0.000    0.004    0.000 artist.py:74(__init__)
      552    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetHandleShapeAndType}
        4    0.000    0.000    0.004    0.001 iterator_ops.py:735(__next__)
       60    0.001    0.000    0.004    0.000 data_structures.py:735(__init__)
        4    0.000    0.000    0.004    0.001 iterator_ops.py:770(next)
        4    0.000    0.000    0.004    0.001 iterator_ops.py:738(_next_internal)
     3024    0.003    0.000    0.004    0.000 data_structures.py:479(_check_external_modification)
        1    0.000    0.000    0.004    0.004 metrics.py:162(__new__)
       40    0.000    0.000    0.004    0.000 patches.py:776(get_patch_transform)
      144    0.000    0.000    0.004    0.000 base_layer.py:2252(non_trainable_variables)
     2081    0.004    0.000    0.004    0.000 object_identity.py:75(__init__)
       12    0.000    0.000    0.004    0.000 signature_serialization.py:265(validate_saveable_view)
        3    0.000    0.000    0.004    0.001 losses_utils.py:53(_num_elements)
       12    0.000    0.000    0.004    0.000 base.py:97(restore)
      516    0.001    0.000    0.004    0.000 serialized_attributes.py:180(objects_to_serialize)
        2    0.000    0.000    0.004    0.002 _base.py:553(_init_axis)
       40    0.000    0.000    0.004    0.000 patches.py:746(_update_patch_transform)
      552    0.004    0.000    0.004    0.000 {built-in method FromString}
       97    0.000    0.000    0.004    0.000 backprop.py:174(_record_gradient)
        9    0.000    0.000    0.004    0.000 array_ops.py:1328(stack)
       24    0.000    0.000    0.004    0.000 axis.py:841(cla)
     2349    0.002    0.000    0.004    0.000 ops.py:4258(get_name_scope)
       40    0.000    0.000    0.004    0.000 layer_utils.py:254(gather_trainable_weights)
       37    0.000    0.000    0.004    0.000 axis.py:559(_get_text2)
      408    0.002    0.000    0.004    0.000 policy.py:593(_policy_equivalent_to_dtype)
      371    0.001    0.000    0.004    0.000 base_layer_utils.py:490(in_keras_graph)
  250/202    0.001    0.000    0.004    0.000 transforms.py:2387(get_affine)
        2    0.000    0.000    0.004    0.002 __init__.py:359(to_filehandle)
  156/148    0.000    0.000    0.004    0.000 _base.py:583(_unstale_viewLim)
        1    0.000    0.000    0.004    0.004 training.py:2332(summary)
        1    0.000    0.000    0.004    0.004 layer_utils.py:112(print_summary)
        1    0.004    0.004    0.004    0.004 {built-in method posix.mkdir}
      372    0.001    0.000    0.004    0.000 base_layer.py:2395(_name_scope)
      216    0.000    0.000    0.004    0.000 text.py:170(update)
      100    0.000    0.000    0.004    0.000 structure.py:452(<listcomp>)
       12    0.000    0.000    0.004    0.000 save.py:367(_map_captures_to_created_tensors)
       12    0.000    0.000    0.004    0.000 axis.py:229(set_clip_path)
     1020    0.001    0.000    0.004    0.000 function.py:3087(<genexpr>)
      217    0.000    0.000    0.004    0.000 lines.py:1243(set_markerfacecolor)
    23364    0.004    0.000    0.004    0.000 __init__.py:170(value)
      2/1    0.000    0.000    0.004    0.004 training.py:237(__new__)
        6    0.000    0.000    0.004    0.001 array_ops.py:713(size)
        6    0.000    0.000    0.004    0.001 array_ops.py:745(size_internal)
        2    0.000    0.000    0.004    0.002 training.py:246(__init__)
     1898    0.003    0.000    0.004    0.000 custom_gradient.py:77(<listcomp>)
       34    0.000    0.000    0.004    0.000 axis.py:444(_get_text2)
      356    0.002    0.000    0.004    0.000 base_layer.py:2312(_maybe_cast_inputs)
     6124    0.004    0.000    0.004    0.000 ops.py:5087(_control_dependencies_stack)
     1898    0.004    0.000    0.004    0.000 custom_gradient.py:78(<listcomp>)
     1200    0.001    0.000    0.004    0.000 ops.py:3297(_is_function)
    25/16    0.000    0.000    0.004    0.000 version_utils.py:110(<genexpr>)
        7    0.000    0.000    0.004    0.001 gen_math_ops.py:6318(neg)
        3    0.000    0.000    0.004    0.001 backend.py:2245(mean)
       72    0.000    0.000    0.004    0.000 base_layer.py:2108(input_shape)
        7    0.000    0.000    0.004    0.001 variables.py:237(<lambda>)
        7    0.000    0.000    0.004    0.001 variable_scope.py:2616(default_variable_creator_v2)
        3    0.000    0.000    0.004    0.001 gen_math_ops.py:5752(maximum)
      312    0.001    0.000    0.004    0.000 save_impl.py:453(get_input_arg_value)
       12    0.000    0.000    0.004    0.000 function_serialization.py:110(wrap_cached_variables)
        2    0.000    0.000    0.004    0.002 math_grad.py:67(SmartBroadcastGradientArgs)
        3    0.000    0.000    0.004    0.001 math_ops.py:2255(reduce_mean)
       48    0.000    0.000    0.004    0.000 save_impl.py:237(replace_layer_functions)
     1924    0.003    0.000    0.004    0.000 callbacks.py:1683(get_monitor_value)
        3    0.000    0.000    0.004    0.001 gen_math_ops.py:5832(mean)
        1    0.000    0.000    0.004    0.004 backend.py:1141(placeholder)
     2070    0.002    0.000    0.004    0.000 base_layer.py:2942(_eager_losses)
       60    0.000    0.000    0.004    0.000 save_impl.py:581(_extract_outputs_from_fn)
      288    0.000    0.000    0.004    0.000 activations.py:426(serialize)
      692    0.001    0.000    0.004    0.000 base_layer.py:1232(dynamic)
        3    0.000    0.000    0.004    0.001 gen_data_flow_ops.py:704(dynamic_stitch)
      507    0.001    0.000    0.004    0.000 pickle.py:705(save_str)
        3    0.000    0.000    0.004    0.001 optimizer_v2.py:848(_decayed_lr)
       84    0.001    0.000    0.003    0.000 tensor_util.py:548(<listcomp>)
      624    0.001    0.000    0.003    0.000 ops.py:3221(<listcomp>)
       81    0.000    0.000    0.003    0.000 lines.py:1330(update_from)
      491    0.001    0.000    0.003    0.000 transforms.py:126(invalidate)
     1040    0.002    0.000    0.003    0.000 Hanabi.py:298(<dictcomp>)
     2905    0.003    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
     1198    0.001    0.000    0.003    0.000 auto_control_deps_utils.py:105(<genexpr>)
        1    0.000    0.000    0.003    0.003 metrics.py:481(__init__)
        1    0.000    0.000    0.003    0.003 metrics.py:326(__init__)
      420    0.001    0.000    0.003    0.000 data_structures.py:824(_check_self_external_modification)
       16    0.000    0.000    0.003    0.000 spines.py:374(draw)
       15    0.000    0.000    0.003    0.000 array_ops.py:2746(wrapped)
       97    0.002    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_RecordGradient}
       15    0.000    0.000    0.003    0.000 array_ops.py:2754(zeros)
     1600    0.001    0.000    0.003    0.000 ops.py:2052(name)
     1365    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequestedDevice}
        4    0.000    0.000    0.003    0.001 _axes.py:1414(plot)
        2    0.000    0.000    0.003    0.002 backend_pdf.py:624(close)
        2    0.003    0.002    0.003    0.002 {method 'close' of '_io.BufferedWriter' objects}
       87    0.000    0.000    0.003    0.000 backend_agg.py:243(_get_agg_font)
        8    0.000    0.000    0.003    0.000 base_layer.py:297(__init__)
       32    0.001    0.000    0.003    0.000 ticker.py:759(_set_format)
       77    0.000    0.000    0.003    0.000 base_layer.py:2162(output_shape)
       13    0.000    0.000    0.003    0.000 initializers_v2.py:127(__call__)
      779    0.002    0.000    0.003    0.000 font_manager.py:663(__hash__)
     7833    0.003    0.000    0.003    0.000 {built-in method from_iterable}
      848    0.001    0.000    0.003    0.000 execute.py:177(make_str)
      740    0.001    0.000    0.003    0.000 <__array_function__ internals>:2(dot)
      120    0.000    0.000    0.003    0.000 node.py:227(input_shapes)
        5    0.000    0.000    0.003    0.001 optimizer_v2.py:1003(add_weight)
      448    0.002    0.000    0.003    0.000 base_layer.py:2528(_get_call_arg_value)
       13    0.000    0.000    0.003    0.000 init_ops_v2.py:118(__call__)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:1609(writeObject)
       87    0.000    0.000    0.003    0.000 _backend_pdf_ps.py:79(_get_font_ttf)
      756    0.001    0.000    0.003    0.000 base_layer_utils.py:508(__enter__)
        3    0.000    0.000    0.003    0.001 math_ops.py:570(scalar_mul)
       50    0.000    0.000    0.003    0.000 nanfunctions.py:70(_replace_nan)
       84    0.000    0.000    0.003    0.000 tensor_spec.py:130(is_compatible_with)
        4    0.000    0.000    0.003    0.001 gen_dataset_ops.py:2588(iterator_get_next)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:238(write)
      472    0.001    0.000    0.003    0.000 ops.py:6013(get_name_scope)
      243    0.000    0.000    0.003    0.000 backend_pdf.py:642(<listcomp>)
        5    0.000    0.000    0.003    0.001 gen_array_ops.py:722(broadcast_gradient_args)
     2013    0.003    0.000    0.003    0.000 compile_utils.py:291(metrics)
      104    0.001    0.000    0.003    0.000 _dill.py:1327(save_type)
      192    0.002    0.000    0.003    0.000 base_layer.py:1438(add_loss)
     2873    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
       60    0.000    0.000    0.003    0.000 save_impl.py:552(_wrap_call_and_conditional_losses)
       62    0.000    0.000    0.003    0.000 functional.py:237(input_shape)
       84    0.001    0.000    0.003    0.000 tensor_spec.py:78(is_compatible_with)
      192    0.001    0.000    0.003    0.000 __init__.py:183(dumps)
       53    0.001    0.000    0.003    0.000 base_layer.py:2673(_get_trainable_state)
     2400    0.002    0.000    0.003    0.000 utils.py:223(set_training_arg)
       96    0.000    0.000    0.003    0.000 layer_serialization.py:63(<lambda>)
     1272    0.002    0.000    0.003    0.000 device_spec.py:376(__eq__)
     1641    0.002    0.000    0.003    0.000 _weakrefset.py:20(__enter__)
     2592    0.001    0.000    0.003    0.000 nested_structure_coder.py:226(can_encode)
  933/491    0.003    0.000    0.003    0.000 transforms.py:136(_invalidate_internal)
      144    0.002    0.000    0.003    0.000 __init__.py:1663(normalize_kwargs)
      130    0.000    0.000    0.003    0.000 node.py:234(output_shapes)
       32    0.000    0.000    0.003    0.000 ticker.py:2817(__init__)
       24    0.003    0.000    0.003    0.000 dtypes.py:215(__reduce__)
      432    0.001    0.000    0.003    0.000 data_structures.py:649(_list_functions_for_serialization)
      697    0.001    0.000    0.003    0.000 transforms.py:1831(__init__)
      684    0.002    0.000    0.003    0.000 ops.py:5175(__init__)
        2    0.000    0.000    0.003    0.001 training.py:312(_init_batch_counters)
      468    0.001    0.000    0.003    0.000 colors.py:157(to_rgba)
      492    0.001    0.000    0.003    0.000 data_structures.py:152(__init__)
      756    0.002    0.000    0.003    0.000 base_layer_utils.py:441(enter)
      382    0.002    0.000    0.003    0.000 __init__.py:2096(_check_isinstance)
       52    0.001    0.000    0.003    0.000 Experiment.py:180(<listcomp>)
     5112    0.002    0.000    0.003    0.000 def_function.py:1036(<genexpr>)
        4    0.000    0.000    0.003    0.001 gen_math_ops.py:6696(prod)
      372    0.001    0.000    0.003    0.000 base_layer.py:2495(_get_input_masks)
      170    0.001    0.000    0.003    0.000 text.py:838(get_prop_tup)
      900    0.001    0.000    0.003    0.000 data_structures.py:818(_dirty)
        2    0.000    0.000    0.003    0.001 metrics.py:279(add_weight)
       32    0.000    0.000    0.003    0.000 ticker.py:2020(__init__)
    13094    0.003    0.000    0.003    0.000 tf_decorator.py:262(decorated_target)
      696    0.001    0.000    0.003    0.000 nested_structure_coder.py:70(_get_encoders)
     3139    0.002    0.000    0.003    0.000 __init__.py:2131(_check_in_list)
      294    0.001    0.000    0.003    0.000 transforms.py:727(__init__)
        4    0.000    0.000    0.003    0.001 axis.py:744(__init__)
       24    0.002    0.000    0.003    0.000 meta_graph.py:138(ops_used_by_graph_def)
       98    0.001    0.000    0.003    0.000 transforms.py:1940(rotate_deg)
      293    0.000    0.000    0.003    0.000 transforms.py:1247(__add__)
       12    0.000    0.000    0.003    0.000 ops.py:1319(convert_to_tensor_v2)
       32    0.000    0.000    0.003    0.000 ticker.py:2095(set_params)
        3    0.000    0.000    0.003    0.001 array_ops.py:1084(strided_slice)
      942    0.001    0.000    0.003    0.000 artist.py:49(_stale_axes_callback)
     5064    0.001    0.000    0.003    0.000 module.py:302(_is_module)
     1462    0.001    0.000    0.003    0.000 transforms.py:1701(__init__)
      132    0.000    0.000    0.003    0.000 axis.py:1891(getter)
        3    0.000    0.000    0.003    0.001 gen_array_ops.py:10170(strided_slice)
   610/86    0.000    0.000    0.003    0.000 typing.py:1145(__subclasscheck__)
        4    0.000    0.000    0.003    0.001 _base.py:2884(tick_params)
       72    0.001    0.000    0.003    0.000 serialized_attributes.py:188(set_and_validate_functions)
     1432    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
       24    0.000    0.000    0.002    0.000 function.py:2672(_convert_inputs_to_signature)
      924    0.002    0.000    0.002    0.000 <string>:35(_asdict)
       12    0.000    0.000    0.002    0.000 signature_serialization.py:39(_get_signature)
       50    0.000    0.000    0.002    0.000 callbacks.py:486(on_train_begin)
      133    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(column_stack)
      274    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(amin)
       40    0.000    0.000    0.002    0.000 transforms.py:1960(rotate_deg_around)
      324    0.001    0.000    0.002    0.000 backend.py:1283(int_shape)
      848    0.001    0.000    0.002    0.000 op_def_library.py:159(_MakeStr)
      539    0.001    0.000    0.002    0.000 __init__.py:1309(_to_unmasked_float_array)
      588    0.001    0.000    0.002    0.000 serialized_attributes.py:168(checkpointable_objects)
      217    0.000    0.000    0.002    0.000 lines.py:1257(set_markerfacecoloralt)
      293    0.000    0.000    0.002    0.000 transforms.py:2462(composite_transform_factory)
      217    0.001    0.000    0.002    0.000 lines.py:1147(set_linestyle)
      384    0.002    0.000    0.002    0.000 functional_ops.py:1178(<listcomp>)
     1924    0.002    0.000    0.002    0.000 iostream.py:316(closed)
     3853    0.002    0.000    0.002    0.000 traceable_stack.py:30(__init__)
        5    0.000    0.000    0.002    0.000 layer_utils.py:197(print_layer_summary)
      120    0.000    0.000    0.002    0.000 function.py:2899(<genexpr>)
       12    0.001    0.000    0.002    0.000 meta_graph.py:174(stripped_op_list_for_graph)
        1    0.000    0.000    0.002    0.002 Experiment.py:220(<listcomp>)
       60    0.000    0.000    0.002    0.000 base_layer.py:2129(<listcomp>)
      864    0.000    0.000    0.002    0.000 regularizers.py:342(serialize)
       26    0.000    0.000    0.002    0.000 def_function.py:1199(function)
       52    0.000    0.000    0.002    0.000 statistics.py:291(mean)
      432    0.001    0.000    0.002    0.000 data_structures.py:650(<dictcomp>)
      168    0.000    0.000    0.002    0.000 utils.py:131(maybe_add_training_arg)
       60    0.000    0.000    0.002    0.000 data_structures.py:832(_update_snapshot)
        3    0.000    0.000    0.002    0.001 optimizer_v2.py:808(_create_hypers)
        4    0.000    0.000    0.002    0.001 gen_math_ops.py:314(add)
     5568    0.002    0.000    0.002    0.000 function.py:223(<genexpr>)
      444    0.000    0.000    0.002    0.000 nested_structure_coder.py:423(can_encode)
      840    0.001    0.000    0.002    0.000 ops.py:416(device)
        3    0.000    0.000    0.002    0.001 util.py:123(scale_losses_by_sample_weight)
     1344    0.001    0.000    0.002    0.000 saveable_object_util.py:365(trace_save_restore_functions)
     1584    0.001    0.000    0.002    0.000 base_layer.py:1235(<genexpr>)
       37    0.000    0.000    0.002    0.000 training.py:1899(non_trainable_weights)
    14279    0.002    0.000    0.002    0.000 inspect.py:2506(default)
      348    0.001    0.000    0.002    0.000 func_graph.py:468(variables)
       54    0.000    0.000    0.002    0.000 text.py:259(update_from)
        2    0.000    0.000    0.002    0.001 _base.py:2332(autoscale_view)
       98    0.001    0.000    0.002    0.000 transforms.py:1924(rotate)
      152    0.000    0.000    0.002    0.000 _base.py:597(viewLim)
     1415    0.002    0.000    0.002    0.000 ops.py:6583(__init__)
       40    0.000    0.000    0.002    0.000 backend_pdf.py:649(endStream)
     3456    0.001    0.000    0.002    0.000 object_identity.py:143(__iter__)
       16    0.000    0.000    0.002    0.000 backend_agg.py:125(draw_path)
     2460    0.001    0.000    0.002    0.000 base.py:543(_setattr_tracking)
       48    0.000    0.000    0.002    0.000 utils.py:40(use_wrapped_call)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:3851(floor_mod)
       72    0.001    0.000    0.002    0.000 backend_pdf.py:2328(delta)
     3912    0.001    0.000    0.002    0.000 nested_structure_coder.py:133(can_encode)
      264    0.000    0.000    0.002    0.000 base_layer.py:1237(stateful)
       36    0.000    0.000    0.002    0.000 backend_pdf.py:398(end)
      696    0.002    0.000    0.002    0.000 nested_structure_coder.py:72(<listcomp>)
     1040    0.002    0.000    0.002    0.000 Hanabi.py:359(score)
       43    0.000    0.000    0.002    0.000 backend_pdf.py:1585(writePath)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:10355(squared_difference)
     6804    0.001    0.000    0.002    0.000 base.py:649(_checkpoint_dependencies)
       16    0.002    0.000    0.002    0.000 {method 'draw_path' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
     2472    0.001    0.000    0.002    0.000 copy.py:252(_keep_alive)
      129    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(broadcast_arrays)
  292/284    0.001    0.000    0.002    0.000 spines.py:424(get_spine_transform)
      274    0.000    0.000    0.002    0.000 fromnumeric.py:2676(amin)
      364    0.000    0.000    0.002    0.000 transforms.py:1714(transform)
       37    0.000    0.000    0.002    0.000 layer_utils.py:277(gather_non_trainable_weights)
     1336    0.001    0.000    0.002    0.000 def_function.py:911(input_signature)
      686    0.001    0.000    0.002    0.000 device.py:67(merge_device)
      104    0.001    0.000    0.002    0.000 pickle.py:905(save_global)
        3    0.000    0.000    0.002    0.001 math_ops.py:1380(floordiv)
      492    0.001    0.000    0.002    0.000 layer_utils.py:179(__init__)
      581    0.002    0.000    0.002    0.000 transforms.py:163(set_children)
        4    0.000    0.000    0.002    0.000 _base.py:1842(add_line)
      108    0.001    0.000    0.002    0.000 functional.py:335(<listcomp>)
       32    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(clip)
        4    0.000    0.000    0.002    0.000 _base.py:2398(handle_single_axis)
      521    0.000    0.000    0.002    0.000 artist.py:1006(<listcomp>)
      144    0.000    0.000    0.002    0.000 artist.py:858(_set_gc_clip)
    72/64    0.000    0.000    0.002    0.000 backend_pdf.py:183(<listcomp>)
      152    0.001    0.000    0.002    0.000 backend_bases.py:737(__init__)
      356    0.001    0.000    0.002    0.000 base_layer.py:2340(_should_cast_single_input)
      112    0.001    0.000    0.002    0.000 transforms.py:669(translated)
        3    0.000    0.000    0.002    0.001 math_grad.py:1656(_MatMulGradAgainstSecondOnly)
      133    0.001    0.000    0.002    0.000 shape_base.py:612(column_stack)
      107    0.000    0.000    0.002    0.000 transforms.py:1972(translate)
      112    0.000    0.000    0.002    0.000 transforms.py:782(from_extents)
      216    0.001    0.000    0.002    0.000 json_utils.py:37(default)
       65    0.000    0.000    0.002    0.000 base_layer.py:2182(<listcomp>)
     1327    0.001    0.000    0.002    0.000 base_layer_utils.py:399(call_context)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:3773(floor_div)
      312    0.001    0.000    0.002    0.000 save_impl.py:438(training_arg_was_passed)
      560    0.001    0.000    0.002    0.000 variables.py:1132(_shared_name)
      368    0.001    0.000    0.002    0.000 base_layer.py:1200(_autographed_call)
        6    0.000    0.000    0.002    0.000 figure.py:466(_set_dpi)
       48    0.000    0.000    0.002    0.000 save_impl.py:385(to_tensor_spec_or_none)
      516    0.002    0.000    0.002    0.000 revived_types.py:73(to_proto)
       32    0.001    0.000    0.002    0.000 ticker.py:683(_compute_offset)
      672    0.001    0.000    0.002    0.000 auto_control_deps_utils.py:66(<listcomp>)
      708    0.001    0.000    0.002    0.000 nested_structure_coder.py:333(do_encode)
        4    0.002    0.000    0.002    0.000 {method 'close' of '_io.TextIOWrapper' objects}
        3    0.000    0.000    0.002    0.001 math_grad.py:1304(_MulGrad)
     5664    0.002    0.000    0.002    0.000 base.py:984(_list_extra_dependencies_for_serialization)
       32    0.000    0.000    0.002    0.000 fromnumeric.py:2021(clip)
       28    0.000    0.000    0.002    0.000 ops.py:5225(combined)
      230    0.001    0.000    0.002    0.000 func_graph.py:697(clear_captures)
        3    0.000    0.000    0.002    0.001 backprop.py:697(_ones)
        2    0.000    0.000    0.002    0.001 _base.py:930(_gen_axes_spines)
       52    0.001    0.000    0.002    0.000 statistics.py:105(_sum)
       10    0.000    0.000    0.002    0.000 _base.py:945(<genexpr>)
      372    0.001    0.000    0.002    0.000 transforms.py:1793(transform_affine)
      203    0.000    0.000    0.002    0.000 font_manager.py:673(__eq__)
        8    0.000    0.000    0.002    0.000 spines.py:517(linear_spine)
     6124    0.002    0.000    0.002    0.000 ops.py:3156(_set_control_flow_context)
       12    0.000    0.000    0.002    0.000 metric_serialization.py:42(_get_serialized_attributes_internal)
        3    0.000    0.000    0.002    0.001 array_ops.py:3007(ones)
        8    0.000    0.000    0.002    0.000 pyplot.py:600(gcf)
      345    0.001    0.000    0.002    0.000 backend_pdf.py:96(fill)
     2460    0.001    0.000    0.002    0.000 nested_structure_coder.py:280(can_encode)
     1923    0.002    0.000    0.002    0.000 metrics.py:247(<listcomp>)
      652    0.000    0.000    0.002    0.000 backend_pdf.py:635(write)
        2    0.000    0.000    0.002    0.001 pyplot.py:427(figure)
      144    0.000    0.000    0.002    0.000 backend_bases.py:901(set_clip_path)
      468    0.000    0.000    0.002    0.000 colors.py:123(_is_nth_color)
       36    0.000    0.000    0.002    0.000 fromnumeric.py:42(_wrapit)
      290    0.001    0.000    0.002    0.000 text.py:824(get_unitless_position)
       12    0.000    0.000    0.002    0.000 patches.py:42(__init__)
      145    0.000    0.000    0.002    0.000 path.py:96(__init__)
      384    0.001    0.000    0.002    0.000 forwardprop_util.py:34(__new__)
     5102    0.002    0.000    0.002    0.000 device_spec.py:431(to_string)
     2114    0.002    0.000    0.002    0.000 transforms.py:82(__init__)
     2492    0.001    0.000    0.002    0.000 ops.py:4584(op_in_group)
      192    0.001    0.000    0.002    0.000 node.py:188(serialize_first_arg_tensor)
      686    0.001    0.000    0.002    0.000 device.py:172(is_null_merge)
      225    0.000    0.000    0.002    0.000 artist.py:978(_update_property)
       12    0.000    0.000    0.002    0.000 save.py:677(_verify_ops)
      129    0.000    0.000    0.002    0.000 stride_tricks.py:206(broadcast_arrays)
      389    0.001    0.000    0.002    0.000 context.py:2390(_tmp_in_graph_mode)
      288    0.000    0.000    0.002    0.000 ops.py:6287(add_to_collection)
        3    0.000    0.000    0.002    0.001 array_ops.py:2730(_constant_if_small)
       58    0.000    0.000    0.002    0.000 font_manager.py:859(copy)
       16    0.000    0.000    0.001    0.000 conversion.py:109(convert)
    10086    0.001    0.000    0.001    0.000 artist.py:804(get_animated)
      986    0.001    0.000    0.001    0.000 ops.py:517(<listcomp>)
       54    0.000    0.000    0.001    0.000 transforms.py:2709(get_transformed_points_and_affine)
        2    0.000    0.000    0.001    0.001 functional.py:117(_init_graph_network)
      704    0.001    0.000    0.001    0.000 base_layer.py:2515(_call_arg_was_passed)
        8    0.000    0.000    0.001    0.000 spines.py:36(__init__)
      276    0.001    0.000    0.001    0.000 resource_variable_ops.py:97(<listcomp>)
        2    0.000    0.000    0.001    0.001 backend_bases.py:3351(new_figure_manager)
      242    0.001    0.000    0.001    0.000 transforms.py:2290(__init__)
       48    0.000    0.000    0.001    0.000 patches.py:526(_bind_draw_path_function)
      526    0.001    0.000    0.001    0.000 backend_pdf.py:414(write)
      408    0.000    0.000    0.001    0.000 policy.py:585(_is_convertible_to_dtype)
      113    0.000    0.000    0.001    0.000 axis.py:618(update_position)
       52    0.000    0.000    0.001    0.000 markers.py:713(_set_tickleft)
     2208    0.001    0.000    0.001    0.000 base_layer.py:2954(_eager_losses)
        1    0.000    0.000    0.001    0.001 training.py:578(_configure_steps_per_execution)
3576/1272    0.001    0.000    0.001    0.000 tensor_util.py:229(_FlattenToStrings)
        3    0.000    0.000    0.001    0.000 training.py:2754(write_scalar_summaries)
     3848    0.001    0.000    0.001    0.000 callbacks.py:632(on_epoch_begin)
       19    0.000    0.000    0.001    0.000 genericpath.py:16(exists)
      337    0.001    0.000    0.001    0.000 _weakrefset.py:58(__iter__)
       46    0.000    0.000    0.001    0.000 markers.py:733(_set_tickdown)
       62    0.000    0.000    0.001    0.000 transforms.py:2696(_revalidate)
       36    0.000    0.000    0.001    0.000 uuid.py:621(uuid4)
        8    0.000    0.000    0.001    0.000 spines.py:226(register_axis)
       32    0.000    0.000    0.001    0.000 ticker.py:2072(_validate_steps)
       24    0.000    0.000    0.001    0.000 save.py:360(_tensor_dict_to_tensorinfo)
       19    0.001    0.000    0.001    0.000 {built-in method posix.stat}
      368    0.001    0.000    0.001    0.000 __init__.py:882(get_siblings)
       16    0.000    0.000    0.001    0.000 transpiler.py:384(transform_function)
      584    0.001    0.000    0.001    0.000 tensor_shape.py:1238(unknown_shape)
        3    0.000    0.000    0.001    0.000 optimizer_v2.py:552(_aggregate_gradients)
      708    0.000    0.000    0.001    0.000 base_layer.py:1240(<genexpr>)
       32    0.000    0.000    0.001    0.000 {method 'clip' of 'numpy.ndarray' objects}
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:792(scalar)
       70    0.000    0.000    0.001    0.000 transforms.py:773(from_bounds)
        2    0.000    0.000    0.001    0.001 gen_array_ops.py:9139(size)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:739(summary_writer_function)
        2    0.000    0.000    0.001    0.001 gen_array_ops.py:785(broadcast_to)
        8    0.000    0.000    0.001    0.000 base_layer.py:2884(_init_call_fn_args)
       98    0.000    0.000    0.001    0.000 axis.py:501(update_position)
     1944    0.001    0.000    0.001    0.000 artist.py:336(pchanged)
       32    0.000    0.000    0.001    0.000 _methods.py:97(_clip)
       24    0.000    0.000    0.001    0.000 save.py:361(<dictcomp>)
       16    0.000    0.000    0.001    0.000 tf_stack.py:105(__init__)
        8    0.000    0.000    0.001    0.000 _base.py:153(__call__)
        2    0.000    0.000    0.001    0.001 figure.py:275(__init__)
     2012    0.001    0.000    0.001    0.000 compile_utils.py:129(<listcomp>)
       12    0.000    0.000    0.001    0.000 __init__.py:1406(makeRecord)
       60    0.000    0.000    0.001    0.000 save_impl.py:296(_restore_child_layer_functions)
        2    0.001    0.001    0.001    0.001 {built-in method matplotlib.ttconv.get_pdf_charprocs}
     1641    0.001    0.000    0.001    0.000 _weakrefset.py:16(__init__)
      462    0.001    0.000    0.001    0.000 artist.py:695(set_figure)
       37    0.000    0.000    0.001    0.000 axis.py:523(_get_text1_transform)
        8    0.000    0.000    0.001    0.000 spines.py:238(cla)
      576    0.000    0.000    0.001    0.000 constraints.py:285(serialize)
        4    0.000    0.000    0.001    0.000 _base.py:310(_plot_args)
      104    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(round_)
       24    0.000    0.000    0.001    0.000 utils_impl.py:70(build_tensor_info_internal)
     2688    0.001    0.000    0.001    0.000 base.py:951(_gather_saveables_for_checkpoint)
      472    0.001    0.000    0.001    0.000 ops.py:4596(_current_control_dependencies)
       30    0.000    0.000    0.001    0.000 gen_resource_variable_ops.py:1265(var_is_initialized_op)
       34    0.000    0.000    0.001    0.000 axis.py:407(_get_text1_transform)
      912    0.001    0.000    0.001    0.000 _collections_abc.py:879(__iter__)
     2988    0.001    0.000    0.001    0.000 nested_structure_coder.py:199(can_encode)
        4    0.000    0.000    0.001    0.000 axis.py:2054(_update_offset_text_position)
      672    0.001    0.000    0.001    0.000 base_layer.py:3001(_trackable_saved_model_saver)
     1031    0.001    0.000    0.001    0.000 ops.py:6625(_restore_name_scope)
  337/185    0.000    0.000    0.001    0.000 _base.py:724(get_yaxis_transform)
       12    0.001    0.000    0.001    0.000 __init__.py:251(__init__)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:190(<listcomp>)
       43    0.000    0.000    0.001    0.000 backend_pdf.py:1577(pathOperations)
       36    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(prod)
      756    0.001    0.000    0.001    0.000 base_layer_utils.py:524(__exit__)
       11    0.000    0.000    0.001    0.000 tensor_util.py:674(_ConstantValue)
     1044    0.001    0.000    0.001    0.000 tensor_spec.py:107(_serialize)
       32    0.000    0.000    0.001    0.000 ticker.py:722(_set_order_of_magnitude)
      376    0.001    0.000    0.001    0.000 base_layer_utils.py:541(is_subclassed)
       37    0.000    0.000    0.001    0.000 _base.py:748(get_yaxis_text1_transform)
       24    0.000    0.000    0.001    0.000 metric_serialization.py:32(_python_properties_internal)
       52    0.000    0.000    0.001    0.000 markers.py:719(_set_tickright)
       32    0.000    0.000    0.001    0.000 ticker.py:256(<listcomp>)
     1218    0.001    0.000    0.001    0.000 font_manager.py:1220(<genexpr>)
       24    0.000    0.000    0.001    0.000 saving_utils.py:270(_serialize_nested_config)
       48    0.000    0.000    0.001    0.000 input_spec.py:230(to_tensor_spec)
      550    0.000    0.000    0.001    0.000 artist.py:168(convert_xunits)
      588    0.001    0.000    0.001    0.000 serialized_attributes.py:171(<dictcomp>)
       34    0.000    0.000    0.001    0.000 _base.py:672(get_xaxis_text1_transform)
  310/170    0.000    0.000    0.001    0.000 _base.py:648(get_xaxis_transform)
      355    0.000    0.000    0.001    0.000 axis.py:325(_set_artist_props)
       16    0.000    0.000    0.001    0.000 inspect.py:680(getsourcefile)
      168    0.001    0.000    0.001    0.000 base_layer.py:3005(_object_identifier)
       74    0.000    0.000    0.001    0.000 backend_pdf.py:2177(new_gc)
       62    0.000    0.000    0.001    0.000 lines.py:724(_get_transformed_path)
       80    0.000    0.000    0.001    0.000 backend_pdf.py:2184(__init__)
       36    0.000    0.000    0.001    0.000 backend_pdf.py:387(_writeHeader)
      456    0.000    0.000    0.001    0.000 re.py:169(match)
      106    0.000    0.000    0.001    0.000 transforms.py:361(ymax)
        3    0.000    0.000    0.001    0.000 optimizer_v2.py:826(iterations)
     1152    0.001    0.000    0.001    0.000 auto_control_deps_utils.py:54(<listcomp>)
      217    0.000    0.000    0.001    0.000 lines.py:648(set_data)
      256    0.000    0.000    0.001    0.000 {method 'max' of 'numpy.ndarray' objects}
       37    0.000    0.000    0.001    0.000 axis.py:526(_get_text2_transform)
     2460    0.001    0.000    0.001    0.000 nested_structure_coder.py:307(can_encode)
      576    0.000    0.000    0.001    0.000 tf_utils.py:281(_is_atomic_nested)
       36    0.000    0.000    0.001    0.000 fromnumeric.py:2843(prod)
       78    0.000    0.000    0.001    0.000 transforms.py:1532(transform_path_non_affine)
      576    0.001    0.000    0.001    0.000 saveable_object.py:24(__init__)
        6    0.000    0.000    0.001    0.000 layer_utils.py:182(print_row)
      104    0.000    0.000    0.001    0.000 fromnumeric.py:3590(round_)
     1404    0.001    0.000    0.001    0.000 func_graph.py:489(<genexpr>)
       46    0.000    0.000    0.001    0.000 markers.py:727(_set_tickup)
      152    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
      146    0.000    0.000    0.001    0.000 transforms.py:2644(__init__)
       43    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.convert_to_string}
       58    0.000    0.000    0.001    0.000 lines.py:709(_transform_path)
      684    0.001    0.000    0.001    0.000 ops.py:5185(__enter__)
      158    0.000    0.000    0.001    0.000 text.py:1137(set_verticalalignment)
      399    0.000    0.000    0.001    0.000 artist.py:358(set_transform)
      288    0.000    0.000    0.001    0.000 tf_utils.py:187(<listcomp>)
       37    0.000    0.000    0.001    0.000 _base.py:774(get_yaxis_text2_transform)
      135    0.001    0.000    0.001    0.000 artist.py:1074(update_from)
      434    0.001    0.000    0.001    0.000 lines.py:1114(_split_drawstyle_linestyle)
        4    0.000    0.000    0.001    0.000 _base.py:1868(_update_line_limits)
     2460    0.001    0.000    0.001    0.000 nested_structure_coder.py:257(can_encode)
       48    0.000    0.000    0.001    0.000 function.py:2709(<genexpr>)
       50    0.001    0.000    0.001    0.000 function_base.py:2031(__init__)
      108    0.000    0.000    0.001    0.000 utils.py:99(layer_uses_training_bool)
       27    0.001    0.000    0.001    0.000 {method 'draw_markers' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
       16    0.000    0.000    0.001    0.000 transforms.py:703(<listcomp>)
       36    0.000    0.000    0.001    0.000 transforms.py:1015(get_points)
      140    0.001    0.000    0.001    0.000 ticker.py:573(__call__)
       32    0.000    0.000    0.001    0.000 ticker.py:2087(_staircase)
      163    0.000    0.000    0.001    0.000 path.py:159(_fast_from_codes_and_verts)
      242    0.000    0.000    0.001    0.000 base_layer.py:2578(_get_node_attribute_at_index)
        6    0.000    0.000    0.001    0.000 transforms.py:1915(clear)
      104    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(around)
     3003    0.001    0.000    0.001    0.000 base_layer.py:1218(name)
     3222    0.001    0.000    0.001    0.000 object_identity.py:78(unwrapped)
     6048    0.001    0.000    0.001    0.000 data_structures.py:447(_external_modification)
      170    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
      368    0.001    0.000    0.001    0.000 base_layer.py:1157(_set_training_mode)
      612    0.000    0.000    0.001    0.000 data_structures.py:1059(<lambda>)
       90    0.000    0.000    0.001    0.000 transforms.py:346(xmin)
      712    0.001    0.000    0.001    0.000 traceable_stack.py:111(pop_obj)
     1725    0.001    0.000    0.001    0.000 device_spec.py:426(__hash__)
      444    0.001    0.000    0.001    0.000 nested_structure_coder.py:403(do_encode)
       72    0.000    0.000    0.001    0.000 backend_bases.py:656(new_gc)
     2544    0.001    0.000    0.001    0.000 generic_utils.py:167(get_registered_name)
       29    0.000    0.000    0.001    0.000 backend_pdf.py:1929(_setup_textpos)
     3744    0.001    0.000    0.001    0.000 device_spec.py:38(_as_int_or_none)
      352    0.001    0.000    0.001    0.000 node.py:147(map_arguments)
       34    0.000    0.000    0.001    0.000 axis.py:410(_get_text2_transform)
      240    0.000    0.000    0.001    0.000 transforms.py:2194(get_affine)
       38    0.000    0.000    0.001    0.000 patches.py:341(_set_facecolor)
      346    0.000    0.000    0.001    0.000 backend_pdf.py:251(__init__)
      276    0.000    0.000    0.001    0.000 resource_variable_ops.py:100(<listcomp>)
       29    0.001    0.000    0.001    0.000 {method 'draw_glyphs_to_bitmap' of 'matplotlib.ft2font.FT2Font' objects}
      152    0.000    0.000    0.001    0.000 _methods.py:32(_amin)
       69    0.001    0.000    0.001    0.000 posixpath.py:75(join)
        5    0.000    0.000    0.001    0.000 base_layer.py:2141(count_params)
      256    0.000    0.000    0.001    0.000 _methods.py:28(_amax)
     1248    0.001    0.000    0.001    0.000 device_spec.py:350(_components_to_string)
     6048    0.001    0.000    0.001    0.000 data_structures.py:431(_non_append_mutation)
     2062    0.001    0.000    0.001    0.000 context.py:808(scope_name)
       20    0.000    0.000    0.001    0.000 typing.py:875(__extrahook__)
      736    0.001    0.000    0.001    0.000 base_layer.py:932(<genexpr>)
      102    0.000    0.000    0.001    0.000 transforms.py:351(ymin)
     9312    0.001    0.000    0.001    0.000 copy.py:190(_deepcopy_atomic)
      212    0.001    0.000    0.001    0.000 font_manager.py:778(set_weight)
      372    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.affine_transform}
       12    0.000    0.000    0.001    0.000 tf_utils.py:464(graph_context_for_symbolic_tensors)
      756    0.001    0.000    0.001    0.000 base_layer_utils.py:503(__init__)
     2808    0.001    0.000    0.001    0.000 function.py:2566(<genexpr>)
      217    0.000    0.000    0.001    0.000 lines.py:733(set_transform)
       34    0.000    0.000    0.001    0.000 _base.py:698(get_xaxis_text2_transform)
      492    0.001    0.000    0.001    0.000 _weakrefset.py:36(__init__)
     1248    0.001    0.000    0.001    0.000 device_spec.py:42(_as_device_str_or_none)
      298    0.001    0.000    0.001    0.000 markers.py:249(set_fillstyle)
      350    0.000    0.000    0.001    0.000 weakref.py:438(items)
      384    0.001    0.000    0.001    0.000 function.py:1430(forward)
       54    0.000    0.000    0.001    0.000 path.py:354(iter_segments)
        1    0.001    0.001    0.001    0.001 Experiment.py:211(<listcomp>)
      217    0.000    0.000    0.001    0.000 lines.py:1401(set_dash_capstyle)
      456    0.000    0.000    0.001    0.000 artist.py:937(set_visible)
      102    0.001    0.000    0.001    0.000 {method 'write' of '_io.TextIOWrapper' objects}
       50    0.001    0.000    0.001    0.000 callbacks.py:1610(__init__)
       12    0.000    0.000    0.001    0.000 gen_io_ops.py:1520(<listcomp>)
     2112    0.001    0.000    0.001    0.000 nested_structure_coder.py:170(<genexpr>)
        8    0.000    0.000    0.001    0.000 base_layer.py:2907(_call_fn_args)
      116    0.000    0.000    0.001    0.000 transforms.py:1764(frozen)
       58    0.000    0.000    0.001    0.000 transforms.py:2681(__init__)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
       16    0.000    0.000    0.001    0.000 transforms.py:704(<listcomp>)
      520    0.001    0.000    0.001    0.000 {method 'compress' of 'zlib.Compress' objects}
       36    0.000    0.000    0.001    0.000 backend_pdf.py:423(_flush)
       64    0.000    0.000    0.001    0.000 _methods.py:63(_clip_dep_is_scalar_nan)
      288    0.001    0.000    0.001    0.000 ops.py:3933(add_to_collection)
      511    0.000    0.000    0.001    0.000 lines.py:1285(set_xdata)
      736    0.000    0.000    0.001    0.000 base_layer.py:3234(<genexpr>)
        7    0.000    0.000    0.001    0.000 layer_utils.py:95(count_params)
     1344    0.001    0.000    0.001    0.000 weakref.py:125(_commit_removals)
     2937    0.001    0.000    0.001    0.000 ops.py:4575(control_inputs)
        4    0.000    0.000    0.001    0.000 _base.py:363(<listcomp>)
       60    0.000    0.000    0.001    0.000 layer_utils.py:224(invalidate_all)
      516    0.001    0.000    0.001    0.000 serialized_attributes.py:183(<dictcomp>)
      132    0.000    0.000    0.001    0.000 <string>:24(_replace)
      104    0.000    0.000    0.001    0.000 fromnumeric.py:3130(around)
      553    0.000    0.000    0.001    0.000 artist.py:180(convert_yunits)
        2    0.000    0.000    0.001    0.000 _datasource.py:427(_findfile)
       90    0.000    0.000    0.001    0.000 transforms.py:356(xmax)
      609    0.000    0.000    0.001    0.000 ops.py:6769(_op_to_colocate_with)
        4    0.000    0.000    0.001    0.000 _base.py:251(_makeline)
      594    0.001    0.000    0.001    0.000 function_base.py:257(iterable)
      168    0.001    0.000    0.001    0.000 functional.py:816(_trackable_saved_model_saver)
       48    0.001    0.000    0.001    0.000 transforms.py:2779(nonsingular)
      212    0.001    0.000    0.001    0.000 font_manager.py:814(set_size)
     1905    0.001    0.000    0.001    0.000 {method 'copy' of 'dict' objects}
        2    0.000    0.000    0.001    0.000 backend_agg.py:398(get_renderer)
        8    0.000    0.000    0.001    0.000 base_layer.py:2900(_call_full_argspec)
      646    0.000    0.000    0.001    0.000 figure.py:45(_stale_figure_callback)
     1152    0.001    0.000    0.001    0.000 base_serialization.py:33(__init__)
      146    0.000    0.000    0.001    0.000 base_layer.py:2070(input)
       16    0.000    0.000    0.001    0.000 transforms.py:705(<listcomp>)
       72    0.000    0.000    0.001    0.000 serialized_attributes.py:142(new)
      217    0.000    0.000    0.001    0.000 lines.py:1096(set_linewidth)
     3310    0.001    0.000    0.001    0.000 ops.py:4634(<genexpr>)
       16    0.000    0.000    0.001    0.000 transforms.py:706(<listcomp>)
      712    0.000    0.000    0.001    0.000 base_layer.py:2468(<genexpr>)
       29    0.000    0.000    0.001    0.000 backend_pdf.py:654(fontName)
      224    0.000    0.000    0.001    0.000 optimizer_v2.py:721(__setattr__)
     4130    0.001    0.000    0.001    0.000 artist.py:192(axes)
       36    0.001    0.000    0.001    0.000 {method 'flush' of 'zlib.Compress' objects}
      778    0.001    0.000    0.001    0.000 functional.py:821(_make_node_key)
     1027    0.001    0.000    0.001    0.000 api.py:122(get_effective_source_map)
        8    0.000    0.000    0.001    0.000 base_layer.py:2261(_set_dtype_policy)
      190    0.000    0.000    0.001    0.000 transforms.py:2367(transform_non_affine)
       12    0.000    0.000    0.001    0.000 save.py:527(_trace_resource_initializers)
      125    0.000    0.000    0.001    0.000 ops.py:2510(_get_attr_type)
      120    0.000    0.000    0.001    0.000 weakref.py:165(__setitem__)
      176    0.000    0.000    0.001    0.000 font_manager.py:1325(get_font)
  218/164    0.000    0.000    0.001    0.000 transforms.py:2319(_invalidate_internal)
     1430    0.001    0.000    0.001    0.000 ops.py:5066(_colocation_stack)
    28/24    0.000    0.000    0.001    0.000 transforms.py:412(bounds)
       58    0.001    0.000    0.001    0.000 __init__.py:557(__setitem__)
      384    0.000    0.000    0.001    0.000 graph_view.py:80(_name_slot_variable)
      140    0.000    0.000    0.001    0.000 axis.py:301(set_label1)
      116    0.000    0.000    0.001    0.000 text.py:236(get_rotation)
        4    0.000    0.000    0.001    0.000 _base.py:3104(set_xlim)
       76    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(all)
        5    0.000    0.000    0.001    0.000 node.py:54(__init__)
       38    0.000    0.000    0.001    0.000 transforms.py:986(__init__)
       72    0.000    0.000    0.001    0.000 serialized_attributes.py:174(functions_to_serialize)
      892    0.001    0.000    0.001    0.000 resource_variable_ops.py:503(device)
        4    0.000    0.000    0.001    0.000 patches.py:704(__init__)
       16    0.000    0.000    0.001    0.000 transpiler.py:362(_transformed_factory)
     1332    0.001    0.000    0.001    0.000 nested_structure_coder.py:376(can_encode)
       26    0.000    0.000    0.001    0.000 patches.py:348(set_facecolor)
       32    0.000    0.000    0.001    0.000 shape_base.py:286(hstack)
      384    0.000    0.000    0.001    0.000 tape.py:163(should_record_backprop)
      120    0.000    0.000    0.001    0.000 function.py:2292(_deterministic_dict_values)
     1996    0.001    0.000    0.001    0.000 ops.py:113(tensor_id)
      140    0.000    0.000    0.001    0.000 axis.py:314(set_label2)
      217    0.000    0.000    0.001    0.000 lines.py:1355(set_dash_joinstyle)
      684    0.001    0.000    0.001    0.000 ops.py:5193(__exit__)
        2    0.001    0.000    0.001    0.000 backend_agg.py:86(__init__)
      145    0.000    0.000    0.001    0.000 path.py:188(_update_values)
        9    0.000    0.000    0.001    0.000 tensor_util.py:569(MakeNdarray)
       30    0.000    0.000    0.001    0.000 gen_logging_ops.py:23(_assert)
      408    0.000    0.000    0.001    0.000 policy.py:461(get_config)
       96    0.000    0.000    0.001    0.000 serialization.py:28(get_json_type)
      120    0.000    0.000    0.001    0.000 base_layer.py:1569(metrics)
      468    0.000    0.000    0.001    0.000 lines.py:59(_scale_dashes)
      168    0.001    0.000    0.001    0.000 version_utils.py:125(is_v1_layer_or_model)
      556    0.000    0.000    0.001    0.000 lines.py:1297(set_ydata)
  650/352    0.001    0.000    0.001    0.000 transforms.py:2349(<lambda>)
      360    0.001    0.000    0.001    0.000 encoder.py:104(__init__)
      217    0.000    0.000    0.001    0.000 lines.py:1416(set_solid_capstyle)
       36    0.000    0.000    0.001    0.000 uuid.py:106(__init__)
     2496    0.001    0.000    0.001    0.000 device_spec.py:34(_as_str_or_none)
      217    0.000    0.000    0.001    0.000 lines.py:1061(set_drawstyle)
       23    0.000    0.000    0.001    0.000 layer_utils.py:109(<genexpr>)
       12    0.000    0.000    0.001    0.000 execute.py:281(convert_to_mixed_eager_tensors)
        4    0.000    0.000    0.001    0.000 base_layer.py:2556(_set_connectivity_metadata)
      116    0.000    0.000    0.001    0.000 text.py:41(get_rotation)
       14    0.000    0.000    0.001    0.000 training.py:684(run_eagerly)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(ptp)
       36    0.000    0.000    0.001    0.000 backend_pdf.py:645(beginStream)
       50    0.000    0.000    0.001    0.000 function_base.py:2164(<listcomp>)
      104    0.001    0.000    0.001    0.000 {method 'round' of 'numpy.ndarray' objects}
     1452    0.000    0.000    0.001    0.000 nested_structure_coder.py:353(can_encode)
      192    0.000    0.000    0.001    0.000 serialized_attributes.py:162(functions)
      387    0.001    0.000    0.001    0.000 tf_inspect.py:283(<listcomp>)
      170    0.000    0.000    0.001    0.000 def_function.py:556(_get_key_for_call_stats)
      116    0.000    0.000    0.001    0.000 text.py:1193(_preprocess_math)
      212    0.000    0.000    0.001    0.000 transforms.py:2057(transform)
      144    0.000    0.000    0.001    0.000 base_layer.py:2089(output)
       38    0.000    0.000    0.001    0.000 patches.py:315(_set_edgecolor)
        8    0.000    0.000    0.001    0.000 tf_utils.py:445(maybe_init_scope)
      750    0.001    0.000    0.001    0.000 {method 'find' of 'str' objects}
      162    0.000    0.000    0.001    0.000 lines.py:953(_get_markerfacecolor)
       15    0.000    0.000    0.001    0.000 constant_op.py:347(_tensor_shape_tensor_conversion_function)
       27    0.000    0.000    0.001    0.000 path.py:419(cleaned)
      276    0.000    0.000    0.001    0.000 resource_variable_ops.py:99(<listcomp>)
      217    0.000    0.000    0.001    0.000 lines.py:1370(set_solid_joinstyle)
     1027    0.001    0.000    0.001    0.000 tf_stack.py:123(get_filtered_filenames)
     1272    0.000    0.000    0.001    0.000 meta_graph.py:159(mark_op_as_used)
      140    0.001    0.000    0.001    0.000 transforms.py:2859(_interval_contains_close)
      210    0.000    0.000    0.001    0.000 font_manager.py:759(set_style)
       16    0.001    0.000    0.001    0.000 transpiler.py:190(instantiate)
        2    0.000    0.000    0.001    0.000 _subplots.py:129(update_params)
      888    0.000    0.000    0.001    0.000 nested_structure_coder.py:400(can_encode)
      564    0.001    0.000    0.001    0.000 base_layer.py:2968(_split_out_first_arg)
       32    0.000    0.000    0.001    0.000 ticker.py:1955(scale_range)
       22    0.000    0.000    0.001    0.000 generic_utils.py:334(deserialize_keras_object)
      768    0.001    0.000    0.001    0.000 ops.py:4888(_override_gradient_function)
       36    0.000    0.000    0.001    0.000 backend_pdf.py:348(__init__)
      180    0.000    0.000    0.001    0.000 optimizer_v2.py:1333(<lambda>)
       34    0.000    0.000    0.001    0.000 transforms.py:763(unit)
      551    0.000    0.000    0.001    0.000 __init__.py:1961(<listcomp>)
       32    0.000    0.000    0.001    0.000 axis.py:1648(set_major_locator)
        2    0.000    0.000    0.001    0.000 gridspec.py:586(get_position)
       60    0.000    0.000    0.001    0.000 weakref.py:102(__init__)
      560    0.001    0.000    0.001    0.000 {method 'index' of 'str' objects}
     2224    0.001    0.000    0.001    0.000 resource_variable_ops.py:513(name)
       76    0.000    0.000    0.001    0.000 fromnumeric.py:2324(all)
        2    0.000    0.000    0.001    0.000 backend_pdf.py:553(newPage)
      132    0.000    0.000    0.001    0.000 base_layer.py:2299(_compute_dtype)
       30    0.000    0.000    0.001    0.000 gen_math_ops.py:5437(logical_not)
     1372    0.001    0.000    0.001    0.000 traceable_stack.py:115(peek_top_obj)
       26    0.000    0.000    0.001    0.000 patches.py:330(set_edgecolor)
      552    0.000    0.000    0.001    0.000 saveable_object_util.py:249(<lambda>)
       54    0.000    0.000    0.001    0.000 markers.py:301(get_transform)
        6    0.000    0.000    0.001    0.000 figure.py:874(set_size_inches)
       12    0.000    0.000    0.001    0.000 signature_def_utils_impl.py:350(op_signature_def)
       32    0.000    0.000    0.001    0.000 distribute_lib.py:2896(colocate_vars_with)
       24    0.000    0.000    0.001    0.000 utils_impl.py:218(get_variables_dir)
       84    0.000    0.000    0.001    0.000 base_layer.py:1948(input_mask)
      372    0.000    0.000    0.001    0.000 base_layer.py:2505(<listcomp>)
      624    0.000    0.000    0.001    0.000 device_spec.py:300(_string_to_components)
       29    0.000    0.000    0.001    0.000 {method 'draw_text_image' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      384    0.001    0.000    0.001    0.000 function.py:1413(__init__)
      373    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddControlInput}
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2477(ptp)
       24    0.000    0.000    0.000    0.000 saving_utils.py:291(_enforce_names_consistency)
        2    0.000    0.000    0.000    0.000 pyplot.py:3029(title)
       36    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
       50    0.000    0.000    0.000    0.000 training.py:762(make_train_function)
      129    0.000    0.000    0.000    0.000 stride_tricks.py:185(_broadcast_shape)
       72    0.000    0.000    0.000    0.000 axis.py:1562(convert_units)
      210    0.000    0.000    0.000    0.000 font_manager.py:769(set_variant)
      120    0.000    0.000    0.000    0.000 function.py:2893(<genexpr>)
      218    0.000    0.000    0.000    0.000 __init__.py:1296(is_math_text)
      168    0.000    0.000    0.000    0.000 signature_serialization.py:233(<lambda>)
      132    0.000    0.000    0.000    0.000 <string>:16(_make)
        8    0.000    0.000    0.000    0.000 _base.py:1436(apply_aspect)
      609    0.000    0.000    0.000    0.000 op_def_library.py:166(_MakeBool)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
       12    0.000    0.000    0.000    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
       36    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
      210    0.000    0.000    0.000    0.000 font_manager.py:796(set_stretch)
      162    0.000    0.000    0.000    0.000 transforms.py:2154(<lambda>)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:583(op)
        2    0.000    0.000    0.000    0.000 _datasource.py:517(exists)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
        8    0.000    0.000    0.000    0.000 policy.py:296(__init__)
       84    0.000    0.000    0.000    0.000 base_layer.py:1970(output_mask)
       16    0.000    0.000    0.000    0.000 axis.py:1504(update_units)
      174    0.000    0.000    0.000    0.000 {method 'clear' of 'matplotlib.ft2font.FT2Font' objects}
        6    0.000    0.000    0.000    0.000 numeric.py:2167(isclose)
     1651    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       50    0.000    0.000    0.000    0.000 function_base.py:2144(<listcomp>)
        2    0.000    0.000    0.000    0.000 _axes.py:148(set_title)
      180    0.000    0.000    0.000    0.000 tensor_shape.py:268(assert_is_compatible_with)
       12    0.000    0.000    0.000    0.000 execute.py:282(<listcomp>)
      120    0.000    0.000    0.000    0.000 save_impl.py:446(get_training_arg_value)
      288    0.000    0.000    0.000    0.000 base_layer.py:672(<listcomp>)
      276    0.000    0.000    0.000    0.000 meta_graph.py:230(_op_name)
        4    0.000    0.000    0.000    0.000 _base.py:3498(set_ylim)
       24    0.000    0.000    0.000    0.000 signature_def_utils_impl.py:32(build_signature_def)
        7    0.000    0.000    0.000    0.000 policy.py:488(global_policy)
      772    0.000    0.000    0.000    0.000 base_layer.py:1265(input_spec)
      156    0.000    0.000    0.000    0.000 metrics.py:312(_trackable_saved_model_saver)
      156    0.000    0.000    0.000    0.000 input_layer.py:205(_trackable_saved_model_saver)
      912    0.000    0.000    0.000    0.000 data_structures.py:377(__getitem__)
      168    0.000    0.000    0.000    0.000 axis.py:819(get_transform)
        8    0.000    0.000    0.000    0.000 tensor_util.py:1017(shape_tensor)
       88    0.000    0.000    0.000    0.000 functional.py:522(_flatten_to_reference_inputs)
      154    0.000    0.000    0.000    0.000 artist.py:1037(set_zorder)
       92    0.000    0.000    0.000    0.000 tensor_shape.py:988(assert_same_rank)
       12    0.000    0.000    0.000    0.000 file_io.py:631(has_atomic_move)
    32/16    0.000    0.000    0.000    0.000 units.py:197(get_converter)
      768    0.000    0.000    0.000    0.000 function.py:2067(_get_gradient_function)
       12    0.000    0.000    0.000    0.000 training.py:2288(state_updates)
       12    0.000    0.000    0.000    0.000 utils_impl.py:242(get_assets_dir)
       72    0.000    0.000    0.000    0.000 units.py:58(_is_natively_supported)
        1    0.000    0.000    0.000    0.000 pyplot.py:658(close)
      120    0.000    0.000    0.000    0.000 weakref.py:109(remove)
      534    0.000    0.000    0.000    0.000 backend_mixed.py:67(__getattr__)
      120    0.000    0.000    0.000    0.000 save_impl.py:426(fn_input_signature)
     1056    0.000    0.000    0.000    0.000 generic_utils.py:113(serialize_keras_class_and_config)
        1    0.000    0.000    0.000    0.000 metrics.py:153(__init__)
      480    0.000    0.000    0.000    0.000 data_structures.py:1033(_is_function)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:40(destroy)
      148    0.000    0.000    0.000    0.000 ticker.py:564(fix_minus)
      372    0.000    0.000    0.000    0.000 __init__.py:833(clean)
       27    0.000    0.000    0.000    0.000 __init__.py:149(get)
      240    0.000    0.000    0.000    0.000 save_impl.py:634(_get_layer_call_method)
       13    0.000    0.000    0.000    0.000 _dill.py:400(__init__)
        8    0.000    0.000    0.000    0.000 text.py:223(_get_xy_display)
      387    0.000    0.000    0.000    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
       16    0.000    0.000    0.000    0.000 spines.py:266(_adjust_location)
       48    0.000    0.000    0.000    0.000 copy.py:219(_deepcopy_tuple)
      621    0.000    0.000    0.000    0.000 execute.py:184(make_bool)
       36    0.000    0.000    0.000    0.000 shape_base.py:25(atleast_1d)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:47(__init__)
      184    0.000    0.000    0.000    0.000 scale.py:117(get_transform)
        4    0.000    0.000    0.000    0.000 tensor_util.py:842(constant_value_as_shape)
     2048    0.000    0.000    0.000    0.000 policy.py:453(name)
      472    0.000    0.000    0.000    0.000 re.py:286(_compile)
       32    0.000    0.000    0.000    0.000 _methods.py:228(_ptp)
       54    0.000    0.000    0.000    0.000 random_seed.py:41(get_seed)
     1092    0.000    0.000    0.000    0.000 statistics.py:201(_exact_ratio)
      288    0.000    0.000    0.000    0.000 tf_utils.py:289(_convert_object_or_list)
      210    0.000    0.000    0.000    0.000 font_manager.py:746(set_family)
     2160    0.000    0.000    0.000    0.000 nested_structure_coder.py:330(can_encode)
        2    0.000    0.000    0.000    0.000 _base.py:3024(set_xbound)
       37    0.000    0.000    0.000    0.000 axis.py:529(apply_tickdir)
        4    0.000    0.000    0.000    0.000 transforms.py:1318(contains_branch_seperately)
       32    0.000    0.000    0.000    0.000 function_base.py:1141(diff)
        1    0.000    0.000    0.000    0.000 {built-in method gc.collect}
      217    0.000    0.000    0.000    0.000 lines.py:1271(set_markersize)
      536    0.000    0.000    0.000    0.000 backend_pdf.py:902(cvt)
      217    0.000    0.000    0.000    0.000 lines.py:1228(set_markeredgewidth)
      572    0.000    0.000    0.000    0.000 {built-in method builtins.round}
      156    0.000    0.000    0.000    0.000 text.py:240(set_rotation_mode)
       71    0.000    0.000    0.000    0.000 artist.py:923(set_alpha)
        2    0.000    0.000    0.000    0.000 _base.py:563(set_figure)
    14/12    0.000    0.000    0.000    0.000 transforms.py:1709(__eq__)
      125    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrType}
       50    0.000    0.000    0.000    0.000 callbacks.py:914(__init__)
      704    0.000    0.000    0.000    0.000 functional.py:504(<genexpr>)
      116    0.000    0.000    0.000    0.000 transforms.py:2564(get_matrix)
       40    0.000    0.000    0.000    0.000 text.py:1093(set_position)
      236    0.000    0.000    0.000    0.000 text.py:1104(set_x)
      132    0.000    0.000    0.000    0.000 transforms.py:2162(transform_non_affine)
      229    0.000    0.000    0.000    0.000 lines.py:31(_get_dash_pattern)
      266    0.000    0.000    0.000    0.000 text.py:1115(set_y)
       12    0.000    0.000    0.000    0.000 patches.py:436(set_fill)
      228    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
        4    0.000    0.000    0.000    0.000 figure.py:956(set_edgecolor)
        8    0.000    0.000    0.000    0.000 base_layer.py:2409(_init_set_name)
      221    0.000    0.000    0.000    0.000 lines.py:635(axes)
       27    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.cleanup_path}
       72    0.000    0.000    0.000    0.000 input_layer.py:195(get_config)
       38    0.000    0.000    0.000    0.000 backprop.py:116(get_attr)
     1031    0.000    0.000    0.000    0.000 context.py:803(scope_name)
      158    0.000    0.000    0.000    0.000 text.py:949(set_horizontalalignment)
        4    0.000    0.000    0.000    0.000 transforms.py:1298(contains_branch)
      182    0.000    0.000    0.000    0.000 base_layer.py:1213(dtype)
        2    0.000    0.000    0.000    0.000 gridspec.py:133(get_grid_positions)
      480    0.000    0.000    0.000    0.000 data_structures.py:330(_name_element)
      178    0.000    0.000    0.000    0.000 transforms.py:2658(get_matrix)
        4    0.000    0.000    0.000    0.000 _base.py:1116(_set_title_offset_trans)
       27    0.000    0.000    0.000    0.000 math_ops.py:1855(_may_reduce_to_scalar)
      156    0.000    0.000    0.000    0.000 text.py:1227(set_usetex)
       12    0.000    0.000    0.000    0.000 training.py:639(metrics_names)
      226    0.000    0.000    0.000    0.000 backend_bases.py:938(set_foreground)
      174    0.000    0.000    0.000    0.000 {method 'set_size' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 init_ops.py:111(__call__)
       32    0.000    0.000    0.000    0.000 axis.py:1664(set_minor_locator)
      156    0.000    0.000    0.000    0.000 fractions.py:84(__new__)
       20    0.000    0.000    0.000    0.000 cycler.py:349(by_key)
       61    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
     1056    0.000    0.000    0.000    0.000 func_graph.py:478(deref)
       34    0.000    0.000    0.000    0.000 axis.py:413(apply_tickdir)
       32    0.000    0.000    0.000    0.000 axis.py:1620(set_major_formatter)
       32    0.000    0.000    0.000    0.000 posixpath.py:121(splitext)
      110    0.000    0.000    0.000    0.000 _internal.py:830(npy_ctypes_check)
        2    0.000    0.000    0.000    0.000 functional.py:825(_map_graph_network)
      300    0.000    0.000    0.000    0.000 nested_structure_coder.py:310(do_encode)
      491    0.000    0.000    0.000    0.000 transforms.py:177(<lambda>)
       60    0.000    0.000    0.000    0.000 data_structures.py:902(_list_functions_for_serialization)
      140    0.000    0.000    0.000    0.000 transforms.py:1705(__array__)
       17    0.000    0.000    0.000    0.000 __init__.py:138(deserialize)
       12    0.000    0.000    0.000    0.000 utils_impl.py:225(get_variables_path)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:39(seterr)
       24    0.000    0.000    0.000    0.000 functional_saver.py:168(<dictcomp>)
      104    0.000    0.000    0.000    0.000 {built-in method builtins.__import__}
     1300    0.000    0.000    0.000    0.000 tf_decorator.py:278(decorator_argspec)
       12    0.000    0.000    0.000    0.000 tensor_spec.py:144(from_tensor)
      384    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetShouldRecordBackprop}
       24    0.000    0.000    0.000    0.000 layer_serialization.py:132(python_properties)
        2    0.000    0.000    0.000    0.000 axis.py:1945(_get_label)
      156    0.000    0.000    0.000    0.000 text.py:933(set_color)
       32    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 signature_serialization.py:63(_validate_inputs)
      288    0.000    0.000    0.000    0.000 tf_utils.py:273(_is_serialized_node_data)
      658    0.000    0.000    0.000    0.000 keras_tensor.py:43(keras_tensors_enabled)
       16    0.000    0.000    0.000    0.000 transpiler.py:356(_cached_factory)
       32    0.000    0.000    0.000    0.000 axis.py:1634(set_minor_formatter)
      843    0.000    0.000    0.000    0.000 transforms.py:1868(get_matrix)
      304    0.000    0.000    0.000    0.000 artist.py:371(get_transform)
       16    0.000    0.000    0.000    0.000 _base.py:3087(_validate_converted_limits)
       48    0.000    0.000    0.000    0.000 ops.py:407(name)
       52    0.000    0.000    0.000    0.000 fractions.py:386(reverse)
       27    0.000    0.000    0.000    0.000 math_ops.py:1850(_has_fully_defined_shape)
       16    0.000    0.000    0.000    0.000 distribute_lib.py:2677(__exit__)
        6    0.000    0.000    0.000    0.000 transforms.py:904(p1)
        2    0.000    0.000    0.000    0.000 _base.py:913(_gen_axes_patch)
       24    0.000    0.000    0.000    0.000 base.py:92(__init__)
      382    0.000    0.000    0.000    0.000 __init__.py:2113(type_name)
       12    0.000    0.000    0.000    0.000 utils_impl.py:101(build_tensor_info_from_op)
       84    0.000    0.000    0.000    0.000 module.py:132(name_scope)
       71    0.000    0.000    0.000    0.000 axis.py:197(_set_labelrotation)
      672    0.000    0.000    0.000    0.000 data_structures.py:1039(<lambda>)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:898(_from_components)
       16    0.000    0.000    0.000    0.000 distribute_lib.py:2665(__enter__)
      552    0.000    0.000    0.000    0.000 variables.py:1182(_gather_saveables_for_checkpoint)
        2    0.000    0.000    0.000    0.000 _base.py:3435(set_ybound)
       32    0.000    0.000    0.000    0.000 _methods.py:36(_sum)
      120    0.000    0.000    0.000    0.000 smart_cond.py:62(smart_constant_value)
       12    0.000    0.000    0.000    0.000 _base.py:2045(_process_unit_info)
      564    0.000    0.000    0.000    0.000 func_graph.py:779(saveable)
      217    0.000    0.000    0.000    0.000 lines.py:1038(set_antialiased)
      288    0.000    0.000    0.000    0.000 json_utils.py:50(<genexpr>)
        8    0.000    0.000    0.000    0.000 _base.py:859(_set_position)
        1    0.000    0.000    0.000    0.000 training.py:557(_get_optimizer)
  292/284    0.000    0.000    0.000    0.000 spines.py:220(_ensure_position_is_set)
      100    0.000    0.000    0.000    0.000 callbacks.py:988(<genexpr>)
      152    0.000    0.000    0.000    0.000 base_layer.py:2383(_dtype)
       50    0.000    0.000    0.000    0.000 {built-in method numpy.frompyfunc}
        4    0.000    0.000    0.000    0.000 data_adapter.py:1337(expand_1d)
        3    0.000    0.000    0.000    0.000 compile_utils.py:382(update_state)
      852    0.000    0.000    0.000    0.000 resource_variable_ops.py:518(shape)
       62    0.000    0.000    0.000    0.000 transforms.py:2736(get_affine)
        8    0.000    0.000    0.000    0.000 transforms.py:278(__array__)
        8    0.000    0.000    0.000    0.000 policy.py:342(_parse_name)
      576    0.000    0.000    0.000    0.000 saveable_object.py:80(device)
        8    0.000    0.000    0.000    0.000 transforms.py:1509(transform_path)
       12    0.000    0.000    0.000    0.000 __init__.py:829(format)
       12    0.000    0.000    0.000    0.000 function.py:1724(_call_with_structured_signature)
      218    0.000    0.000    0.000    0.000 __init__.py:1860(_str_lower_equal)
        8    0.000    0.000    0.000    0.000 transforms.py:2720(get_transformed_path_and_affine)
        1    0.000    0.000    0.000    0.000 training.py:560(_get_single_optimizer)
       12    0.000    0.000    0.000    0.000 functional.py:272(output_shape)
      576    0.000    0.000    0.000    0.000 saveable_object.py:61(__init__)
       87    0.000    0.000    0.000    0.000 backend_agg.py:55(get_hinting_flag)
        4    0.000    0.000    0.000    0.000 _base.py:800(_update_transScale)
      104    0.000    0.000    0.000    0.000 pickle.py:262(_getattribute)
        5    0.000    0.000    0.000    0.000 base_layer.py:1228(supports_masking)
       30    0.000    0.000    0.000    0.000 __init__.py:138(connect)
        1    0.000    0.000    0.000    0.000 optimizers.py:872(get)
       24    0.000    0.000    0.000    0.000 _base.py:2048(_process_single_axis)
       52    0.000    0.000    0.000    0.000 fractions.py:374(forward)
       55    0.000    0.000    0.000    0.000 distribute_lib.py:296(_require_cross_replica_or_default_context_extended)
      133    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)
      217    0.000    0.000    0.000    0.000 lines.py:1213(set_markeredgecolor)
       44    0.000    0.000    0.000    0.000 transforms.py:2544(__init__)
      764    0.000    0.000    0.000    0.000 __init__.py:2111(<genexpr>)
      129    0.000    0.000    0.000    0.000 stride_tricks.py:262(<listcomp>)
      276    0.000    0.000    0.000    0.000 ops.py:6008(has_default_graph)
      420    0.000    0.000    0.000    0.000 font_manager.py:940(_normalize_font_family)
       24    0.000    0.000    0.000    0.000 array_ops.py:1443(_get_dtype_from_nested_lists)
       32    0.000    0.000    0.000    0.000 ticker.py:508(__init__)
       12    0.000    0.000    0.000    0.000 __init__.py:564(format)
        9    0.000    0.000    0.000    0.000 util.py:34(squeeze_or_expand_dimensions)
    16/12    0.000    0.000    0.000    0.000 transforms.py:2335(__eq__)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:441(__enter__)
      196    0.000    0.000    0.000    0.000 node.py:276(is_keras_tensor)
        3    0.000    0.000    0.000    0.000 resource_variable_ops.py:280(__del__)
      612    0.000    0.000    0.000    0.000 transforms.py:939(get_points)
      356    0.000    0.000    0.000    0.000 base_layer_utils.py:475(training)
        2    0.000    0.000    0.000    0.000 axis.py:2232(_get_label)
        6    0.000    0.000    0.000    0.000 backend_bases.py:1635(__init__)
      217    0.000    0.000    0.000    0.000 lines.py:1050(set_color)
        6    0.000    0.000    0.000    0.000 _datasource.py:376(_isurl)
        1    0.000    0.000    0.000    0.000 optimizers.py:835(deserialize)
        8    0.000    0.000    0.000    0.000 path.py:526(get_extents)
      100    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
       43    0.000    0.000    0.000    0.000 backend_pdf.py:2223(paint)
       32    0.000    0.000    0.000    0.000 _methods.py:78(_clip_dep_invoke_with_casting)
      188    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
       40    0.000    0.000    0.000    0.000 patches.py:768(_convert_units)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:563(all_reduce_fn)
        4    0.000    0.000    0.000    0.000 figure.py:966(set_facecolor)
      260    0.000    0.000    0.000    0.000 nn_ops.py:3294(_tf_deterministic_ops)
       27    0.000    0.000    0.000    0.000 transforms.py:2408(__init__)
       12    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.HasAtomicMove}
        1    0.000    0.000    0.000    0.000 metrics_utils.py:98(result_wrapper)
       16    0.000    0.000    0.000    0.000 transforms.py:2266(blended_transform_factory)
      278    0.000    0.000    0.000    0.000 __init__.py:1850(_str_equal)
      470    0.000    0.000    0.000    0.000 text.py:1151(set_text)
        4    0.000    0.000    0.000    0.000 training.py:2637(reduce_per_replica)
      744    0.000    0.000    0.000    0.000 base_layer.py:2506(<genexpr>)
       86    0.000    0.000    0.000    0.000 functional.py:221(input)
       24    0.000    0.000    0.000    0.000 functional_saver.py:44(__init__)
       22    0.000    0.000    0.000    0.000 distribution_strategy_context.py:64(_pop_per_thread_mode)
       24    0.000    0.000    0.000    0.000 save.py:196(<dictcomp>)
      192    0.000    0.000    0.000    0.000 serialized_attributes.py:165(<dictcomp>)
      557    0.000    0.000    0.000    0.000 artist.py:197(axes)
        4    0.000    0.000    0.000    0.000 base_layer.py:2985(_set_save_spec)
       13    0.000    0.000    0.000    0.000 _dill.py:145(numpyufunc)
       50    0.000    0.000    0.000    0.000 callbacks.py:1650(on_train_begin)
       48    0.000    0.000    0.000    0.000 copy.py:220(<listcomp>)
      228    0.000    0.000    0.000    0.000 function.py:2003(structured_outputs)
       82    0.000    0.000    0.000    0.000 transforms.py:376(intervalx)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:245(create_signature_map)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2199(batch_reduce_to)
       79    0.000    0.000    0.000    0.000 converter.py:177(__eq__)
       86    0.000    0.000    0.000    0.000 backend_bases.py:958(set_joinstyle)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1264(writeExtGSTates)
        6    0.000    0.000    0.000    0.000 generic_utils.py:745(to_snake_case)
      288    0.000    0.000    0.000    0.000 initializers_v2.py:528(get_config)
      132    0.000    0.000    0.000    0.000 graph_view.py:176(root)
       54    0.000    0.000    0.000    0.000 lines.py:963(get_markerfacecolor)
       82    0.000    0.000    0.000    0.000 transforms.py:385(intervaly)
       12    0.000    0.000    0.000    0.000 io_utils.py:57(path_to_string)
      104    0.000    0.000    0.000    0.000 statistics.py:159(<genexpr>)
       50    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
        3    0.000    0.000    0.000    0.000 weights_broadcast_ops.py:136(broadcast_weights)
        2    0.000    0.000    0.000    0.000 axis.py:1963(_get_offset_text)
        2    0.000    0.000    0.000    0.000 axis.py:2252(_get_offset_text)
      761    0.000    0.000    0.000    0.000 {method 'join' of 'bytes' objects}
      740    0.000    0.000    0.000    0.000 multiarray.py:707(dot)
       29    0.000    0.000    0.000    0.000 backend_pdf.py:2085(encode_string)
       50    0.000    0.000    0.000    0.000 function_base.py:2120(<listcomp>)
       24    0.000    0.000    0.000    0.000 optimizer_v2.py:621(_assume_mirrored)
       60    0.000    0.000    0.000    0.000 data_structures.py:161(_attribute_sentinel)
       22    0.000    0.000    0.000    0.000 distribution_strategy_context.py:60(_push_per_thread_mode)
      384    0.000    0.000    0.000    0.000 function.py:505(stateful_ops)
       13    0.000    0.000    0.000    0.000 pickle.py:347(__init__)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:592(synchronization)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1626(writeInfoDict)
      836    0.000    0.000    0.000    0.000 artist.py:800(get_visible)
      672    0.000    0.000    0.000    0.000 base.py:1032(_map_resources)
       12    0.000    0.000    0.000    0.000 function_serialization.py:78(serialize_bare_concrete_function)
       32    0.000    0.000    0.000    0.000 __init__.py:1633(safe_first_element)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:224(_list_functions_for_serialization)
       32    0.000    0.000    0.000    0.000 tf_stack.py:53(__enter__)
       12    0.000    0.000    0.000    0.000 ticker.py:1681(nonsingular)
        4    0.000    0.000    0.000    0.000 transforms.py:1639(__eq__)
       38    0.000    0.000    0.000    0.000 backprop.py:86(make_attr)
      384    0.000    0.000    0.000    0.000 function.py:1436(record)
       34    0.000    0.000    0.000    0.000 ops.py:4760(_attr_scope)
      242    0.000    0.000    0.000    0.000 node.py:215(input_tensors)
       27    0.000    0.000    0.000    0.000 transforms.py:2451(get_matrix)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(nonzero)
      319    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
       27    0.000    0.000    0.000    0.000 backprop_util.py:25(IsTrainable)
       29    0.000    0.000    0.000    0.000 backend_pdf.py:1718(track_characters)
       52    0.000    0.000    0.000    0.000 fractions.py:401(_add)
       32    0.000    0.000    0.000    0.000 scale.py:718(scale_factory)
       48    0.000    0.000    0.000    0.000 input_spec.py:109(to_tensor_shape)
      288    0.000    0.000    0.000    0.000 generic_utils.py:188(skip_failed_serialization)
        4    0.000    0.000    0.000    0.000 transforms.py:2093(__eq__)
       24    0.000    0.000    0.000    0.000 training.py:2609(_get_compile_args)
      120    0.000    0.000    0.000    0.000 function.py:2583(<dictcomp>)
       12    0.000    0.000    0.000    0.000 save.py:89(__init__)
        6    0.000    0.000    0.000    0.000 math_ops.py:3458(add_n)
       50    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 _base.py:612(_set_lim_and_transforms)
        6    0.000    0.000    0.000    0.000 numeric.py:2244(within_tol)
      206    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
       18    0.000    0.000    0.000    0.000 backend_bases.py:2185(mpl_connect)
        1    0.000    0.000    0.000    0.000 compile_utils.py:298(build)
      354    0.000    0.000    0.000    0.000 policy.py:392(variable_dtype)
       12    0.000    0.000    0.000    0.000 re.py:184(sub)
       52    0.000    0.000    0.000    0.000 fractions.py:423(_div)
       21    0.000    0.000    0.000    0.000 tf_inspect.py:365(isclass)
        8    0.000    0.000    0.000    0.000 transforms.py:957(set)
       12    0.000    0.000    0.000    0.000 io_utils.py:40(_path_to_string)
        8    0.000    0.000    0.000    0.000 spines.py:381(set_position)
        8    0.000    0.000    0.000    0.000 parse.py:361(urlparse)
       96    0.000    0.000    0.000    0.000 {built-in method math.log10}
       66    0.000    0.000    0.000    0.000 backend_pdf.py:1596(reserveObject)
      120    0.000    0.000    0.000    0.000 weakref.py:339(__init__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:134(build)
       84    0.000    0.000    0.000    0.000 save_impl.py:72(should_skip_serialization)
        2    0.000    0.000    0.000    0.000 functional.py:760(_compute_tensor_usage_count)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:446(__exit__)
      779    0.000    0.000    0.000    0.000 font_manager.py:679(get_family)
      120    0.000    0.000    0.000    0.000 weakref.py:334(__new__)
      441    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
       12    0.000    0.000    0.000    0.000 transforms.py:2221(__init__)
       10    0.000    0.000    0.000    0.000 transforms.py:274(frozen)
        1    0.000    0.000    0.000    0.000 functional.py:340(_lookup_dependency)
        2    0.000    0.000    0.000    0.000 figure.py:976(set_dpi)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2225(_batch_reduce_to)
       52    0.000    0.000    0.000    0.000 tensor_shape.py:1203(__eq__)
        3    0.000    0.000    0.000    0.000 def_function.py:102(called_with_tracing)
        3    0.000    0.000    0.000    0.000 training.py:569(_reset_compile_cache)
        1    0.000    0.000    0.000    0.000 version_utils.py:54(__new__)
       54    0.000    0.000    0.000    0.000 lines.py:928(get_markeredgecolor)
       36    0.000    0.000    0.000    0.000 {built-in method zlib.compressobj}
       12    0.000    0.000    0.000    0.000 variable_scope.py:1400(__init__)
        8    0.000    0.000    0.000    0.000 _base.py:810(get_position)
       66    0.000    0.000    0.000    0.000 backend_pdf.py:1606(recordXref)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2294(clip_cmd)
      368    0.000    0.000    0.000    0.000 __init__.py:886(<listcomp>)
       50    0.000    0.000    0.000    0.000 function_base.py:2115(<listcomp>)
       32    0.000    0.000    0.000    0.000 genericpath.py:117(_splitext)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2228(<listcomp>)
        2    0.000    0.000    0.000    0.000 backend_bases.py:3360(new_figure_manager_given_figure)
       32    0.000    0.000    0.000    0.000 ticker.py:1994(le)
        8    0.000    0.000    0.000    0.000 transforms.py:1520(transform_path_affine)
      100    0.000    0.000    0.000    0.000 function_base.py:2116(<genexpr>)
      328    0.000    0.000    0.000    0.000 tf_decorator.py:266(decorated_target)
      154    0.000    0.000    0.000    0.000 font_manager.py:1030(get_default_size)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:596(aggregation)
       12    0.000    0.000    0.000    0.000 axis.py:2147(get_ticks_position)
        4    0.000    0.000    0.000    0.000 transforms.py:1669(set)
       32    0.000    0.000    0.000    0.000 distribute_lib.py:347(_require_strategy_scope_extended)
       86    0.000    0.000    0.000    0.000 backend_bases.py:890(set_capstyle)
       84    0.000    0.000    0.000    0.000 module.py:195(_flatten)
       10    0.000    0.000    0.000    0.000 _base.py:903(_set_artist_props)
      120    0.000    0.000    0.000    0.000 nested_structure_coder.py:356(do_encode)
       72    0.000    0.000    0.000    0.000 serialized_attributes.py:157(__init__)
       16    0.000    0.000    0.000    0.000 inspect.py:643(getfile)
       48    0.000    0.000    0.000    0.000 saving_utils.py:294(_has_name)
       52    0.000    0.000    0.000    0.000 statistics.py:233(_convert)
      120    0.000    0.000    0.000    0.000 utils.py:233(get_training_arg)
       48    0.000    0.000    0.000    0.000 saving_utils.py:305(<genexpr>)
       12    0.000    0.000    0.000    0.000 tf_logging.py:75(_logger_find_caller)
       96    0.000    0.000    0.000    0.000 input_spec.py:95(get_config)
      288    0.000    0.000    0.000    0.000 tf_utils.py:254(__init__)
      387    0.000    0.000    0.000    0.000 stride_tricks.py:266(<genexpr>)
       62    0.000    0.000    0.000    0.000 markers.py:240(__bool__)
        4    0.000    0.000    0.000    0.000 transforms.py:817(update_from_path)
       72    0.000    0.000    0.000    0.000 serialized_attributes.py:177(<dictcomp>)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2168(reduce_to)
      288    0.000    0.000    0.000    0.000 base.py:1014(_list_functions_for_serialization)
       78    0.000    0.000    0.000    0.000 op_def_library.py:532(<genexpr>)
       45    0.000    0.000    0.000    0.000 ops.py:2519(_get_attr_bool)
      356    0.000    0.000    0.000    0.000 base_layer.py:853(compute_mask)
      832    0.000    0.000    0.000    0.000 artist.py:868(get_rasterized)
       60    0.000    0.000    0.000    0.000 metrics.py:233(dtype)
       32    0.000    0.000    0.000    0.000 converter.py:184(uses)
        8    0.000    0.000    0.000    0.000 transforms.py:1731(transform_path_affine)
       82    0.000    0.000    0.000    0.000 backend_bases.py:868(set_alpha)
       58    0.000    0.000    0.000    0.000 _methods.py:44(_any)
        4    0.000    0.000    0.000    0.000 base_layer.py:1560(_clear_losses)
     1014    0.000    0.000    0.000    0.000 font_manager.py:727(get_size_in_points)
       30    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
      492    0.000    0.000    0.000    0.000 base_layer.py:1255(activity_regularizer)
       95    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
       21    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:416(parent)
      377    0.000    0.000    0.000    0.000 backend_pdf.py:278(pdfRepr)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:139(geterr)
      779    0.000    0.000    0.000    0.000 font_manager.py:704(get_weight)
       12    0.000    0.000    0.000    0.000 posixpath.py:154(dirname)
       24    0.000    0.000    0.000    0.000 weakref.py:480(pop)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:217(<listcomp>)
      240    0.000    0.000    0.000    0.000 functional.py:1026(_should_skip_first_node)
       42    0.000    0.000    0.000    0.000 distribute_lib.py:340(_require_strategy_scope_strategy)
       12    0.000    0.000    0.000    0.000 axis.py:1828(_get_ticks_position)
      832    0.000    0.000    0.000    0.000 artist.py:888(get_agg_filter)
      572    0.000    0.000    0.000    0.000 path.py:197(vertices)
        7    0.000    0.000    0.000    0.000 data_adapter.py:1340(_expand_single_1d_tensor)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:1016(with_rank)
       36    0.000    0.000    0.000    0.000 {built-in method from_bytes}
      779    0.000    0.000    0.000    0.000 font_manager.py:730(get_file)
      438    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
      120    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
       12    0.000    0.000    0.000    0.000 save.py:103(add_object)
      624    0.000    0.000    0.000    0.000 device_spec.py:264(replica)
      779    0.000    0.000    0.000    0.000 font_manager.py:698(get_variant)
        4    0.000    0.000    0.000    0.000 __init__.py:1605(index_of)
       24    0.000    0.000    0.000    0.000 signature_serialization.py:64(<genexpr>)
      779    0.000    0.000    0.000    0.000 font_manager.py:691(get_style)
       60    0.000    0.000    0.000    0.000 weakref.py:288(update)
        3    0.000    0.000    0.000    0.000 confusion_matrix.py:34(remove_squeezable_dimensions)
      247    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
       20    0.000    0.000    0.000    0.000 patches.py:458(set_capstyle)
      180    0.000    0.000    0.000    0.000 data_structures.py:1082(<lambda>)
      314    0.000    0.000    0.000    0.000 transforms.py:1689(<lambda>)
        2    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
      162    0.000    0.000    0.000    0.000 policy.py:406(compute_dtype)
      250    0.000    0.000    0.000    0.000 node.py:221(output_tensors)
       48    0.000    0.000    0.000    0.000 getlimits.py:365(__new__)
       48    0.000    0.000    0.000    0.000 graph_view.py:67(_slot_variable_naming_for_optimizer)
      170    0.000    0.000    0.000    0.000 def_function.py:431(__init__)
       32    0.000    0.000    0.000    0.000 axis.py:864(reset_ticks)
      169    0.000    0.000    0.000    0.000 enum.py:584(__reduce_ex__)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1804(nonzero)
       24    0.000    0.000    0.000    0.000 type_spec.py:304(__reduce__)
        2    0.000    0.000    0.000    0.000 figure.py:1423(_add_axes_internal)
       88    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       12    0.000    0.000    0.000    0.000 signature_serialization.py:225(<dictcomp>)
        8    0.000    0.000    0.000    0.000 loss_scale.py:46(get)
       24    0.000    0.000    0.000    0.000 spines.py:154(get_patch_transform)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:83(__exit__)
      276    0.000    0.000    0.000    0.000 saveable_object_util.py:99(_read_variable_closure)
       16    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
      116    0.000    0.000    0.000    0.000 text.py:25(_wrap_text)
       12    0.000    0.000    0.000    0.000 execute.py:283(<listcomp>)
      312    0.000    0.000    0.000    0.000 function.py:2293(<genexpr>)
        6    0.000    0.000    0.000    0.000 iterator_ops.py:888(_component_specs)
       78    0.000    0.000    0.000    0.000 op_def_library.py:416(<genexpr>)
      624    0.000    0.000    0.000    0.000 device_spec.py:276(device_index)
      368    0.000    0.000    0.000    0.000 {method 'rstrip' of 'bytes' objects}
      588    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
       16    0.000    0.000    0.000    0.000 compile_utils.py:46(_conform_to_outputs)
      624    0.000    0.000    0.000    0.000 device_spec.py:260(job)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1613(writeXref)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2249(alpha_cmd)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:879(from_config)
       12    0.000    0.000    0.000    0.000 patches.py:402(set_linestyle)
      108    0.000    0.000    0.000    0.000 lines.py:518(get_fillstyle)
        2    0.000    0.000    0.000    0.000 _datasource.py:322(__init__)
        3    0.000    0.000    0.000    0.000 math_grad.py:1225(_ShapesFullySpecifiedAndEqual)
       32    0.000    0.000    0.000    0.000 ticker.py:2001(ge)
      779    0.000    0.000    0.000    0.000 font_manager.py:713(get_stretch)
       36    0.000    0.000    0.000    0.000 uuid.py:280(hex)
       12    0.000    0.000    0.000    0.000 posixpath.py:144(basename)
       45    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrBool}
       72    0.000    0.000    0.000    0.000 {method 'tell' of '_io.BufferedWriter' objects}
      260    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
       24    0.000    0.000    0.000    0.000 optimizer_v2.py:860(get_config)
       12    0.000    0.000    0.000    0.000 text.py:535(set_clip_box)
       64    0.000    0.000    0.000    0.000 ticker.py:1984(closeto)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2281(push)
      624    0.000    0.000    0.000    0.000 device_spec.py:268(task)
       24    0.000    0.000    0.000    0.000 metrics.py:237(get_config)
       30    0.000    0.000    0.000    0.000 weakref.py:44(__new__)
        1    0.000    0.000    0.000    0.000 rmsprop.py:98(__init__)
      524    0.000    0.000    0.000    0.000 fromnumeric.py:2232(_any_dispatcher)
        4    0.000    0.000    0.000    0.000 activations.py:495(get)
       12    0.000    0.000    0.000    0.000 save.py:354(<listcomp>)
        6    0.000    0.000    0.000    0.000 losses_utils.py:129(cast_losses_to_common_dtype)
       30    0.000    0.000    0.000    0.000 math_ops.py:3849(conj)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1679(__init__)
        4    0.000    0.000    0.000    0.000 transforms.py:1485(get_matrix)
       20    0.000    0.000    0.000    0.000 transforms.py:2622(get_matrix)
        2    0.000    0.000    0.000    0.000 warnings.py:119(filterwarnings)
       12    0.000    0.000    0.000    0.000 file_io.py:50(__init__)
       12    0.000    0.000    0.000    0.000 tf_logging.py:45(_get_caller)
      312    0.000    0.000    0.000    0.000 _base.py:586(<genexpr>)
       12    0.000    0.000    0.000    0.000 function.py:2487(signature_summary)
       12    0.000    0.000    0.000    0.000 _base.py:4215(get_children)
        2    0.000    0.000    0.000    0.000 gridspec.py:366(get_subplot_params)
      588    0.000    0.000    0.000    0.000 artist.py:1052(sticky_edges)
      552    0.000    0.000    0.000    0.000 saveable_object.py:75(optional_restore)
        4    0.000    0.000    0.000    0.000 _datasource.py:367(_possible_names)
      234    0.000    0.000    0.000    0.000 typing.py:1089(__eq__)
      334    0.000    0.000    0.000    0.000 backend_pdf.py:292(pdfRepr)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:164(_normalize_outputs)
        6    0.000    0.000    0.000    0.000 backend.py:984(unique_object_name)
       32    0.000    0.000    0.000    0.000 __init__.py:1891(method)
        2    0.000    0.000    0.000    0.000 posixpath.py:376(abspath)
       48    0.000    0.000    0.000    0.000 distribute_lib.py:1373(experimental_local_results)
        4    0.000    0.000    0.000    0.000 axis.py:2345(_update_offset_text_position)
      217    0.000    0.000    0.000    0.000 lines.py:547(set_markevery)
        6    0.000    0.000    0.000    0.000 _datasource.py:337(_iszip)
        2    0.000    0.000    0.000    0.000 _datasource.py:458(abspath)
       50    0.000    0.000    0.000    0.000 callbacks.py:1679(on_train_end)
        8    0.000    0.000    0.000    0.000 loss_scale.py:421(get)
      276    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:1217(<listcomp>)
       32    0.000    0.000    0.000    0.000 ticker.py:1973(__init__)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1200(alphaState)
       74    0.000    0.000    0.000    0.000 training.py:2563(_assert_compile_was_called)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1159(_dense_apply_args)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
      132    0.000    0.000    0.000    0.000 backend_pdf.py:2360(<listcomp>)
        4    0.000    0.000    0.000    0.000 compile_utils.py:70(_maybe_broadcast_to_outputs)
      120    0.000    0.000    0.000    0.000 save_impl.py:457(_maybe_wrap_with_training_arg)
       50    0.000    0.000    0.000    0.000 training_utils.py:1220(__init__)
        4    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.update_path_extents}
       86    0.000    0.000    0.000    0.000 backend_bases.py:885(set_antialiased)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1982(_get_output_canvas)
       22    0.000    0.000    0.000    0.000 patches.py:382(set_linewidth)
        4    0.000    0.000    0.000    0.000 _base.py:2407(<listcomp>)
        4    0.000    0.000    0.000    0.000 __init__.py:1320(_check_1d)
       36    0.000    0.000    0.000    0.000 axis.py:1844(<genexpr>)
       64    0.000    0.000    0.000    0.000 _methods.py:73(_clip_dep_is_byte_swapped)
      156    0.000    0.000    0.000    0.000 base.py:569(_name_based_restores)
       81    0.000    0.000    0.000    0.000 path.py:351(__len__)
      372    0.000    0.000    0.000    0.000 __init__.py:836(<listcomp>)
        3    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:226(destroy_resource_op)
        8    0.000    0.000    0.000    0.000 transforms.py:2342(_iter_break_from_left_to_right)
       84    0.000    0.000    0.000    0.000 backend_bases.py:994(get_hatch_path)
      104    0.000    0.000    0.000    0.000 pickle.py:275(whichmodule)
        1    0.000    0.000    0.000    0.000 compile_utils.py:248(_get_loss_object)
      228    0.000    0.000    0.000    0.000 figure.py:463(_get_dpi)
       48    0.000    0.000    0.000    0.000 optimizer_v2.py:731(get_slot_names)
      432    0.000    0.000    0.000    0.000 data_structures.py:475(_make_storage)
      156    0.000    0.000    0.000    0.000 base.py:561(_unconditional_checkpoint_dependencies)
      430    0.000    0.000    0.000    0.000 text.py:856(get_text)
        8    0.000    0.000    0.000    0.000 parse.py:412(urlsplit)
       16    0.000    0.000    0.000    0.000 axis.py:1175(<listcomp>)
       84    0.000    0.000    0.000    0.000 variables.py:22(ld)
        8    0.000    0.000    0.000    0.000 weakref.py:51(_cb)
       24    0.000    0.000    0.000    0.000 __init__.py:809(acquire)
      168    0.000    0.000    0.000    0.000 save_impl.py:574(<listcomp>)
        4    0.000    0.000    0.000    0.000 figure.py:199(update)
        4    0.000    0.000    0.000    0.000 transforms.py:1623(__init__)
       36    0.000    0.000    0.000    0.000 six.py:582(iterkeys)
        7    0.000    0.000    0.000    0.000 layer_utils.py:105(<listcomp>)
        8    0.000    0.000    0.000    0.000 optimizer_v2.py:1173(_restore_slot_variable)
      288    0.000    0.000    0.000    0.000 init_ops_v2.py:62(get_config)
       12    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 {built-in method today}
      312    0.000    0.000    0.000    0.000 _base.py:588(<genexpr>)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2405(cumsum)
       12    0.000    0.000    0.000    0.000 __init__.py:542(usesTime)
       48    0.000    0.000    0.000    0.000 func_graph.py:664(captures)
       12    0.000    0.000    0.000    0.000 variable_scope.py:1115(__init__)
       12    0.000    0.000    0.000    0.000 compat.py:125(as_str_any)
        2    0.000    0.000    0.000    0.000 warnings.py:159(_add_filter)
       29    0.000    0.000    0.000    0.000 cp1252.py:11(encode)
        4    0.000    0.000    0.000    0.000 tf_utils.py:192(get_shapes)
        2    0.000    0.000    0.000    0.000 functional.py:623(_validate_graph_inputs_and_outputs)
        3    0.000    0.000    0.000    0.000 activations.py:457(deserialize)
       12    0.000    0.000    0.000    0.000 save_options.py:39(__init__)
      276    0.000    0.000    0.000    0.000 op_def_library.py:665(<listcomp>)
      228    0.000    0.000    0.000    0.000 cycler.py:227(<genexpr>)
       32    0.000    0.000    0.000    0.000 tf_stack.py:71(__exit__)
       13    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       88    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        6    0.000    0.000    0.000    0.000 losses_utils.py:152(<listcomp>)
        1    0.000    0.000    0.000    0.000 base_layer.py:1242(stateful)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1704(draw_event)
       24    0.000    0.000    0.000    0.000 patches.py:271(get_patch_transform)
      125    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
       43    0.000    0.000    0.000    0.000 backend_pdf.py:2208(fill)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:276(__init__)
        4    0.000    0.000    0.000    0.000 axis.py:1010(get_inverted)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2172(switch_backends)
      588    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
       16    0.000    0.000    0.000    0.000 function_wrappers.py:74(__enter__)
       64    0.000    0.000    0.000    0.000 axis.py:653(locator)
       12    0.000    0.000    0.000    0.000 artist.py:719(set_clip_box)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1658(writeTrailer)
       50    0.000    0.000    0.000    0.000 training_utils.py:1241(__exit__)
        3    0.000    0.000    0.000    0.000 metrics_utils.py:479(ragged_assert_compatible_and_get_flat_values)
        2    0.000    0.000    0.000    0.000 _base.py:3008(get_xbound)
        8    0.000    0.000    0.000    0.000 ticker.py:644(get_offset)
       18    0.000    0.000    0.000    0.000 core.py:593(filled)
      254    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        2    0.000    0.000    0.000    0.000 training.py:2401(_set_save_spec)
        3    0.000    0.000    0.000    0.000 base_layer.py:1717(add_update)
      156    0.000    0.000    0.000    0.000 base.py:553(_update_uid)
        2    0.000    0.000    0.000    0.000 functional.py:845(<setcomp>)
       48    0.000    0.000    0.000    0.000 saving_utils.py:306(<genexpr>)
       30    0.000    0.000    0.000    0.000 resource_variable_ops.py:268(__init__)
       72    0.000    0.000    0.000    0.000 tf_inspect.py:40(_convert_maybe_argspec_to_fullargspec)
        2    0.000    0.000    0.000    0.000 figure.py:111(add)
       50    0.000    0.000    0.000    0.000 callbacks.py:934(set_params)
        3    0.000    0.000    0.000    0.000 backprop.py:1051(<listcomp>)
      210    0.000    0.000    0.000    0.000 font_manager.py:839(set_file)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:2253(hatch_cmd)
      145    0.000    0.000    0.000    0.000 def_function.py:926(_initialize_uninitialized_variables)
        4    0.000    0.000    0.000    0.000 ticker.py:2222(view_limits)
      144    0.000    0.000    0.000    0.000 artist.py:688(get_path_effects)
       12    0.000    0.000    0.000    0.000 __init__.py:548(formatMessage)
       64    0.000    0.000    0.000    0.000 backend_pdf.py:2239(linewidth_cmd)
       50    0.000    0.000    0.000    0.000 callbacks.py:1042(on_train_begin)
        2    0.000    0.000    0.000    0.000 _base.py:3064(get_xlim)
       16    0.000    0.000    0.000    0.000 axis.py:922(_translate_tick_kw)
        8    0.000    0.000    0.000    0.000 __init__.py:157(_remove_proxy)
       86    0.000    0.000    0.000    0.000 typing.py:1019(_abc_negative_cache)
       17    0.000    0.000    0.000    0.000 initializers_v2.py:747(_get_dtype)
       16    0.000    0.000    0.000    0.000 converter.py:188(call_options)
        2    0.000    0.000    0.000    0.000 _base.py:2691(set_axisbelow)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2564(__init__)
       64    0.000    0.000    0.000    0.000 enum.py:581(__hash__)
       13    0.000    0.000    0.000    0.000 _dill.py:127(ndarraysubclassinstance)
        2    0.000    0.000    0.000    0.000 functional.py:947(_build_map)
      132    0.000    0.000    0.000    0.000 def_function.py:915(function_spec)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2629(<listcomp>)
        8    0.000    0.000    0.000    0.000 figure.py:913(get_size_inches)
        2    0.000    0.000    0.000    0.000 figure.py:168(__init__)
        4    0.000    0.000    0.000    0.000 initializers_v2.py:521(__init__)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:281(needs_keras_history)
        6    0.000    0.000    0.000    0.000 backprop.py:846(__enter__)
        3    0.000    0.000    0.000    0.000 def_function.py:62(called_with_tracing)
       32    0.000    0.000    0.000    0.000 artist.py:594(get_snap)
       39    0.000    0.000    0.000    0.000 enum.py:347(__repr__)
      105    0.000    0.000    0.000    0.000 backend_pdf.py:2115(<genexpr>)
       12    0.000    0.000    0.000    0.000 training.py:677(<listcomp>)
        3    0.000    0.000    0.000    0.000 training.py:2750(_is_scalar)
      116    0.000    0.000    0.000    0.000 {method 'get_width_height' of 'matplotlib.ft2font.FT2Font' objects}
        3    0.000    0.000    0.000    0.000 compile_utils.py:606(match_dtype_and_rank)
      288    0.000    0.000    0.000    0.000 tf_utils.py:257(as_list)
        9    0.000    0.000    0.000    0.000 ops.py:4962(prevent_feeding)
       71    0.000    0.000    0.000    0.000 axis.py:215(get_tick_padding)
       64    0.000    0.000    0.000    0.000 axis.py:666(formatter)
       40    0.000    0.000    0.000    0.000 __init__.py:118(__init__)
       48    0.000    0.000    0.000    0.000 inspect.py:687(<genexpr>)
       24    0.000    0.000    0.000    0.000 weakref.py:389(__delitem__)
        8    0.000    0.000    0.000    0.000 version_utils.py:84(should_use_v2)
       16    0.000    0.000    0.000    0.000 backend.py:887(name_scope)
        4    0.000    0.000    0.000    0.000 distribute_lib.py:2658(__init__)
      156    0.000    0.000    0.000    0.000 base.py:565(_unconditional_dependency_names)
       24    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsTensor}
        6    0.000    0.000    0.000    0.000 indexed_slices.py:361(convert_n_to_tensor_or_indexed_slices)
       32    0.000    0.000    0.000    0.000 scale.py:97(__init__)
      310    0.000    0.000    0.000    0.000 transforms.py:1740(get_affine)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:519(<genexpr>)
       17    0.000    0.000    0.000    0.000 __init__.py:38(populate_deserializable_objects)
        6    0.000    0.000    0.000    0.000 backend.py:708(get_default_graph_uid_map)
        4    0.000    0.000    0.000    0.000 init_ops.py:1401(_compute_fans)
        8    0.000    0.000    0.000    0.000 figure.py:778(set_canvas)
       86    0.000    0.000    0.000    0.000 backend_bases.py:963(set_linewidth)
      232    0.000    0.000    0.000    0.000 text.py:1241(get_usetex)
       26    0.000    0.000    0.000    0.000 transforms.py:2249(get_matrix)
        8    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.get_path_extents}
        6    0.000    0.000    0.000    0.000 artist.py:1017(set_label)
      265    0.000    0.000    0.000    0.000 path.py:211(codes)
       18    0.000    0.000    0.000    0.000 __init__.py:185(process)
       88    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       16    0.000    0.000    0.000    0.000 inspect.py:1495(currentframe)
       43    0.000    0.000    0.000    0.000 backend_pdf.py:2197(stroke)
       50    0.000    0.000    0.000    0.000 training.py:2544(_maybe_load_initial_epoch_from_ckpt)
        8    0.000    0.000    0.000    0.000 base_layer.py:1300(input_spec)
       23    0.000    0.000    0.000    0.000 backend.py:976(track_variable)
       51    0.000    0.000    0.000    0.000 backprop.py:109(__init__)
      196    0.000    0.000    0.000    0.000 axis.py:662(formatter)
       10    0.000    0.000    0.000    0.000 figure.py:453(_get_axes)
      156    0.000    0.000    0.000    0.000 text.py:554(set_wrap)
      274    0.000    0.000    0.000    0.000 fromnumeric.py:2671(_amin_dispatcher)
       44    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
       12    0.000    0.000    0.000    0.000 __init__.py:329(getMessage)
        6    0.000    0.000    0.000    0.000 backprop.py:856(_push_tape)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2624(<listcomp>)
       12    0.000    0.000    0.000    0.000 figure.py:70(as_list)
      214    0.000    0.000    0.000    0.000 artist.py:580(get_gid)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(unravel_index)
       32    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
     10/2    0.000    0.000    0.000    0.000 functional.py:978(_build_map_helper)
        1    0.000    0.000    0.000    0.000 losses.py:1857(get)
        2    0.000    0.000    0.000    0.000 functional.py:659(<listcomp>)
       14    0.000    0.000    0.000    0.000 util.py:1078(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:1100(_process_projection_requirements)
       12    0.000    0.000    0.000    0.000 patches.py:475(set_joinstyle)
        1    0.000    0.000    0.000    0.000 training.py:2472(_validate_compile)
       38    0.000    0.000    0.000    0.000 backprop.py:75(op_attr_type)
       30    0.000    0.000    0.000    0.000 context.py:1980(shared_name)
        8    0.000    0.000    0.000    0.000 axis.py:834(limit_range_for_scale)
      189    0.000    0.000    0.000    0.000 markers.py:246(get_fillstyle)
        4    0.000    0.000    0.000    0.000 transforms.py:909(intervalx)
        6    0.000    0.000    0.000    0.000 posixpath.py:338(normpath)
       29    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:37(get_canvas_width_height)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:2366(copy_properties)
        1    0.000    0.000    0.000    0.000 Experiment.py:221(<listcomp>)
       96    0.000    0.000    0.000    0.000 saving_utils.py:273(_serialize_fn)
        1    0.000    0.000    0.000    0.000 backend.py:217(get_uid)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:91(ret)
       24    0.000    0.000    0.000    0.000 backprop.py:726(_handle_or_self)
        4    0.000    0.000    0.000    0.000 _datasource.py:503(_sanitize_relative_path)
       47    0.000    0.000    0.000    0.000 numbers.py:283(__float__)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:261(__exit__)
      120    0.000    0.000    0.000    0.000 def_function.py:906(python_function)
       24    0.000    0.000    0.000    0.000 figure.py:235(_update_this)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:437(__init__)
        9    0.000    0.000    0.000    0.000 {built-in method numpy.fromiter}
       50    0.000    0.000    0.000    0.000 typing.py:1033(_abc_negative_cache_version)
       24    0.000    0.000    0.000    0.000 __init__.py:816(release)
       12    0.000    0.000    0.000    0.000 __init__.py:387(usesTime)
       12    0.000    0.000    0.000    0.000 __init__.py:390(format)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1688(finalize)
        4    0.000    0.000    0.000    0.000 training.py:2760(_minimum_control_deps)
        8    0.000    0.000    0.000    0.000 input_spec.py:57(__init__)
       84    0.000    0.000    0.000    0.000 base_layer.py:2194(inbound_nodes)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:257(__enter__)
        2    0.000    0.000    0.000    0.000 _base.py:2383(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_bases.py:151(__init__)
       16    0.000    0.000    0.000    0.000 transforms.py:1768(is_separable)
       64    0.000    0.000    0.000    0.000 inspect.py:690(<genexpr>)
        1    0.000    0.000    0.000    0.000 losses.py:1838(deserialize)
       84    0.000    0.000    0.000    0.000 base_layer.py:1223(supports_masking)
        7    0.000    0.000    0.000    0.000 base_layer.py:2916(_call_fn_arg_defaults)
        2    0.000    0.000    0.000    0.000 _base.py:3419(get_ybound)
        4    0.000    0.000    0.000    0.000 _base.py:224(_getdefaults)
        4    0.000    0.000    0.000    0.000 figure.py:651(get_children)
       58    0.000    0.000    0.000    0.000 text.py:550(get_wrap)
       56    0.000    0.000    0.000    0.000 image.py:129(<genexpr>)
       26    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        1    0.000    0.000    0.000    0.000 Experiment.py:222(<listcomp>)
        4    0.000    0.000    0.000    0.000 training.py:2650(_reduce)
        1    0.000    0.000    0.000    0.000 metrics_utils.py:63(update_state_wrapper)
        9    0.000    0.000    0.000    0.000 distribution_strategy_context.py:90(get_replica_context)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:320(internal_convert_n_to_tensor_or_indexed_slices)
      129    0.000    0.000    0.000    0.000 stride_tricks.py:202(_broadcast_arrays_dispatcher)
       52    0.000    0.000    0.000    0.000 Experiment.py:157(update_nn)
        3    0.000    0.000    0.000    0.000 losses_utils.py:120(scale_loss_for_distribution)
       10    0.000    0.000    0.000    0.000 tf_utils.py:339(is_symbolic_tensor)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:506(__init__)
       48    0.000    0.000    0.000    0.000 tensor_shape.py:700(__reduce__)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
       23    0.000    0.000    0.000    0.000 base_layer_utils.py:754(v2_dtype_behavior_enabled)
      125    0.000    0.000    0.000    0.000 functional.py:791(_assert_weights_created)
       15    0.000    0.000    0.000    0.000 base.py:763(_preload_simple_restoration)
        2    0.000    0.000    0.000    0.000 _base.py:2994(xaxis_inverted)
        2    0.000    0.000    0.000    0.000 figure.py:1651(clf)
      128    0.000    0.000    0.000    0.000 ticker.py:220(set_axis)
       32    0.000    0.000    0.000    0.000 ticker.py:1663(raise_if_exceeds)
       74    0.000    0.000    0.000    0.000 {built-in method math.floor}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1297(writeHatches)
        2    0.000    0.000    0.000    0.000 training_utils.py:1946(get_static_batch_size)
        4    0.000    0.000    0.000    0.000 _base.py:2411(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3475(get_ylim)
        4    0.000    0.000    0.000    0.000 base_layer_utils.py:164(have_all_keras_metadata)
        2    0.000    0.000    0.000    0.000 figure.py:1959(sca)
        8    0.000    0.000    0.000    0.000 transforms.py:1652(_set)
       46    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
       24    0.000    0.000    0.000    0.000 function.py:3676(__init__)
        4    0.000    0.000    0.000    0.000 _base.py:129(__init__)
      214    0.000    0.000    0.000    0.000 backend_bases.py:162(close_group)
       12    0.000    0.000    0.000    0.000 re.py:324(_subx)
        4    0.000    0.000    0.000    0.000 _bootlocale.py:23(getpreferredencoding)
       29    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2288(pop)
       84    0.000    0.000    0.000    0.000 base_layer.py:2200(outbound_nodes)
       24    0.000    0.000    0.000    0.000 meta_graph.py:171(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3405(yaxis_inverted)
      214    0.000    0.000    0.000    0.000 backend_bases.py:155(open_group)
      115    0.000    0.000    0.000    0.000 backend_bases.py:1013(get_sketch_params)
       50    0.000    0.000    0.000    0.000 weakref.py:371(_commit_removals)
        9    0.000    0.000    0.000    0.000 tensor_util.py:596(<listcomp>)
       32    0.000    0.000    0.000    0.000 text.py:777(get_fontsize)
      129    0.000    0.000    0.000    0.000 __init__.py:1598(<lambda>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1357(writeGouraudTriangles)
       36    0.000    0.000    0.000    0.000 training.py:2632(_compile_was_called)
       16    0.000    0.000    0.000    0.000 compile_utils.py:549(map_to_output_names)
      100    0.000    0.000    0.000    0.000 callbacks.py:758(on_train_end)
       16    0.000    0.000    0.000    0.000 base_layer.py:2489(_set_mask_keras_history_checked)
        6    0.000    0.000    0.000    0.000 tpu.py:208(is_tpu_strategy)
        6    0.000    0.000    0.000    0.000 backprop.py:851(__exit__)
      144    0.000    0.000    0.000    0.000 base.py:621(_object_identifier)
       54    0.000    0.000    0.000    0.000 backend_agg.py:256(points_to_pixels)
       28    0.000    0.000    0.000    0.000 text.py:347(<listcomp>)
       10    0.000    0.000    0.000    0.000 _datasource.py:206(keys)
        2    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
       18    0.000    0.000    0.000    0.000 backend_pdf.py:2273(fillcolor_cmd)
       84    0.000    0.000    0.000    0.000 layer_serialization.py:144(objects_to_serialize)
        7    0.000    0.000    0.000    0.000 base_layer.py:2929(_call_fn_arg_positions)
       36    0.000    0.000    0.000    0.000 checkpoint_options.py:44(__init__)
      144    0.000    0.000    0.000    0.000 backend_bases.py:778(restore)
        6    0.000    0.000    0.000    0.000 __init__.py:1286(debug)
      156    0.000    0.000    0.000    0.000 {built-in method math.gcd}
       12    0.000    0.000    0.000    0.000 tf_utils.py:467(<genexpr>)
      140    0.000    0.000    0.000    0.000 axis.py:285(get_loc)
       72    0.000    0.000    0.000    0.000 backend_bases.py:807(get_clip_path)
      102    0.000    0.000    0.000    0.000 markers.py:313(_set_nothing)
       24    0.000    0.000    0.000    0.000 cycler.py:225(__iter__)
        8    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
       64    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
      203    0.000    0.000    0.000    0.000 fractions.py:278(denominator)
       12    0.000    0.000    0.000    0.000 saving_utils.py:142(<dictcomp>)
       32    0.000    0.000    0.000    0.000 distribute_lib.py:1991(_container_strategy)
        4    0.000    0.000    0.000    0.000 distribution_strategy_context.py:56(__init__)
       16    0.000    0.000    0.000    0.000 axis.py:1442(get_minor_ticks)
      135    0.000    0.000    0.000    0.000 markers.py:269(get_marker)
        4    0.000    0.000    0.000    0.000 transforms.py:914(intervaly)
       58    0.000    0.000    0.000    0.000 artist.py:793(get_alpha)
        2    0.000    0.000    0.000    0.000 _datasource.py:354(_splitzipext)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(iscomplexobj)
       66    0.000    0.000    0.000    0.000 backend_pdf.py:229(__init__)
        2    0.000    0.000    0.000    0.000 util.py:1354(saver_with_op_caching)
       60    0.000    0.000    0.000    0.000 data_structures.py:903(<dictcomp>)
       15    0.000    0.000    0.000    0.000 ops.py:2527(_get_attr_int)
        2    0.000    0.000    0.000    0.000 figure.py:1070(_make_key)
        4    0.000    0.000    0.000    0.000 transforms.py:1632(_init)
      145    0.000    0.000    0.000    0.000 {method 'get_descent' of 'matplotlib.ft2font.FT2Font' objects}
      144    0.000    0.000    0.000    0.000 __init__.py:1760(<listcomp>)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:837(sort)
        2    0.000    0.000    0.000    0.000 decorators.py:41(wrapper)
       12    0.000    0.000    0.000    0.000 threading.py:1230(current_thread)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:539(<listcomp>)
       96    0.000    0.000    0.000    0.000 layer_serialization.py:34(object_identifier)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:1256(_filter_grads)
        4    0.000    0.000    0.000    0.000 _base.py:142(set_prop_cycle)
        2    0.000    0.000    0.000    0.000 figure.py:104(bubble)
        2    0.000    0.000    0.000    0.000 transforms.py:768(null)
        8    0.000    0.000    0.000    0.000 transforms.py:1271(_iter_break_from_left_to_right)
        8    0.000    0.000    0.000    0.000 transforms.py:336(p1)
       68    0.000    0.000    0.000    0.000 backend_pdf.py:235(pdfRepr)
       65    0.000    0.000    0.000    0.000 activations.py:405(linear)
        8    0.000    0.000    0.000    0.000 base_layer.py:3219(<genexpr>)
       24    0.000    0.000    0.000    0.000 tensor_shape.py:1223(__reduce__)
        2    0.000    0.000    0.000    0.000 figure.py:513(set_constrained_layout)
      208    0.000    0.000    0.000    0.000 fromnumeric.py:3126(_around_dispatcher)
       60    0.000    0.000    0.000    0.000 data_structures.py:747(<dictcomp>)
      144    0.000    0.000    0.000    0.000 base.py:633(_tracking_metadata)
        2    0.000    0.000    0.000    0.000 errors_impl.py:297(__init__)
        4    0.000    0.000    0.000    0.000 _base.py:2414(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:246(__init__)
        2    0.000    0.000    0.000    0.000 text.py:1042(set_fontsize)
       16    0.000    0.000    0.000    0.000 parse.py:109(_coerce_args)
       68    0.000    0.000    0.000    0.000 {method 'write' of '_io.BytesIO' objects}
       10    0.000    0.000    0.000    0.000 backend_pdf.py:2265(rgb_cmd)
       58    0.000    0.000    0.000    0.000 text.py:230(_get_multialignment)
       16    0.000    0.000    0.000    0.000 ticker.py:1819(__call__)
      164    0.000    0.000    0.000    0.000 path.py:251(should_simplify)
       12    0.000    0.000    0.000    0.000 __init__.py:120(getLevelName)
      104    0.000    0.000    0.000    0.000 statistics.py:170(_coerce)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:498(<genexpr>)
      140    0.000    0.000    0.000    0.000 axis.py:342(<genexpr>)
        4    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
       54    0.000    0.000    0.000    0.000 lines.py:602(get_markevery)
       13    0.000    0.000    0.000    0.000 pickle.py:188(__init__)
       43    0.000    0.000    0.000    0.000 backend_pdf.py:299(__init__)
       43    0.000    0.000    0.000    0.000 backend_pdf.py:323(_paint_path)
       50    0.000    0.000    0.000    0.000 callbacks.py:944(on_train_begin)
        3    0.000    0.000    0.000    0.000 math_grad.py:143(_IsScalar)
        6    0.000    0.000    0.000    0.000 backprop.py:869(_pop_tape)
        3    0.000    0.000    0.000    0.000 tape.py:45(push_new_tape)
        2    0.000    0.000    0.000    0.000 _base.py:2389(<listcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:1048(_set_artist_props)
       86    0.000    0.000    0.000    0.000 backend_bases.py:975(set_snap)
       30    0.000    0.000    0.000    0.000 text.py:350(<listcomp>)
      152    0.000    0.000    0.000    0.000 path.py:230(simplify_threshold)
       24    0.000    0.000    0.000    0.000 __init__.py:705(filter)
        5    0.000    0.000    0.000    0.000 copyreg.py:96(_slotnames)
        7    0.000    0.000    0.000    0.000 base_layer.py:2937(_call_accepts_kwargs)
       32    0.000    0.000    0.000    0.000 cache.py:74(_get_key)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:325(require_replica_context)
       12    0.000    0.000    0.000    0.000 distribution_strategy_context.py:327(_get_default_replica_context)
       60    0.000    0.000    0.000    0.000 axis.py:649(locator)
        2    0.000    0.000    0.000    0.000 figure.py:1907(_set_artist_props)
       58    0.000    0.000    0.000    0.000 text.py:832(get_position)
       54    0.000    0.000    0.000    0.000 markers.py:263(get_joinstyle)
       86    0.000    0.000    0.000    0.000 artist.py:633(get_sketch_params)
        2    0.000    0.000    0.000    0.000 training_utils.py:1912(get_input_shape_and_dtype)
       14    0.000    0.000    0.000    0.000 graph_view.py:145(__init__)
        2    0.000    0.000    0.000    0.000 backend_inline.py:55(draw_if_interactive)
        2    0.000    0.000    0.000    0.000 gridspec.py:200(__getitem__)
        2    0.000    0.000    0.000    0.000 text.py:1059(set_fontweight)
     16/8    0.000    0.000    0.000    0.000 transforms.py:2348(<lambda>)
        4    0.000    0.000    0.000    0.000 __init__.py:601(push)
        2    0.000    0.000    0.000    0.000 warnings.py:428(__init__)
       24    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
       12    0.000    0.000    0.000    0.000 signature_serialization.py:203(__init__)
       60    0.000    0.000    0.000    0.000 save_impl.py:113(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:213(__init__)
       12    0.000    0.000    0.000    0.000 backend_bases.py:757(copy_properties)
       84    0.000    0.000    0.000    0.000 backend_bases.py:990(get_hatch)
        4    0.000    0.000    0.000    0.000 transforms.py:2127(__init__)
        4    0.000    0.000    0.000    0.000 {method 'get_sfnt_table' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 rcsetup.py:163(validate_axisbelow)
       72    0.000    0.000    0.000    0.000 distribute_lib.py:2970(_local_results)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:253(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:1089(fixlist)
       58    0.000    0.000    0.000    0.000 text.py:255(get_rotation_mode)
       32    0.000    0.000    0.000    0.000 ticker.py:276(set_locs)
       32    0.000    0.000    0.000    0.000 ticker.py:532(set_useOffset)
        8    0.000    0.000    0.000    0.000 core.py:677(getdata)
       90    0.000    0.000    0.000    0.000 _collections_abc.py:392(__subclasshook__)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:215(__iter__)
        4    0.000    0.000    0.000    0.000 base_layer.py:418(build)
        2    0.000    0.000    0.000    0.000 functional.py:289(_set_output_names)
        3    0.000    0.000    0.000    0.000 backprop.py:822(__init__)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:916(num_elements)
        8    0.000    0.000    0.000    0.000 patches.py:742(get_path)
       12    0.000    0.000    0.000    0.000 transforms.py:2377(transform_path_non_affine)
        4    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
       12    0.000    0.000    0.000    0.000 threading.py:1076(name)
        4    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1177(<listcomp>)
        2    0.000    0.000    0.000    0.000 backend_mixed.py:15(__init__)
      151    0.000    0.000    0.000    0.000 fractions.py:274(numerator)
       60    0.000    0.000    0.000    0.000 save_impl.py:117(<dictcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:84(__init__)
       16    0.000    0.000    0.000    0.000 api.py:119(__init__)
       10    0.000    0.000    0.000    0.000 distribution_strategy_context.py:42(__init__)
        6    0.000    0.000    0.000    0.000 distribution_strategy_context.py:50(__init__)
       26    0.000    0.000    0.000    0.000 resource_variable_ops.py:460(_assign_dependencies)
       72    0.000    0.000    0.000    0.000 backend_bases.py:845(get_rgb)
       82    0.000    0.000    0.000    0.000 backend_bases.py:967(set_url)
       58    0.000    0.000    0.000    0.000 text.py:739(get_color)
       54    0.000    0.000    0.000    0.000 markers.py:266(get_capstyle)
       54    0.000    0.000    0.000    0.000 markers.py:310(get_snap_threshold)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
       15    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrInt}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:2377(finalize)
       10    0.000    0.000    0.000    0.000 node.py:123(parent_nodes)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:65(validate)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:1397(num_replicas_in_sync)
        3    0.000    0.000    0.000    0.000 array_ops.py:852(_check_index)
        8    0.000    0.000    0.000    0.000 indexed_slices.py:283(internal_convert_to_tensor_or_indexed_slices)
       71    0.000    0.000    0.000    0.000 axis.py:153(<dictcomp>)
       72    0.000    0.000    0.000    0.000 backend_bases.py:857(get_snap)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2240(mpl_disconnect)
       14    0.000    0.000    0.000    0.000 patches.py:302(set_antialiased)
       29    0.000    0.000    0.000    0.000 {method 'get_bitmap_offset' of 'matplotlib.ft2font.FT2Font' objects}
       40    0.000    0.000    0.000    0.000 cycler.py:371(<genexpr>)
        2    0.000    0.000    0.000    0.000 __init__.py:631(bubble)
        2    0.000    0.000    0.000    0.000 npyio.py:1339(WriteWrap)
       56    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
       24    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:512(<genexpr>)
       12    0.000    0.000    0.000    0.000 tmpjrr6y7yw.py:7(inner_factory)
        7    0.000    0.000    0.000    0.000 policy.py:517(policy_defaults_to_floatx)
       40    0.000    0.000    0.000    0.000 layer_utils.py:273(<listcomp>)
        3    0.000    0.000    0.000    0.000 tape.py:41(watched_variables)
       16    0.000    0.000    0.000    0.000 tf_stack.py:83(reset)
       16    0.000    0.000    0.000    0.000 tf_stack.py:95(reset)
       29    0.000    0.000    0.000    0.000 backend_agg.py:239(get_canvas_width_height)
       12    0.000    0.000    0.000    0.000 patches.py:491(set_hatch)
       60    0.000    0.000    0.000    0.000 ticker.py:295(_set_locator)
       54    0.000    0.000    0.000    0.000 lines.py:896(get_drawstyle)
       34    0.000    0.000    0.000    0.000 {method 'get_glyph_name' of 'matplotlib.ft2font.FT2Font' objects}
        8    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 warnings.py:449(__enter__)
       12    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       52    0.000    0.000    0.000    0.000 node.py:118(keras_inputs)
       16    0.000    0.000    0.000    0.000 conversion.py:251(_create_custom_vars)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:242(get_update_replica_id)
       55    0.000    0.000    0.000    0.000 variables.py:63(_make_getter)
        6    0.000    0.000    0.000    0.000 tape.py:145(pop_tape)
        2    0.000    0.000    0.000    0.000 backend_agg.py:108(_update_methods)
       12    0.000    0.000    0.000    0.000 axis.py:1412(get_major_locator)
       12    0.000    0.000    0.000    0.000 text.py:528(_update_clip_properties)
       54    0.000    0.000    0.000    0.000 markers.py:304(get_alt_path)
       34    0.000    0.000    0.000    0.000 {method 'get_char_index' of 'matplotlib.ft2font.FT2Font' objects}
       50    0.000    0.000    0.000    0.000 nanfunctions.py:226(_nanmin_dispatcher)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
        4    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:32(option_image_nocomposite)
       10    0.000    0.000    0.000    0.000 policy.py:433(should_cast_variables)
        2    0.000    0.000    0.000    0.000 tf_utils.py:420(assert_no_legacy_layers)
       24    0.000    0.000    0.000    0.000 backend.py:166(backend)
        4    0.000    0.000    0.000    0.000 dataset_ops.py:4595(<listcomp>)
        4    0.000    0.000    0.000    0.000 array_ops.py:778(<genexpr>)
       24    0.000    0.000    0.000    0.000 array_ops.py:1407(<genexpr>)
        4    0.000    0.000    0.000    0.000 axis.py:2160(get_minpos)
        2    0.000    0.000    0.000    0.000 _base.py:2602(<listcomp>)
        6    0.000    0.000    0.000    0.000 _base.py:3241(get_xscale)
       54    0.000    0.000    0.000    0.000 backend_bases.py:660(points_to_pixels)
       72    0.000    0.000    0.000    0.000 backend_bases.py:817(get_dashes)
       32    0.000    0.000    0.000    0.000 backend_bases.py:912(set_dashes)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1265(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:66(__init__)
       54    0.000    0.000    0.000    0.000 markers.py:298(get_path)
       24    0.000    0.000    0.000    0.000 cycler.py:138(keys)
        1    0.000    0.000    0.000    0.000 __init__.py:170(disconnect)
        2    0.000    0.000    0.000    0.000 type_check.py:280(iscomplexobj)
        2    0.000    0.000    0.000    0.000 __init__.py:517(__init__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:416(_get_metric_objects)
        3    0.000    0.000    0.000    0.000 distribution_strategy_context.py:154(in_cross_replica_context)
        4    0.000    0.000    0.000    0.000 axis.py:2460(get_minpos)
        2    0.000    0.000    0.000    0.000 figure.py:544(set_constrained_layout_pads)
        2    0.000    0.000    0.000    0.000 figure.py:155(__contains__)
       10    0.000    0.000    0.000    0.000 figure.py:140(current_key_axes)
       72    0.000    0.000    0.000    0.000 backend_bases.py:1001(get_hatch_color)
       11    0.000    0.000    0.000    0.000 _pylab_helpers.py:99(get_active)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:109(set_active)
        8    0.000    0.000    0.000    0.000 mathtext.py:3316(__init__)
       34    0.000    0.000    0.000    0.000 transforms.py:2053(get_matrix)
        2    0.000    0.000    0.000    0.000 transforms.py:2606(__init__)
       36    0.000    0.000    0.000    0.000 fromnumeric.py:2838(_prod_dispatcher)
       16    0.000    0.000    0.000    0.000 inspect.py:229(istraceback)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:997(_assert_float_dtype)
       36    0.000    0.000    0.000    0.000 functional.py:255(output)
       48    0.000    0.000    0.000    0.000 transpiler.py:203(<genexpr>)
       12    0.000    0.000    0.000    0.000 tpu.py:209(<lambda>)
       16    0.000    0.000    0.000    0.000 _base.py:2548(<genexpr>)
       28    0.000    0.000    0.000    0.000 axis.py:383(<dictcomp>)
        4    0.000    0.000    0.000    0.000 figure.py:1704(<lambda>)
        2    0.000    0.000    0.000    0.000 gridspec.py:31(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:1294(get_backend)
      144    0.000    0.000    0.000    0.000 __init__.py:1765(<listcomp>)
       12    0.000    0.000    0.000    0.000 process.py:35(current_process)
       16    0.000    0.000    0.000    0.000 inspect.py:253(iscode)
        2    0.000    0.000    0.000    0.000 posixpath.py:64(isabs)
       58    0.000    0.000    0.000    0.000 {built-in method math.radians}
       29    0.000    0.000    0.000    0.000 {built-in method math.sin}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetNew}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2233(capstyle_cmd)
       16    0.000    0.000    0.000    0.000 compile_utils.py:596(map_missing_dict_keys)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:500(<genexpr>)
        3    0.000    0.000    0.000    0.000 losses.py:185(_get_reduction)
       24    0.000    0.000    0.000    0.000 layer_serialization.py:128(object_identifier)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:379(_clip_gradients)
       24    0.000    0.000    0.000    0.000 metric_serialization.py:28(object_identifier)
        4    0.000    0.000    0.000    0.000 backend.py:360(global_learning_phase_is_set)
        2    0.000    0.000    0.000    0.000 figure.py:487(set_tight_layout)
       72    0.000    0.000    0.000    0.000 backend_bases.py:1009(get_hatch_linewidth)
       13    0.000    0.000    0.000    0.000 __init__.py:60(__hash__)
        2    0.000    0.000    0.000    0.000 rcsetup.py:123(validate_bool)
       76    0.000    0.000    0.000    0.000 fromnumeric.py:2320(_all_dispatcher)
       50    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
       12    0.000    0.000    0.000    0.000 process.py:146(name)
        2    0.000    0.000    0.000    0.000 contextlib.py:338(__exit__)
       26    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2242(dash_cmd)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:656(_set_hyper)
        8    0.000    0.000    0.000    0.000 base_layer.py:1000(<genexpr>)
        2    0.000    0.000    0.000    0.000 init_ops.py:105(__init__)
        3    0.000    0.000    0.000    0.000 tape.py:51(push_tape)
       12    0.000    0.000    0.000    0.000 axis.py:1865(get_label_position)
        2    0.000    0.000    0.000    0.000 _base.py:3884(set_navigate)
       32    0.000    0.000    0.000    0.000 ticker.py:556(set_useMathText)
        4    0.000    0.000    0.000    0.000 __init__.py:827(__init__)
       32    0.000    0.000    0.000    0.000 function_base.py:1137(_diff_dispatcher)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2017(_clip_dispatcher)
       16    0.000    0.000    0.000    0.000 inspect.py:239(isframe)
        2    0.000    0.000    0.000    0.000 warnings.py:468(__exit__)
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:921(<listcomp>)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:271(__hash__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:508(<dictcomp>)
       24    0.000    0.000    0.000    0.000 network_serialization.py:28(object_identifier)
        2    0.000    0.000    0.000    0.000 tf_utils.py:434(<listcomp>)
        8    0.000    0.000    0.000    0.000 functional.py:776(<setcomp>)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:573(constraint)
       30    0.000    0.000    0.000    0.000 resource_variable_ops.py:2042(op)
       12    0.000    0.000    0.000    0.000 math_ops.py:1800(<genexpr>)
       12    0.000    0.000    0.000    0.000 math_ops.py:3500(<genexpr>)
       28    0.000    0.000    0.000    0.000 axis.py:361(<dictcomp>)
       12    0.000    0.000    0.000    0.000 axis.py:822(get_scale)
        4    0.000    0.000    0.000    0.000 figure.py:78(get)
        8    0.000    0.000    0.000    0.000 transforms.py:296(y0)
       48    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
       34    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.BytesIO' objects}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeWatchedVariables}
       43    0.000    0.000    0.000    0.000 backend_pdf.py:302(pdfRepr)
        4    0.000    0.000    0.000    0.000 compile_utils.py:98(<lambda>)
       12    0.000    0.000    0.000    0.000 save_options.py:98(_validate_namespace_whitelist)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:635(<genexpr>)
        5    0.000    0.000    0.000    0.000 node.py:116(<listcomp>)
       16    0.000    0.000    0.000    0.000 base_layer_utils.py:303(<genexpr>)
       12    0.000    0.000    0.000    0.000 functional.py:355(_should_compute_mask)
       20    0.000    0.000    0.000    0.000 base_layer.py:2821(<genexpr>)
        1    0.000    0.000    0.000    0.000 data_structures.py:66(_should_wrap_tuple)
       24    0.000    0.000    0.000    0.000 spines.py:217(get_path)
       12    0.000    0.000    0.000    0.000 _base.py:535(get_window_extent)
        4    0.000    0.000    0.000    0.000 figure.py:152(__call__)
        8    0.000    0.000    0.000    0.000 lines.py:1447(is_dashed)
        2    0.000    0.000    0.000    0.000 transforms.py:394(width)
        2    0.000    0.000    0.000    0.000 pyplot.py:619(get_fignums)
        2    0.000    0.000    0.000    0.000 __init__.py:573(__init__)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2473(_ptp_dispatcher)
        4    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
       16    0.000    0.000    0.000    0.000 typing.py:889(__extrahook__)
        4    0.000    0.000    0.000    0.000 re.py:231(compile)
        4    0.000    0.000    0.000    0.000 codecs.py:185(__init__)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2236(joinstyle_cmd)
       24    0.000    0.000    0.000    0.000 save.py:187(<dictcomp>)
        4    0.000    0.000    0.000    0.000 data_adapter.py:1412(unpack_x_y_sample_weight)
        2    0.000    0.000    0.000    0.000 training_utils.py:1926(_is_graph_model)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:206(_add_signature)
        8    0.000    0.000    0.000    0.000 input_spec.py:75(<dictcomp>)
        5    0.000    0.000    0.000    0.000 node.py:115(<listcomp>)
       10    0.000    0.000    0.000    0.000 generic_utils.py:772(validate_kwargs)
       26    0.000    0.000    0.000    0.000 regularizers.py:360(get)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:1020(__init__)
        8    0.000    0.000    0.000    0.000 base_layer.py:2629(<genexpr>)
        8    0.000    0.000    0.000    0.000 axis.py:1559(have_units)
       24    0.000    0.000    0.000    0.000 axis.py:1579(set_units)
       32    0.000    0.000    0.000    0.000 scale.py:43(__init__)
        8    0.000    0.000    0.000    0.000 _base.py:2432(tol)
       28    0.000    0.000    0.000    0.000 axis.py:372(<dictcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:645(__init__)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1236(__init__)
       12    0.000    0.000    0.000    0.000 figure.py:74(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:382(<dictcomp>)
       16    0.000    0.000    0.000    0.000 ticker.py:1822(tick_values)
       12    0.000    0.000    0.000    0.000 _datasource.py:173(_load)
       36    0.000    0.000    0.000    0.000 shape_base.py:21(_atleast_1d_dispatcher)
        2    0.000    0.000    0.000    0.000 os.py:794(fsencode)
        6    0.000    0.000    0.000    0.000 weakref.py:73(__eq__)
       29    0.000    0.000    0.000    0.000 {built-in method math.cos}
        8    0.000    0.000    0.000    0.000 {built-in method sys.is_finalizing}
        6    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRemove}
       29    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:24(flipy)
        1    0.000    0.000    0.000    0.000 training.py:2629(_get_distribution_strategy)
        1    0.000    0.000    0.000    0.000 compile_utils.py:370(_create_ordered_metrics)
        4    0.000    0.000    0.000    0.000 training.py:152(is_functional_model_init_params)
        2    0.000    0.000    0.000    0.000 functional.py:938(<listcomp>)
        1    0.000    0.000    0.000    0.000 generic_utils.py:283(class_and_config_for_serialized_keras_object)
        1    0.000    0.000    0.000    0.000 base_layer_utils.py:315(is_in_eager_or_tf_function)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:61(all)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:664(<lambda>)
        2    0.000    0.000    0.000    0.000 _base.py:886(set_axes_locator)
        6    0.000    0.000    0.000    0.000 _base.py:3635(get_yscale)
       16    0.000    0.000    0.000    0.000 axis.py:788(get_remove_overlapping_locs)
        2    0.000    0.000    0.000    0.000 __init__.py:44(get_projection_class)
        8    0.000    0.000    0.000    0.000 figure.py:1703(<genexpr>)
        2    0.000    0.000    0.000    0.000 figure.py:932(get_facecolor)
        2    0.000    0.000    0.000    0.000 figure.py:96(_entry_from_axes)
        2    0.000    0.000    0.000    0.000 gridspec.py:508(__init__)
        6    0.000    0.000    0.000    0.000 transforms.py:931(minposx)
        8    0.000    0.000    0.000    0.000 path.py:630(unit_rectangle)
        4    0.000    0.000    0.000    0.000 transforms.py:286(x0)
        6    0.000    0.000    0.000    0.000 __init__.py:626(clear)
        2    0.000    0.000    0.000    0.000 py3k.py:50(asstr)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1800(_nonzero_dispatcher)
       13    0.000    0.000    0.000    0.000 pickle.py:195(end_framing)
        1    0.000    0.000    0.000    0.000 enum.py:312(__getattr__)
        2    0.000    0.000    0.000    0.000 training.py:2475(<genexpr>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:37(__init__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:280(__init__)
       16    0.000    0.000    0.000    0.000 layer_utils.py:107(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:107(_set_name_scope)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1045(_init_set_name)
        4    0.000    0.000    0.000    0.000 tf_utils.py:194(<lambda>)
        3    0.000    0.000    0.000    0.000 math_ops.py:1801(<listcomp>)
        7    0.000    0.000    0.000    0.000 ops.py:6423(<genexpr>)
       15    0.000    0.000    0.000    0.000 tensor_shape.py:849(__bool__)
       14    0.000    0.000    0.000    0.000 _base.py:2470(_get_axis_list)
        8    0.000    0.000    0.000    0.000 _base.py:232(<genexpr>)
        8    0.000    0.000    0.000    0.000 figure.py:505(get_constrained_layout)
        2    0.000    0.000    0.000    0.000 figure.py:944(get_dpi)
        2    0.000    0.000    0.000    0.000 backend_bases.py:117(get_registered_canvas_class)
       10    0.000    0.000    0.000    0.000 artist.py:350(is_transform_set)
        4    0.000    0.000    0.000    0.000 artist.py:1033(get_zorder)
        4    0.000    0.000    0.000    0.000 __init__.py:1312(is_interactive)
        2    0.000    0.000    0.000    0.000 __init__.py:2148(_check_getitem)
        2    0.000    0.000    0.000    0.000 _datasource.py:332(__del__)
        2    0.000    0.000    0.000    0.000 contextlib.py:271(__init__)
        6    0.000    0.000    0.000    0.000 posixpath.py:135(splitdrive)
       24    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
        1    0.000    0.000    0.000    0.000 Experiment.py:134(__init__)
        3    0.000    0.000    0.000    0.000 tmpu_v700ox.py:7(inner_factory)
        6    0.000    0.000    0.000    0.000 compile_utils.py:398(<genexpr>)
        3    0.000    0.000    0.000    0.000 compile_utils.py:626(get_mask)
       12    0.000    0.000    0.000    0.000 layer_serialization.py:147(functions_to_serialize)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:1246(_distribution_strategy_scope)
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:483(frozen)
       18    0.000    0.000    0.000    0.000 constraints.py:299(get)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:165(<genexpr>)
        2    0.000    0.000    0.000    0.000 functional.py:626(<setcomp>)
        4    0.000    0.000    0.000    0.000 base_layer.py:2442(_handle_activity_regularization)
        4    0.000    0.000    0.000    0.000 functional.py:141(<genexpr>)
        3    0.000    0.000    0.000    0.000 collective_util.py:50(__init__)
       12    0.000    0.000    0.000    0.000 function.py:1969(inputs)
        3    0.000    0.000    0.000    0.000 def_function.py:80(get_tracing_count)
       16    0.000    0.000    0.000    0.000 axis.py:1364(<listcomp>)
        8    0.000    0.000    0.000    0.000 _base.py:1202(get_aspect)
        2    0.000    0.000    0.000    0.000 _base.py:2971(set_axis_on)
        4    0.000    0.000    0.000    0.000 _base.py:242(_setdefaults)
        6    0.000    0.000    0.000    0.000 widgets.py:34(__init__)
       29    0.000    0.000    0.000    0.000 backend_bases.py:637(flipy)
        8    0.000    0.000    0.000    0.000 backend_bases.py:895(set_clip_rectangle)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1687(is_saving)
        6    0.000    0.000    0.000    0.000 gridspec.py:67(get_geometry)
        6    0.000    0.000    0.000    0.000 transforms.py:935(minposy)
       10    0.000    0.000    0.000    0.000 artist.py:1201(mouseover)
        2    0.000    0.000    0.000    0.000 transforms.py:400(height)
        6    0.000    0.000    0.000    0.000 __init__.py:51(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:1997(__init__)
       22    0.000    0.000    0.000    0.000 _collections_abc.py:302(__subclasshook__)
       12    0.000    0.000    0.000    0.000 _collections_abc.py:367(__subclasshook__)
        5    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetAdd}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1493(writeImages)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1533(writeMarkers)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1629(is_string_like)
        1    0.000    0.000    0.000    0.000 tmpzwdntdj_.py:7(inner_factory)
        5    0.000    0.000    0.000    0.000 fractions.py:504(__trunc__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:270(_should_broadcast)
        1    0.000    0.000    0.000    0.000 compile_utils.py:334(_set_metric_names)
        2    0.000    0.000    0.000    0.000 compile_utils.py:419(<listcomp>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:480(_should_broadcast)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:212(__getitem__)
        1    0.000    0.000    0.000    0.000 layer_utils.py:168(<listcomp>)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:514(<listcomp>)
        4    0.000    0.000    0.000    0.000 functional.py:768(<genexpr>)
        2    0.000    0.000    0.000    0.000 functional.py:149(<lambda>)
        8    0.000    0.000    0.000    0.000 distribute_lib.py:2901(variable_created_in_scope)
        3    0.000    0.000    0.000    0.000 backprop.py:875(__del__)
       12    0.000    0.000    0.000    0.000 file_io.py:193(__enter__)
        3    0.000    0.000    0.000    0.000 tape.py:38(__init__)
        8    0.000    0.000    0.000    0.000 _base.py:897(get_axes_locator)
        4    0.000    0.000    0.000    0.000 _base.py:2405(<listcomp>)
        8    0.000    0.000    0.000    0.000 _base.py:321(<genexpr>)
        2    0.000    0.000    0.000    0.000 figure.py:2059(add_axobserver)
        4    0.000    0.000    0.000    0.000 figure.py:483(get_tight_layout)
        2    0.000    0.000    0.000    0.000 figure.py:928(get_edgecolor)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1679(_idle_draw_cntx)
       24    0.000    0.000    0.000    0.000 transforms.py:1284(depth)
        4    0.000    0.000    0.000    0.000 artist.py:827(get_clip_path)
        4    0.000    0.000    0.000    0.000 __init__.py:828(<dictcomp>)
        2    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
       10    0.000    0.000    0.000    0.000 __init__.py:537(__missing__)
        2    0.000    0.000    0.000    0.000 __init__.py:586(update)
        8    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
        2    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'utcoffset' of 'datetime.datetime' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1273(_write_soft_mask_groups)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:268(__lt__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1632(is_date)
        2    0.000    0.000    0.000    0.000 compile_utils.py:40(build)
        1    0.000    0.000    0.000    0.000 compile_utils.py:151(_create_metrics)
        2    0.000    0.000    0.000    0.000 compile_utils.py:421(_get_metric_object)
       10    0.000    0.000    0.000    0.000 functional.py:905(<lambda>)
        5    0.000    0.000    0.000    0.000 base_layer.py:2825(<genexpr>)
        4    0.000    0.000    0.000    0.000 distribute_lib.py:2745(strategy)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2947(_reduce_to)
        1    0.000    0.000    0.000    0.000 function.py:3127(<listcomp>)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:881(value_type)
        4    0.000    0.000    0.000    0.000 backend_agg.py:272(option_image_nocomposite)
        2    0.000    0.000    0.000    0.000 _base.py:2133(use_sticky_edges)
        4    0.000    0.000    0.000    0.000 _base.py:604(_request_autoscale_view)
        2    0.000    0.000    0.000    0.000 __init__.py:19(get_projection_class)
        2    0.000    0.000    0.000    0.000 figure.py:1073(fixitems)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2582(notify_axes_change)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1929(draw)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:29(get_fig_manager)
        2    0.000    0.000    0.000    0.000 gridspec.py:93(set_width_ratios)
        2    0.000    0.000    0.000    0.000 gridspec.py:204(_normalize)
        2    0.000    0.000    0.000    0.000 gridspec.py:113(set_height_ratios)
        2    0.000    0.000    0.000    0.000 patches.py:290(get_facecolor)
        4    0.000    0.000    0.000    0.000 transforms.py:2085(inverted)
        2    0.000    0.000    0.000    0.000 artist.py:961(set_in_layout)
        4    0.000    0.000    0.000    0.000 artist.py:1013(get_label)
        2    0.000    0.000    0.000    0.000 _datasource.py:225(__getitem__)
        2    0.000    0.000    0.000    0.000 _iotools.py:46(_is_string_like)
        6    0.000    0.000    0.000    0.000 multiarray.py:635(result_type)
        2    0.000    0.000    0.000    0.000 parse.py:394(_checknetloc)
        1    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:521(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:529(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:601(<dictcomp>)
        4    0.000    0.000    0.000    0.000 compile_utils.py:93(_broadcast_fn)
        6    0.000    0.000    0.000    0.000 compile_utils.py:399(<genexpr>)
        2    0.000    0.000    0.000    0.000 distributed_training_utils.py:439(is_tpu_strategy)
        4    0.000    0.000    0.000    0.000 node.py:72(<lambda>)
        1    0.000    0.000    0.000    0.000 generic_utils.py:199(get_registered_object)
        3    0.000    0.000    0.000    0.000 tensor_util.py:499(<listcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:1486(<dictcomp>)
       12    0.000    0.000    0.000    0.000 scale.py:79(limit_range_for_scale)
        2    0.000    0.000    0.000    0.000 _base.py:3900(set_navigate_mode)
        2    0.000    0.000    0.000    0.000 _subplots.py:117(get_subplotspec)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2597(destroy)
        2    0.000    0.000    0.000    0.000 figure.py:97(<dictcomp>)
       12    0.000    0.000    0.000    0.000 figure.py:76(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:532(num2)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:78(has_fignum)
        2    0.000    0.000    0.000    0.000 patches.py:286(get_edgecolor)
        2    0.000    0.000    0.000    0.000 npyio.py:1205(_savetxt_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2401(_cumsum_dispatcher)
       16    0.000    0.000    0.000    0.000 parse.py:98(_noop)
        2    0.000    0.000    0.000    0.000 contextlib.py:17(__enter__)
        1    0.000    0.000    0.000    0.000 enum.py:28(_is_dunder)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:525(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1556(writePathCollectionTemplates)
        3    0.000    0.000    0.000    0.000 compile_utils.py:631(apply_mask)
        1    0.000    0.000    0.000    0.000 policy.py:444(loss_scale)
        5    0.000    0.000    0.000    0.000 node.py:74(<lambda>)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2976(_num_replicas_in_sync)
        2    0.000    0.000    0.000    0.000 gridspec.py:528(num2)
        2    0.000    0.000    0.000    0.000 gridspec.py:549(get_gridspec)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:115(<listcomp>)
        2    0.000    0.000    0.000    0.000 type_check.py:207(_is_type_dispatcher)
        6    0.000    0.000    0.000    0.000 numeric.py:2163(_isclose_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:833(_sort_dispatcher)
        2    0.000    0.000    0.000    0.000 multiarray.py:990(unravel_index)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


