         795217975 function calls (775869203 primitive calls) in 2165.673 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.001    0.001 2163.640 2163.640 Experiment.py:180(run)
    34758    1.837    0.000 1765.765    0.051 training.py:126(_method_wrapper)
    34758    4.479    0.000 1736.487    0.050 training.py:1486(predict)
       20    0.003    0.000 1357.161   67.858 Experiment.py:173(train)
       20    0.704    0.035 1357.158   67.858 experiment_2.py:27(train)
    34778    1.494    0.000 1176.536    0.034 data_adapter.py:1073(__init__)
    34778    1.671    0.000 1162.464    0.033 data_adapter.py:254(__init__)
       20    0.002    0.000 1055.069   52.753 function_base.py:2063(__call__)
       20    0.608    0.030 1055.067   52.753 function_base.py:2154(_vectorize_call)
    20329    1.528    0.000 1054.457    0.052 Experiment.py:101(Q)
   104334    4.891    0.000 1004.969    0.010 dataset_ops.py:3186(__init__)
205930/205670    3.932    0.000  991.478    0.005 function.py:3147(_maybe_define_function)
106289/106229    2.400    0.000  971.850    0.009 function.py:2870(_get_concrete_function_garbage_collected)
   104334    0.568    0.000  971.476    0.009 function.py:2931(get_concrete_function)
104468/104428    2.511    0.000  952.855    0.009 function.py:3047(_create_graph_function)
104468/104428    8.367    0.000  881.454    0.008 func_graph.py:801(func_graph_from_py_func)
       21    0.640    0.030  767.949   36.569 Experiment.py:161(play_episode)
    21201    0.819    0.000  758.234    0.036 Experiment.py:82(move)
    69556    0.348    0.000  552.991    0.008 dataset_ops.py:1557(map)
    34778    0.135    0.000  531.203    0.015 dataset_ops.py:1704(flat_map)
    34778    1.563    0.000  531.068    0.015 dataset_ops.py:4119(__init__)
   104334    0.857    0.000  478.501    0.005 dataset_ops.py:3358(wrapper_fn)
   104334    1.639    0.000  472.513    0.005 dataset_ops.py:3292(_wrapper_helper)
104371/104338    1.047    0.000  455.660    0.004 api.py:247(wrapper)
   593770  452.214    0.001  454.826    0.001 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
104397/104343    2.024    0.000  453.417    0.004 api.py:417(converted_call)
104385/104348    0.554    0.000  428.186    0.004 api.py:330(_call_unconverted)
99590/99560    2.788    0.000  412.499    0.004 def_function.py:757(__call__)
99590/99560    1.008    0.000  404.972    0.004 def_function.py:798(_call)
99579/99549    0.829    0.000  403.051    0.004 function.py:2825(__call__)
384107/383976   38.611    0.000  383.934    0.001 op_def_library.py:299(_apply_op_helper)
458618/350015    1.117    0.000  383.888    0.001 dispatch.py:198(wrapper)
    99590    0.972    0.000  375.079    0.004 function.py:1827(_filtered_call)
    99600    2.311    0.000  371.355    0.004 function.py:1850(_call_flat)
    70536    0.866    0.000  368.107    0.005 data_adapter.py:1135(enumerate_epochs)
  1569904    0.721    0.000  367.450    0.000 {built-in method builtins.iter}
    34778    0.222    0.000  366.724    0.011 dataset_ops.py:403(__iter__)
    34787    0.515    0.000  366.450    0.011 iterator_ops.py:648(__init__)
    34778    1.552    0.000  364.754    0.010 iterator_ops.py:700(_create_iterator)
    99600    4.563    0.000  361.154    0.004 function.py:509(call)
    99480    1.092    0.000  355.294    0.004 execute.py:33(quick_execute)
    99480  353.935    0.004  353.935    0.004 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
    34778    0.271    0.000  339.629    0.010 gen_dataset_ops.py:2987(make_iterator)
837189/836994    8.842    0.000  299.709    0.000 func_graph.py:528(_create_op_internal)
    34778    0.670    0.000  297.224    0.009 data_adapter.py:373(slice_inputs)
       20    0.005    0.000  291.013   14.551 training.py:106(_method_wrapper)
       20    1.282    0.064  290.920   14.546 training.py:824(fit)
    34778    1.457    0.000  288.292    0.008 dataset_ops.py:4031(__init__)
   837414   12.170    0.000  287.831    0.000 ops.py:3418(_create_op_internal)
    34778    0.839    0.000  281.693    0.008 data_adapter.py:330(slice_batch_indices)
    34778    1.573    0.000  264.351    0.008 dataset_ops.py:4069(__init__)
1679793/1679557    6.505    0.000  192.492    0.000 ops.py:1448(convert_to_tensor)
   837414   22.485    0.000  191.243    0.000 ops.py:1839(__init__)
   630457    1.439    0.000  174.271    0.000 constant_op.py:166(constant)
   630457    7.614    0.000  172.832    0.000 constant_op.py:267(_constant_impl)
   104468    8.262    0.000  156.337    0.001 auto_control_deps.py:301(__exit__)
592463/588413    4.538    0.000  150.430    0.000 nest.py:573(map_structure)
    69555    0.207    0.000  136.133    0.002 array_ops.py:1028(slice)
    69555    0.815    0.000  135.926    0.002 gen_array_ops.py:9212(_slice)
   837889    5.442    0.000  133.884    0.000 auto_control_deps.py:519(_get_resource_inputs)
592463/588413    1.112    0.000  131.605    0.000 nest.py:635(<listcomp>)
   837168    5.265    0.000  111.772    0.000 auto_control_deps_utils.py:89(get_read_write_resource_inputs)
   173942    0.210    0.000   95.523    0.001 constant_op.py:335(_constant_tensor_conversion_function)
   208936    4.783    0.000   87.114    0.000 func_graph.py:1148(_get_defun_inputs)
    34778    0.227    0.000   85.518    0.002 data_adapter.py:315(permutation)
    34781    0.717    0.000   85.147    0.002 math_ops.py:1731(range)
   837414   14.105    0.000   85.037    0.000 ops.py:1764(_create_c_op)
   104468    0.266    0.000   84.612    0.001 func_graph.py:1136(_get_defun_inputs_from_args)
  1117896    7.400    0.000   84.142    0.000 ops.py:2471(get_attr)
   421626    0.728    0.000   78.741    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
   104468    2.615    0.000   68.130    0.001 function.py:1460(__init__)
9048188/5743310    6.876    0.000   67.303    0.000 {built-in method builtins.next}
   140015    3.646    0.000   67.266    0.000 graph_only_ops.py:29(graph_placeholder)
   104488    0.617    0.000   62.729    0.001 func_graph.py:930(convert)
  1117896   53.849    0.000   61.637    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
   104488    0.937    0.000   60.900    0.001 auto_control_deps.py:182(mark_as_return)
   141816    0.927    0.000   59.928    0.000 array_ops.py:244(identity)
    34778    0.130    0.000   58.223    0.002 data_adapter.py:393(grab_batch)
   141816    1.052    0.000   57.512    0.000 gen_array_ops.py:3973(identity)
    34798    0.206    0.000   57.399    0.002 data_adapter.py:394(<lambda>)
    34798    0.318    0.000   57.063    0.002 array_ops.py:4589(gather)
    34798    0.626    0.000   56.456    0.002 gen_array_ops.py:3790(gather_v2)
   104468    0.989    0.000   53.157    0.001 function.py:597(__init__)
4872959/3221535    2.675    0.000   51.592    0.000 contextlib.py:79(__enter__)
   104468    7.378    0.000   51.457    0.000 function.py:412(__init__)
    69555    0.213    0.000   46.487    0.001 dataset_ops.py:569(from_tensors)
    69555    0.973    0.000   46.275    0.001 dataset_ops.py:2980(__init__)
   313162   11.305    0.000   45.620    0.000 tensor_util.py:360(make_tensor_proto)
   976838    7.657    0.000   42.300    0.000 func_graph.py:365(inner_cm)
   486890    6.639    0.000   40.867    0.000 dataset_ops.py:186(__init__)
    34795    0.155    0.000   39.944    0.001 array_ops.py:59(reshape)
    34795    0.345    0.000   38.605    0.001 gen_array_ops.py:8143(reshape)
        6    0.072    0.012   38.000    6.333 _dill.py:253(dump)
        6    0.000    0.000   37.927    6.321 _dill.py:414(dump)
        6    0.000    0.000   37.927    6.321 pickle.py:398(dump)
7231724/6   13.250    0.000   37.927    6.321 pickle.py:457(save)
 62245/16    0.088    0.000   37.925    2.370 pickle.py:774(save_list)
 62245/16    0.315    0.000   37.925    2.370 pickle.py:787(_batch_appends)
356160/897    1.807    0.000   37.893    0.042 _dill.py:903(save_module_dict)
356160/897    0.651    0.000   37.885    0.042 pickle.py:814(save_dict)
356160/897    2.546    0.000   37.879    0.042 pickle.py:827(_batch_setitems)
283797/5174    1.326    0.000   37.801    0.007 pickle.py:539(save_reduce)
    34778    0.165    0.000   36.160    0.001 dataset_ops.py:606(from_tensor_slices)
    34778    0.835    0.000   35.995    0.001 dataset_ops.py:2999(__init__)
        5    0.009    0.002   35.066    7.013 Experiment.py:212(save_status)
    34777    0.119    0.000   34.676    0.001 dataset_ops.py:1002(concatenate)
    34777    0.778    0.000   34.557    0.001 dataset_ops.py:3504(__init__)
63793555/63793055   18.664    0.000   31.119    0.000 {built-in method builtins.isinstance}
   837414   11.459    0.000   30.390    0.000 ops.py:3521(_create_op_helper)
    34781    0.452    0.000   29.411    0.001 gen_math_ops.py:7268(_range)
    69555    0.596    0.000   27.703    0.000 gen_dataset_ops.py:6595(tensor_dataset)
  1386367    1.256    0.000   27.261    0.000 nest.py:536(pack_sequence_as)
   278224    0.700    0.000   26.810    0.000 dataset_ops.py:2956(__init__)
  1421149    4.477    0.000   26.719    0.000 nest.py:496(_pack_sequence_as)
    34778    0.761    0.000   26.253    0.001 iterator_ops.py:531(__del__)
4872959/3223588    7.385    0.000   26.059    0.000 contextlib.py:85(__exit__)
   488419    3.103    0.000   25.266    0.000 func_graph.py:362(as_default)
  1046870    2.188    0.000   24.849    0.000 tf_stack.py:131(extract_stack)
    34777    0.526    0.000   24.716    0.001 gen_dataset_ops.py:853(concatenate_dataset)
   837414   24.380    0.000   24.380    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
    34778    0.497    0.000   24.267    0.001 gen_dataset_ops.py:6664(tensor_slice_dataset)
   837414   14.447    0.000   23.944    0.000 ops.py:1737(_NodeDef)
   978998    5.943    0.000   23.275    0.000 ops.py:5580(get_controller)
    34778    0.219    0.000   22.732    0.001 gen_dataset_ops.py:2003(flat_map_dataset)
5378077/5296416   13.816    0.000   22.629    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
    34778    0.191    0.000   22.367    0.001 gen_dataset_ops.py:1262(delete_iterator)
  1046870   22.185    0.000   22.188    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
   104535    3.215    0.000   21.811    0.000 func_graph.py:165(__init__)
   487232    4.216    0.000   20.680    0.000 base.py:800(_track_trackable)
    64300    0.188    0.000   20.245    0.000 callbacks.py:281(_call_batch_hook)
   104458    0.954    0.000   19.999    0.000 function.py:3632(decorated)
   209016    0.921    0.000   19.800    0.000 func_graph.py:69(convert_structure_to_signature)
    64300    0.697    0.000   19.542    0.000 callbacks.py:332(_call_batch_hook_helper)
  4872959    6.427    0.000   18.732    0.000 contextlib.py:157(helper)
    32150    0.165    0.000   18.431    0.001 callbacks.py:432(on_train_batch_end)
    32150    0.166    0.000   18.142    0.001 callbacks.py:302(_call_batch_end_hook)
    69556    0.177    0.000   17.080    0.000 dataset_ops.py:1128(repeat)
   207280    3.245    0.000   17.071    0.000 function.py:2977(_cache_key)
   173890    0.307    0.000   16.931    0.000 dataset_ops.py:2967(__init__)
    34778    0.209    0.000   16.923    0.000 gen_dataset_ops.py:5057(parallel_map_dataset_v2)
    69556    0.859    0.000   16.902    0.000 dataset_ops.py:3552(__init__)
    34778    0.221    0.000   16.742    0.000 gen_dataset_ops.py:3036(map_dataset)
    34778    0.475    0.000   16.681    0.000 dataset_ops.py:356(_apply_options)
  2511389    3.605    0.000   16.668    0.000 object_identity.py:195(update)
  5320395    3.319    0.000   16.168    0.000 nest.py:274(flatten)
  5047363    2.673    0.000   16.157    0.000 <__array_function__ internals>:2(concatenate)
   488426    1.719    0.000   15.382    0.000 tf_contextlib.py:25(contextmanager)
   104458    1.408    0.000   15.031    0.000 function.py:2767(__init__)
   453307    3.588    0.000   14.945    0.000 ops.py:3868(_get_op_def)
   104540    7.064    0.000   14.902    0.000 ops.py:2862(__init__)
  1540361    4.044    0.000   14.817    0.000 Hanabi.py:159(toarray)
2234725/1712250    3.476    0.000   14.443    0.000 {built-in method builtins.any}
 12631204    4.898    0.000   14.050    0.000 ops.py:2376(type)
    34778    0.153    0.000   14.032    0.000 dataset_ops.py:920(range)
   104468   14.005    0.000   14.005    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
    34778    0.605    0.000   13.879    0.000 dataset_ops.py:3570(__init__)
    34778    0.450    0.000   13.348    0.000 dataset_ops.py:4375(__init__)
    33150    1.232    0.000   13.334    0.000 generic_utils.py:528(update)
    32150    0.080    0.000   13.046    0.000 callbacks.py:960(on_train_batch_end)
   594043   12.989    0.000   12.989    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
    32150    0.408    0.000   12.966    0.000 callbacks.py:999(_batch_update_progbar)
  1182466    1.513    0.000   12.965    0.000 {built-in method _functools.reduce}
  5488803   10.605    0.000   12.869    0.000 dtypes.py:606(as_dtype)
  5320395   12.556    0.000   12.848    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
   104333    2.592    0.000   12.841    0.000 structure.py:70(normalize_element)
   203764    0.535    0.000   12.749    0.000 tf_utils.py:513(to_numpy_or_python_type)
   838976    5.279    0.000   12.486    0.000 ops.py:2312(inputs)
  3788334    7.055    0.000   12.457    0.000 abc.py:180(__instancecheck__)
  2511389    7.734    0.000   12.145    0.000 object_identity.py:196(<listcomp>)
   489343    1.616    0.000   11.986    0.000 ops.py:6458(__enter__)
   837350    1.141    0.000   11.938    0.000 ops.py:386(_create_with_tf_output)
   104520    0.846    0.000   11.923    0.000 function.py:2299(from_function_and_signature)
  4872959    9.745    0.000   11.773    0.000 contextlib.py:59(__init__)
    55067    0.783    0.000   11.608    0.000 Hanabi.py:258(toarray)
    34778    0.101    0.000   11.454    0.000 dataset_ops.py:1031(prefetch)
   658240    1.022    0.000   11.402    0.000 Experiment.py:93(<lambda>)
     7529    0.096    0.000   11.368    0.002 iostream.py:334(flush)
17859908/17858633    9.122    0.000   11.365    0.000 {built-in method builtins.getattr}
    34778    0.756    0.000   11.353    0.000 dataset_ops.py:4289(__init__)
23922856/23922536   10.713    0.000   11.320    0.000 {built-in method builtins.hasattr}
  2702222   11.123    0.000   11.123    0.000 {method 'acquire' of '_thread.lock' objects}
   347779    0.894    0.000   11.100    0.000 dataset_ops.py:546(_flat_structure)
   209016    0.155    0.000   11.046    0.000 func_graph.py:130(<listcomp>)
1535954/1535917    2.514    0.000   10.938    0.000 base.py:453(_method_wrapper)
   139446    1.417    0.000   10.890    0.000 func_graph.py:82(encode_arg)
   697627    5.288    0.000   10.883    0.000 tf_decorator.py:67(make_decorator)
   837350    3.278    0.000   10.798    0.000 ops.py:359(__init__)
   861812    0.801    0.000   10.790    0.000 Experiment.py:105(<lambda>)
1927336/1041379    3.348    0.000   10.494    0.000 {built-in method builtins.hash}
   837414    0.943    0.000   10.133    0.000 lock_util.py:126(__exit__)
 15686010    4.450    0.000   10.102    0.000 {method 'get' of 'dict' objects}
    36812    0.715    0.000    9.914    0.000 resource_variable_ops.py:838(assign)
     7529    0.080    0.000    9.827    0.001 threading.py:533(wait)
  1012105    5.513    0.000    9.769    0.000 nest.py:129(_sequence_like)
    56831    0.303    0.000    9.768    0.000 Hanabi.py:367(save)
     7411    0.095    0.000    9.712    0.001 threading.py:263(wait)
   302468    0.405    0.000    9.691    0.000 type_spec.py:301(__hash__)
   837414    0.733    0.000    9.664    0.000 lock_util.py:123(__enter__)
   208667    0.941    0.000    9.641    0.000 structure.py:299(_to_tensor_list_helper)
  3794315    9.555    0.000    9.557    0.000 {built-in method numpy.array}
   488426    2.058    0.000    9.404    0.000 contextlib.py:129(contextmanager)
   487224    2.197    0.000    9.362    0.000 base.py:854(_handle_deferred_dependencies)
1012005/1007628    2.464    0.000    9.342    0.000 nest.py:461(_packed_nest_with_indices)
   506798    0.955    0.000    9.328    0.000 type_spec.py:337(__get_cmp_key)
  1605047    9.285    0.000    9.285    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
  6876038    4.114    0.000    9.272    0.000 compat.py:114(as_str)
656110/207280    1.720    0.000    9.250    0.000 function.py:95(_make_input_signature_hashable)
  1513549    3.985    0.000    9.209    0.000 tensor_shape.py:746(__init__)
   837414    3.091    0.000    9.190    0.000 lock_util.py:96(release)
 12631204    9.151    0.000    9.151    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
   837414    2.537    0.000    8.931    0.000 lock_util.py:86(acquire)
    34778    0.098    0.000    8.664    0.000 dataset_ops.py:957(zip)
   978968    3.258    0.000    8.578    0.000 ops.py:4091(name_scope)
    34778    0.463    0.000    8.566    0.000 dataset_ops.py:3472(__init__)
  1674828    8.542    0.000    8.542    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
313100/313020    0.593    0.000    8.449    0.000 structure.py:407(type_spec_from_value)
   104860    0.403    0.000    8.432    0.000 tf_inspect.py:238(getfullargspec)
   973799    1.550    0.000    8.373    0.000 structure.py:257(get_flat_tensor_specs)
   452112    0.783    0.000    8.346    0.000 dataset_ops.py:2927(merge)
   837414    8.267    0.000    8.267    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
1353994/506798    2.498    0.000    8.146    0.000 type_spec.py:342(__make_cmp_key)
   173889    0.298    0.000    8.062    0.000 structure.py:355(to_tensor_list)
   837168    1.394    0.000    7.946    0.000 tpu.py:223(tpu_replicated_input_resolver)
  1851567    7.866    0.000    7.866    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
   313100    1.222    0.000    7.855    0.000 type_spec.py:555(_type_spec_from_value)
   837229    1.415    0.000    7.788    0.000 errors_impl.py:264(__init__)
   104830    1.507    0.000    7.762    0.000 inspect.py:1089(getfullargspec)
   275335    1.031    0.000    7.761    0.000 Hanabi.py:212(toarray)
    56831    0.144    0.000    7.733    0.000 Hanabi.py:374(<listcomp>)
   284155    0.397    0.000    7.589    0.000 Hanabi.py:245(save)
   452112    2.287    0.000    7.562    0.000 options.py:89(merge_options)
   104458    0.260    0.000    7.544    0.000 context.py:2346(add_function)
   837414    2.902    0.000    7.500    0.000 ops.py:4439(_apply_device_functions)
  1250164    4.270    0.000    7.492    0.000 Hanabi.py:111(save)
    34778    0.341    0.000    7.433    0.000 callbacks.py:202(__init__)
    34820    0.241    0.000    7.416    0.000 resource_variable_ops.py:606(numpy)
   104458    0.376    0.000    7.272    0.000 context.py:1085(add_function)
  1503082    3.260    0.000    7.186    0.000 dtypes.py:172(is_compatible_with)
  4643178    4.333    0.000    7.159    0.000 ops.py:5989(get_default_graph)
   804194    0.854    0.000    7.150    0.000 ops.py:421(shape)
   104351    2.318    0.000    7.097    0.000 conversion.py:129(is_whitelisted)
   284155    0.487    0.000    7.041    0.000 Hanabi.py:246(<listcomp>)
   208707    0.219    0.000    7.024    0.000 structure.py:321(reduce_fn)
    67322    0.230    0.000    6.948    0.000 nest.py:1061(map_structure_up_to)
   527408    2.576    0.000    6.903    0.000 tensor_spec.py:39(__init__)
    34778    0.154    0.000    6.901    0.000 data_adapter.py:995(_process_tensorlike)
        1    0.002    0.002    6.900    6.900 Experiment.py:193(save)
  1051526    1.227    0.000    6.834    0.000 {built-in method builtins.all}
   592794    3.686    0.000    6.815    0.000 functools.py:44(update_wrapper)
   104458    6.800    0.000    6.800    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
   104386    0.340    0.000    6.783    0.000 <__array_function__ internals>:2(array_equal)
   489499    5.118    0.000    6.771    0.000 context.py:2001(graph_mode)
    67322    0.660    0.000    6.718    0.000 nest.py:1142(map_structure_with_tuple_paths_up_to)
  1921805    6.620    0.000    6.620    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
   104468    0.423    0.000    6.611    0.000 function.py:1549(_set_function_spec)
   347779    0.983    0.000    6.563    0.000 dataset_ops.py:528(_flat_shapes)
    34915    0.480    0.000    6.499    0.000 resource_variable_ops.py:668(read_value)
  8126088    6.258    0.000    6.488    0.000 enum.py:332(<genexpr>)
    99600    1.946    0.000    6.454    0.000 function.py:2151(_build_call_outputs)
   104374    1.016    0.000    6.451    0.000 api.py:157(tf_convert)
   559738    4.534    0.000    6.442    0.000 tensor_shape.py:1193(as_proto)
   837231    5.557    0.000    6.373    0.000 errors_impl.py:64(__init__)
   384168    2.083    0.000    6.296    0.000 ops.py:444(_c_api_shape)
   486899    0.784    0.000    6.286    0.000 structure.py:273(get_flat_tensor_shapes)
    40626    0.041    0.000    6.270    0.000 <__array_function__ internals>:2(vstack)
  1858643    1.334    0.000    6.175    0.000 nest.py:198(_yield_value)
   104386    2.414    0.000    6.159    0.000 numeric.py:2287(array_equal)
   104468    2.902    0.000    6.127    0.000 function.py:1562(_initialize_function_spec)
  2448356    6.087    0.000    6.091    0.000 _collections_abc.py:742(__iter__)
    40626    0.085    0.000    6.053    0.000 shape_base.py:224(vstack)
    21201    0.154    0.000    6.045    0.000 Experiment.py:39(availableActions)
  2862540    2.474    0.000    6.016    0.000 c_api_util.py:157(tf_buffer)
   842493    0.974    0.000    6.011    0.000 tensor_shape.py:1230(as_shape)
  2557597    3.339    0.000    5.971    0.000 nest.py:203(_yield_sorted_items)
  1464068    4.192    0.000    5.935    0.000 base.py:577(_maybe_initialize_trackable)
180219/36625    0.676    0.000    5.921    0.000 training.py:322(__setattr__)
   561690    1.715    0.000    5.788    0.000 ops.py:6385(name_scope)
    34778    0.159    0.000    5.770    0.000 callbacks.py:274(set_model)
  1674336    2.422    0.000    5.759    0.000 tpu.py:239(replace_with_unreplicated_resources)
    34778    0.129    0.000    5.737    0.000 gen_dataset_ops.py:5296(range_dataset)
105157/104830    0.769    0.000    5.722    0.000 inspect.py:2183(_signature_from_callable)
    55067    0.238    0.000    5.654    0.000 Hanabi.py:271(<listcomp>)
   104338    0.184    0.000    5.599    0.000 structure.py:210(from_compatible_tensor_list)
  3763886    4.848    0.000    5.574    0.000 dtypes.py:192(__eq__)
  2205435    4.713    0.000    5.565    0.000 object_identity.py:174(__init__)
  1333427    3.026    0.000    5.531    0.000 Hanabi.py:70(toarray)
    69556    0.190    0.000    5.493    0.000 gen_dataset_ops.py:5498(repeat_dataset)
   837414    3.622    0.000    5.480    0.000 lock_util.py:106(_another_group_active)
  3772726    2.284    0.000    5.479    0.000 dtypes.py:84(base_dtype)
  6403119    5.448    0.000    5.453    0.000 _weakrefset.py:70(__contains__)
  2582238    3.066    0.000    5.427    0.000 compat.py:64(as_bytes)
   317295    0.395    0.000    5.417    0.000 constant_op.py:298(_constant_eager_impl)
   104338    0.813    0.000    5.415    0.000 structure.py:175(_from_tensor_list_helper)
   173929    0.316    0.000    5.385    0.000 structure.py:376(<lambda>)
   837414    4.973    0.000    5.292    0.000 ops.py:6880(_reconstruct_sequence_inputs)
   173929    0.436    0.000    5.272    0.000 type_spec.py:211(_to_tensor_list)
   489499    0.672    0.000    5.256    0.000 ops.py:3886(as_default)
   837414    4.150    0.000    5.234    0.000 ops.py:3052(_add_op)
  6876253    3.519    0.000    5.158    0.000 compat.py:90(as_text)
  1081200    2.859    0.000    5.155    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
   837414    1.340    0.000    5.148    0.000 threading.py:357(notify_all)
    19332    0.224    0.000    5.126    0.000 Experiment.py:52(<listcomp>)
  2149587    3.063    0.000    5.100    0.000 context.py:1851(executing_eagerly)
   626160    0.388    0.000    5.077    0.000 api.py:519(<genexpr>)
    34778    0.129    0.000    5.044    0.000 gen_dataset_ops.py:3266(model_dataset)
   317295    4.501    0.000    5.022    0.000 constant_op.py:70(convert_to_eager_tensor)
   104360    0.623    0.000    5.010    0.000 inspect_utils.py:82(isbuiltin)
   732993    2.139    0.000    4.983    0.000 ops.py:3848(_get_tensor_by_tf_output)
     1000    0.023    0.000    4.971    0.005 callbacks.py:397(on_epoch_end)
   101078    0.844    0.000    4.970    0.000 tf_utils.py:531(_to_single_numpy_or_python_type)
185257/40052    1.111    0.000    4.915    0.000 base_layer.py:2756(__setattr__)
   104371    0.927    0.000    4.882    0.000 api.py:244(decorator)
   104830    1.942    0.000    4.847    0.000 inspect.py:2102(_signature_from_function)
   907111    2.676    0.000    4.788    0.000 ops.py:4206(unique_name)
   104276    0.083    0.000    4.767    0.000 c_api_util.py:53(__del__)
   521800    0.802    0.000    4.689    0.000 api.py:343(_is_of_known_loaded_module)
   104276    4.685    0.000    4.685    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteGraph}
    67322    0.110    0.000    4.605    0.000 nest.py:1234(<listcomp>)
    67322    0.106    0.000    4.496    0.000 nest.py:1137(<lambda>)
   104540    0.438    0.000    4.481    0.000 c_api_util.py:45(__init__)
   173929    0.630    0.000    4.452    0.000 tensor_spec.py:155(_to_components)
  1078387    1.242    0.000    4.385    0.000 structure.py:269(<lambda>)
    34758    0.353    0.000    4.334    0.000 training.py:2667(concat)
  1256690    1.082    0.000    4.322    0.000 ops.py:1925(<genexpr>)
    35146    0.220    0.000    4.240    0.000 resource_variable_ops.py:643(_read_variable_op)
   837350    4.236    0.000    4.236    0.000 c_api_util.py:190(tf_output)
   211386    0.764    0.000    4.196    0.000 nest.py:1379(flatten_with_tuple_paths)
  9003074    2.484    0.000    4.078    0.000 pickle.py:213(write)
    34778    0.106    0.000    4.070    0.000 gen_dataset_ops.py:5189(prefetch_dataset)
  1674378    1.881    0.000    4.059    0.000 registry.py:82(lookup)
   104540    4.017    0.000    4.017    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
   558279    1.573    0.000    4.012    0.000 op_def_library.py:173(_MakeType)
  1020015    2.579    0.000    3.979    0.000 tensor_shape.py:756(<listcomp>)
   966028    1.463    0.000    3.962    0.000 tensor_spec.py:87(__hash__)
    36822    0.365    0.000    3.956    0.000 resource_variable_ops.py:830(_lazy_read)
   220268    0.435    0.000    3.946    0.000 Hanabi.py:219(<listcomp>)
    34778    0.188    0.000    3.839    0.000 gen_dataset_ops.py:106(anonymous_iterator_v2)
   208988    2.675    0.000    3.832    0.000 function.py:2388(__init__)
   837414    1.109    0.000    3.770    0.000 ops.py:5153(_mutation_lock)
   837414    1.697    0.000    3.755    0.000 ops.py:1995(_control_flow_post_processing)
   102165    0.426    0.000    3.729    0.000 type_spec.py:293(__eq__)
   104334    0.373    0.000    3.729    0.000 data_adapter.py:1011(_convert_numpy_and_scipy)
   132924    3.531    0.000    3.708    0.000 {method 'reduce' of 'numpy.ufunc' objects}
   489343    3.526    0.000    3.688    0.000 ops.py:6439(__init__)
   347779    0.543    0.000    3.643    0.000 dataset_ops.py:537(_flat_types)
        5    0.000    0.000    3.599    0.720 training.py:1918(save)
        5    0.000    0.000    3.599    0.720 save.py:47(save_model)
        5    0.013    0.003    3.598    0.720 save.py:40(save)
  2372514    3.571    0.000    3.575    0.000 {built-in method builtins.sorted}
        5    0.002    0.000    3.568    0.714 save.py:788(save)
  1217526    1.638    0.000    3.561    0.000 type_spec.py:262(_flat_tensor_specs)
   208936    0.859    0.000    3.545    0.000 func_graph.py:1061(check_mutation)
   837414    2.338    0.000    3.539    0.000 threading.py:334(notify)
   208794    0.207    0.000    3.522    0.000 ag_logging.py:138(log)
   837414    1.577    0.000    3.518    0.000 ops.py:5059(_snapshot_colocation_stack_metadata)
  5896105    2.191    0.000    3.517    0.000 pickle.py:448(get)
676997/506798    0.744    0.000    3.496    0.000 type_spec.py:357(<listcomp>)
   313145    0.675    0.000    3.472    0.000 tensor_util.py:309(_AssertCompatible)
   135898    0.520    0.000    3.463    0.000 ops.py:1039(numpy)
       21    0.106    0.005    3.456    0.165 Experiment.py:154(create_episode)
    34778    0.118    0.000    3.383    0.000 data_adapter.py:963(select_data_adapter)
   104216    0.188    0.000    3.377    0.000 c_api_util.py:94(__del__)
   521800    3.342    0.000    3.342    0.000 api.py:347(<genexpr>)
  3512758    2.244    0.000    3.335    0.000 options.py:74(get_fn)
   382566    0.481    0.000    3.322    0.000 structure.py:286(get_flat_tensor_types)
   208803    0.210    0.000    3.315    0.000 ag_logging.py:121(has_verbosity)
   139766    0.579    0.000    3.297    0.000 ops.py:2422(_set_attr)
   243440    0.771    0.000    3.288    0.000 nest.py:195(map_structure)
    34778    0.492    0.000    3.259    0.000 data_adapter.py:965(<listcomp>)
    34758    0.242    0.000    3.222    0.000 array_ops.py:1562(concat)
  1250164    3.215    0.000    3.222    0.000 <string>:1(__init__)
  2225820    3.220    0.000    3.220    0.000 {built-in method tensorflow.python._pywrap_utils.FlattenForData}
  3772762    3.195    0.000    3.195    0.000 dtypes.py:71(_is_ref_dtype)
   104216    3.188    0.000    3.188    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteFunction}
   104403    0.267    0.000    3.184    0.000 {method 'all' of 'numpy.ndarray' objects}
    99467    0.698    0.000    3.167    0.000 def_function.py:97(called_without_tracing)
        5    0.007    0.001    3.160    0.632 save.py:1030(_build_meta_graph)
    34778    0.102    0.000    3.154    0.000 gen_dataset_ops.py:7053(zip_dataset)
   101537    0.677    0.000    3.150    0.000 function.py:2513(canonicalize_function_inputs)
   662886    3.145    0.000    3.145    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
  1674336    1.414    0.000    3.142    0.000 auto_control_deps.py:125(op_is_stateful)
   837168    1.069    0.000    3.142    0.000 dataset_ops.py:4572(_resource_resolver)
   556443    1.277    0.000    3.139    0.000 nest.py:157(pack_sequence_as)
   289850    0.746    0.000    3.127    0.000 ops.py:5639(init_scope)
   208803    0.623    0.000    3.105    0.000 ag_logging.py:114(get_verbosity)
   208901    3.099    0.000    3.099    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
    53217    0.245    0.000    3.044    0.000 iostream.py:195(schedule)
   104468    3.003    0.000    3.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
    20329    0.380    0.000    2.991    0.000 Experiment.py:58(availableActionsData)
  1327111    2.982    0.000    2.982    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
  3040584    1.998    0.000    2.958    0.000 ops.py:4998(_device_function_stack)
    34778    0.087    0.000    2.948    0.000 dataset_ops.py:2112(with_options)
    35146    0.187    0.000    2.937    0.000 resource_variable_ops.py:646(read_and_set_handle)
   104468    0.156    0.000    2.923    0.000 func_graph.py:1258(_get_defun_inputs_from_kwargs)
   104415    0.147    0.000    2.917    0.000 _methods.py:47(_all)
   486890    1.298    0.000    2.916    0.000 dataset_ops.py:3795(__init__)
   837284    1.745    0.000    2.905    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
    34778    0.298    0.000    2.862    0.000 dataset_ops.py:3581(_parse_args)
    34778    0.165    0.000    2.861    0.000 dataset_ops.py:4358(__init__)
278224/208668    1.214    0.000    2.845    0.000 options.py:37(__eq__)
  1046732    1.075    0.000    2.839    0.000 ops.py:216(uid)
   173952    0.226    0.000    2.828    0.000 array_ops.py:1489(_autopacking_conversion_function)
  4643178    2.826    0.000    2.826    0.000 ops.py:5557(get_default)
       21    0.003    0.000    2.823    0.134 Experiment.py:159(<listcomp>)
   352877    0.352    0.000    2.821    0.000 nest.py:1310(yield_flat_paths)
     2100    0.017    0.000    2.820    0.001 Hanabi.py:289(__init__)
   383972    0.779    0.000    2.811    0.000 func_graph.py:1055(device_stack_has_callable)
  1241220    1.195    0.000    2.759    0.000 nest.py:96(_sorted)
 16280160    2.744    0.000    2.744    0.000 inspect_utils.py:84(<genexpr>)
   836958    1.163    0.000    2.740    0.000 auto_control_deps_utils.py:112(<genexpr>)
  1221632    2.584    0.000    2.721    0.000 traceable_stack.py:119(peek_objs)
   838052    1.218    0.000    2.701    0.000 func_graph.py:595(capture)
     2100    0.090    0.000    2.685    0.001 Hanabi.py:129(__init__)
966893/687321    1.291    0.000    2.680    0.000 nest.py:720(_yield_flat_up_to)
  1679788    1.617    0.000    2.672    0.000 ops.py:5075(_control_dependencies_stack)
   837414    1.663    0.000    2.661    0.000 lock_util.py:74(group)
   592463    0.597    0.000    2.636    0.000 nest.py:631(<listcomp>)
11608538/11608439    2.634    0.000    2.634    0.000 {built-in method builtins.len}
   139139    0.207    0.000    2.631    0.000 structure.py:229(<lambda>)
   139609    0.473    0.000    2.629    0.000 ops.py:5202(device)
     1000    0.004    0.000    2.619    0.003 callbacks.py:971(on_epoch_end)
     1000    0.020    0.000    2.615    0.003 callbacks.py:1019(_finalize_progbar)
36969/36943    0.224    0.000    2.611    0.000 variables.py:258(__call__)
   732993    0.819    0.000    2.604    0.000 ops.py:3823(_get_operation_by_tf_operation)
   173952    0.992    0.000    2.598    0.000 array_ops.py:1479(_should_not_autopack)
    35259    0.112    0.000    2.578    0.000 gen_resource_variable_ops.py:452(read_variable_op)
   697627    2.112    0.000    2.575    0.000 tf_decorator.py:236(__init__)
    32562    0.129    0.000    2.566    0.000 gen_array_ops.py:1183(concat_v2)
   104334    0.132    0.000    2.558    0.000 dataset_ops.py:3602(_build_tensor)
  1431270    2.512    0.000    2.512    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
  1878318    0.968    0.000    2.505    0.000 config_lib.py:50(get_action)
   208805    0.417    0.000    2.482    0.000 os.py:760(getenv)
    53217    2.479    0.000    2.479    0.000 socket.py:357(send)
   249186    0.644    0.000    2.477    0.000 _collections_abc.py:657(get)
   203044    0.687    0.000    2.470    0.000 function.py:2646(_convert_numpy_inputs)
   702549    1.247    0.000    2.456    0.000 pickle.py:413(memoize)
  1812329    1.513    0.000    2.455    0.000 ops.py:5094(_distribution_strategy_stack)
  3856566    2.445    0.000    2.445    0.000 context.py:791(executing_eagerly)
   384107    0.754    0.000    2.432    0.000 op_def_library.py:84(_Flatten)
   105000    0.524    0.000    2.429    0.000 Hanabi.py:90(__init__)
   139139    0.310    0.000    2.424    0.000 tensor_spec.py:169(_from_compatible_tensor_list)
   525742    1.322    0.000    2.411    0.000 context.py:219(push)
   313162    1.563    0.000    2.407    0.000 tensor_util.py:339(_is_array_like)
  1354348    2.294    0.000    2.386    0.000 enum.py:331(__iter__)
   211012    1.154    0.000    2.377    0.000 tensor_shape.py:1074(is_compatible_with)
  3559088    2.283    0.000    2.359    0.000 object_identity.py:211(__iter__)
   489343    0.719    0.000    2.358    0.000 ops.py:6498(__exit__)
   135898    0.249    0.000    2.339    0.000 ops.py:1027(_numpy)
   732462    0.724    0.000    2.333    0.000 op_def_library.py:510(<listcomp>)
  1115839    1.550    0.000    2.295    0.000 six.py:588(iteritems)
    36933    0.112    0.000    2.257    0.000 gen_resource_variable_ops.py:123(assign_variable_op)
   104336    0.124    0.000    2.247    0.000 op_def_library.py:700(<listcomp>)
   837414    0.811    0.000    2.239    0.000 ops.py:4637(_record_op_seen_by_control_dependencies)
  2848638    2.236    0.000    2.236    0.000 {built-in method numpy.zeros}
   278343    0.537    0.000    2.231    0.000 tensor_util.py:194(GetNumpyAppendFn)
   208753    0.398    0.000    2.199    0.000 tensor_util.py:263(inner)
    36822    0.186    0.000    2.198    0.000 resource_variable_ops.py:1924(__init__)
   837168    0.784    0.000    2.185    0.000 auto_control_deps.py:136(collective_manager_ids_from_op)
  1912784    2.156    0.000    2.184    0.000 options.py:33(__init__)
   102871    1.541    0.000    2.180    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_EncodeArg}
    72298    0.397    0.000    2.173    0.000 resource_variable_ops.py:329(variable_accessed)
   733796    0.974    0.000    2.142    0.000 tf_decorator.py:200(unwrap)
   208956    0.204    0.000    2.137    0.000 function.py:1529(<genexpr>)
   104445    0.255    0.000    2.125    0.000 op_def_library.py:184(_MakeShape)
   837414    1.030    0.000    2.102    0.000 ops.py:5019(_snapshot_device_function_stack_metadata)
    99470    0.910    0.000    2.102    0.000 def_function.py:91(_get_counter)
   139312    0.833    0.000    2.100    0.000 ops.py:616(set_shape)
   135898    2.090    0.000    2.090    0.000 {method '_numpy_internal' of 'tensorflow.python.framework.ops.EagerTensor' objects}
    30264    0.168    0.000    2.068    0.000 iostream.py:382(write)
   837229    0.698    0.000    2.065    0.000 {method 'throw' of 'generator' objects}
   837414    0.808    0.000    2.054    0.000 ops.py:4603(_control_dependencies_for_inputs)
   104458    0.267    0.000    2.053    0.000 function.py:3595(defun_with_attributes)
    34758    0.265    0.000    2.046    0.000 callbacks.py:571(on_predict_end)
   661145    1.353    0.000    2.043    0.000 tensor_shape.py:866(__getitem__)
    32150    0.062    0.000    2.041    0.000 callbacks.py:418(on_train_batch_begin)
   244219    1.019    0.000    2.020    0.000 distribution_strategy_context.py:79(_get_per_thread_mode)
   978998    1.330    0.000    1.987    0.000 ops.py:5387(get_controller)
   134/94    0.002    0.000    1.975    0.021 def_function.py:583(wrapped_fn)
  2235687    1.974    0.000    1.974    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
   104334    0.571    0.000    1.971    0.000 function_utils.py:89(get_func_name)
  2201384    1.230    0.000    1.958    0.000 ops.py:4079(_name_stack)
    36943    0.631    0.000    1.947    0.000 resource_variable_ops.py:341(__init__)
    34778    0.062    0.000    1.939    0.000 structure.py:329(to_batched_tensor_list)
  2782654    1.933    0.000    1.933    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
  1051484    1.424    0.000    1.920    0.000 context.py:773(_mode)
    34778    0.299    0.000    1.918    0.000 dataset_ops.py:2889(_graph_rewrites)
     1000    0.003    0.000    1.917    0.002 callbacks.py:1660(on_epoch_end)
    32150    0.103    0.000    1.915    0.000 callbacks.py:293(_call_batch_begin_hook)
     1000    0.011    0.000    1.914    0.002 callbacks.py:1683(get_monitor_value)
   558993    1.737    0.000    1.908    0.000 tensor_shape.py:1199(<listcomp>)
     1000    0.010    0.000    1.901    0.002 tf_logging.py:176(warning)
     1000    0.009    0.000    1.889    0.002 __init__.py:1310(warning)
   733253    1.097    0.000    1.887    0.000 control_flow_util.py:266(CheckInputFromValidContext)
     1005    0.007    0.000    1.880    0.002 __init__.py:1421(_log)
  1982669    1.478    0.000    1.880    0.000 config_lib.py:33(matches)
   139369    0.389    0.000    1.871    0.000 context.py:2016(device)
   587098    0.758    0.000    1.860    0.000 Hanabi.py:200(save)
   211634    0.717    0.000    1.848    0.000 tf_logging.py:210(vlog)
  1659561    1.818    0.000    1.818    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceOrComposite}
   173960    0.255    0.000    1.814    0.000 distribution_strategy_context.py:179(get_strategy)
  1675435    1.055    0.000    1.806    0.000 ops.py:5044(_colocation_stack)
   837350    1.791    0.000    1.791    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
     1005    0.004    0.000    1.783    0.002 __init__.py:1446(handle)
     1005    0.015    0.000    1.778    0.002 __init__.py:1500(callHandlers)
  1046732    1.764    0.000    1.764    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
   104369    0.351    0.000    1.763    0.000 function.py:3245(validate_signature)
     1005    0.005    0.000    1.763    0.002 __init__.py:852(handle)
     1005    0.009    0.000    1.753    0.002 __init__.py:982(emit)
   384168    1.747    0.000    1.747    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
1955/1835    0.008    0.000    1.714    0.001 def_function.py:1052(_get_concrete_function_garbage_collected)
   278343    1.061    0.000    1.694    0.000 tensor_util.py:186(GetFromNumpyDTypeDict)
1945/1825    0.003    0.000    1.660    0.001 def_function.py:1091(get_concrete_function)
   139766    0.257    0.000    1.655    0.000 ops.py:2431(_set_attr_with_buf)
   209636    0.183    0.000    1.633    0.000 nest.py:357(assert_same_structure)
    34758    0.188    0.000    1.633    0.000 callbacks.py:554(on_predict_begin)
   204089    0.805    0.000    1.629    0.000 function.py:2008(captured_inputs)
   486890    1.175    0.000    1.611    0.000 tracking.py:215(__init__)
   837263    1.609    0.000    1.609    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
 1890/450    0.005    0.000    1.604    0.004 save_impl.py:546(get_concrete_function)
  6904507    1.602    0.000    1.603    0.000 {built-in method _struct.pack}
   838514    1.079    0.000    1.601    0.000 _collections_abc.py:676(items)
    35891    0.346    0.000    1.599    0.000 base_layer.py:2714(__delattr__)
  9003970    1.594    0.000    1.594    0.000 {method 'write' of '_io.BufferedWriter' objects}
    71812    0.261    0.000    1.576    0.000 base_layer.py:2690(_obj_reference_counts)
  490/430    0.004    0.000    1.558    0.004 save_impl.py:401(add_trace)
   104468    0.391    0.000    1.557    0.000 auto_control_deps.py:178(__init__)
   208805    1.001    0.000    1.545    0.000 os.py:664(__getitem__)
  7177932    1.531    0.000    1.531    0.000 {method 'append' of 'list' objects}
   496092    0.376    0.000    1.514    0.000 nest.py:104(_is_namedtuple)
   107384    0.928    0.000    1.513    0.000 inspect.py:2452(__init__)
  1576361    1.483    0.000    1.501    0.000 {built-in method __new__ of type object at 0x9d12c0}
     1005    0.011    0.000    1.498    0.001 __init__.py:971(flush)
  7007093    1.489    0.000    1.489    0.000 context.py:1826(context_safe)
   104351    0.321    0.000    1.485    0.000 conversion.py:242(cache_whitelisted)
    70138    0.517    0.000    1.479    0.000 tape.py:104(variable_accessed)
     1350    0.029    0.000    1.465    0.001 function.py:3085(_define_function_with_shape_relaxation)
  3941566    1.181    0.000    1.462    0.000 {built-in method builtins.setattr}
   837168    1.022    0.000    1.460    0.000 control_flow_util.py:82(IsInWhileLoop)
  2337989    1.457    0.000    1.458    0.000 {method 'encode' of 'str' objects}
   209636    1.449    0.000    1.449    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructure}
   173986    1.433    0.000    1.433    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
    55067    0.334    0.000    1.428    0.000 Hanabi.py:215(<listcomp>)
   104535    0.880    0.000    1.423    0.000 ops.py:4037(get_all_collection_keys)
   313492    1.265    0.000    1.423    0.000 ops.py:3761(get_operations)
    34778    0.065    0.000    1.420    0.000 structure.py:351(<lambda>)
   488426    1.345    0.000    1.418    0.000 functools.py:74(wraps)
    62/32    0.001    0.000    1.378    0.043 def_function.py:663(_initialize)
   243440    0.242    0.000    1.375    0.000 nest.py:245(<listcomp>)
    34778    0.351    0.000    1.368    0.000 optimization_options.py:215(_graph_rewrites)
    34777    0.253    0.000    1.365    0.000 structure.py:119(convert_legacy_structure)
   384107    0.633    0.000    1.360    0.000 op_def_library.py:87(<listcomp>)
   104468    0.411    0.000    1.356    0.000 auto_control_deps.py:225(__enter__)
    62/32    0.000    0.000    1.356    0.042 function.py:2850(_get_concrete_function_internal_garbage_collected)
    34778    0.099    0.000    1.355    0.000 type_spec.py:498(_to_batched_tensor_list)
   104540    0.556    0.000    1.348    0.000 lock_util.py:54(__init__)
   632172    0.668    0.000    1.345    0.000 tensor_shape.py:1180(as_list)
    56831    0.119    0.000    1.338    0.000 Hanabi.py:361(count_discarded)
    69554    0.200    0.000    1.334    0.000 dataset_ops.py:2796(get_legacy_output_types)
   139766    1.326    0.000    1.326    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetAttr}
   522934    1.323    0.000    1.323    0.000 op_def_library.py:38(_Attr)
   104468    1.189    0.000    1.318    0.000 function.py:229(_parse_func_attrs)
    20601    0.080    0.000    1.297    0.000 <__array_function__ internals>:2(amax)
   104397    0.295    0.000    1.294    0.000 conversion.py:234(is_in_whitelist_cache)
     1000    0.009    0.000    1.279    0.001 training.py:1617(reset_metrics)
      990    0.004    0.000    1.278    0.001 save_impl.py:415(trace_with_training)
   384110    0.575    0.000    1.271    0.000 ops.py:6051(_get_graph_from_inputs)
   104830    0.980    0.000    1.264    0.000 inspect.py:2732(__init__)
    34805    0.152    0.000    1.247    0.000 distribute_lib.py:2863(__enter__)
   139369    0.959    0.000    1.233    0.000 context.py:1738(__enter__)
    34778    0.229    0.000    1.228    0.000 training.py:2626(_in_multi_worker_mode)
   313080    0.797    0.000    1.222    0.000 api.py:352(_is_known_loaded_type)
   844825    0.680    0.000    1.217    0.000 threading.py:254(_is_owned)
   383940    0.504    0.000    1.210    0.000 backprop.py:170(_must_record_gradient)
    55067    0.663    0.000    1.196    0.000 Hanabi.py:265(<listcomp>)
    69706    1.195    0.000    1.195    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInputList}
   925061    0.845    0.000    1.194    0.000 __init__.py:1544(isEnabledFor)
    56831    0.278    0.000    1.193    0.000 Hanabi.py:362(<dictcomp>)
   104394    0.246    0.000    1.191    0.000 function.py:1494(<listcomp>)
      999    0.012    0.000    1.190    0.001 metrics.py:241(reset_states)
   104488    0.167    0.000    1.188    0.000 ops.py:1602(convert_to_tensor_or_composite)
   210197    0.529    0.000    1.188    0.000 ag_ctx.py:61(__exit__)
   139369    0.675    0.000    1.186    0.000 context.py:827(device)
   139366    0.184    0.000    1.186    0.000 func_graph.py:1142(_get_composite_tensor_spec)
    34813    0.218    0.000    1.183    0.000 tensor_util.py:1036(maybe_set_static_shape)
      980    0.002    0.000    1.179    0.001 save.py:141(list_functions)
    69574    0.265    0.000    1.172    0.000 training.py:679(distribute_strategy)
   839328    0.637    0.000    1.167    0.000 ag_ctx.py:29(_control_ctx)
    69610    0.265    0.000    1.167    0.000 variable_scope.py:2738(variable_creator_scope)
   178735    0.452    0.000    1.160    0.000 ops.py:1160(shape)
    18182    0.434    0.000    1.150    0.000 Experiment.py:66(<listcomp>)
    20601    0.128    0.000    1.140    0.000 fromnumeric.py:2551(amax)
  9401291    1.139    0.000    1.139    0.000 {built-in method builtins.id}
   496092    1.137    0.000    1.137    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
       30    0.000    0.000    1.137    0.038 base_layer.py:3017(_list_functions_for_serialization)
       30    0.000    0.000    1.137    0.038 base_serialization.py:76(list_functions_for_serialization)
   492393    0.351    0.000    1.128    0.000 dtypes.py:205(__ne__)
    21201    0.262    0.000    1.126    0.000 Hanabi.py:311(move)
  1571036    1.120    0.000    1.120    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
  2025620    1.117    0.000    1.117    0.000 ops.py:3071(_c_graph)
  2512242    1.101    0.000    1.101    0.000 lock_util.py:110(_validate_group_id)
    85510    0.165    0.000    1.095    0.000 Hanabi.py:191(save)
   837414    1.084    0.000    1.084    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
   104334    0.496    0.000    1.080    0.000 data_adapter.py:235(can_handle)
      999    0.048    0.000    1.077    0.001 backend.py:3565(batch_set_value)
       10    0.004    0.000    1.077    0.108 save.py:168(__init__)
   104468    0.241    0.000    1.075    0.000 variable_scope.py:1433(get_variable_scope)
   313362    0.576    0.000    1.071    0.000 function.py:3763(__del__)
    69576    0.189    0.000    1.063    0.000 data_adapter.py:275(<genexpr>)
       20    0.001    0.000    1.058    0.053 function_base.py:2093(_get_ufunc_and_otypes)
   955030    0.895    0.000    1.057    0.000 tensor_shape.py:185(__init__)
   733452    1.043    0.000    1.043    0.000 ops.py:3800(_get_operation_by_name_unsafe)
   104458    0.772    0.000    1.038    0.000 function.py:2728(__init__)
    34843    0.253    0.000    1.036    0.000 monitoring.py:335(get_cell)
   104488    0.231    0.000    1.021    0.000 ops.py:1625(internal_convert_to_tensor_or_composite)
    21429    0.180    0.000    1.021    0.000 fromnumeric.py:73(_wrapreduction)
        5    0.000    0.000    1.020    0.204 signature_serialization.py:71(find_function_to_export)
        5    0.000    0.000    1.020    0.204 training.py:2581(_list_functions_for_serialization)
   139312    1.007    0.000    1.007    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
   976838    0.703    0.000    1.005    0.000 ops.py:5117(_auto_cast_variable_read_dtype)
   290110    0.539    0.000    1.004    0.000 tape.py:150(stop_recording)
    99591    1.003    0.000    1.003    0.000 weakref.py:431(__contains__)
   104406    0.413    0.000    1.000    0.000 cache.py:43(has)
   837229    0.779    0.000    0.997    0.000 errors_impl.py:117(__str__)
  7231724    0.996    0.000    0.996    0.000 pickle.py:200(commit_frame)
   595809    0.688    0.000    0.992    0.000 tensor_conversion_registry.py:114(get)
  1222380    0.988    0.000    0.988    0.000 op_def_registry.py:34(get)
   483540    0.981    0.000    0.981    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
   873909    0.725    0.000    0.974    0.000 ops.py:402(graph)
   834224    0.692    0.000    0.972    0.000 function.py:2840(input_signature)
  1335619    0.677    0.000    0.971    0.000 _dill.py:380(get)
   211634    0.321    0.000    0.970    0.000 __init__.py:1359(log)
   110/70    0.003    0.000    0.962    0.014 save_impl.py:511(wrapper)
   208667    0.289    0.000    0.962    0.000 nest.py:104(assert_same_structure)
  1186019    0.672    0.000    0.958    0.000 op_def_library.py:80(_IsListValue)
  220/205    0.001    0.000    0.950    0.005 layer_serialization.py:81(_get_serialized_attributes)
       25    0.000    0.000    0.948    0.038 layer_serialization.py:77(functions_to_serialize)
  1088191    0.445    0.000    0.946    0.000 {method 'extend' of 'list' objects}
        5    0.000    0.000    0.945    0.189 model_serialization.py:45(_get_serialized_attributes_internal)
   108538    0.299    0.000    0.944    0.000 object_identity.py:192(add)
   525742    0.740    0.000    0.934    0.000 context.py:239(pop)
    69556    0.199    0.000    0.933    0.000 data_adapter.py:1549(_is_distributed_dataset)
    18182    0.299    0.000    0.930    0.000 Experiment.py:71(<listcomp>)
  1570667    0.765    0.000    0.925    0.000 ops.py:3472(<genexpr>)
   101142    0.346    0.000    0.918    0.000 <__array_function__ internals>:2(ndim)
   104526    0.913    0.000    0.913    0.000 {method 'astype' of 'numpy.ndarray' objects}
   104341    0.903    0.000    0.903    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}
    34778    0.126    0.000    0.902    0.000 data_adapter.py:681(can_handle)
   712421    0.318    0.000    0.901    0.000 __init__.py:1298(info)
   736167    0.377    0.000    0.899    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
      265    0.004    0.000    0.896    0.003 def_function.py:1024(_list_all_concrete_functions_for_serialization)
  3144324    0.894    0.000    0.894    0.000 ops.py:397(dtype)
   412473    0.894    0.000    0.894    0.000 {method 'format' of 'str' objects}
   837284    0.888    0.000    0.888    0.000 context.py:1204(op_callbacks)
   139369    0.708    0.000    0.888    0.000 context.py:1772(__exit__)
    71516    0.136    0.000    0.883    0.000 data_adapter.py:1164(catch_stop_iteration)
   243536    0.237    0.000    0.883    0.000 function.py:3246(<genexpr>)
    34782    0.069    0.000    0.872    0.000 nest.py:1403(list_to_tuple)
    34778    0.153    0.000    0.849    0.000 dataset_ops.py:3147(_to_tensor_list)
    67322    0.100    0.000    0.849    0.000 nest.py:1226(<listcomp>)
  1674828    0.848    0.000    0.848    0.000 lock_util.py:108(<genexpr>)
    69576    0.447    0.000    0.846    0.000 ops.py:1523(internal_convert_n_to_tensor)
  1252084    0.845    0.000    0.845    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceForData}
   112069    0.841    0.000    0.845    0.000 threading.py:215(__init__)
    34777    0.095    0.000    0.844    0.000 dataset_ops.py:3523(<listcomp>)
   201700    0.539    0.000    0.838    0.000 iterator_ops.py:766(_type_spec)
  129/102    0.006    0.000    0.836    0.008 base_layer.py:875(__call__)
   104468    0.245    0.000    0.835    0.000 variable_scope.py:1420(get_variable_scope_store)
  2823285    0.830    0.000    0.830    0.000 {method 'pop' of 'dict' objects}
    50/40    0.000    0.000    0.830    0.021 utils.py:153(wrap_with_training_arg)
    37482    0.374    0.000    0.825    0.000 tensor_shape.py:1136(most_specific_compatible_shape)
    50/40    0.000    0.000    0.824    0.021 tf_utils.py:42(smart_cond)
    50/40    0.000    0.000    0.824    0.021 smart_cond.py:27(smart_cond)
    50/40    0.000    0.000    0.824    0.021 utils.py:163(replace_training_and_call)
   104334    0.405    0.000    0.823    0.000 tf_inspect.py:370(isfunction)
    35046    0.057    0.000    0.811    0.000 ops.py:5314(colocate_with)
        5    0.002    0.000    0.811    0.162 save.py:594(_fill_meta_graph_def)
   133990    0.440    0.000    0.806    0.000 tensor_spec.py:90(__eq__)
  1290856    0.805    0.000    0.805    0.000 {method 'pop' of 'list' objects}
   388625    0.532    0.000    0.805    0.000 ops.py:1033(dtype)
   104346    0.120    0.000    0.805    0.000 op_def_library.py:695(<listcomp>)
  1674828    0.804    0.000    0.804    0.000 traceable_stack.py:123(peek_traceable_objs)
     20/5    0.000    0.000    0.803    0.161 layer_serialization.py:101(_get_serialized_attributes_internal)
   844361    0.803    0.000    0.803    0.000 {built-in method builtins.max}
   147025    0.344    0.000    0.803    0.000 object_identity.py:186(__contains__)
       39    0.000    0.000    0.800    0.021 functional.py:367(call)
       39    0.003    0.000    0.800    0.021 functional.py:464(_run_internal_graph)
521670/417336    0.458    0.000    0.797    0.000 dataset_ops.py:2972(element_spec)
    69554    0.106    0.000    0.795    0.000 dataset_ops.py:2762(get_legacy_output_classes)
   104360    0.387    0.000    0.793    0.000 cache.py:50(__getitem__)
     20/5    0.001    0.000    0.792    0.158 save_impl.py:134(wrap_layer_functions)
   104334    0.781    0.000    0.781    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionSetAttrValueProto}
   837168    0.569    0.000    0.772    0.000 registry.py:74(list)
  1011803    0.529    0.000    0.770    0.000 ops.py:3015(_variable_creator_stack)
487074/313145    0.626    0.000    0.770    0.000 tensor_util.py:219(_GetDenseDimensions)
   210757    0.609    0.000    0.769    0.000 func_graph.py:740(internal_captures)
       40    0.000    0.000    0.758    0.019 save_impl.py:495(add_function)
    34778    0.357    0.000    0.754    0.000 iterator_ops.py:525(__init__)
    35046    0.103    0.000    0.754    0.000 ops.py:5291(_colocate_with_for_gradient)
    99900    0.390    0.000    0.749    0.000 nest.py:873(flatten_up_to)
    35763    0.081    0.000    0.747    0.000 context.py:2310(async_wait)
    34843    0.204    0.000    0.746    0.000 monitoring.py:136(get_cell)
   733815    0.744    0.000    0.744    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
   834938    0.597    0.000    0.742    0.000 tensor_shape.py:843(__len__)
   104206    0.117    0.000    0.729    0.000 function.py:384(__del__)
  7231724    0.729    0.000    0.729    0.000 pickle.py:523(persistent_id)
   384107    0.727    0.000    0.727    0.000 op_def_library.py:737(<listcomp>)
    34805    0.184    0.000    0.726    0.000 distribute_lib.py:2872(__exit__)
    60/45    0.001    0.000    0.719    0.016 save_impl.py:567(call_and_return_conditional_losses)
   104338    0.282    0.000    0.718    0.000 structure.py:196(<listcomp>)
    34778    0.058    0.000    0.718    0.000 dataset_ops.py:3005(<lambda>)
   110/65    0.001    0.000    0.714    0.011 save_impl.py:541(__call__)
   872035    0.456    0.000    0.713    0.000 ops.py:2245(_add_control_inputs)
  2683195    0.703    0.000    0.703    0.000 {method 'startswith' of 'str' objects}
  1525604    0.701    0.000    0.701    0.000 tensor_spec.py:68(dtype)
  2588112    0.691    0.000    0.691    0.000 {method 'items' of 'dict' objects}
    69554    0.104    0.000    0.689    0.000 dataset_ops.py:2779(get_legacy_output_shapes)
   104468    0.371    0.000    0.688    0.000 function.py:356(_inference_name)
   104468    0.685    0.000    0.685    0.000 function.py:474(<listcomp>)
   122096    0.289    0.000    0.678    0.000 object_identity.py:131(__getitem__)
2651193/2650953    0.674    0.000    0.678    0.000 {method 'update' of 'set' objects}
   243827    0.458    0.000    0.674    0.000 context.py:1831(ensure_initialized)
   632157    0.507    0.000    0.674    0.000 tensor_shape.py:1191(<listcomp>)
   104351    0.330    0.000    0.673    0.000 config_lib.py:62(get_action)
   208667    0.671    0.000    0.673    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructureForData}
   104430    0.306    0.000    0.671    0.000 math_ops.py:866(cast)
   522675    0.474    0.000    0.670    0.000 ops.py:3972(get_collection_ref)
   208936    0.331    0.000    0.669    0.000 variable_scope.py:1202(set_use_resource)
   486899    0.466    0.000    0.666    0.000 structure.py:283(<listcomp>)
   278738    0.412    0.000    0.664    0.000 tensor_shape.py:252(is_compatible_with)
  1012105    0.664    0.000    0.664    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
    34778    0.146    0.000    0.660    0.000 tensor_spec.py:190(_unbatch)
    35763    0.093    0.000    0.658    0.000 context.py:645(sync_executors)
        9    0.000    0.000    0.651    0.072 func_graph.py:958(wrapper)
  3055114    0.651    0.000    0.651    0.000 tensor_shape.py:247(value)
  2549605    0.648    0.000    0.648    0.000 ops.py:2381(graph)
    70138    0.185    0.000    0.646    0.000 distribution_strategy_context.py:215(get_strategy_and_replica_context)
    34778    0.353    0.000    0.638    0.000 training.py:2453(_check_call_args)
   841726    0.473    0.000    0.633    0.000 traceable_stack.py:127(__len__)
   732462    0.627    0.000    0.627    0.000 op_def_library.py:64(_IsListParameter)
   733253    0.482    0.000    0.626    0.000 control_flow_util.py:180(GetOutputContext)
    34805    0.100    0.000    0.620    0.000 distribute_lib.py:791(scope)
   104206    0.100    0.000    0.612    0.000 context.py:2351(remove_function)
        4    0.000    0.000    0.611    0.153 distribute_lib.py:1130(run)
        4    0.000    0.000    0.610    0.153 distribute_lib.py:2537(call_for_each_replica)
        4    0.000    0.000    0.610    0.153 distribute_lib.py:2941(_call_for_each_replica)
    19332    0.279    0.000    0.610    0.000 Experiment.py:47(<listcomp>)
   264692    0.434    0.000    0.609    0.000 object_identity.py:183(_wrap_key)
   104360    0.173    0.000    0.608    0.000 tf_inspect.py:335(getmodule)
   316986    0.200    0.000    0.606    0.000 _asarray.py:16(asarray)
   210197    0.261    0.000    0.606    0.000 ag_ctx.py:53(__enter__)
   487232    0.478    0.000    0.606    0.000 base.py:677(_lookup_dependency)
69599/69579    0.301    0.000    0.604    0.000 nest.py:126(_packed_nest_with_indices)
        3    0.000    0.000    0.600    0.200 tmpp97_pviq.py:9(tf__train_function)
        3    0.000    0.000    0.600    0.200 training.py:785(step_function)
   104392    0.216    0.000    0.597    0.000 tensor_util.py:280(_check_not_tensor)
   246101    0.403    0.000    0.597    0.000 weakref.py:428(get)
   702549    0.384    0.000    0.592    0.000 pickle.py:436(put)
        3    0.000    0.000    0.590    0.197 training.py:788(run_step)
   104468    0.197    0.000    0.590    0.000 ops.py:6351(get_collection)
  5047363    0.588    0.000    0.588    0.000 multiarray.py:145(concatenate)
   382566    0.377    0.000    0.587    0.000 structure.py:296(<listcomp>)
  2214900    0.577    0.000    0.583    0.000 object_identity.py:175(<genexpr>)
        3    0.000    0.000    0.583    0.194 training.py:716(train_step)
  1675218    0.580    0.000    0.580    0.000 ops.py:3043(_check_not_finalized)
   104445    0.250    0.000    0.577    0.000 execute.py:201(make_shape)
   976838    0.575    0.000    0.575    0.000 ops.py:5101(_distribution_strategy_stack)
   837231    0.574    0.000    0.574    0.000 {built-in method sys.exc_info}
   215598    0.315    0.000    0.568    0.000 training.py:328(<genexpr>)
    35763    0.565    0.000    0.565    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextSyncExecutors}
1282261/1281163    0.402    0.000    0.561    0.000 {built-in method builtins.issubclass}
    25/20    0.000    0.000    0.559    0.028 utils.py:169(<lambda>)
    69556    0.094    0.000    0.558    0.000 options.py:45(__ne__)
  2080213    0.557    0.000    0.557    0.000 {method 'keys' of 'dict' objects}
   869266    0.553    0.000    0.553    0.000 context.py:514(ensure_initialized)
   208737    0.252    0.000    0.552    0.000 ag_ctx.py:35(control_status_ctx)
   104042    0.164    0.000    0.550    0.000 function.py:2632(_is_ndarray)
  1503266    0.540    0.000    0.540    0.000 ops.py:796(_as_tf_output)
   594041    0.536    0.000    0.536    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
    34781    0.535    0.000    0.535    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
   199180    0.534    0.000    0.534    0.000 def_function.py:752(_get_tracing_count)
   208805    0.324    0.000    0.534    0.000 os.py:742(encode)
   245982    0.350    0.000    0.533    0.000 {method 'join' of 'str' objects}
   104468    0.232    0.000    0.530    0.000 object_identity.py:223(__len__)
       21    0.526    0.025    0.526    0.025 {method 'clear' of 'list' objects}
   101140    0.526    0.000    0.526    0.000 {method 'item' of 'numpy.generic' objects}
     6524    0.021    0.000    0.526    0.000 <__array_function__ internals>:2(mean)
   978968    0.524    0.000    0.524    0.000 ops.py:4086(_name_stack)
    69878    0.330    0.000    0.522    0.000 ops.py:2979(_variable_creator_scope)
   838514    0.522    0.000    0.522    0.000 _collections_abc.py:698(__init__)
  2063124    0.521    0.000    0.521    0.000 ops.py:392(op)
    34805    0.096    0.000    0.520    0.000 distribute_lib.py:2892(_scope)
    34778    0.102    0.000    0.519    0.000 data_adapter.py:529(can_handle)
   716966    0.412    0.000    0.518    0.000 tensor_shape.py:819(rank)
   908812    0.517    0.000    0.517    0.000 {method 'lower' of 'str' objects}
  2303674    0.516    0.000    0.516    0.000 ops.py:2036(_get_control_flow_context)
   104543    0.494    0.000    0.512    0.000 weakref.py:354(__init__)
   731115    0.374    0.000    0.510    0.000 inspect.py:81(ismethod)
   486890    0.508    0.000    0.508    0.000 {built-in method _weakref.proxy}
  1781829    0.506    0.000    0.506    0.000 {method 'release' of '_thread.lock' objects}
   837414    0.505    0.000    0.505    0.000 lock_util.py:119(__init__)
   418383    0.442    0.000    0.505    0.000 inspect.py:159(isfunction)
   104468    0.204    0.000    0.503    0.000 func_graph.py:1081(flatten)
  1571702    0.502    0.000    0.502    0.000 ops.py:2307(outputs)
   208956    0.190    0.000    0.501    0.000 func_graph.py:1023(<genexpr>)
   104394    0.214    0.000    0.498    0.000 options.py:51(__setattr__)
   104206    0.141    0.000    0.497    0.000 context.py:1154(remove_function)
       60    0.001    0.000    0.494    0.008 utils.py:66(return_outputs_and_add_losses)
   104678    0.487    0.000    0.487    0.000 {built-in method tensorflow.python._pywrap_tf_session.AddControlInput}
     6524    0.091    0.000    0.486    0.000 fromnumeric.py:3231(mean)
   104753    0.211    0.000    0.479    0.000 tf_inspect.py:390(ismethod)
   104535    0.379    0.000    0.477    0.000 ops.py:4040(<listcomp>)
  1048898    0.474    0.000    0.474    0.000 {built-in method _thread.get_ident}
  1218804    0.474    0.000    0.474    0.000 ops.py:3354(building_function)
   140656    0.326    0.000    0.471    0.000 <frozen importlib._bootstrap>:997(_handle_fromlist)
   209308    0.316    0.000    0.467    0.000 <string>:12(__new__)
        3    0.000    0.000    0.461    0.154 training.py:2696(_minimize)
    40626    0.030    0.000    0.459    0.000 <__array_function__ internals>:2(atleast_2d)
  1008558    0.456    0.000    0.456    0.000 dataset_ops.py:216(_variant_tensor)
   437492    0.299    0.000    0.454    0.000 {method 'add' of 'set' objects}
   463680    0.333    0.000    0.453    0.000 object_identity.py:63(__hash__)
   278604    0.451    0.000    0.451    0.000 {method 'ravel' of 'numpy.ndarray' objects}
   208991    0.318    0.000    0.441    0.000 traceable_stack.py:131(copy)
   804826    0.438    0.000    0.438    0.000 {method 'update' of 'dict' objects}
   280667    0.438    0.000    0.438    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
    14429    0.066    0.000    0.437    0.000 <__array_function__ internals>:2(argmax)
   486890    0.436    0.000    0.436    0.000 tracking.py:186(__init__)
   104360    0.239    0.000    0.435    0.000 inspect.py:714(getmodule)
    35623    0.435    0.000    0.435    0.000 {method 'copy' of 'numpy.ndarray' objects}
   135228    0.433    0.000    0.433    0.000 data_adapter.py:1184(steps)
   384436    0.323    0.000    0.432    0.000 func_graph.py:1057(<genexpr>)
   419603    0.430    0.000    0.430    0.000 ops.py:2801(name_from_scope_name)
   208748    0.237    0.000    0.428    0.000 cache.py:92(_get_key)
    99600    0.152    0.000    0.428    0.000 tape.py:220(could_possibly_record)
    34805    0.196    0.000    0.424    0.000 distribute_lib.py:2853(__init__)
        5    0.000    0.000    0.424    0.085 functional_saver.py:172(to_proto)
     1350    0.005    0.000    0.424    0.000 function.py:177(_shape_relaxed_type_for_composite_tensor)
   104468    0.160    0.000    0.422    0.000 function.py:1581(<listcomp>)
   302116    0.215    0.000    0.419    0.000 pickle.py:652(save_long)
       90    0.000    0.000    0.418    0.005 core.py:1192(call)
       90    0.001    0.000    0.418    0.005 core.py:30(dense)
    34777    0.111    0.000    0.415    0.000 ops.py:2263(_add_control_input)
4050/1350    0.027    0.000    0.412    0.000 type_spec.py:134(_with_tensor_ranks_only)
  1191352    0.409    0.000    0.409    0.000 tensor_spec.py:63(shape)
   243440    0.164    0.000    0.408    0.000 nest.py:241(<listcomp>)
   107523    0.320    0.000    0.407    0.000 enum.py:267(__call__)
    34778    0.197    0.000    0.403    0.000 callbacks.py:247(_add_default_callbacks)
   106436    0.402    0.000    0.402    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
    69576    0.058    0.000    0.396    0.000 callbacks.py:235(<genexpr>)
     6524    0.127    0.000    0.395    0.000 _methods.py:134(_mean)
    99590    0.356    0.000    0.395    0.000 function.py:1844(<listcomp>)
   104398    0.389    0.000    0.393    0.000 converter.py:153(__init__)
    40626    0.145    0.000    0.389    0.000 shape_base.py:83(atleast_2d)
   208668    0.368    0.000    0.386    0.000 tracking.py:154(resource_tracker_scope)
    36243    0.119    0.000    0.381    0.000 context.py:2006(eager_mode)
       50    0.000    0.000    0.379    0.008 save_impl.py:585(call)
   139766    0.376    0.000    0.376    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
   104403    0.218    0.000    0.371    0.000 converter.py:174(__hash__)
      130    0.008    0.000    0.369    0.003 functional_ops.py:1112(partitioned_call)
    99467    0.368    0.000    0.368    0.000 def_function.py:72(called_without_tracing)
   313616    0.287    0.000    0.361    0.000 memory.py:24(dismantle_ordered_dict)
   632141    0.360    0.000    0.360    0.000 {method 'replace' of 'str' objects}
  1325752    0.358    0.000    0.358    0.000 {method 'values' of 'dict' objects}
    55067    0.250    0.000    0.355    0.000 Hanabi.py:262(<listcomp>)
    20329    0.141    0.000    0.354    0.000 Experiment.py:61(<listcomp>)
  1223347    0.352    0.000    0.352    0.000 traceable_stack.py:121(<genexpr>)
  1783524    0.352    0.000    0.352    0.000 {built-in method builtins.callable}
    34778    0.077    0.000    0.351    0.000 data_adapter.py:117(__init__)
   773280    0.344    0.000    0.350    0.000 Hanabi.py:196(__init__)
   939201    0.349    0.000    0.349    0.000 function.py:2463(input_signature)
   925061    0.349    0.000    0.349    0.000 __init__.py:1530(getEffectiveLevel)
    36907    0.048    0.000    0.348    0.000 tensor_shape.py:1121(assert_is_compatible_with)
   976838    0.346    0.000    0.346    0.000 ops.py:3039(_variable_creator_stack)
   418553    0.340    0.000    0.346    0.000 traceable_stack.py:83(__init__)
  1268702    0.342    0.000    0.342    0.000 tensor_shape.py:826(dims)
      841    0.006    0.000    0.341    0.000 func_graph.py:644(_capture_helper)
     1000    0.019    0.000    0.339    0.000 callbacks.py:1045(on_epoch_end)
    34798    0.177    0.000    0.338    0.000 callbacks.py:815(_implements_train_batch_hooks)
     1000    0.020    0.000    0.338    0.000 callbacks.py:377(on_epoch_begin)
   104468    0.263    0.000    0.337    0.000 func_graph.py:735(external_captures)
    34778    0.108    0.000    0.336    0.000 dataset_ops.py:565(_type_spec)
   837414    0.333    0.000    0.334    0.000 ops.py:5061(<dictcomp>)
    21201    0.161    0.000    0.331    0.000 Hanabi.py:339(next_turn)
   976838    0.329    0.000    0.329    0.000 ops.py:5133(_auto_cast_variable_read_dtype)
      745    0.006    0.000    0.328    0.000 func_graph.py:1123(_create_substitute_placeholder)
   283771    0.327    0.000    0.327    0.000 {method '__reduce_ex__' of 'object' objects}
    14429    0.045    0.000    0.322    0.000 fromnumeric.py:1112(argmax)
   105134    0.232    0.000    0.319    0.000 function.py:1959(name)
   384107    0.304    0.000    0.312    0.000 op_def_library.py:89(<listcomp>)
10800/2700    0.024    0.000    0.310    0.000 type_spec.py:148(relax)
        3    0.000    0.000    0.310    0.103 optimizer_v2.py:473(apply_gradients)
    34778    0.087    0.000    0.309    0.000 data_adapter.py:448(can_handle)
  1053806    0.308    0.000    0.308    0.000 context.py:1718(context_switches)
   523773    0.308    0.000    0.308    0.000 func_graph.py:427(outer_graph)
   281221    0.303    0.000    0.303    0.000 {method 'decode' of 'bytes' objects}
   104206    0.302    0.000    0.302    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextRemoveFunction}
       10    0.000    0.000    0.302    0.030 functional_saver.py:202(save)
   283797    0.166    0.000    0.302    0.000 pickle.py:723(save_tuple)
      231    0.001    0.000    0.301    0.001 resource_variable_ops.py:1908(_dense_var_to_tensor)
    34778    0.092    0.000    0.301    0.000 version_utils.py:114(disallow_legacy_graph)
      231    0.001    0.000    0.300    0.001 resource_variable_ops.py:1317(_dense_var_to_tensor)
    69576    0.037    0.000    0.300    0.000 data_adapter.py:550(<genexpr>)
   178505    0.124    0.000    0.300    0.000 layer_utils.py:43(has_weights)
   625439    0.297    0.000    0.297    0.000 context.py:749(_handle)
    34778    0.041    0.000    0.297    0.000 nest.py:1417(sequence_fn)
    73823    0.295    0.000    0.295    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   208737    0.130    0.000    0.294    0.000 api.py:153(is_autograph_artifact)
   104360    0.206    0.000    0.294    0.000 inspect_utils.py:96(isconstructor)
   283839    0.232    0.000    0.294    0.000 _dill.py:386(__missing__)
   104468    0.242    0.000    0.292    0.000 ops.py:3997(get_collection)
    34809    0.095    0.000    0.290    0.000 tensor_util.py:804(constant_value)
    37442    0.085    0.000    0.289    0.000 ops.py:5744(executing_eagerly_outside_functions)
   768214    0.288    0.000    0.288    0.000 op_def_library.py:235(_MaybeColocateWith)
      231    0.001    0.000    0.287    0.001 resource_variable_ops.py:550(value)
   104468    0.286    0.000    0.286    0.000 function.py:3061(<listcomp>)
        5    0.000    0.000    0.286    0.057 util.py:1152(save)
       10    0.001    0.000    0.284    0.028 functional_saver.py:252(save_fn)
        5    0.000    0.000    0.283    0.057 util.py:1117(_save_cached_when_graph_building)
36816/36486    0.102    0.000    0.283    0.000 data_structures.py:103(sticky_attribute_assignment)
    14609    0.035    0.000    0.281    0.000 fromnumeric.py:55(_wrapfunc)
   104468    0.087    0.000    0.280    0.000 object_identity.py:225(<listcomp>)
    38646    0.038    0.000    0.280    0.000 _collections_abc.py:664(__contains__)
   496183    0.277    0.000    0.277    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
35340/35309    0.113    0.000    0.277    0.000 tracking.py:440(wrapped)
        6    0.000    0.000    0.276    0.046 distribute_lib.py:2683(merge_call)
        6    0.000    0.000    0.276    0.046 distribute_lib.py:2717(_merge_call)
   199800    0.132    0.000    0.275    0.000 nest.py:954(<genexpr>)
        3    0.000    0.000    0.274    0.091 optimizer_v2.py:588(_distributed_apply)
   388725    0.273    0.000    0.273    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
    34778    0.098    0.000    0.273    0.000 dataset_ops.py:2907(_graph_rewrite_configs)
        2    0.000    0.000    0.273    0.137 pyplot.py:720(savefig)
    34778    0.064    0.000    0.270    0.000 dataset_ops.py:2920(_autotune_settings)
    20329    0.095    0.000    0.270    0.000 Hanabi.py:276(score)
       10    0.000    0.000    0.270    0.027 function.py:3718(bound_method_wrapper)
    60746    0.133    0.000    0.269    0.000 threading.py:1104(is_alive)
   212214    0.215    0.000    0.269    0.000 inspect.py:2781(<genexpr>)
   625709    0.268    0.000    0.268    0.000 context.py:813(device_name)
   278391    0.109    0.000    0.267    0.000 generic_utils.py:792(is_default)
   145055    0.267    0.000    0.267    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
    34777    0.058    0.000    0.266    0.000 gen_dataset_ops.py:6628(<listcomp>)
     2698    0.004    0.000    0.265    0.000 function.py:3110(<genexpr>)
    25/20    0.000    0.000    0.264    0.013 utils.py:170(<lambda>)
       18    0.000    0.000    0.263    0.015 distribute_lib.py:2233(update)
    34798    0.117    0.000    0.263    0.000 data_adapter.py:535(_is_composite)
   104556    0.263    0.000    0.263    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
     1349    0.006    0.000    0.261    0.000 function.py:169(_is_type_subset)
       18    0.000    0.000    0.261    0.014 distribute_lib.py:2952(_update)
       18    0.000    0.000    0.261    0.014 distribute_lib.py:2957(_update_non_slot)
   489531    0.259    0.000    0.259    0.000 ops.py:5035(_device_function_stack)
       18    0.000    0.000    0.257    0.014 optimizer_v2.py:591(apply_grad_to_update_var)
       18    0.001    0.000    0.257    0.014 rmsprop.py:175(_resource_apply_dense)
   104468    0.219    0.000    0.256    0.000 func_graph.py:745(deferred_external_captures)
   208662    0.184    0.000    0.255    0.000 dataset_ops.py:2738(get_structure)
    88384    0.041    0.000    0.252    0.000 _asarray.py:88(asanyarray)
    34778    0.074    0.000    0.252    0.000 gen_dataset_ops.py:6697(<listcomp>)
   173890    0.183    0.000    0.252    0.000 dataset_ops.py:4108(element_spec)
   208872    0.251    0.000    0.251    0.000 {method 'SetInParent' of 'google.protobuf.pyext._message.CMessage' objects}
    30264    0.036    0.000    0.251    0.000 iostream.py:320(_schedule_flush)
   210018    0.250    0.000    0.250    0.000 object_identity.py:227(__iter__)
   104334    0.132    0.000    0.249    0.000 dataset_ops.py:3366(<listcomp>)
    34814    0.062    0.000    0.249    0.000 distribution_strategy_context.py:199(has_strategy)
199798/199788    0.117    0.000    0.248    0.000 nest.py:750(assert_shallow_structure)
  1217526    0.246    0.000    0.246    0.000 tensor_spec.py:37(<lambda>)
  1068480    0.245    0.000    0.245    0.000 _dill.py:1515(is_dill)
   383257    0.243    0.000    0.243    0.000 array_ops.py:1485(<genexpr>)
    484/4    0.002    0.000    0.241    0.060 artist.py:30(draw_wrapper)
        4    0.000    0.000    0.241    0.060 figure.py:1688(draw)
    35259    0.117    0.000    0.240    0.000 resource_variable_ops.py:317(_maybe_set_handle_data)
   278738    0.238    0.000    0.238    0.000 context.py:823(_set_device)
      8/4    0.000    0.000    0.237    0.059 image.py:119(_draw_list_compositing_images)
        4    0.000    0.000    0.237    0.059 _base.py:2555(draw)
   313374    0.221    0.000    0.237    0.000 function.py:3760(__init__)
    28034    0.035    0.000    0.237    0.000 Hanabi.py:183(save)
   463680    0.236    0.000    0.236    0.000 object_identity.py:35(__init__)
     1079    0.010    0.000    0.236    0.000 {built-in method builtins.print}
    34777    0.043    0.000    0.234    0.000 gen_dataset_ops.py:895(<listcomp>)
     1000    0.010    0.000    0.233    0.000 callbacks.py:955(on_epoch_begin)
   104468    0.196    0.000    0.231    0.000 func_graph.py:750(deferred_internal_captures)
   837168    0.229    0.000    0.229    0.000 control_flow_util.py:191(GetContainingWhileContext)
   839099    0.228    0.000    0.228    0.000 ops.py:3148(_get_control_flow_context)
   496083    0.224    0.000    0.224    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
    56831    0.119    0.000    0.223    0.000 Hanabi.py:372(<dictcomp>)
   383971    0.221    0.000    0.221    0.000 ops.py:452(<listcomp>)
    14429    0.221    0.000    0.221    0.000 {method 'argmax' of 'numpy.ndarray' objects}
    34777    0.064    0.000    0.221    0.000 gen_dataset_ops.py:890(<listcomp>)
   139369    0.191    0.000    0.220    0.000 device.py:45(is_device_spec)
   510854    0.220    0.000    0.220    0.000 iterator_ops.py:885(_serialize)
   173890    0.158    0.000    0.219    0.000 dataset_ops.py:4058(element_spec)
   626367    0.218    0.000    0.218    0.000 tensor_shape.py:790(_v2_behavior)
       55    0.015    0.000    0.218    0.004 tracking.py:103(_list_functions_for_serialization)
   496192    0.218    0.000    0.218    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
   319015    0.171    0.000    0.218    0.000 tensor_shape.py:704(as_dimension)
   837229    0.217    0.000    0.217    0.000 errors_impl.py:86(message)
   496112    0.217    0.000    0.217    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
    99600    0.217    0.000    0.217    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
   174681    0.103    0.000    0.217    0.000 tensor_shape.py:838(ndims)
        8    0.000    0.000    0.216    0.027 axis.py:1219(draw)
    34778    0.054    0.000    0.216    0.000 training.py:2772(_disallow_inside_tf_function)
   104468    0.151    0.000    0.215    0.000 function.py:475(<listcomp>)
    34778    0.081    0.000    0.213    0.000 dataset_ops.py:3122(__init__)
   496086    0.213    0.000    0.213    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
   208797    0.181    0.000    0.211    0.000 nest.py:81(_yield_value)
      105    0.001    0.000    0.211    0.002 gen_math_ops.py:5591(mat_mul)
    36958    0.209    0.000    0.210    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
    69599    0.124    0.000    0.209    0.000 nest.py:53(_sequence_like)
   104468    0.182    0.000    0.208    0.000 func_graph.py:491(variables)
   174564    0.207    0.000    0.207    0.000 function.py:484(<genexpr>)
   198261    0.146    0.000    0.207    0.000 object_identity.py:128(_wrap_key)
   208763    0.204    0.000    0.204    0.000 dtypes.py:103(as_numpy_dtype)
    73840    0.087    0.000    0.204    0.000 resource_variable_ops.py:246(_handle_graph)
   139369    0.203    0.000    0.203    0.000 context.py:1733(__init__)
       10    0.001    0.000    0.202    0.020 functional_saver.py:57(save)
   486080    0.202    0.000    0.202    0.000 tracking.py:199(__del__)
    99600    0.200    0.000    0.200    0.000 function.py:271(__exit__)
   104540    0.198    0.000    0.198    0.000 threading.py:74(RLock)
   244477    0.161    0.000    0.198    0.000 function.py:422(<genexpr>)
    34778    0.113    0.000    0.198    0.000 callbacks.py:1038(__init__)
    34873    0.073    0.000    0.197    0.000 tensor_shape.py:1166(is_fully_defined)
   104463    0.191    0.000    0.191    0.000 func_graph.py:127(<listcomp>)
   121117    0.115    0.000    0.191    0.000 object_identity.py:54(__eq__)
       10    0.000    0.000    0.190    0.019 gen_io_ops.py:1694(save_v2)
    99581    0.189    0.000    0.189    0.000 weakref.py:393(__getitem__)
   204403    0.186    0.000    0.186    0.000 iterator_ops.py:878(__init__)
     1353    0.006    0.000    0.185    0.000 type_spec.py:110(most_specific_compatible_type)
        5    0.000    0.000    0.182    0.036 functional_saver.py:193(_traced_restore)
  1460776    0.182    0.000    0.182    0.000 options.py:59(<lambda>)
   104540    0.181    0.000    0.181    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
   278599    0.180    0.000    0.180    0.000 func_graph.py:97(<genexpr>)
    34778    0.097    0.000    0.178    0.000 optimization_options.py:196(_autotune_settings)
        2    0.000    0.000    0.177    0.089 figure.py:2063(savefig)
        5    0.002    0.000    0.177    0.035 save.py:276(map_resources)
        2    0.000    0.000    0.177    0.089 backend_bases.py:2001(print_figure)
       90    0.001    0.000    0.177    0.002 nn_ops.py:3307(bias_add)
        5    0.000    0.000    0.177    0.035 functional_saver.py:297(restore)
        5    0.000    0.000    0.177    0.035 functional_saver.py:310(restore_fn)
        5    0.002    0.000    0.176    0.035 save.py:703(_serialize_object_graph)
    35543    0.113    0.000    0.176    0.000 tensor_util.py:986(is_tensor)
   243491    0.176    0.000    0.176    0.000 distribution_strategy_context.py:337(_get_default_replica_mode)
5410/1353    0.028    0.000    0.176    0.000 type_spec.py:395(__most_specific_compatible_type_serialization)
        5    0.001    0.000    0.176    0.035 functional_saver.py:80(restore)
   208742    0.120    0.000    0.175    0.000 api.py:148(autograph_artifact)
    69554    0.065    0.000    0.175    0.000 dataset_ops.py:2775(<lambda>)
        2    0.000    0.000    0.174    0.087 backend_pdf.py:2532(print_pdf)
    34778    0.039    0.000    0.170    0.000 dataset_ops.py:3493(_inputs)
   208728    0.093    0.000    0.169    0.000 data_adapter.py:252(<genexpr>)
    69576    0.046    0.000    0.168    0.000 callbacks.py:239(<genexpr>)
   382556    0.168    0.000    0.168    0.000 dataset_ops.py:348(options)
    34778    0.060    0.000    0.167    0.000 data_adapter.py:617(can_handle)
       95    0.001    0.000    0.167    0.002 resource_variable_ops.py:636(_map_resources)
6762/2706    0.006    0.000    0.167    0.000 type_spec.py:429(<genexpr>)
      149    0.001    0.000    0.166    0.001 math_ops.py:1122(binary_op_wrapper)
   356381    0.165    0.000    0.165    0.000 {method 'split' of 'str' objects}
    34971    0.115    0.000    0.163    0.000 types.py:135(__get__)
    70138    0.162    0.000    0.162    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
   212639    0.162    0.000    0.162    0.000 tf_logging.py:93(get_logger)
   417336    0.162    0.000    0.162    0.000 dataset_ops.py:3387(output_structure)
    34840    0.091    0.000    0.162    0.000 ops.py:5777(inside_function)
   107384    0.162    0.000    0.162    0.000 {method 'isidentifier' of 'str' objects}
   224007    0.162    0.000    0.162    0.000 {built-in method _thread.allocate_lock}
    69576    0.048    0.000    0.161    0.000 callbacks.py:237(<genexpr>)
   104434    0.119    0.000    0.160    0.000 function.py:2845(flat_input_signature)
       95    0.001    0.000    0.160    0.002 saveable_object_util.py:119(restore)
   131745    0.160    0.000    0.160    0.000 trace.py:52(__init__)
35186/34790    0.098    0.000    0.159    0.000 abc.py:196(__subclasscheck__)
    35358    0.068    0.000    0.159    0.000 execute.py:191(make_type)
      106    0.003    0.000    0.159    0.002 resource_variable_ops.py:1821(__init__)
       95    0.001    0.000    0.159    0.002 resource_variable_ops.py:2133(copy_to_graph_uninitialized)
   487292    0.159    0.000    0.159    0.000 base.py:662(_deferred_dependencies)
   208988    0.155    0.000    0.155    0.000 function.py:2421(<dictcomp>)
   104468    0.128    0.000    0.155    0.000 func_graph.py:1093(<listcomp>)
      130    0.001    0.000    0.154    0.001 functional_ops.py:1175(<listcomp>)
36818/36816    0.137    0.000    0.153    0.000 data_structures.py:80(wrap_or_unwrap)
   104468    0.150    0.000    0.150    0.000 function.py:441(<listcomp>)
   104334    0.150    0.000    0.150    0.000 tracking.py:146(resources)
        3    0.000    0.000    0.149    0.050 backprop.py:983(gradient)
   313516    0.149    0.000    0.149    0.000 context.py:818(device_spec)
        3    0.000    0.000    0.149    0.050 imperative_grad.py:33(imperative_grad)
        3    0.001    0.000    0.149    0.050 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeGradient}
   104468    0.148    0.000    0.148    0.000 c_api_util.py:86(__init__)
    69556    0.093    0.000    0.148    0.000 type_spec.py:501(<genexpr>)
    34828    0.073    0.000    0.147    0.000 object_identity.py:137(__delitem__)
    34778    0.130    0.000    0.145    0.000 distribute_lib.py:943(experimental_distribute_dataset)
       42    0.001    0.000    0.145    0.003 backprop.py:132(_gradient_function)
   199200    0.145    0.000    0.145    0.000 context.py:135(config_proto_serialized)
    34778    0.038    0.000    0.144    0.000 data_adapter.py:756(can_handle)
   104468    0.122    0.000    0.144    0.000 func_graph.py:919(<listcomp>)
      135    0.002    0.000    0.144    0.001 deprecation.py:473(new_func)
   104468    0.144    0.000    0.144    0.000 function.py:423(<listcomp>)
   279503    0.143    0.000    0.143    0.000 op_def_library.py:46(_AttrValue)
   104468    0.099    0.000    0.142    0.000 function.py:442(<listcomp>)
        5    0.000    0.000    0.141    0.028 save_impl.py:202(default_save_signature)
   525469    0.140    0.000    0.140    0.000 {method 'values' of 'collections.OrderedDict' objects}
        5    0.000    0.000    0.139    0.028 gen_io_ops.py:1743(save_v2_eager_fallback)
   278224    0.137    0.000    0.137    0.000 dataset_ops.py:2960(_inputs)
   108475    0.137    0.000    0.137    0.000 weakref.py:406(__setitem__)
    96450    0.111    0.000    0.136    0.000 callbacks.py:659(on_train_batch_begin)
    69554    0.087    0.000    0.135    0.000 dataset_ops.py:2809(<lambda>)
   208988    0.130    0.000    0.133    0.000 function.py:2427(<dictcomp>)
     2100    0.038    0.000    0.133    0.000 random.py:263(shuffle)
     2705    0.018    0.000    0.133    0.000 tensor_spec.py:100(most_specific_compatible_type)
     7529    0.033    0.000    0.131    0.000 threading.py:498(__init__)
   104737    0.130    0.000    0.131    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
    40193    0.084    0.000    0.130    0.000 tensor_shape.py:215(__eq__)
   209021    0.130    0.000    0.130    0.000 function.py:2447(fullargspec)
    64300    0.099    0.000    0.129    0.000 callbacks.py:675(on_train_batch_end)
    35012    0.114    0.000    0.128    0.000 {method 'sort' of 'list' objects}
    67322    0.060    0.000    0.128    0.000 nest.py:1232(<listcomp>)
    20329    0.079    0.000    0.127    0.000 Hanabi.py:277(<listcomp>)
   104116    0.124    0.000    0.125    0.000 weakref.py:356(remove)
    34778    0.057    0.000    0.124    0.000 optimization_options.py:259(_graph_rewrite_configs)
   104468    0.123    0.000    0.123    0.000 function.py:2479(vararg_name)
    34798    0.069    0.000    0.122    0.000 callbacks.py:827(_implements_predict_batch_hooks)
   104369    0.106    0.000    0.122    0.000 inspect.py:64(ismodule)
    34790    0.122    0.000    0.122    0.000 {built-in method math.ceil}
    34778    0.069    0.000    0.122    0.000 dataset_ops.py:3487(<listcomp>)
    69706    0.091    0.000    0.122    0.000 ops.py:1794(<listcomp>)
   104468    0.096    0.000    0.121    0.000 object_identity.py:208(__len__)
    99470    0.120    0.000    0.120    0.000 data_adapter.py:1232(should_sync)
    99600    0.120    0.000    0.120    0.000 context.py:1056(function_call_options)
   104448    0.105    0.000    0.119    0.000 context.py:1841(global_seed)
    41337    0.058    0.000    0.119    0.000 object_identity.py:134(__setitem__)
      130    0.001    0.000    0.119    0.001 ops.py:3360(create_op)
    34843    0.065    0.000    0.118    0.000 monitoring.py:303(set)
    60746    0.055    0.000    0.118    0.000 threading.py:1062(_wait_for_tstate_lock)
   104830    0.117    0.000    0.117    0.000 {method 'values' of 'mappingproxy' objects}
    34778    0.084    0.000    0.117    0.000 data_adapter.py:1239(_infer_steps)
   104392    0.094    0.000    0.117    0.000 tensor_util.py:281(<listcomp>)
      375    0.004    0.000    0.116    0.000 save.py:725(_write_object_proto)
   201700    0.115    0.000    0.115    0.000 iterator_ops.py:820(element_spec)
    34798    0.061    0.000    0.113    0.000 callbacks.py:822(_implements_test_batch_hooks)
       16    0.001    0.000    0.112    0.007 axis.py:1098(_update_ticks)
    99600    0.111    0.000    0.111    0.000 function.py:265(__init__)
   109672    0.075    0.000    0.110    0.000 random.py:223(_randbelow)
   101142    0.110    0.000    0.110    0.000 fromnumeric.py:3037(ndim)
    69554    0.079    0.000    0.110    0.000 tensor_spec.py:116(_to_legacy_output_classes)
   285835    0.109    0.000    0.109    0.000 Hanabi.py:16(handSize)
   104468    0.087    0.000    0.109    0.000 function.py:443(<listcomp>)
   144975    0.108    0.000    0.108    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
     2100    0.007    0.000    0.108    0.000 Hanabi.py:300(<listcomp>)
   313292    0.107    0.000    0.108    0.000 ops.py:1922(<listcomp>)
    69556    0.062    0.000    0.108    0.000 optimization_options.py:189(_autotune_buffers)
   104394    0.086    0.000    0.107    0.000 options.py:80(set_fn)
    34798    0.064    0.000    0.107    0.000 data_adapter.py:625(_is_list_of_scalars)
    34778    0.059    0.000    0.107    0.000 iterator_ops.py:71(_device_stack_is_empty)
     1360    0.009    0.000    0.106    0.000 base_layer.py:1347(weights)
    69554    0.074    0.000    0.105    0.000 dataset_ops.py:2792(<lambda>)
   104468    0.104    0.000    0.104    0.000 variable_scope.py:1166(use_resource)
   210417    0.103    0.000    0.103    0.000 function.py:501(name)
   209812    0.102    0.000    0.102    0.000 function.py:763(forward)
    13304    0.035    0.000    0.102    0.000 Experiment.py:63(<listcomp>)
    10500    0.023    0.000    0.102    0.000 Hanabi.py:226(__init__)
    16700    0.010    0.000    0.101    0.000 __init__.py:340(set_verbosity)
   104360    0.083    0.000    0.100    0.000 inspect.py:277(isbuiltin)
     1054    0.003    0.000    0.100    0.000 base_layer.py:2235(variables)
    70138    0.099    0.000    0.099    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
   124694    0.098    0.000    0.099    0.000 {built-in method builtins.sum}
       10    0.001    0.000    0.098    0.010 graph_view.py:336(_serialize_gathered_objects)
       95    0.001    0.000    0.097    0.001 resource_variable_ops.py:307(shape_safe_assign_variable_handle)
    33150    0.070    0.000    0.097    0.000 callbacks.py:985(_maybe_init_progbar)
       75    0.001    0.000    0.096    0.001 gen_math_ops.py:6143(mul)
    30264    0.042    0.000    0.096    0.000 iostream.py:307(_is_master_process)
        2    0.000    0.000    0.096    0.048 backend_bases.py:1932(draw_idle)
        2    0.000    0.000    0.096    0.048 backend_agg.py:384(draw)
   104334    0.095    0.000    0.095    0.000 tracking.py:143(__init__)
   131745    0.094    0.000    0.094    0.000 trace.py:123(__exit__)
   104371    0.094    0.000    0.094    0.000 api.py:217(convert)
   104334    0.078    0.000    0.094    0.000 base.py:1192(isspmatrix)
    69576    0.074    0.000    0.094    0.000 op_def_library.py:447(<listcomp>)
    99505    0.093    0.000    0.093    0.000 iterator_ops.py:895(_to_components)
       69    0.000    0.000    0.092    0.001 math_ops.py:463(multiply)
    16700    0.022    0.000    0.091    0.000 _flagvalues.py:500(__setattr__)
   104507    0.090    0.000    0.090    0.000 converter.py:170(as_tuple)
   144975    0.089    0.000    0.089    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
     5949    0.018    0.000    0.089    0.000 Hanabi.py:237(getHint)
       63    0.000    0.000    0.089    0.001 math_ops.py:1450(_mul_dispatch)
   209691    0.089    0.000    0.089    0.000 function.py:1974(structured_input_signature)
        5    0.000    0.000    0.089    0.018 saving_utils.py:125(_wrapped_model)
   104385    0.071    0.000    0.088    0.000 inspect.py:73(isclass)
   105826    0.088    0.000    0.088    0.000 ag_ctx.py:49(__init__)
        5    0.000    0.000    0.087    0.017 functional_saver.py:184(_traced_save)
   104458    0.087    0.000    0.087    0.000 function.py:381(__init__)
       77    0.002    0.000    0.087    0.001 axis.py:56(__init__)
   142220    0.087    0.000    0.087    0.000 tensor_spec.py:73(name)
    21201    0.039    0.000    0.086    0.000 Hanabi.py:343(<listcomp>)
    34818    0.085    0.000    0.085    0.000 callbacks.py:607(__init__)
   104444    0.083    0.000    0.083    0.000 ops.py:3112(seed)
   210757    0.083    0.000    0.083    0.000 func_graph.py:743(<listcomp>)
    34778    0.064    0.000    0.083    0.000 callbacks.py:269(set_params)
   104468    0.082    0.000    0.082    0.000 function.py:3777(__init__)
     1038    0.027    0.000    0.082    0.000 training.py:589(metrics)
    21201    0.053    0.000    0.081    0.000 Experiment.py:42(<listcomp>)
   104334    0.081    0.000    0.081    0.000 dataset_ops.py:4023(_should_unpack_args)
    71853    0.045    0.000    0.081    0.000 base_layer.py:2697(_maybe_create_attribute)
    34778    0.073    0.000    0.080    0.000 data_adapter.py:884(can_handle)
       20    0.006    0.000    0.080    0.004 graph_view.py:89(_serialize_slot_variables)
     1005    0.005    0.000    0.079    0.000 __init__.py:1406(makeRecord)
   107523    0.079    0.000    0.079    0.000 enum.py:517(__new__)
    34871    0.067    0.000    0.078    0.000 op_def_library.py:148(_MakeInt)
    34778    0.046    0.000    0.078    0.000 optimization_options.py:55(_graph_rewrites)
   204089    0.078    0.000    0.078    0.000 function.py:2014(<listcomp>)
    99590    0.077    0.000    0.077    0.000 trace.py:89(set_metadata)
    40658    0.022    0.000    0.076    0.000 shape_base.py:220(_vhstack_dispatcher)
   107122    0.076    0.000    0.076    0.000 object_identity.py:38(unwrapped)
   121117    0.058    0.000    0.076    0.000 object_identity.py:42(_assert_type)
    42000    0.036    0.000    0.076    0.000 Hanabi.py:233(draw)
   104394    0.053    0.000    0.076    0.000 data_adapter.py:247(_is_tensor)
   104475    0.059    0.000    0.075    0.000 tensor_shape.py:1169(<genexpr>)
    34858    0.064    0.000    0.074    0.000 execute.py:166(make_int)
   104468    0.074    0.000    0.074    0.000 function.py:2836(function_spec)
   212693    0.074    0.000    0.074    0.000 function.py:1964(graph)
     1005    0.041    0.000    0.074    0.000 __init__.py:251(__init__)
    60987    0.074    0.000    0.074    0.000 Hanabi.py:279(availableActions)
       45    0.001    0.000    0.074    0.002 function_serialization.py:94(serialize_function)
       10    0.001    0.000    0.073    0.007 graph_view.py:412(objects_ids_and_slot_variables)
   214768    0.072    0.000    0.072    0.000 inspect.py:2502(name)
     1235    0.072    0.000    0.072    0.000 {built-in method builtins.dir}
        5    0.000    0.000    0.072    0.014 graph_view.py:389(frozen_saveable_objects)
    99470    0.071    0.000    0.071    0.000 data_adapter.py:1212(step_increment)
    23796    0.043    0.000    0.071    0.000 Hanabi.py:99(receive_hint)
    76233    0.070    0.000    0.070    0.000 resource_variable_ops.py:498(dtype)
       10    0.000    0.000    0.070    0.007 gen_io_ops.py:466(merge_v2_checkpoints)
   104737    0.070    0.000    0.070    0.000 tf2.py:42(enabled)
   106279    0.070    0.000    0.070    0.000 function.py:3780(release)
   104334    0.069    0.000    0.069    0.000 def_function.py:423(functions_run_eagerly)
   208668    0.069    0.000    0.069    0.000 dataset_ops.py:3409(function)
     1990    0.010    0.000    0.068    0.000 backend.py:489(deprecated_internal_learning_phase_scope)
      121    0.002    0.000    0.068    0.001 resource_variable_ops.py:146(_variable_handle_from_shape_and_dtype)
       60    0.000    0.000    0.068    0.001 base_layer.py:3009(_tracking_metadata)
       60    0.001    0.000    0.068    0.001 base_serialization.py:45(tracking_metadata)
   107115    0.067    0.000    0.067    0.000 distribute_lib.py:771(extended)
   104540    0.066    0.000    0.066    0.000 ops.py:4981(switch_to_thread_local)
   104216    0.056    0.000    0.066    0.000 function.py:3784(__del__)
    84804    0.065    0.000    0.065    0.000 Hanabi.py:303(availableActions)
    34758    0.064    0.000    0.065    0.000 training.py:1420(make_predict_function)
    99600    0.064    0.000    0.064    0.000 context.py:127(executor_type)
       90    0.001    0.000    0.064    0.001 gen_nn_ops.py:648(bias_add)
   208665    0.063    0.000    0.063    0.000 dataset_ops.py:2991(element_spec)
    69556    0.063    0.000    0.063    0.000 data_adapter.py:1147(_truncate_execution_to_epoch)
        5    0.000    0.000    0.062    0.012 gen_io_ops.py:521(merge_v2_checkpoints_eager_fallback)
        3    0.000    0.000    0.062    0.021 compile_utils.py:164(__call__)
        9    0.000    0.000    0.062    0.007 math_grad.py:147(_SumGrad)
        5    0.000    0.000    0.062    0.012 util.py:1100(_gather_saveables)
        5    0.000    0.000    0.061    0.012 signature_serialization.py:96(canonicalize_signatures)
        3    0.000    0.000    0.061    0.020 math_grad.py:249(_MeanGrad)
   173890    0.061    0.000    0.061    0.000 dataset_ops.py:3605(element_spec)
        5    0.000    0.000    0.060    0.012 ops.py:3268(as_graph_def)
        5    0.016    0.003    0.060    0.012 ops.py:3178(_as_graph_def)
        5    0.000    0.000    0.060    0.012 graph_view.py:364(serialize_object_graph)
     5403    0.009    0.000    0.059    0.000 type_spec.py:286(_deserialize)
     5860    0.011    0.000    0.059    0.000 save.py:108(list_dependencies)
   208936    0.059    0.000    0.059    0.000 function.py:2475(arg_names)
       66    0.001    0.000    0.058    0.001 axis.py:289(draw)
    31269    0.058    0.000    0.058    0.000 {built-in method posix.getpid}
      121    0.001    0.000    0.057    0.000 gen_resource_variable_ops.py:1163(var_handle_op)
    34778    0.042    0.000    0.057    0.000 dataset_ops.py:3489(<listcomp>)
    53217    0.057    0.000    0.057    0.000 iostream.py:93(_event_pipe)
       50    0.000    0.000    0.056    0.001 layer_serialization.py:38(python_properties)
    32562    0.043    0.000    0.056    0.000 training.py:1609(<lambda>)
    67320    0.055    0.000    0.055    0.000 callbacks.py:476(on_predict_batch_end)
    37336    0.055    0.000    0.055    0.000 ops.py:1217(graph)
    63201    0.045    0.000    0.055    0.000 Hanabi.py:147(numberOfTiles)
     1501    0.011    0.000    0.055    0.000 base_layer.py:1311(trainable_weights)
    40807    0.031    0.000    0.055    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)
    34998    0.055    0.000    0.055    0.000 device_spec.py:272(device_type)
    34843    0.054    0.000    0.054    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
        5    0.000    0.000    0.054    0.011 file_io.py:549(atomic_write_string_to_file)
   104535    0.052    0.000    0.052    0.000 ops.py:3117(seed)
       20    0.006    0.000    0.052    0.003 graph_view.py:185(_breadth_first_traversal)
   139111    0.051    0.000    0.051    0.000 dataset_ops.py:2949(_inputs)
    35275    0.051    0.000    0.051    0.000 {built-in method time.time}
       32    0.000    0.000    0.050    0.002 ticker.py:2201(__call__)
   104334    0.049    0.000    0.049    0.000 dataset_ops.py:4139(element_spec)
    67320    0.049    0.000    0.049    0.000 callbacks.py:464(on_predict_batch_begin)
   104558    0.049    0.000    0.049    0.000 function.py:2451(is_method)
   104468    0.049    0.000    0.049    0.000 function.py:2471(is_pure)
       32    0.000    0.000    0.049    0.002 ticker.py:2205(tick_values)
    16700    0.007    0.000    0.048    0.000 __init__.py:174(value)
    72496    0.048    0.000    0.048    0.000 resource_variable_ops.py:588(trainable)
       32    0.002    0.000    0.048    0.001 ticker.py:2141(_raw_ticks)
    34971    0.048    0.000    0.048    0.000 enum.py:599(value)
     1489    0.005    0.000    0.047    0.000 base_layer.py:1326(non_trainable_weights)
    69554    0.047    0.000    0.047    0.000 tensor_spec.py:110(_to_legacy_output_types)
    12353    0.031    0.000    0.047    0.000 Experiment.py:44(<listcomp>)
      233    0.006    0.000    0.046    0.000 lines.py:269(__init__)
    34778    0.029    0.000    0.046    0.000 data_adapter.py:1474(pack_x_y_sample_weight)
    74025    0.046    0.000    0.046    0.000 resource_variable_ops.py:545(handle)
      875    0.012    0.000    0.045    0.000 custom_gradient.py:45(copy_handle_data)
       39    0.000    0.000    0.045    0.001 axis.py:1938(_get_tick)
     2990    0.019    0.000    0.045    0.000 base_layer.py:2835(_gather_children_attribute)
    71932    0.045    0.000    0.045    0.000 object_identity.py:125(__init__)
    34784    0.045    0.000    0.045    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
   131745    0.044    0.000    0.044    0.000 trace.py:85(__enter__)
    36113    0.027    0.000    0.044    0.000 ops.py:535(get_shape)
   107384    0.044    0.000    0.044    0.000 inspect.py:2514(kind)
   104386    0.044    0.000    0.044    0.000 numeric.py:2283(_array_equal_dispatcher)
   104830    0.043    0.000    0.043    0.000 inspect.py:2817(parameters)
   104473    0.043    0.000    0.043    0.000 function.py:1586(<genexpr>)
       16    0.000    0.000    0.043    0.003 axis.py:1428(get_major_ticks)
       10    0.000    0.000    0.043    0.004 model_serialization.py:34(_python_properties_internal)
       38    0.000    0.000    0.043    0.001 axis.py:2225(_get_tick)
   104830    0.042    0.000    0.042    0.000 inspect.py:2821(return_annotation)
      144    0.001    0.000    0.042    0.000 text.py:867(get_window_extent)
    16700    0.017    0.000    0.042    0.000 __init__.py:179(_update_logging_levels)
   104434    0.041    0.000    0.041    0.000 function.py:2467(flat_input_signature)
        2    0.000    0.000    0.041    0.021 pyplot.py:2759(plot)
   220268    0.041    0.000    0.041    0.000 Hanabi.py:220(<listcomp>)
   104468    0.040    0.000    0.041    0.000 func_graph.py:1016(<listcomp>)
    43715    0.021    0.000    0.041    0.000 pickle.py:641(save_none)
     3040    0.014    0.000    0.041    0.000 base_layer.py:2958(_dedup_weights)
   101142    0.041    0.000    0.041    0.000 fromnumeric.py:3033(_ndim_dispatcher)
   104468    0.041    0.000    0.041    0.000 function.py:445(<listcomp>)
       18    0.000    0.000    0.040    0.002 math_ops.py:4739(sqrt)
       18    0.000    0.000    0.040    0.002 gen_math_ops.py:10161(sqrt)
        3    0.000    0.000    0.040    0.013 base_layer.py:996(_functional_construction_call)
    21429    0.040    0.000    0.040    0.000 fromnumeric.py:74(<dictcomp>)
        4    0.000    0.000    0.039    0.010 pyplot.py:861(gca)
    99600    0.039    0.000    0.039    0.000 function.py:268(__enter__)
   104332    0.039    0.000    0.039    0.000 dataset_ops.py:3018(element_spec)
   104331    0.039    0.000    0.039    0.000 dataset_ops.py:3544(element_spec)
       36    0.000    0.000    0.039    0.001 state_ops.py:198(assign)
     8554    0.027    0.000    0.039    0.000 base_layer.py:2847(_flatten_layers)
    34778    0.025    0.000    0.038    0.000 optimization_options.py:60(_graph_rewrite_configs)
   104468    0.038    0.000    0.038    0.000 func_graph.py:738(<listcomp>)
       16    0.000    0.000    0.038    0.002 axis.py:1171(_get_tick_bboxes)
   107384    0.038    0.000    0.038    0.000 inspect.py:2510(annotation)
       16    0.000    0.000    0.038    0.002 axis.py:1173(<listcomp>)
        4    0.000    0.000    0.037    0.009 figure.py:1913(gca)
        2    0.000    0.000    0.037    0.019 figure.py:1259(add_subplot)
        2    0.000    0.000    0.037    0.019 _subplots.py:18(__init__)
    34843    0.037    0.000    0.037    0.000 monitoring.py:295(__init__)
     6524    0.035    0.000    0.037    0.000 _methods.py:50(_count_reduce_items)
       80    0.001    0.000    0.037    0.000 function_serialization.py:52(serialize_concrete_function)
 2140/120    0.004    0.000    0.037    0.000 generic_utils.py:235(serialize_keras_object)
       60    0.000    0.000    0.036    0.001 activations.py:305(tanh)
        2    0.000    0.000    0.036    0.018 _base.py:378(__init__)
    34778    0.029    0.000    0.036    0.000 dataset_ops.py:3150(<lambda>)
       60    0.001    0.000    0.036    0.001 gen_math_ops.py:10650(tanh)
    69556    0.035    0.000    0.035    0.000 dataset_ops.py:4368(options)
    73003    0.035    0.000    0.035    0.000 ops.py:167(__init__)
     1998    0.017    0.000    0.035    0.000 backend.py:1341(dtype)
      130    0.001    0.000    0.034    0.000 functional_ops.py:1217(_set_read_only_resource_inputs_attr)
       20    0.000    0.000    0.034    0.002 functional.py:597(get_config)
     2196    0.003    0.000    0.034    0.000 ops.py:1173(get_shape)
    34787    0.027    0.000    0.034    0.000 tensor_shape.py:97(dimension_value)
       39    0.000    0.000    0.033    0.001 math_ops.py:1419(_add_dispatch)
    34778    0.033    0.000    0.033    0.000 data_adapter.py:413(get_size)
       39    0.000    0.000    0.033    0.001 gen_math_ops.py:463(add_v2)
     20/5    0.000    0.000    0.033    0.007 save_impl.py:210(_replace_child_layer_functions)
        5    0.000    0.000    0.033    0.007 file_io.py:323(write_string_to_file)
      210    0.001    0.000    0.033    0.000 function.py:489(add_to_graph)
       40    0.001    0.000    0.032    0.001 layer_serialization.py:43(_python_properties_internal)
      206    0.004    0.000    0.032    0.000 text.py:272(_get_layout)
    20906    0.032    0.000    0.032    0.000 {method 'reshape' of 'numpy.ndarray' objects}
   104334    0.032    0.000    0.032    0.000 dataset_ops.py:3496(element_spec)
      202    0.003    0.000    0.032    0.000 lines.py:751(draw)
    69554    0.032    0.000    0.032    0.000 tensor_spec.py:113(_to_legacy_output_shapes)
       12    0.031    0.003    0.031    0.003 {built-in method io.open}
    69589    0.030    0.000    0.030    0.000 tensor_spec.py:153(<lambda>)
    64300    0.030    0.000    0.030    0.000 callbacks.py:627(on_batch_end)
       18    0.000    0.000    0.030    0.002 variables.py:1072(_run_op)
      236    0.001    0.000    0.030    0.000 ops.py:2013(colocation_groups)
      124    0.001    0.000    0.030    0.000 def_function.py:579(_defun_with_scope)
      290    0.002    0.000    0.029    0.000 ops.py:3319(_add_function)
       50    0.000    0.000    0.029    0.001 layer_serialization.py:113(get_config)
     2160    0.003    0.000    0.029    0.000 graph_view.py:158(list_dependencies)
       10    0.005    0.000    0.029    0.003 graph_view.py:318(_fill_object_graph_proto)
      250    0.000    0.000    0.029    0.000 nested_structure_coder.py:86(encode_structure)
      160    0.003    0.000    0.029    0.000 text.py:670(draw)
    34778    0.029    0.000    0.029    0.000 training_utils.py:643(handle_partial_sample_weights)
        5    0.005    0.001    0.028    0.006 file_io.py:99(write)
    34805    0.028    0.000    0.028    0.000 backend_config.py:67(floatx)
    84804    0.028    0.000    0.028    0.000 Hanabi.py:188(__init__)
        5    0.000    0.000    0.028    0.006 tmpdswf691e.py:9(tf__signature_wrapper)
        3    0.000    0.000    0.028    0.009 math_ops.py:3894(reduced_shape)
    73003    0.028    0.000    0.028    0.000 ops.py:170(__enter__)
       13    0.000    0.000    0.028    0.002 base.py:691(_add_variable_with_custom_getter)
        3    0.000    0.000    0.027    0.009 losses.py:117(__call__)
 1420/250    0.005    0.000    0.027    0.000 nested_structure_coder.py:78(_map_structure)
      130    0.004    0.000    0.027    0.000 auto_control_deps_utils.py:36(get_read_only_resource_input_indices_graph)
        5    0.001    0.000    0.027    0.005 meta_graph.py:457(strip_graph_default_valued_attrs)
      290    0.026    0.000    0.026    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
       16    0.000    0.000    0.026    0.002 axis.py:1346(get_majorticklocs)
     1350    0.003    0.000    0.026    0.000 function.py:3103(<listcomp>)
   104468    0.026    0.000    0.026    0.000 func_graph.py:493(<listcomp>)
        2    0.000    0.000    0.026    0.013 _base.py:948(cla)
       13    0.000    0.000    0.026    0.002 base_layer_utils.py:55(make_variable)
        5    0.000    0.000    0.026    0.005 function.py:1605(__call__)
        5    0.000    0.000    0.026    0.005 function.py:1657(_call_impl)
        5    0.000    0.000    0.026    0.005 function.py:1675(_call_with_flat_signature)
    70102    0.026    0.000    0.026    0.000 distribute_lib.py:2973(value_container)
       13    0.000    0.000    0.026    0.002 variables.py:182(_variable_v1_call)
       20    0.001    0.000    0.026    0.001 functional.py:1244(get_network_config)
       15    0.000    0.000    0.026    0.002 resource_variable_ops.py:1419(__init__)
     6772    0.008    0.000    0.025    0.000 random.py:255(choice)
        3    0.000    0.000    0.025    0.008 math_grad.py:1424(_DivNoNanGrad)
     1075    0.006    0.000    0.025    0.000 meta_graph.py:474(_strip_node_default_valued_attrs)
       15    0.001    0.000    0.025    0.002 resource_variable_ops.py:1520(_init_from_args)
       18    0.000    0.000    0.025    0.001 resource_variable_ops.py:1953(value)
        3    0.000    0.000    0.025    0.008 optimizer_v2.py:778(_prepare)
       18    0.000    0.000    0.025    0.001 resource_variable_ops.py:1959(_read_variable_op)
     1000    0.016    0.000    0.025    0.000 generic_utils.py:497(__init__)
    73003    0.025    0.000    0.025    0.000 ops.py:173(__exit__)
      124    0.001    0.000    0.025    0.000 def_function.py:629(_defun)
   165561    0.025    0.000    0.025    0.000 {method 'getrandbits' of '_random.Random' objects}
       16    0.000    0.000    0.025    0.002 axis.py:1350(get_minorticklocs)
        3    0.000    0.000    0.025    0.008 rmsprop.py:163(_prepare_local)
     7411    0.017    0.000    0.025    0.000 threading.py:251(_acquire_restore)
        8    0.000    0.000    0.024    0.003 base_layer.py:477(add_weight)
    96450    0.024    0.000    0.024    0.000 callbacks.py:622(on_batch_begin)
   104468    0.024    0.000    0.024    0.000 func_graph.py:748(<listcomp>)
     1350    0.005    0.000    0.024    0.000 function.py:157(_type_spec_for)
        5    0.024    0.005    0.024    0.005 file_io.py:81(_prewrite_check)
        3    0.000    0.000    0.024    0.008 base_layer.py:2614(_maybe_build)
       20    0.000    0.000    0.023    0.001 math_ops.py:1921(reduce_sum)
        3    0.000    0.000    0.023    0.008 metrics_utils.py:73(decorated)
        4    0.000    0.000    0.023    0.006 axis.py:2303(_update_label_position)
       10    0.000    0.000    0.023    0.002 saving_utils.py:147(model_metadata)
     2990    0.004    0.000    0.023    0.000 base_layer.py:2844(<genexpr>)
        3    0.000    0.000    0.023    0.008 core.py:1159(build)
       13    0.000    0.000    0.023    0.002 resource_variable_ops.py:806(assign_add)
        4    0.000    0.000    0.023    0.006 axis.py:2011(_update_label_position)
    34758    0.023    0.000    0.023    0.000 training.py:1604(<lambda>)
        8    0.000    0.000    0.023    0.003 variables.py:199(<lambda>)
        8    0.000    0.000    0.022    0.003 variable_scope.py:2557(default_variable_creator)
    34778    0.022    0.000    0.022    0.000 data_adapter.py:1272(_validate_data_handler)
     1005    0.003    0.000    0.022    0.000 __init__.py:829(format)
    35758    0.022    0.000    0.022    0.000 data_adapter.py:425(should_recreate_iterator)
      133    0.002    0.000    0.022    0.000 tf_inspect.py:260(getcallargs)
     7529    0.012    0.000    0.022    0.000 threading.py:242(__exit__)
    34778    0.022    0.000    0.022    0.000 data_adapter.py:1034(broadcast_sample_weight_modes)
        3    0.000    0.000    0.022    0.007 metrics.py:173(update_state_fn)
    88/78    0.009    0.000    0.022    0.000 ops.py:6267(dismantle_graph)
     3380    0.009    0.000    0.022    0.000 layer_utils.py:234(filter_empty_layer_containers)
        3    0.000    0.000    0.021    0.007 metrics.py:336(update_state)
      135    0.003    0.000    0.021    0.000 save_impl.py:309(_reset_layer_losses)
    34818    0.021    0.000    0.021    0.000 callbacks.py:619(set_model)
       10    0.005    0.000    0.021    0.002 graph_view.py:209(_add_attributes_to_object_graph)
   104468    0.021    0.000    0.021    0.000 func_graph.py:753(<listcomp>)
       90    0.001    0.000    0.021    0.000 core.py:1209(get_config)
       16    0.000    0.000    0.021    0.001 axis.py:2187(get_tick_space)
        4    0.000    0.000    0.021    0.005 axis.py:2284(_get_tick_boxes_siblings)
    34777    0.020    0.000    0.020    0.000 dataset_ops.py:3541(_inputs)
        5    0.000    0.000    0.020    0.004 file_io.py:516(rename)
        5    0.001    0.000    0.020    0.004 file_io.py:532(rename_v2)
        5    0.004    0.001    0.020    0.004 save.py:247(fill_object_graph_proto)
       16    0.000    0.000    0.020    0.001 axis.py:2487(get_tick_space)
    34814    0.020    0.000    0.020    0.000 distribution_strategy_context.py:312(_get_default_strategy)
        4    0.000    0.000    0.020    0.005 axis.py:1992(_get_tick_boxes_siblings)
      995    0.004    0.000    0.020    0.000 backend.py:429(deprecated_internal_set_learning_phase)
       27    0.000    0.000    0.020    0.001 math_ops.py:524(subtract)
    61788    0.020    0.000    0.020    0.000 {method 'append' of 'collections.deque' objects}
       27    0.000    0.000    0.020    0.001 gen_math_ops.py:10433(sub)
     2322    0.012    0.000    0.020    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
        3    0.000    0.000    0.019    0.006 losses_utils.py:71(compute_weighted_loss)
        5    0.019    0.004    0.019    0.004 {built-in method tensorflow.python._pywrap_file_io.RenameFile}
     1005    0.004    0.000    0.019    0.000 __init__.py:564(format)
    21201    0.019    0.000    0.019    0.000 {method 'random' of '_random.Random' objects}
        1    0.000    0.000    0.019    0.019 tmp_c03j0ll.py:9(tf__predict_function)
     1038    0.008    0.000    0.019    0.000 compile_utils.py:123(metrics)
        1    0.000    0.000    0.019    0.019 training.py:1441(step_function)
    60746    0.019    0.000    0.019    0.000 threading.py:506(is_set)
    34798    0.019    0.000    0.019    0.000 callbacks.py:616(set_params)
    35758    0.019    0.000    0.019    0.000 data_adapter.py:227(on_epoch_end)
       21    0.000    0.000    0.018    0.001 math_ops.py:1267(truediv)
       21    0.000    0.000    0.018    0.001 math_ops.py:1220(_truediv_python3)
       20    0.001    0.000    0.018    0.001 save_impl.py:83(wrap_layer_objects)
       30    0.000    0.000    0.018    0.001 module.py:171(submodules)
    42000    0.013    0.000    0.018    0.000 Hanabi.py:144(draw)
       20    0.000    0.000    0.018    0.001 math_ops.py:1987(reduce_sum_with_dims)
        5    0.000    0.000    0.018    0.004 save.py:481(_generate_signatures)
    70/50    0.003    0.000    0.018    0.000 module.py:317(_flatten_module)
    16700    0.007    0.000    0.018    0.000 _flagvalues.py:525(_assert_validators)
       20    0.000    0.000    0.017    0.001 gen_math_ops.py:10493(_sum)
       21    0.000    0.000    0.017    0.001 gen_math_ops.py:7416(real_div)
    34778    0.017    0.000    0.017    0.000 distribute_lib.py:2993(_in_multi_worker_mode)
        3    0.000    0.000    0.017    0.006 math_grad.py:1554(_SquaredDifferenceGrad)
     1602    0.003    0.000    0.017    0.000 ops.py:5325(control_dependencies)
        1    0.000    0.000    0.017    0.017 training.py:1444(run_step)
        2    0.000    0.000    0.016    0.008 backend_pdf.py:592(finalize)
    49412    0.016    0.000    0.016    0.000 Hanabi.py:180(__init__)
        3    0.000    0.000    0.016    0.005 initializers_v2.py:387(__call__)
        3    0.000    0.000    0.016    0.005 init_ops_v2.py:528(__call__)
        3    0.000    0.000    0.016    0.005 init_ops_v2.py:1037(random_uniform)
        3    0.001    0.000    0.016    0.005 random_ops.py:207(random_uniform)
    34778    0.016    0.000    0.016    0.000 data_adapter.py:410(get_dataset)
       13    0.000    0.000    0.016    0.001 gen_resource_variable_ops.py:23(assign_add_variable_op)
       16    0.000    0.000    0.015    0.001 axis.py:884(set_tick_params)
        3    0.000    0.000    0.015    0.005 losses_utils.py:59(reduce_weighted_loss)
    34778    0.015    0.000    0.015    0.000 data_adapter.py:1217(inferred_steps)
       24    0.000    0.000    0.015    0.001 array_ops.py:631(shape_internal)
        2    0.000    0.000    0.015    0.008 backend_pdf.py:711(writeFonts)
       15    0.000    0.000    0.015    0.001 math_ops.py:1327(div_no_nan)
        2    0.000    0.000    0.015    0.008 backend_pdf.py:896(embedTTF)
    34778    0.015    0.000    0.015    0.000 dataset_ops.py:4143(_transformation_name)
       90    0.001    0.000    0.015    0.000 base_layer.py:640(get_config)
        2    0.000    0.000    0.015    0.007 backend_pdf.py:913(embedTTFType3)
     1345    0.001    0.000    0.015    0.000 def_function.py:1042(<genexpr>)
    34778    0.015    0.000    0.015    0.000 distribute_lib.py:2904(_experimental_distribute_dataset)
       18    0.000    0.000    0.015    0.001 gen_math_ops.py:10278(square)
    35075    0.015    0.000    0.015    0.000 ops.py:3003(<lambda>)
        1    0.000    0.000    0.015    0.015 training.py:1396(predict_step)
     1560    0.002    0.000    0.014    0.000 base.py:498(no_automatic_dependency_tracking_scope)
      700    0.002    0.000    0.014    0.000 function.py:211(is_same_structure)
    55067    0.014    0.000    0.014    0.000 Hanabi.py:216(<listcomp>)
  200/120    0.002    0.000    0.014    0.000 nested_structure_coder.py:179(do_encode)
      145    0.003    0.000    0.014    0.000 lines.py:667(recache)
    34758    0.013    0.000    0.013    0.000 callbacks.py:804(on_predict_end)
     12/8    0.000    0.000    0.013    0.002 axis.py:687(__get__)
        5    0.000    0.000    0.013    0.003 save.py:468(_call_function_with_mapped_captures)
      549    0.003    0.000    0.013    0.000 artist.py:974(update)
      370    0.002    0.000    0.013    0.000 auto_control_deps_utils.py:63(_get_read_only_resource_input_indices_op)
        2    0.000    0.000    0.013    0.006 <__array_function__ internals>:2(savetxt)
       83    0.000    0.000    0.013    0.000 func_graph.py:1269(dismantle_func_graph)
        2    0.002    0.001    0.013    0.006 npyio.py:1211(savetxt)
     8350    0.006    0.000    0.013    0.000 __init__.py:335(get_verbosity)
     7529    0.009    0.000    0.013    0.000 threading.py:239(__enter__)
       20    0.000    0.000    0.013    0.001 array_ops.py:604(shape)
        4    0.000    0.000    0.013    0.003 _base.py:2727(grid)
    34758    0.013    0.000    0.013    0.000 callbacks.py:793(on_predict_begin)
    16700    0.006    0.000    0.013    0.000 __init__.py:1280(setLevel)
        8    0.000    0.000    0.013    0.002 axis.py:1456(grid)
    34778    0.013    0.000    0.013    0.000 {method 'pop' of 'set' objects}
       25    0.000    0.000    0.013    0.001 serialized_attributes.py:205(set_and_validate_objects)
      332    0.000    0.000    0.013    0.000 markers.py:205(__init__)
       20    0.000    0.000    0.012    0.001 random_ops.py:319(random_shuffle)
      494    0.001    0.000    0.012    0.000 ops.py:4368(device)
      135    0.002    0.000    0.012    0.000 save_impl.py:321(_restore_layer_losses)
       45    0.001    0.000    0.012    0.000 function_serialization.py:29(_serialize_function_spec)
    34778    0.012    0.000    0.012    0.000 dataset_ops.py:4062(_transformation_name)
       20    0.000    0.000    0.012    0.001 gen_random_ops.py:528(random_shuffle)
      145    0.000    0.000    0.012    0.000 data_structures.py:414(__init__)
     2700    0.004    0.000    0.012    0.000 function.py:3087(<genexpr>)
    34778    0.012    0.000    0.012    0.000 dataset_ops.py:4112(_transformation_name)
     3610    0.007    0.000    0.012    0.000 meta_graph.py:443(_is_default_attr_value)
        5    0.000    0.000    0.012    0.002 gen_io_ops.py:1463(restore_v2)
      145    0.001    0.000    0.012    0.000 data_structures.py:309(__init__)
        9    0.000    0.000    0.012    0.001 optimizer_v2.py:673(_get_hyper)
      175    0.012    0.000    0.012    0.000 {method 'set_text' of 'matplotlib.ft2font.FT2Font' objects}
    16700    0.010    0.000    0.012    0.000 converter.py:138(absl_to_standard)
     1005    0.005    0.000    0.011    0.000 posixpath.py:144(basename)
       39    0.000    0.000    0.011    0.000 axis.py:485(_get_gridline)
      332    0.001    0.000    0.011    0.000 markers.py:272(set_marker)
     1005    0.003    0.000    0.011    0.000 tf_logging.py:75(_logger_find_caller)
    20601    0.011    0.000    0.011    0.000 fromnumeric.py:2546(_amax_dispatcher)
        1    0.000    0.000    0.011    0.011 Experiment.py:33(__init__)
        1    0.000    0.000    0.011    0.011 training.py:462(compile)
      850    0.001    0.000    0.011    0.000 ops.py:3264(<listcomp>)
       39    0.000    0.000    0.011    0.000 axis.py:459(_get_tick1line)
       38    0.000    0.000    0.011    0.000 axis.py:603(_get_gridline)
    47/14    0.000    0.000    0.011    0.001 variables.py:66(getter)
       60    0.000    0.000    0.010    0.000 json_utils.py:43(encode)
        9    0.000    0.000    0.010    0.001 math_grad.py:1672(_MatMulGrad)
    36/14    0.000    0.000    0.010    0.001 distribute_lib.py:2855(creator)
  3920/30    0.004    0.000    0.010    0.000 copy.py:132(deepcopy)
     7411    0.006    0.000    0.010    0.000 threading.py:248(_release_save)
   109672    0.010    0.000    0.010    0.000 {method 'bit_length' of 'int' objects}
      200    0.000    0.000    0.010    0.000 saveable_object.py:53(tensor)
      155    0.000    0.000    0.010    0.000 data_structures.py:635(_track_value)
      265    0.002    0.000    0.010    0.000 def_function.py:1009(_list_all_concrete_functions)
      247    0.001    0.000    0.010    0.000 ops.py:4361(_add_device_to_stack)
 1451/641    0.002    0.000    0.010    0.000 tracking.py:80(__setattr__)
      155    0.000    0.000    0.010    0.000 data_structures.py:173(_track_value)
       95    0.001    0.000    0.010    0.000 saveable_object_util.py:100(f)
        3    0.000    0.000    0.010    0.003 training.py:760(<dictcomp>)
        3    0.000    0.000    0.010    0.003 metrics_utils.py:117(decorated)
       15    0.000    0.000    0.010    0.001 gen_math_ops.py:3113(div_no_nan)
       38    0.000    0.000    0.010    0.000 axis.py:574(_get_tick1line)
      168    0.001    0.000    0.010    0.000 text.py:121(__init__)
     7529    0.010    0.000    0.010    0.000 {method '__exit__' of '_thread.lock' objects}
     2196    0.006    0.000    0.010    0.000 tensor_shape.py:1004(assert_has_rank)
10966/9220    0.006    0.000    0.010    0.000 artist.py:217(stale)
     2160    0.002    0.000    0.010    0.000 save.py:137(list_extra_dependencies)
        5    0.000    0.000    0.010    0.002 builder_impl.py:757(copy_assets_to_destination_dir)
      260    0.003    0.000    0.009    0.000 ops.py:6937(set_int_list_attr)
       62    0.001    0.000    0.009    0.000 def_function.py:451(__init__)
      915    0.002    0.000    0.009    0.000 func_graph.py:321(control_dependencies)
       45    0.000    0.000    0.009    0.000 functional.py:332(_checkpoint_dependencies)
        3    0.000    0.000    0.009    0.003 optimizer_v2.py:689(_create_all_weights)
      218    0.001    0.000    0.009    0.000 transforms.py:1388(transform)
       51    0.001    0.000    0.009    0.000 functional.py:308(_layer_checkpoint_dependencies)
        7    0.000    0.000    0.009    0.001 file_io.py:453(recursive_create_dir)
        7    0.000    0.000    0.009    0.001 file_io.py:468(recursive_create_dir_v2)
       14    0.000    0.000    0.009    0.001 gen_array_ops.py:8994(shape)
        7    0.009    0.001    0.009    0.001 {built-in method tensorflow.python._pywrap_file_io.RecursivelyCreateDir}
      607    0.002    0.000    0.009    0.000 func_graph.py:265(watch_variable)
        3    0.000    0.000    0.009    0.003 array_ops.py:872(_slice_helper)
     1240    0.004    0.000    0.008    0.000 ops.py:4557(__enter__)
       39    0.000    0.000    0.008    0.000 axis.py:470(_get_tick2line)
      165    0.002    0.000    0.008    0.000 nested_structure_coder.py:428(do_encode)
       70    0.000    0.000    0.008    0.000 backend_agg.py:196(get_text_width_height_descent)
        2    0.000    0.000    0.008    0.004 backend_pdf.py:954(<listcomp>)
3460/1860    0.005    0.000    0.008    0.000 data_structures.py:756(__getattribute__)
     1240    0.003    0.000    0.008    0.000 ops.py:4567(__exit__)
       32    0.000    0.000    0.008    0.000 ticker.py:672(set_locs)
        4    0.000    0.000    0.008    0.002 axis.py:967(set_clip_path)
        5    0.008    0.002    0.008    0.002 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToGraphDef}
      512    0.001    0.000    0.008    0.000 backend_pdf.py:943(get_char_width)
       35    0.000    0.000    0.008    0.000 backend_pdf.py:2090(draw_text)
       13    0.000    0.000    0.008    0.001 variables.py:223(_variable_v2_call)
     3305    0.004    0.000    0.008    0.000 backend.py:639(get_graph)
   310/70    0.001    0.000    0.008    0.000 copy.py:210(_deepcopy_list)
       38    0.000    0.000    0.008    0.000 axis.py:589(_get_tick2line)
       35    0.001    0.000    0.008    0.000 backend_agg.py:170(draw_text)
   480/20    0.001    0.000    0.008    0.000 copy.py:236(_deepcopy_dict)
       80    0.000    0.000    0.008    0.000 function.py:2041(add_to_graph)
        5    0.000    0.000    0.008    0.002 utils_impl.py:210(get_or_create_variables_dir)
    14429    0.008    0.000    0.008    0.000 fromnumeric.py:1108(_argmax_dispatcher)
       33    0.000    0.000    0.008    0.000 backend_pdf.py:1847(draw_markers)
      664    0.001    0.000    0.008    0.000 markers.py:227(_recache)
       45    0.002    0.000    0.008    0.000 nested_structure_coder.py:229(do_encode)
       24    0.000    0.000    0.008    0.000 patches.py:585(draw)
      645    0.008    0.000    0.008    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
       79    0.000    0.000    0.008    0.000 lines.py:1021(get_path)
     1018    0.004    0.000    0.008    0.000 posixpath.py:121(splitext)
       47    0.000    0.000    0.008    0.000 backend_pdf.py:1768(draw_path)
       33    0.001    0.000    0.008    0.000 backend_bases.py:173(draw_markers)
     1005    0.006    0.000    0.008    0.000 tf_logging.py:45(_get_caller)
        1    0.000    0.000    0.008    0.008 compile_utils.py:110(__init__)
      190    0.000    0.000    0.008    0.000 variables.py:1079(__hash__)
        3    0.000    0.000    0.008    0.003 metrics.py:188(result_fn)
       70    0.000    0.000    0.008    0.000 utils.py:202(get_training_arg_index)
       33    0.000    0.000    0.007    0.000 axis.py:1398(_copy_tick_props)
      502    0.001    0.000    0.007    0.000 ops.py:4275(_colocate_with_for_gradient)
       27    0.000    0.000    0.007    0.000 math_ops.py:1826(_ReductionDims)
      279    0.001    0.000    0.007    0.000 backend_pdf.py:641(output)
      506    0.001    0.000    0.007    0.000 <__array_function__ internals>:2(any)
        3    0.000    0.000    0.007    0.002 math_grad.py:35(_safe_shape_div)
       11    0.000    0.000    0.007    0.001 array_ops.py:3058(placeholder)
 1640/790    0.003    0.000    0.007    0.000 backend_pdf.py:134(pdfRepr)
       11    0.000    0.000    0.007    0.001 gen_array_ops.py:6769(placeholder)
      512    0.007    0.000    0.007    0.000 {method 'load_char' of 'matplotlib.ft2font.FT2Font' objects}
        3    0.000    0.000    0.007    0.002 metrics.py:394(result)
       16    0.000    0.000    0.007    0.000 transforms.py:695(union)
    40626    0.007    0.000    0.007    0.000 shape_base.py:79(_atleast_2d_dispatcher)
      234    0.002    0.000    0.007    0.000 font_manager.py:623(__init__)
       11    0.000    0.000    0.007    0.001 def_function.py:681(variable_capturing_scope)
        3    0.000    0.000    0.007    0.002 losses.py:239(call)
       11    0.000    0.000    0.007    0.001 def_function.py:136(__init__)
     2100    0.003    0.000    0.007    0.000 Hanabi.py:297(<dictcomp>)
        3    0.000    0.000    0.007    0.002 losses.py:1162(mean_squared_error)
  375/135    0.001    0.000    0.007    0.000 utils.py:124(list_all_layers_and_sublayers)
    16700    0.005    0.000    0.007    0.000 __init__.py:190(_checkLevel)
       21    0.002    0.000    0.006    0.000 Experiment.py:169(<listcomp>)
      267    0.001    0.000    0.006    0.000 traceable_stack.py:92(push_obj)
     1240    0.002    0.000    0.006    0.000 ops.py:4646(control_dependencies)
       20    0.000    0.000    0.006    0.000 save_impl.py:339(__init__)
        3    0.000    0.000    0.006    0.002 losses_utils.py:38(_safe_mean)
        4    0.000    0.000    0.006    0.002 _base.py:2491(_update_title_position)
     1465    0.003    0.000    0.006    0.000 weakref.py:242(values)
        2    0.000    0.000    0.006    0.003 math_grad.py:189(EvaluateAsTuple)
       32    0.000    0.000    0.006    0.000 ticker.py:253(format_ticks)
        3    0.000    0.000    0.006    0.002 optimizer_v2.py:797(_prepare_local)
       40    0.000    0.000    0.006    0.000 save_impl.py:535(__init__)
       15    0.000    0.000    0.006    0.000 array_ops.py:200(fill)
        2    0.006    0.003    0.006    0.003 {built-in method tensorflow.python._pywrap_tf_session.TF_TryEvaluateConstant_wrapper}
      215    0.001    0.000    0.006    0.000 base_layer.py:3013(_list_extra_dependencies_for_serialization)
       60    0.001    0.000    0.006    0.000 node.py:162(serialize)
       28    0.000    0.000    0.006    0.000 axis.py:334(_apply_params)
       70    0.000    0.000    0.006    0.000 _backend_pdf_ps.py:41(get_text_width_height_descent)
     7529    0.006    0.000    0.006    0.000 {built-in method _imp.lock_held}
     1005    0.002    0.000    0.006    0.000 __init__.py:542(usesTime)
       39    0.000    0.000    0.006    0.000 axis.py:427(_get_text1)
      506    0.001    0.000    0.006    0.000 fromnumeric.py:2236(any)
       15    0.000    0.000    0.006    0.000 gen_array_ops.py:3357(fill)
      245    0.001    0.000    0.006    0.000 font_manager.py:1166(findfont)
  3940/60    0.003    0.000    0.006    0.000 json_utils.py:47(_encode_tuple)
       82    0.000    0.000    0.006    0.000 backend_pdf.py:1691(check_gc)
        2    0.000    0.000    0.006    0.003 backend_pdf.py:435(__init__)
      294    0.001    0.000    0.006    0.000 transforms.py:1986(scale)
       10    0.000    0.000    0.006    0.001 rmsprop.py:288(get_config)
      850    0.001    0.000    0.006    0.000 ops.py:3779(get_operation_by_name)
       38    0.000    0.000    0.006    0.000 axis.py:544(_get_text1)
     1000    0.005    0.000    0.006    0.000 {method 'isatty' of '_io._IOBase' objects}
   840/60    0.001    0.000    0.006    0.000 json_utils.py:54(<dictcomp>)
        9    0.000    0.000    0.006    0.001 nn_grad.py:327(_BiasAddGrad)
      325    0.001    0.000    0.006    0.000 _collections_abc.py:824(update)
    11557    0.006    0.000    0.006    0.000 __init__.py:815(__getitem__)
        4    0.000    0.000    0.006    0.001 iterator_ops.py:735(__next__)
        4    0.000    0.000    0.006    0.001 iterator_ops.py:770(next)
        4    0.000    0.000    0.006    0.001 iterator_ops.py:738(_next_internal)
     1015    0.001    0.000    0.006    0.000 ops.py:3636(as_graph_element)
     1180    0.001    0.000    0.006    0.000 graph_view.py:61(_object_prefix_from_path)
      380    0.001    0.000    0.006    0.000 saveable_object_util.py:134(saveable_objects_for_op)
        5    0.000    0.000    0.006    0.001 tf_logging.py:166(info)
      519    0.002    0.000    0.006    0.000 ops.py:6601(__enter__)
     6836    0.006    0.000    0.006    0.000 {built-in method builtins.abs}
        9    0.000    0.000    0.006    0.001 gen_nn_ops.py:725(bias_add_grad)
       40    0.000    0.000    0.006    0.000 optimizer_v2.py:904(_serialize_hyperparameter)
        1    0.006    0.006    0.006    0.006 {built-in method posix.mkdir}
      140    0.000    0.000    0.006    0.000 artist.py:1095(set)
       32    0.000    0.000    0.005    0.000 axis.py:825(_set_scale)
      465    0.002    0.000    0.005    0.000 utils.py:116(list_all_layers)
      132    0.002    0.000    0.005    0.000 input_spec.py:132(assert_input_compatibility)
        7    0.000    0.000    0.005    0.001 gen_array_ops.py:11337(tile)
        8    0.000    0.000    0.005    0.001 gen_math_ops.py:1837(cast)
      218    0.000    0.000    0.005    0.000 transforms.py:2363(transform_affine)
      228    0.001    0.000    0.005    0.000 text.py:170(update)
        2    0.000    0.000    0.005    0.003 functional.py:108(__init__)
        2    0.000    0.000    0.005    0.003 __init__.py:359(to_filehandle)
       10    0.000    0.000    0.005    0.001 functional_saver.py:115(sharded_filename)
      125    0.000    0.000    0.005    0.000 ops.py:819(__hash__)
       32    0.000    0.000    0.005    0.000 scale.py:105(set_default_locators_and_formatters)
        6    0.000    0.000    0.005    0.001 version_utils.py:63(__new__)
       10    0.000    0.000    0.005    0.001 gen_io_ops.py:1756(sharded_filename)
     8350    0.003    0.000    0.005    0.000 _flagvalues.py:468(__getitem__)
     1002    0.004    0.000    0.005    0.000 copy.py:66(copy)
       40    0.000    0.000    0.005    0.000 backend.py:3469(get_value)
      267    0.003    0.000    0.005    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
        3    0.000    0.000    0.005    0.002 rmsprop.py:153(_create_slots)
      190    0.001    0.000    0.005    0.000 resource_variable_ops.py:64(get_resource_handle_data)
     19/7    0.005    0.000    0.005    0.001 version_utils.py:98(swap_class)
      502    0.002    0.000    0.005    0.000 ops.py:4288(colocate_with)
       18    0.000    0.000    0.005    0.000 optimizer_v2.py:735(add_slot)
       35    0.000    0.000    0.005    0.000 deprecation.py:311(new_func)
      498    0.003    0.000    0.005    0.000 artist.py:74(__init__)
      530    0.003    0.000    0.005    0.000 function.py:2748(all_values)
        2    0.000    0.000    0.005    0.003 _datasource.py:231(open)
        9    0.000    0.000    0.005    0.001 array_ops.py:1328(stack)
        3    0.000    0.000    0.005    0.002 gen_math_ops.py:314(add)
      403    0.001    0.000    0.005    0.000 ops.py:521(_shape_tuple)
      215    0.000    0.000    0.005    0.000 base_serialization.py:56(list_extra_dependencies_for_serialization)
        2    0.000    0.000    0.005    0.002 _datasource.py:577(open)
     2010    0.003    0.000    0.005    0.000 __init__.py:809(acquire)
        4    0.000    0.000    0.005    0.001 math_ops.py:1153(r_binary_op_wrapper)
  156/148    0.001    0.000    0.005    0.000 _base.py:583(_unstale_viewLim)
    25050    0.005    0.000    0.005    0.000 _flagvalues.py:148(_flags)
       30    0.000    0.000    0.005    0.000 base_layer.py:1356(updates)
      190    0.001    0.000    0.005    0.000 saveable_object_util.py:91(__init__)
      120    0.000    0.000    0.005    0.000 encoder.py:182(encode)
     3510    0.002    0.000    0.005    0.000 pickle.py:680(save_float)
      233    0.000    0.000    0.005    0.000 lines.py:1243(set_markerfacecolor)
  270/230    0.001    0.000    0.005    0.000 transforms.py:2387(get_affine)
     1005    0.001    0.000    0.005    0.000 __init__.py:548(formatMessage)
       38    0.000    0.000    0.005    0.000 axis.py:559(_get_text2)
      631    0.001    0.000    0.005    0.000 ops.py:158(string_merge)
     1158    0.002    0.000    0.005    0.000 __init__.py:1956(_setattr_cm)
       39    0.000    0.000    0.005    0.000 axis.py:444(_get_text2)
       13    0.000    0.000    0.005    0.000 gen_control_flow_ops.py:470(no_op)
        4    0.000    0.000    0.005    0.001 math_ops.py:2426(reduce_prod)
        3    0.000    0.000    0.005    0.002 losses_utils.py:53(_num_elements)
     1000    0.005    0.000    0.005    0.000 callbacks.py:981(_reset_progbar)
     2100    0.005    0.000    0.005    0.000 Hanabi.py:355(score)
       10    0.001    0.000    0.005    0.000 functional_saver.py:137(__init__)
      220    0.001    0.000    0.005    0.000 saveable_object_util.py:54(set_cpu0)
      180    0.000    0.000    0.005    0.000 layer_serialization.py:73(objects_to_serialize)
       24    0.000    0.000    0.005    0.000 axis.py:841(cla)
        2    0.000    0.000    0.005    0.002 _base.py:553(_init_axis)
     1240    0.002    0.000    0.005    0.000 ops.py:4592(_pop_control_dependencies_controller)
       99    0.000    0.000    0.005    0.000 lines.py:1330(update_from)
       62    0.000    0.000    0.005    0.000 patches.py:260(get_transform)
       10    0.000    0.000    0.005    0.000 file_io.py:235(file_exists)
       10    0.000    0.000    0.004    0.000 file_io.py:252(file_exists_v2)
     1560    0.001    0.000    0.004    0.000 base.py:549(_setattr_tracking)
        3    0.000    0.000    0.004    0.001 gen_data_flow_ops.py:704(dynamic_stitch)
       39    0.001    0.000    0.004    0.000 functional.py:556(_conform_to_reference_input)
        6    0.000    0.000    0.004    0.001 math_grad.py:730(_TanhGrad)
        2    0.000    0.000    0.004    0.002 backend_pdf.py:624(close)
     2010    0.003    0.000    0.004    0.000 __init__.py:816(release)
        2    0.004    0.002    0.004    0.002 {method 'close' of '_io.BufferedWriter' objects}
        3    0.000    0.000    0.004    0.001 gen_math_ops.py:5752(maximum)
      403    0.001    0.000    0.004    0.000 ops.py:515(_shape_as_list)
     1015    0.002    0.000    0.004    0.000 ops.py:3672(_as_graph_element_locked)
        6    0.000    0.000    0.004    0.001 array_ops.py:713(size)
     1072    0.001    0.000    0.004    0.000 tape.py:177(record_operation)
        6    0.000    0.000    0.004    0.001 array_ops.py:745(size_internal)
        3    0.000    0.000    0.004    0.001 backend.py:2245(mean)
       10    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_file_io.FileExists}
        3    0.000    0.000    0.004    0.001 optimizer_v2.py:848(_decayed_lr)
       30    0.000    0.000    0.004    0.000 artist.py:731(set_clip_path)
        4    0.000    0.000    0.004    0.001 gen_dataset_ops.py:2588(iterator_get_next)
        3    0.000    0.000    0.004    0.001 math_ops.py:2255(reduce_mean)
      120    0.003    0.000    0.004    0.000 encoder.py:204(iterencode)
       10    0.000    0.000    0.004    0.000 array_ops.py:1393(_autopacking_helper)
       82    0.000    0.000    0.004    0.000 backprop.py:174(_record_gradient)
        5    0.000    0.000    0.004    0.001 file_io.py:197(__exit__)
        1    0.000    0.000    0.004    0.004 training.py:2332(summary)
        1    0.000    0.000    0.004    0.004 layer_utils.py:112(print_summary)
        3    0.000    0.000    0.004    0.001 math_ops.py:570(scalar_mul)
      105    0.000    0.000    0.004    0.000 backend_agg.py:243(_get_agg_font)
      814    0.001    0.000    0.004    0.000 <__array_function__ internals>:2(dot)
        5    0.004    0.001    0.004    0.001 file_io.py:223(close)
        3    0.000    0.000    0.004    0.001 gen_math_ops.py:5832(mean)
      459    0.001    0.000    0.004    0.000 ops.py:762(consumers)
       32    0.001    0.000    0.004    0.000 ticker.py:759(_set_format)
        7    0.000    0.000    0.004    0.001 gen_math_ops.py:6318(neg)
      941    0.003    0.000    0.004    0.000 font_manager.py:663(__hash__)
       95    0.000    0.000    0.004    0.000 resource_variable_ops.py:110(_combine_handle_data)
        1    0.000    0.000    0.004    0.004 metrics.py:162(__new__)
      105    0.000    0.000    0.004    0.000 _backend_pdf_ps.py:79(_get_font_ttf)
     6022    0.004    0.000    0.004    0.000 {method 'index' of 'list' objects}
        2    0.000    0.000    0.004    0.002 training.py:246(__init__)
        2    0.000    0.000    0.004    0.002 math_grad.py:67(SmartBroadcastGradientArgs)
  807/129    0.001    0.000    0.004    0.000 typing.py:1145(__subclasscheck__)
      740    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
       10    0.000    0.000    0.004    0.000 gen_array_ops.py:6416(pack)
        6    0.000    0.000    0.004    0.001 gen_math_ops.py:10731(tanh_grad)
      631    0.001    0.000    0.004    0.000 device.py:133(shortcut_string_merge)
     1005    0.004    0.000    0.004    0.000 __init__.py:329(getMessage)
2949/2794    0.002    0.000    0.004    0.000 optimizer_v2.py:706(__getattribute__)
     1005    0.003    0.000    0.004    0.000 __init__.py:387(usesTime)
       10    0.000    0.000    0.004    0.000 string_ops.py:48(regex_full_match)
      2/1    0.000    0.000    0.004    0.004 training.py:237(__new__)
        7    0.000    0.000    0.004    0.001 variables.py:237(<lambda>)
      645    0.004    0.000    0.004    0.000 custom_gradient.py:75(<listcomp>)
        7    0.000    0.000    0.004    0.001 variable_scope.py:2616(default_variable_creator_v2)
        5    0.000    0.000    0.004    0.001 utils_impl.py:232(get_or_create_assets_dir)
       10    0.000    0.000    0.004    0.000 gen_string_ops.py:586(static_regex_full_match)
     1015    0.002    0.000    0.004    0.000 data_structures.py:497(_checkpoint_dependencies)
       38    0.000    0.000    0.004    0.000 patches.py:776(get_patch_transform)
       38    0.000    0.000    0.004    0.000 patches.py:746(_update_patch_transform)
        5    0.000    0.000    0.004    0.001 optimizer_v2.py:1003(add_weight)
     4480    0.004    0.000    0.004    0.000 {method 'add' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
     7529    0.004    0.000    0.004    0.000 {method '__enter__' of '_thread.lock' objects}
     6524    0.004    0.000    0.004    0.000 fromnumeric.py:3227(_mean_dispatcher)
        5    0.000    0.000    0.004    0.001 save.py:399(_map_function_arguments_to_created_inputs)
       16    0.000    0.000    0.004    0.000 spines.py:374(draw)
     1018    0.003    0.000    0.004    0.000 genericpath.py:117(_splitext)
      279    0.000    0.000    0.004    0.000 backend_pdf.py:642(<listcomp>)
    23/14    0.000    0.000    0.004    0.000 version_utils.py:110(<genexpr>)
      190    0.001    0.000    0.004    0.000 saveable_object_util.py:224(op_list_to_dict)
        5    0.000    0.000    0.004    0.001 gen_array_ops.py:722(broadcast_gradient_args)
        3    0.000    0.000    0.004    0.001 gen_random_ops.py:695(random_uniform)
       10    0.000    0.000    0.004    0.000 array_ops.py:4314(where)
       82    0.002    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_RecordGradient}
     3780    0.001    0.000    0.003    0.000 graph_view.py:63(<genexpr>)
      206    0.001    0.000    0.003    0.000 text.py:838(get_prop_tup)
      305    0.000    0.000    0.003    0.000 transforms.py:1247(__add__)
        1    0.000    0.000    0.003    0.003 metrics.py:481(__init__)
        1    0.000    0.000    0.003    0.003 metrics.py:326(__init__)
       10    0.000    0.000    0.003    0.000 string_ops.py:540(string_join)
       10    0.000    0.000    0.003    0.000 gen_math_ops.py:8744(select)
      777    0.001    0.000    0.003    0.000 transforms.py:1831(__init__)
       10    0.000    0.000    0.003    0.000 gen_string_ops.py:819(string_join)
      108    0.001    0.000    0.003    0.000 transforms.py:1940(rotate_deg)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:1609(writeObject)
     1198    0.001    0.000    0.003    0.000 optimizer_v2.py:773(get_slot)
       15    0.000    0.000    0.003    0.000 resource_variable_ops.py:198(eager_safe_variable_handle)
     1005    0.003    0.000    0.003    0.000 __init__.py:390(format)
      247    0.002    0.000    0.003    0.000 ops.py:121(__init__)
      129    0.001    0.000    0.003    0.000 base_layer.py:3208(_in_functional_construction_mode)
      326    0.001    0.000    0.003    0.000 transforms.py:727(__init__)
       12    0.000    0.000    0.003    0.000 axis.py:229(set_clip_path)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:238(write)
      140    0.000    0.000    0.003    0.000 data_structures.py:793(_checkpoint_dependencies)
      180    0.001    0.000    0.003    0.000 training.py:2361(layers)
      530    0.001    0.000    0.003    0.000 colors.py:157(to_rgba)
      149    0.000    0.000    0.003    0.000 <__array_function__ internals>:2(column_stack)
        5    0.000    0.000    0.003    0.001 saving_utils.py:100(trace_model_call)
     1072    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
       10    0.000    0.000    0.003    0.000 saving_utils.py:57(model_input_signature)
     1022    0.001    0.000    0.003    0.000 artist.py:49(_stale_axes_callback)
        3    0.000    0.000    0.003    0.001 array_ops.py:1084(strided_slice)
  615/375    0.000    0.000    0.003    0.000 utils.py:127(<genexpr>)
        3    0.000    0.000    0.003    0.001 gen_array_ops.py:10170(strided_slice)
       32    0.000    0.000    0.003    0.000 ticker.py:2817(__init__)
   300/60    0.000    0.000    0.003    0.000 json_utils.py:52(<listcomp>)
      305    0.001    0.000    0.003    0.000 transforms.py:2462(composite_transform_factory)
     2710    0.003    0.000    0.003    0.000 tensor_spec.py:107(_serialize)
       12    0.000    0.000    0.003    0.000 array_ops.py:2746(wrapped)
      410    0.002    0.000    0.003    0.000 __init__.py:2096(_check_isinstance)
       32    0.000    0.000    0.003    0.000 ticker.py:2020(__init__)
       12    0.000    0.000    0.003    0.000 ops.py:1319(convert_to_tensor_v2)
      132    0.000    0.000    0.003    0.000 axis.py:1891(getter)
        3    0.000    0.000    0.003    0.001 core.py:1131(__init__)
       12    0.000    0.000    0.003    0.000 array_ops.py:2754(zeros)
        4    0.000    0.000    0.003    0.001 axis.py:744(__init__)
      233    0.000    0.000    0.003    0.000 lines.py:1257(set_markerfacecoloralt)
      537    0.001    0.000    0.003    0.000 transforms.py:126(invalidate)
        4    0.000    0.000    0.003    0.001 _base.py:2884(tick_params)
       53    0.000    0.000    0.003    0.000 base_layer.py:2247(trainable_variables)
     1251    0.002    0.000    0.003    0.000 traceable_stack.py:75(copy_metadata)
       32    0.000    0.000    0.003    0.000 ticker.py:2095(set_params)
       60    0.000    0.000    0.003    0.000 def_function.py:434(__del__)
        1    0.000    0.000    0.003    0.003 Experiment.py:202(<listcomp>)
        2    0.000    0.000    0.003    0.001 training.py:312(_init_batch_counters)
       21    0.000    0.000    0.003    0.000 statistics.py:291(mean)
      727    0.001    0.000    0.003    0.000 object_identity.py:220(_wrap_key)
        1    0.000    0.000    0.003    0.003 input_layer.py:210(Input)
      609    0.001    0.000    0.003    0.000 __init__.py:1309(_to_unmasked_float_array)
     1401    0.001    0.000    0.003    0.000 resource_variable_ops.py:2127(is_resource_variable)
     1614    0.002    0.000    0.003    0.000 transforms.py:1701(__init__)
     2910    0.002    0.000    0.003    0.000 graph_view.py:51(_escape_local_name)
        4    0.000    0.000    0.003    0.001 gen_math_ops.py:6696(prod)
     1285    0.000    0.000    0.003    0.000 nested_structure_coder.py:176(can_encode)
       95    0.000    0.000    0.003    0.000 resource_variable_ops.py:74(get_eager_safe_handle_data)
      142    0.002    0.000    0.003    0.000 __init__.py:1663(normalize_kwargs)
       20    0.000    0.000    0.003    0.000 save_impl.py:367(_generate_input_signature)
       10    0.000    0.000    0.003    0.000 def_function.py:1171(__get__)
       10    0.000    0.000    0.003    0.000 base_layer.py:2993(_get_save_spec)
        1    0.000    0.000    0.003    0.003 input_layer.py:91(__init__)
       66    0.000    0.000    0.003    0.000 text.py:259(update_from)
     1005    0.002    0.000    0.003    0.000 threading.py:1230(current_thread)
     3399    0.002    0.000    0.003    0.000 __init__.py:2131(_check_in_list)
       20    0.000    0.000    0.003    0.000 callbacks.py:503(on_train_end)
       21    0.001    0.000    0.003    0.000 statistics.py:105(_sum)
       20    0.000    0.000    0.003    0.000 training.py:2322(_undeduplicated_weights)
        2    0.000    0.000    0.003    0.001 metrics.py:279(add_weight)
        2    0.000    0.000    0.003    0.001 _base.py:2332(autoscale_view)
      108    0.001    0.000    0.003    0.000 transforms.py:1924(rotate)
      268    0.000    0.000    0.003    0.000 <__array_function__ internals>:2(amin)
     1222    0.001    0.000    0.003    0.000 optimizer_v2.py:1279(_var_key)
     1046    0.001    0.000    0.003    0.000 posixpath.py:41(_get_sep)
        7    0.000    0.000    0.003    0.000 base_layer.py:297(__init__)
      136    0.001    0.000    0.003    0.000 transforms.py:669(translated)
       10    0.000    0.000    0.003    0.000 function.py:3700(class_method_to_instance_method)
      233    0.001    0.000    0.003    0.000 lines.py:1147(set_linestyle)
       15    0.000    0.000    0.003    0.000 tf_utils.py:484(get_tensor_spec)
     3046    0.003    0.000    0.003    0.000 {method 'rfind' of 'str' objects}
       32    0.001    0.000    0.003    0.000 ticker.py:683(_compute_offset)
      145    0.000    0.000    0.003    0.000 <__array_function__ internals>:2(broadcast_arrays)
      440    0.001    0.000    0.003    0.000 device_spec.py:111(__init__)
      783    0.002    0.000    0.002    0.000 _weakrefset.py:26(__exit__)
        3    0.000    0.000    0.002    0.001 optimizer_v2.py:808(_create_hypers)
       10    0.000    0.000    0.002    0.000 initializers_v2.py:127(__call__)
       32    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(clip)
      519    0.001    0.000    0.002    0.000 ops.py:6635(__exit__)
       12    0.000    0.000    0.002    0.000 def_function.py:1423(decorated)
      149    0.001    0.000    0.002    0.000 shape_base.py:612(column_stack)
       10    0.000    0.000    0.002    0.000 base_layer.py:2998(<lambda>)
     1240    0.001    0.000    0.002    0.000 ops.py:4589(_push_control_dependencies_controller)
      270    0.001    0.000    0.002    0.000 function.py:361(_enclosing_xla_context)
     2010    0.002    0.000    0.002    0.000 __init__.py:705(filter)
      130    0.001    0.000    0.002    0.000 function.py:2071(_select_forward_and_backward_functions)
  316/308    0.001    0.000    0.002    0.000 spines.py:424(get_spine_transform)
      420    0.000    0.000    0.002    0.000 transforms.py:1714(transform)
       47    0.000    0.000    0.002    0.000 backend_pdf.py:1585(writePath)
       19    0.000    0.000    0.002    0.000 training.py:1890(trainable_weights)
       15    0.000    0.000    0.002    0.000 training.py:2313(weights)
       10    0.000    0.000    0.002    0.000 init_ops_v2.py:118(__call__)
      121    0.001    0.000    0.002    0.000 resource_variable_ops.py:84(_set_handle_shapes_and_types)
      152    0.000    0.000    0.002    0.000 _base.py:597(viewLim)
      170    0.001    0.000    0.002    0.000 backend_bases.py:737(__init__)
     1146    0.002    0.000    0.002    0.000 ops.py:4579(add_op)
        3    0.000    0.000    0.002    0.001 util.py:123(scale_losses_by_sample_weight)
        4    0.000    0.000    0.002    0.001 _base.py:2398(handle_single_axis)
       82    0.001    0.000    0.002    0.000 backend_pdf.py:2328(delta)
  981/537    0.002    0.000    0.002    0.000 transforms.py:136(_invalidate_internal)
       32    0.000    0.000    0.002    0.000 fromnumeric.py:2021(clip)
     1285    0.001    0.000    0.002    0.000 nested_structure_coder.py:153(_is_tuple)
      165    0.000    0.000    0.002    0.000 nested_structure_coder.py:379(do_encode)
       10    0.000    0.000    0.002    0.000 save.py:224(_add_saveable_objects)
      745    0.002    0.000    0.002    0.000 func_graph.py:669(add_capture)
      611    0.002    0.000    0.002    0.000 transforms.py:163(set_children)
        3    0.000    0.000    0.002    0.001 math_grad.py:1656(_MatMulGradAgainstSecondOnly)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:3851(floor_mod)
      164    0.000    0.000    0.002    0.000 artist.py:858(_set_gc_clip)
       93    0.001    0.000    0.002    0.000 base_layer.py:1378(losses)
      549    0.000    0.000    0.002    0.000 artist.py:1006(<listcomp>)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:10355(squared_difference)
       40    0.000    0.000    0.002    0.000 save_impl.py:600(_create_call_fn_decorator)
      122    0.000    0.000    0.002    0.000 transforms.py:782(from_extents)
     2292    0.002    0.000    0.002    0.000 {built-in method posix.fspath}
      220    0.001    0.000    0.002    0.000 device_spec.py:236(replace)
      129    0.001    0.000    0.002    0.000 base_layer.py:2457(_set_mask_metadata)
       36    0.000    0.000    0.002    0.000 fromnumeric.py:42(_wrapit)
      268    0.000    0.000    0.002    0.000 fromnumeric.py:2676(amin)
        3    0.000    0.000    0.002    0.001 backprop.py:697(_ones)
      428    0.001    0.000    0.002    0.000 transforms.py:1793(transform_affine)
       20    0.000    0.000    0.002    0.000 training_utils.py:1226(__enter__)
      135    0.001    0.000    0.002    0.000 nested_structure_coder.py:136(do_encode)
      880    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.EqualAttrValueWrapper}
      245    0.000    0.000    0.002    0.000 font_manager.py:673(__eq__)
     1157    0.001    0.000    0.002    0.000 ops.py:2062(device)
      459    0.001    0.000    0.002    0.000 ops.py:772(<listcomp>)
     2225    0.001    0.000    0.002    0.000 nested_structure_coder.py:157(_is_named_tuple)
      230    0.000    0.000    0.002    0.000 revived_types.py:140(serialize)
        3    0.000    0.000    0.002    0.001 array_ops.py:3007(ones)
      501    0.001    0.000    0.002    0.000 ops.py:2180(_set_device_from_string)
      145    0.001    0.000    0.002    0.000 stride_tricks.py:206(broadcast_arrays)
        3    0.000    0.000    0.002    0.001 math_ops.py:1380(floordiv)
      530    0.001    0.000    0.002    0.000 colors.py:123(_is_nth_color)
      164    0.000    0.000    0.002    0.000 backend_bases.py:901(set_clip_path)
      180    0.000    0.000    0.002    0.000 __init__.py:133(serialize)
      161    0.001    0.000    0.002    0.000 path.py:96(__init__)
        3    0.000    0.000    0.002    0.001 math_grad.py:1304(_MulGrad)
     1240    0.002    0.000    0.002    0.000 ops.py:4522(__init__)
      722    0.000    0.000    0.002    0.000 backend_pdf.py:635(write)
      248    0.001    0.000    0.002    0.000 transforms.py:2290(__init__)
       43    0.000    0.000    0.002    0.000 tensor_shape.py:926(merge_with)
    70/62    0.000    0.000    0.002    0.000 backend_pdf.py:183(<listcomp>)
      100    0.000    0.000    0.002    0.000 tf_utils.py:261(convert_inner_node_data)
      123    0.001    0.000    0.002    0.000 axis.py:501(update_position)
       38    0.000    0.000    0.002    0.000 backend_pdf.py:649(endStream)
      119    0.001    0.000    0.002    0.000 tf_decorator.py:128(rewrap)
        4    0.000    0.000    0.002    0.000 axis.py:2054(_update_offset_text_position)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:3773(floor_div)
        2    0.000    0.000    0.002    0.001 _axes.py:1414(plot)
     2010    0.002    0.000    0.002    0.000 {method 'acquire' of '_thread.RLock' objects}
      243    0.001    0.000    0.002    0.000 artist.py:978(_update_property)
       66    0.000    0.000    0.002    0.000 transforms.py:2709(get_transformed_points_and_affine)
     1746    0.002    0.000    0.002    0.000 {built-in method sys._getframe}
    52/12    0.000    0.000    0.002    0.000 copy.py:268(_reconstruct)
       34    0.000    0.000    0.002    0.000 backend_pdf.py:398(end)
      110    0.000    0.000    0.002    0.000 save_impl.py:453(get_input_arg_value)
     3365    0.002    0.000    0.002    0.000 {built-in method from_iterable}
      350    0.001    0.000    0.002    0.000 text.py:824(get_unitless_position)
       38    0.000    0.000    0.002    0.000 transforms.py:1960(rotate_deg_around)
        6    0.000    0.000    0.002    0.000 pyplot.py:600(gcf)
      145    0.001    0.000    0.002    0.000 nested_structure_coder.py:202(do_encode)
      220    0.000    0.000    0.002    0.000 device_spec.py:142(from_string)
      377    0.001    0.000    0.002    0.000 backend_pdf.py:96(fill)
     1670    0.001    0.000    0.002    0.000 ops.py:193(_as_graph_element)
        3    0.000    0.000    0.002    0.001 array_ops.py:2730(_constant_if_small)
      118    0.000    0.000    0.002    0.000 axis.py:618(update_position)
        2    0.000    0.000    0.002    0.001 pyplot.py:427(figure)
      822    0.001    0.000    0.002    0.000 ops.py:2052(name)
       40    0.000    0.000    0.002    0.000 structure.py:452(<listcomp>)
      710    0.001    0.000    0.002    0.000 base_layer.py:2942(_eager_losses)
       32    0.000    0.000    0.002    0.000 {method 'clip' of 'numpy.ndarray' objects}
  200/100    0.000    0.000    0.002    0.000 tf_utils.py:157(map_structure_with_atomic)
       56    0.000    0.000    0.002    0.000 markers.py:733(_set_tickdown)
        5    0.000    0.000    0.002    0.000 function_serialization.py:110(wrap_cached_variables)
        2    0.000    0.000    0.002    0.001 _base.py:930(_gen_axes_spines)
      727    0.001    0.000    0.002    0.000 object_identity.py:75(__init__)
        4    0.002    0.000    0.002    0.000 {method 'close' of '_io.TextIOWrapper' objects}
       70    0.000    0.000    0.002    0.000 font_manager.py:859(copy)
       10    0.000    0.000    0.002    0.000 _base.py:945(<genexpr>)
        6    0.000    0.000    0.002    0.000 figure.py:466(_set_dpi)
       70    0.000    0.000    0.002    0.000 transforms.py:2696(_revalidate)
        5    0.000    0.000    0.002    0.000 signature_serialization.py:265(validate_saveable_view)
       32    0.000    0.000    0.002    0.000 _methods.py:97(_clip)
       82    0.000    0.000    0.002    0.000 transforms.py:773(from_bounds)
     1005    0.001    0.000    0.002    0.000 __init__.py:120(getLevelName)
       12    0.000    0.000    0.002    0.000 patches.py:42(__init__)
        8    0.000    0.000    0.002    0.000 spines.py:517(linear_spine)
      365    0.000    0.000    0.002    0.000 _collections_abc.py:851(setdefault)
      596    0.001    0.000    0.002    0.000 backend_pdf.py:414(write)
     2312    0.002    0.000    0.002    0.000 transforms.py:82(__init__)
        5    0.000    0.000    0.002    0.000 base.py:97(restore)
      180    0.000    0.000    0.002    0.000 serialized_attributes.py:180(objects_to_serialize)
       48    0.001    0.000    0.002    0.000 patches.py:526(_bind_draw_path_function)
      126    0.000    0.000    0.002    0.000 base_layer_utils.py:310(is_in_keras_graph)
      190    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetHandleShapeAndType}
      130    0.000    0.000    0.002    0.000 policy.py:615(serialize)
       35    0.000    0.000    0.002    0.000 tensor_spec.py:130(is_compatible_with)
       19    0.000    0.000    0.002    0.000 layer_utils.py:254(gather_trainable_weights)
      288    0.000    0.000    0.002    0.000 {method 'max' of 'numpy.ndarray' objects}
       54    0.000    0.000    0.002    0.000 markers.py:713(_set_tickleft)
     3346    0.002    0.000    0.002    0.000 base_layer.py:1246(trainable)
        2    0.000    0.000    0.002    0.001 backend_bases.py:3351(new_figure_manager)
        2    0.000    0.000    0.002    0.001 backend_agg.py:398(get_renderer)
       20    0.000    0.000    0.002    0.000 data_structures.py:735(__init__)
       11    0.000    0.000    0.002    0.000 tensor_util.py:674(_ConstantValue)
        3    0.000    0.000    0.002    0.001 optimizer_v2.py:552(_aggregate_gradients)
      190    0.002    0.000    0.002    0.000 {built-in method FromString}
      368    0.001    0.000    0.002    0.000 __init__.py:882(get_siblings)
       32    0.000    0.000    0.002    0.000 ticker.py:256(<listcomp>)
      871    0.001    0.000    0.002    0.000 ops.py:4258(get_name_scope)
     1038    0.002    0.000    0.002    0.000 compile_utils.py:291(metrics)
      169    0.001    0.000    0.002    0.000 base_layer.py:2528(_get_call_arg_value)
    10990    0.002    0.000    0.002    0.000 artist.py:804(get_animated)
       32    0.000    0.000    0.002    0.000 ticker.py:2072(_validate_steps)
       35    0.000    0.000    0.002    0.000 tensor_spec.py:78(is_compatible_with)
     1015    0.001    0.000    0.002    0.000 data_structures.py:479(_check_external_modification)
       50    0.000    0.000    0.002    0.000 base_layer.py:2252(non_trainable_variables)
     2010    0.002    0.000    0.002    0.000 {method 'release' of '_thread.RLock' objects}
      129    0.001    0.000    0.002    0.000 base_layer.py:2395(_name_scope)
      112    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(round_)
   120/40    0.000    0.000    0.002    0.000 copy.py:273(<genexpr>)
       14    0.000    0.000    0.002    0.000 backend_agg.py:125(draw_path)
      128    0.000    0.000    0.002    0.000 transforms.py:361(ymax)
       30    0.000    0.000    0.002    0.000 typing.py:875(__extrahook__)
        2    0.000    0.000    0.002    0.001 gen_array_ops.py:9139(size)
        8    0.000    0.000    0.002    0.000 spines.py:36(__init__)
        3    0.000    0.000    0.002    0.001 training.py:2754(write_scalar_summaries)
      221    0.000    0.000    0.002    0.000 pickle.py:705(save_str)
       39    0.000    0.000    0.002    0.000 axis.py:407(_get_text1_transform)
       16    0.000    0.000    0.002    0.000 transforms.py:703(<listcomp>)
      645    0.001    0.000    0.002    0.000 custom_gradient.py:77(<listcomp>)
     2104    0.001    0.000    0.002    0.000 artist.py:336(pchanged)
      176    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
     1414    0.001    0.000    0.001    0.000 {method 'setdefault' of 'dict' objects}
       47    0.000    0.000    0.001    0.000 backend_pdf.py:1577(pathOperations)
     8350    0.001    0.000    0.001    0.000 __init__.py:170(value)
      407    0.001    0.000    0.001    0.000 _weakrefset.py:58(__iter__)
       38    0.000    0.000    0.001    0.000 axis.py:523(_get_text1_transform)
       14    0.001    0.000    0.001    0.000 {method 'draw_path' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
        2    0.000    0.000    0.001    0.001 figure.py:275(__init__)
  355/195    0.000    0.000    0.001    0.000 _base.py:648(get_xaxis_transform)
        2    0.001    0.001    0.001    0.001 backend_agg.py:86(__init__)
        2    0.000    0.000    0.001    0.001 gen_array_ops.py:785(broadcast_to)
      214    0.000    0.000    0.001    0.000 ops.py:6013(get_name_scope)
      130    0.001    0.000    0.001    0.000 policy.py:593(_policy_equivalent_to_dtype)
     1262    0.001    0.000    0.001    0.000 {method 'find' of 'str' objects}
      112    0.000    0.000    0.001    0.000 transforms.py:346(xmin)
       25    0.000    0.000    0.001    0.000 base_layer.py:2108(input_shape)
       39    0.000    0.000    0.001    0.000 _base.py:672(get_xaxis_text1_transform)
      164    0.001    0.000    0.001    0.000 ticker.py:573(__call__)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:792(scalar)
       84    0.000    0.000    0.001    0.000 backend_pdf.py:2177(new_gc)
      120    0.001    0.000    0.001    0.000 base_layer.py:2312(_maybe_cast_inputs)
      140    0.000    0.000    0.001    0.000 data_structures.py:824(_check_self_external_modification)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:739(summary_writer_function)
  346/190    0.000    0.000    0.001    0.000 _base.py:724(get_yaxis_transform)
       12    0.000    0.000    0.001    0.000 genericpath.py:16(exists)
       33    0.001    0.000    0.001    0.000 {method 'draw_markers' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
       32    0.001    0.000    0.001    0.000 ticker.py:722(_set_order_of_magnitude)
      405    0.000    0.000    0.001    0.000 ops.py:3297(_is_function)
      220    0.000    0.000    0.001    0.000 ops.py:3221(<listcomp>)
     1470    0.001    0.000    0.001    0.000 font_manager.py:1220(<genexpr>)
       48    0.000    0.000    0.001    0.000 _dill.py:1327(save_type)
      109    0.000    0.000    0.001    0.000 transforms.py:1972(translate)
        1    0.000    0.000    0.001    0.001 training.py:578(_configure_steps_per_execution)
      288    0.000    0.000    0.001    0.000 _methods.py:28(_amax)
       90    0.000    0.000    0.001    0.000 transforms.py:1532(transform_path_non_affine)
        5    0.000    0.000    0.001    0.000 save.py:367(_map_captures_to_created_tensors)
       38    0.000    0.000    0.001    0.000 _base.py:748(get_yaxis_text1_transform)
        2    0.001    0.001    0.001    0.001 {built-in method matplotlib.ttconv.get_pdf_charprocs}
       12    0.001    0.000    0.001    0.000 {built-in method posix.stat}
       88    0.000    0.000    0.001    0.000 backend_pdf.py:2184(__init__)
      496    0.001    0.000    0.001    0.000 artist.py:695(set_figure)
        3    0.000    0.000    0.001    0.000 optimizer_v2.py:826(iterations)
      518    0.000    0.000    0.001    0.000 re.py:169(match)
        8    0.000    0.000    0.001    0.000 spines.py:238(cla)
        8    0.000    0.000    0.001    0.000 spines.py:226(register_axis)
       25    0.000    0.000    0.001    0.000 functional.py:237(input_shape)
      645    0.001    0.000    0.001    0.000 custom_gradient.py:78(<listcomp>)
       56    0.000    0.000    0.001    0.000 markers.py:727(_set_tickup)
       54    0.000    0.000    0.001    0.000 markers.py:719(_set_tickright)
      165    0.001    0.000    0.001    0.000 artist.py:1074(update_from)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3590(round_)
       29    0.000    0.000    0.001    0.000 base_layer.py:2162(output_shape)
       35    0.000    0.000    0.001    0.000 tensor_util.py:548(<listcomp>)
     1157    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
        5    0.000    0.000    0.001    0.000 signature_serialization.py:39(_get_signature)
       23    0.000    0.000    0.001    0.000 base_layer.py:2673(_get_trainable_state)
      486    0.001    0.000    0.001    0.000 auto_control_deps_utils.py:105(<genexpr>)
       12    0.000    0.000    0.001    0.000 def_function.py:1199(function)
       16    0.000    0.000    0.001    0.000 transforms.py:704(<listcomp>)
     1040    0.001    0.000    0.001    0.000 utils.py:223(set_training_arg)
      124    0.000    0.000    0.001    0.000 transforms.py:351(ymin)
      385    0.000    0.000    0.001    0.000 axis.py:325(_set_artist_props)
        2    0.000    0.000    0.001    0.001 functional.py:117(_init_graph_network)
      633    0.000    0.000    0.001    0.000 artist.py:168(convert_xunits)
       39    0.000    0.000    0.001    0.000 axis.py:410(_get_text2_transform)
      176    0.000    0.000    0.001    0.000 _methods.py:32(_amin)
     2100    0.001    0.000    0.001    0.000 ops.py:5087(_control_dependencies_stack)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:190(<listcomp>)
      227    0.000    0.000    0.001    0.000 base_layer.py:1232(dynamic)
       20    0.000    0.000    0.001    0.000 callbacks.py:486(on_train_begin)
       50    0.000    0.000    0.001    0.000 function.py:2899(<genexpr>)
       40    0.000    0.000    0.001    0.000 node.py:227(input_shapes)
       47    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.convert_to_string}
     6464    0.001    0.000    0.001    0.000 {method 'popleft' of 'collections.deque' objects}
       35    0.001    0.000    0.001    0.000 {method 'draw_glyphs_to_bitmap' of 'matplotlib.ft2font.FT2Font' objects}
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(around)
       70    0.000    0.000    0.001    0.000 lines.py:724(_get_transformed_path)
       82    0.000    0.000    0.001    0.000 backend_bases.py:656(new_gc)
      233    0.000    0.000    0.001    0.000 lines.py:648(set_data)
      264    0.001    0.000    0.001    0.000 base_layer_utils.py:508(__enter__)
      112    0.000    0.000    0.001    0.000 transforms.py:356(xmax)
     4623    0.001    0.000    0.001    0.000 tf_decorator.py:262(decorated_target)
        1    0.000    0.000    0.001    0.001 backend.py:1141(placeholder)
      129    0.000    0.000    0.001    0.000 base_layer_utils.py:490(in_keras_graph)
      501    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequestedDevice}
      158    0.000    0.000    0.001    0.000 transforms.py:2644(__init__)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(prod)
       90    0.000    0.000    0.001    0.000 activations.py:426(serialize)
     1005    0.001    0.000    0.001    0.000 threading.py:1076(name)
       39    0.000    0.000    0.001    0.000 _base.py:698(get_xaxis_text2_transform)
      191    0.000    0.000    0.001    0.000 path.py:159(_fast_from_codes_and_verts)
       10    0.000    0.000    0.001    0.000 function.py:2672(_convert_inputs_to_signature)
       66    0.000    0.000    0.001    0.000 path.py:354(iter_segments)
      299    0.000    0.000    0.001    0.000 execute.py:177(make_str)
       35    0.000    0.000    0.001    0.000 backend_pdf.py:1929(_setup_textpos)
      129    0.001    0.000    0.001    0.000 base_layer.py:2495(_get_input_masks)
       20    0.000    0.000    0.001    0.000 save_impl.py:552(_wrap_call_and_conditional_losses)
       38    0.000    0.000    0.001    0.000 axis.py:526(_get_text2_transform)
      466    0.001    0.000    0.001    0.000 lines.py:1114(_split_drawstyle_linestyle)
       68    0.000    0.000    0.001    0.000 lines.py:709(_transform_path)
      300    0.000    0.000    0.001    0.000 data_structures.py:818(_dirty)
       20    0.000    0.000    0.001    0.000 save_impl.py:581(_extract_outputs_from_fn)
       48    0.000    0.000    0.001    0.000 node.py:234(output_shapes)
       15    0.000    0.000    0.001    0.000 save_impl.py:237(replace_layer_functions)
        7    0.000    0.000    0.001    0.000 base_layer.py:2884(_init_call_fn_args)
     1000    0.001    0.000    0.001    0.000 iostream.py:316(closed)
        4    0.000    0.000    0.001    0.000 layer_utils.py:197(print_layer_summary)
       16    0.000    0.000    0.001    0.000 transforms.py:705(<listcomp>)
       60    0.001    0.000    0.001    0.000 base_layer.py:1438(add_loss)
      427    0.000    0.000    0.001    0.000 artist.py:358(set_transform)
       38    0.000    0.000    0.001    0.000 patches.py:341(_set_facecolor)
       16    0.000    0.000    0.001    0.000 transforms.py:706(<listcomp>)
      783    0.001    0.000    0.001    0.000 _weakrefset.py:20(__enter__)
      236    0.001    0.000    0.001    0.000 font_manager.py:778(set_weight)
       38    0.000    0.000    0.001    0.000 _base.py:774(get_yaxis_text2_transform)
        2    0.000    0.000    0.001    0.001 _base.py:1842(add_line)
      519    0.001    0.000    0.001    0.000 ops.py:6583(__init__)
      136    0.000    0.000    0.001    0.000 transforms.py:1764(frozen)
      428    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.affine_transform}
       48    0.001    0.000    0.001    0.000 transforms.py:2779(nonsingular)
      239    0.001    0.000    0.001    0.000 ops.py:5175(__init__)
       10    0.001    0.000    0.001    0.000 meta_graph.py:138(ops_used_by_graph_def)
       34    0.000    0.000    0.001    0.000 backend_pdf.py:387(_writeHeader)
      212    0.001    0.000    0.001    0.000 font_manager.py:1325(get_font)
      288    0.000    0.000    0.001    0.000 transforms.py:2194(get_affine)
      724    0.001    0.000    0.001    0.000 figure.py:45(_stale_figure_callback)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3130(around)
     1940    0.001    0.000    0.001    0.000 def_function.py:1036(<genexpr>)
      118    0.000    0.000    0.001    0.000 backend.py:1283(int_shape)
       32    0.000    0.000    0.001    0.000 fromnumeric.py:2843(prod)
       64    0.001    0.000    0.001    0.000 _methods.py:63(_clip_dep_is_scalar_nan)
       32    0.000    0.000    0.001    0.000 ticker.py:2087(_staircase)
        1    0.000    0.000    0.001    0.001 pyplot.py:658(close)
      940    0.000    0.000    0.001    0.000 nested_structure_coder.py:226(can_encode)
        1    0.000    0.000    0.001    0.001 _pylab_helpers.py:40(destroy)
      250    0.000    0.000    0.001    0.000 nested_structure_coder.py:70(_get_encoders)
      332    0.001    0.000    0.001    0.000 markers.py:249(set_fillstyle)
      220    0.000    0.000    0.001    0.000 transforms.py:2367(transform_non_affine)
      205    0.000    0.000    0.001    0.000 serialized_attributes.py:168(checkpointable_objects)
      145    0.000    0.000    0.001    0.000 data_structures.py:649(_list_functions_for_serialization)
      165    0.000    0.000    0.001    0.000 data_structures.py:152(__init__)
        5    0.000    0.000    0.001    0.000 meta_graph.py:174(stripped_op_list_for_graph)
      492    0.000    0.000    0.001    0.000 artist.py:937(set_visible)
       60    0.000    0.000    0.001    0.000 __init__.py:183(dumps)
      264    0.001    0.000    0.001    0.000 base_layer_utils.py:441(enter)
        1    0.001    0.001    0.001    0.001 {built-in method gc.collect}
       30    0.000    0.000    0.001    0.000 layer_serialization.py:63(<lambda>)
        9    0.000    0.000    0.001    0.000 tensor_util.py:569(MakeNdarray)
       55    0.000    0.000    0.001    0.000 utils.py:131(maybe_add_training_arg)
      233    0.001    0.000    0.001    0.000 lines.py:1401(set_dash_capstyle)
       14    0.000    0.000    0.001    0.000 ops.py:5225(combined)
      602    0.001    0.000    0.001    0.000 lines.py:1285(set_xdata)
       70    0.001    0.000    0.001    0.000 __init__.py:557(__setitem__)
      835    0.001    0.000    0.001    0.000 base.py:543(_setattr_tracking)
      459    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
       68    0.000    0.000    0.001    0.000 transforms.py:2681(__init__)
       20    0.000    0.000    0.001    0.000 base_layer.py:2129(<listcomp>)
      590    0.001    0.000    0.001    0.000 {method 'compress' of 'zlib.Compress' objects}
      233    0.000    0.000    0.001    0.000 lines.py:733(set_transform)
      315    0.001    0.000    0.001    0.000 <string>:35(_asdict)
       35    0.000    0.000    0.001    0.000 backend_pdf.py:654(fontName)
      299    0.000    0.000    0.001    0.000 op_def_library.py:159(_MakeStr)
       12    0.000    0.000    0.001    0.000 tf_utils.py:464(graph_context_for_symbolic_tensors)
     1730    0.001    0.000    0.001    0.000 module.py:302(_is_module)
      140    0.000    0.000    0.001    0.000 text.py:236(get_rotation)
        9    0.000    0.000    0.001    0.000 conversion.py:109(convert)
     1518    0.001    0.000    0.001    0.000 traceable_stack.py:30(__init__)
      236    0.001    0.000    0.001    0.000 font_manager.py:814(set_size)
      233    0.000    0.000    0.001    0.000 lines.py:1096(set_linewidth)
  758/400    0.001    0.000    0.001    0.000 transforms.py:2349(<lambda>)
     2121    0.001    0.000    0.001    0.000 statistics.py:201(_exact_ratio)
      334    0.000    0.000    0.001    0.000 backend_pdf.py:251(__init__)
       26    0.000    0.000    0.001    0.000 patches.py:348(set_facecolor)
      110    0.000    0.000    0.001    0.000 save_impl.py:438(training_arg_was_passed)
       32    0.000    0.000    0.001    0.000 transforms.py:1015(get_points)
     2000    0.001    0.000    0.001    0.000 callbacks.py:632(on_epoch_begin)
        9    0.000    0.000    0.001    0.000 tf_stack.py:105(__init__)
       48    0.000    0.000    0.001    0.000 pickle.py:905(save_global)
      999    0.001    0.000    0.001    0.000 metrics.py:247(<listcomp>)
     2370    0.001    0.000    0.001    0.000 function.py:223(<genexpr>)
      247    0.001    0.000    0.001    0.000 device.py:67(merge_device)
      290    0.000    0.000    0.001    0.000 ops.py:416(device)
      130    0.001    0.000    0.001    0.000 functional_ops.py:1178(<listcomp>)
      460    0.001    0.000    0.001    0.000 saveable_object_util.py:365(trace_save_restore_functions)
       25    0.000    0.000    0.001    0.000 serialized_attributes.py:188(set_and_validate_functions)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
      164    0.000    0.000    0.001    0.000 axis.py:301(set_label1)
      464    0.001    0.000    0.001    0.000 def_function.py:911(input_signature)
      115    0.000    0.000    0.001    0.000 func_graph.py:468(variables)
      165    0.000    0.000    0.001    0.000 nested_structure_coder.py:423(can_encode)
       20    0.000    0.000    0.001    0.000 data_structures.py:832(_update_snapshot)
      632    0.000    0.000    0.001    0.000 artist.py:180(convert_yunits)
        2    0.000    0.000    0.001    0.000 init_ops.py:111(__call__)
        9    0.000    0.000    0.001    0.000 transpiler.py:384(transform_function)
       83    0.000    0.000    0.001    0.000 func_graph.py:697(clear_captures)
       15    0.000    0.000    0.001    0.000 save_impl.py:385(to_tensor_spec_or_none)
       82    0.000    0.000    0.001    0.000 tensor_shape.py:282(merge_with)
      161    0.000    0.000    0.001    0.000 path.py:188(_update_values)
      587    0.000    0.000    0.001    0.000 lines.py:1297(set_ydata)
      112    0.001    0.000    0.001    0.000 {method 'round' of 'numpy.ndarray' objects}
      164    0.000    0.000    0.001    0.000 axis.py:314(set_label2)
       90    0.000    0.000    0.001    0.000 base_layer.py:1237(stateful)
       33    0.000    0.000    0.001    0.000 path.py:419(cleaned)
        2    0.000    0.000    0.001    0.000 _datasource.py:427(_findfile)
        5    0.000    0.000    0.001    0.000 metric_serialization.py:42(_get_serialized_attributes_internal)
      145    0.000    0.000    0.001    0.000 data_structures.py:650(<dictcomp>)
       16    0.000    0.000    0.001    0.000 training.py:1899(non_trainable_weights)
      140    0.001    0.000    0.001    0.000 text.py:41(get_rotation)
      210    0.001    0.000    0.001    0.000 {method 'clear' of 'matplotlib.ft2font.FT2Font' objects}
       17    0.000    0.000    0.001    0.000 generic_utils.py:334(deserialize_keras_object)
      140    0.000    0.000    0.001    0.000 text.py:1193(_preprocess_math)
     1420    0.001    0.000    0.001    0.000 nested_structure_coder.py:133(can_encode)
       24    0.000    0.000    0.001    0.000 base_layer.py:2182(<listcomp>)
        6    0.000    0.000    0.001    0.000 transforms.py:1915(clear)
      250    0.001    0.000    0.001    0.000 nested_structure_coder.py:72(<listcomp>)
        4    0.000    0.000    0.001    0.000 _base.py:153(__call__)
        9    0.000    0.000    0.001    0.000 inspect.py:680(getsourcefile)
        7    0.000    0.000    0.001    0.000 base_layer.py:2907(_call_fn_args)
       40    0.000    0.000    0.001    0.000 save_impl.py:509(layer_call_wrapper)
        4    0.000    0.000    0.001    0.000 _base.py:3104(set_xlim)
        4    0.000    0.000    0.001    0.000 patches.py:704(__init__)
       80    0.000    0.000    0.001    0.000 json_utils.py:37(default)
       66    0.000    0.000    0.001    0.000 markers.py:301(get_transform)
       35    0.001    0.000    0.001    0.000 {method 'draw_text_image' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      164    0.001    0.000    0.001    0.000 transforms.py:2859(_interval_contains_close)
      170    0.001    0.000    0.001    0.000 text.py:1137(set_verticalalignment)
      530    0.000    0.000    0.001    0.000 base_layer.py:1235(<genexpr>)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(ptp)
      500    0.001    0.000    0.001    0.000 lines.py:59(_scale_dashes)
        2    0.000    0.000    0.001    0.000 _base.py:310(_plot_args)
     1005    0.001    0.000    0.001    0.000 process.py:35(current_process)
      750    0.001    0.000    0.001    0.000 base_layer.py:2954(_eager_losses)
      233    0.000    0.000    0.001    0.000 lines.py:1355(set_dash_joinstyle)
     4528    0.001    0.000    0.001    0.000 artist.py:192(axes)
  214/160    0.000    0.000    0.001    0.000 transforms.py:2319(_invalidate_internal)
      196    0.000    0.000    0.001    0.000 variables.py:1132(_shared_name)
      126    0.000    0.000    0.001    0.000 base_layer.py:1200(_autographed_call)
      165    0.000    0.000    0.001    0.000 layer_utils.py:179(__init__)
      198    0.000    0.000    0.001    0.000 transforms.py:2154(<lambda>)
       34    0.000    0.000    0.001    0.000 backend_pdf.py:423(_flush)
     1200    0.001    0.000    0.001    0.000 object_identity.py:143(__iter__)
        7    0.000    0.000    0.001    0.000 base_layer.py:2900(_call_full_argspec)
      145    0.001    0.000    0.001    0.000 stride_tricks.py:185(_broadcast_shape)
      592    0.000    0.000    0.001    0.000 function_base.py:257(iterable)
     1037    0.001    0.000    0.001    0.000 compile_utils.py:129(<listcomp>)
      459    0.000    0.000    0.001    0.000 base_layer_utils.py:399(call_context)
     1005    0.001    0.000    0.001    0.000 process.py:146(name)
      247    0.000    0.000    0.001    0.000 device.py:172(is_null_merge)
       45    0.000    0.000    0.001    0.000 functional.py:335(<listcomp>)
       32    0.001    0.000    0.001    0.000 ticker.py:1955(scale_range)
      233    0.000    0.000    0.001    0.000 lines.py:1416(set_solid_capstyle)
      830    0.000    0.000    0.001    0.000 copy.py:252(_keep_alive)
      110    0.000    0.000    0.001    0.000 ops.py:2510(_get_attr_type)
        8    0.000    0.000    0.001    0.000 _base.py:1436(apply_aspect)
      236    0.000    0.000    0.001    0.000 transforms.py:2057(transform)
      175    0.001    0.000    0.001    0.000 revived_types.py:73(to_proto)
       16    0.000    0.000    0.001    0.000 layer_utils.py:277(gather_non_trainable_weights)
       32    0.000    0.000    0.001    0.000 shape_base.py:286(hstack)
       10    0.000    0.000    0.001    0.000 saving_utils.py:270(_serialize_nested_config)
      251    0.000    0.000    0.001    0.000 base_layer.py:2515(_call_arg_was_passed)
      245    0.001    0.000    0.001    0.000 nested_structure_coder.py:333(do_encode)
       15    0.000    0.000    0.001    0.000 utils.py:40(use_wrapped_call)
        6    0.000    0.000    0.001    0.000 figure.py:874(set_size_inches)
    24/22    0.000    0.000    0.001    0.000 transforms.py:412(bounds)
      270    0.000    0.000    0.001    0.000 regularizers.py:342(serialize)
      234    0.000    0.000    0.001    0.000 font_manager.py:759(set_style)
      870    0.001    0.000    0.001    0.000 ops.py:4584(op_in_group)
        2    0.000    0.000    0.001    0.000 _subplots.py:129(update_params)
     2335    0.000    0.000    0.001    0.000 base.py:649(_checkpoint_dependencies)
      233    0.000    0.000    0.001    0.000 lines.py:1061(set_drawstyle)
       34    0.000    0.000    0.001    0.000 backend_pdf.py:645(beginStream)
       15    0.000    0.000    0.001    0.000 uuid.py:621(uuid4)
      120    0.000    0.000    0.001    0.000 base_layer.py:2340(_should_cast_single_input)
      198    0.000    0.000    0.001    0.000 lines.py:953(_get_markerfacecolor)
      251    0.000    0.000    0.001    0.000 ops.py:6769(_op_to_colocate_with)
        5    0.000    0.000    0.001    0.000 save.py:677(_verify_ops)
     1945    0.001    0.000    0.001    0.000 base.py:984(_list_extra_dependencies_for_serialization)
       34    0.001    0.000    0.001    0.000 {method 'flush' of 'zlib.Compress' objects}
      100    0.000    0.000    0.001    0.000 ops.py:6287(add_to_collection)
        2    0.000    0.000    0.001    0.000 gridspec.py:586(get_position)
      233    0.000    0.000    0.001    0.000 lines.py:1370(set_solid_joinstyle)
       20    0.000    0.000    0.001    0.000 function_base.py:2031(__init__)
       10    0.000    0.000    0.001    0.000 save.py:360(_tensor_dict_to_tensorinfo)
      252    0.000    0.000    0.001    0.000 __init__.py:1296(is_math_text)
       34    0.000    0.000    0.001    0.000 posixpath.py:75(join)
       20    0.000    0.000    0.001    0.000 training.py:762(make_train_function)
     2100    0.001    0.000    0.001    0.000 ops.py:3156(_set_control_flow_context)
      403    0.000    0.000    0.001    0.000 ops.py:517(<listcomp>)
        2    0.000    0.000    0.001    0.000 _base.py:1868(_update_line_limits)
      130    0.000    0.000    0.001    0.000 forwardprop_util.py:34(__new__)
        4    0.000    0.000    0.001    0.000 node.py:54(__init__)
       10    0.000    0.000    0.001    0.000 save.py:361(<dictcomp>)
       34    0.000    0.000    0.001    0.000 backend_pdf.py:348(__init__)
      135    0.000    0.000    0.001    0.000 context.py:2390(_tmp_in_graph_mode)
       38    0.000    0.000    0.001    0.000 patches.py:315(_set_edgecolor)
       32    0.000    0.000    0.001    0.000 fromnumeric.py:2477(ptp)
       12    0.000    0.000    0.001    0.000 constant_op.py:347(_tensor_shape_tensor_conversion_function)
      210    0.000    0.000    0.001    0.000 auto_control_deps_utils.py:66(<listcomp>)
      783    0.001    0.000    0.001    0.000 _weakrefset.py:16(__init__)
      895    0.000    0.000    0.001    0.000 nested_structure_coder.py:280(can_encode)
      234    0.000    0.000    0.001    0.000 font_manager.py:796(set_stretch)
      130    0.000    0.000    0.001    0.000 policy.py:585(_is_convertible_to_dtype)
      536    0.000    0.000    0.001    0.000 backend_pdf.py:902(cvt)
        2    0.000    0.000    0.001    0.000 backend_pdf.py:553(newPage)
       10    0.000    0.000    0.001    0.000 utils_impl.py:70(build_tensor_info_internal)
        1    0.000    0.000    0.001    0.001 training.py:557(_get_optimizer)
        4    0.000    0.000    0.001    0.000 _base.py:1116(_set_title_offset_trans)
       15    0.000    0.000    0.001    0.000 input_spec.py:230(to_tensor_spec)
      192    0.000    0.000    0.001    0.000 axis.py:819(get_transform)
      579    0.000    0.000    0.001    0.000 __init__.py:1961(<listcomp>)
     4795    0.001    0.000    0.001    0.000 inspect.py:2506(default)
      264    0.001    0.000    0.001    0.000 base_layer_utils.py:524(__exit__)
      584    0.001    0.000    0.001    0.000 {built-in method builtins.round}
        1    0.000    0.000    0.001    0.001 training.py:560(_get_single_optimizer)
        3    0.000    0.000    0.001    0.000 base_layer.py:2556(_set_connectivity_metadata)
      172    0.000    0.000    0.001    0.000 ticker.py:564(fix_minus)
       10    0.000    0.000    0.001    0.000 metric_serialization.py:32(_python_properties_internal)
      803    0.001    0.000    0.001    0.000 api.py:122(get_effective_source_map)
      234    0.000    0.000    0.001    0.000 font_manager.py:769(set_variant)
       36    0.000    0.000    0.001    0.000 transforms.py:986(__init__)
 1250/450    0.000    0.000    0.001    0.000 tensor_util.py:229(_FlattenToStrings)
      372    0.000    0.000    0.001    0.000 __init__.py:833(clean)
        1    0.000    0.000    0.001    0.001 optimizers.py:872(get)
       26    0.000    0.000    0.001    0.000 patches.py:330(set_edgecolor)
      622    0.000    0.000    0.001    0.000 backend_mixed.py:67(__getattr__)
       32    0.000    0.000    0.001    0.000 axis.py:1648(set_major_locator)
       33    0.000    0.000    0.001    0.000 {built-in method matplotlib._path.cleanup_path}
       60    0.000    0.000    0.001    0.000 node.py:188(serialize_first_arg_tensor)
      166    0.000    0.000    0.001    0.000 artist.py:1037(set_zorder)
        1    0.000    0.000    0.001    0.001 optimizers.py:835(deserialize)
       20    0.000    0.000    0.001    0.000 function.py:2709(<genexpr>)
       68    0.000    0.000    0.001    0.000 axis.py:1562(convert_units)
        4    0.000    0.000    0.001    0.000 base_layer.py:2141(count_params)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(diff)
      132    0.000    0.000    0.001    0.000 base_layer_utils.py:541(is_subclassed)
       26    0.000    0.000    0.001    0.000 gen_resource_variable_ops.py:1265(var_is_initialized_op)
      208    0.000    0.000    0.001    0.000 tensor_shape.py:1238(unknown_shape)
      156    0.000    0.000    0.001    0.000 transforms.py:2162(transform_non_affine)
        2    0.000    0.000    0.001    0.000 pyplot.py:3029(title)
      190    0.000    0.000    0.001    0.000 ops.py:4596(_current_control_dependencies)
       32    0.000    0.000    0.001    0.000 transforms.py:763(unit)
      205    0.000    0.000    0.000    0.000 serialized_attributes.py:171(<dictcomp>)
        1    0.000    0.000    0.000    0.000 metrics.py:153(__init__)
      286    0.000    0.000    0.000    0.000 text.py:1104(set_x)
      208    0.000    0.000    0.000    0.000 scale.py:117(get_transform)
       39    0.000    0.000    0.000    0.000 axis.py:413(apply_tickdir)
      240    0.000    0.000    0.000    0.000 base_layer.py:1240(<genexpr>)
        4    0.000    0.000    0.000    0.000 tensor_util.py:842(constant_value_as_shape)
       95    0.000    0.000    0.000    0.000 resource_variable_ops.py:97(<listcomp>)
       20    0.000    0.000    0.000    0.000 save_impl.py:296(_restore_child_layer_functions)
        4    0.000    0.000    0.000    0.000 _base.py:3498(set_ylim)
       59    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
       60    0.000    0.000    0.000    0.000 base_layer.py:3005(_object_identifier)
        2    0.000    0.000    0.000    0.000 _base.py:363(<listcomp>)
      378    0.000    0.000    0.000    0.000 ops.py:6625(_restore_name_scope)
      920    0.000    0.000    0.000    0.000 base.py:951(_gather_saveables_for_checkpoint)
        2    0.000    0.000    0.000    0.000 _axes.py:148(set_title)
       32    0.000    0.000    0.000    0.000 _methods.py:228(_ptp)
      532    0.000    0.000    0.000    0.000 re.py:286(_compile)
        6    0.000    0.000    0.000    0.000 layer_utils.py:95(count_params)
     1247    0.000    0.000    0.000    0.000 device_spec.py:431(to_string)
        2    0.000    0.000    0.000    0.000 _base.py:251(_makeline)
       34    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
       38    0.000    0.000    0.000    0.000 axis.py:529(apply_tickdir)
        2    0.000    0.000    0.000    0.000 _datasource.py:517(exists)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2896(colocate_vars_with)
        7    0.000    0.000    0.000    0.000 base_layer.py:2261(_set_dtype_policy)
       68    0.000    0.000    0.000    0.000 units.py:58(_is_natively_supported)
      210    0.000    0.000    0.000    0.000 {method 'set_size' of 'matplotlib.ft2font.FT2Font' objects}
       77    0.000    0.000    0.000    0.000 artist.py:923(set_alpha)
       62    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
       27    0.000    0.000    0.000    0.000 math_ops.py:1855(_may_reduce_to_scalar)
        2    0.000    0.000    0.000    0.000 _base.py:3024(set_xbound)
       32    0.000    0.000    0.000    0.000 axis.py:1620(set_major_formatter)
      276    0.000    0.000    0.000    0.000 text.py:1115(set_y)
       32    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
      234    0.000    0.000    0.000    0.000 font_manager.py:746(set_family)
      252    0.000    0.000    0.000    0.000 base_layer.py:932(<genexpr>)
      126    0.000    0.000    0.000    0.000 optimizer_v2.py:721(__setattr__)
     1082    0.000    0.000    0.000    0.000 object_identity.py:78(unwrapped)
        2    0.000    0.000    0.000    0.000 gridspec.py:133(get_grid_positions)
        8    0.000    0.000    0.000    0.000 _base.py:859(_set_position)
      170    0.000    0.000    0.000    0.000 text.py:949(set_horizontalalignment)
      445    0.000    0.000    0.000    0.000 func_graph.py:489(<genexpr>)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
      160    0.000    0.000    0.000    0.000 transforms.py:1705(__array__)
      120    0.000    0.000    0.000    0.000 weakref.py:438(items)
       16    0.000    0.000    0.000    0.000 spines.py:266(_adjust_location)
      168    0.000    0.000    0.000    0.000 text.py:240(set_rotation_mode)
      245    0.000    0.000    0.000    0.000 lines.py:31(_get_dash_pattern)
      126    0.000    0.000    0.000    0.000 base_layer.py:1157(_set_training_mode)
       32    0.000    0.000    0.000    0.000 function_base.py:1141(diff)
      300    0.000    0.000    0.000    0.000 _collections_abc.py:879(__iter__)
       20    0.000    0.000    0.000    0.000 callbacks.py:1610(__init__)
      233    0.000    0.000    0.000    0.000 lines.py:1228(set_markeredgewidth)
      541    0.000    0.000    0.000    0.000 transforms.py:177(<lambda>)
      104    0.000    0.000    0.000    0.000 transforms.py:2564(get_matrix)
      170    0.000    0.000    0.000    0.000 device_spec.py:376(__eq__)
        8    0.000    0.000    0.000    0.000 text.py:223(_get_xy_display)
      210    0.000    0.000    0.000    0.000 base_layer.py:3001(_trackable_saved_model_saver)
        4    0.000    0.000    0.000    0.000 figure.py:966(set_facecolor)
        2    0.000    0.000    0.000    0.000 axis.py:1945(_get_label)
       12    0.000    0.000    0.000    0.000 axis.py:1504(update_units)
        6    0.000    0.000    0.000    0.000 numeric.py:2167(isclose)
      267    0.000    0.000    0.000    0.000 traceable_stack.py:111(pop_obj)
      258    0.000    0.000    0.000    0.000 backend_bases.py:938(set_foreground)
        6    0.000    0.000    0.000    0.000 tf_utils.py:445(maybe_init_scope)
       40    0.000    0.000    0.000    0.000 text.py:1093(set_position)
        9    0.000    0.000    0.000    0.000 transpiler.py:362(_transformed_factory)
     1085    0.000    0.000    0.000    0.000 nested_structure_coder.py:199(can_encode)
      200    0.000    0.000    0.000    0.000 saveable_object.py:24(__init__)
      410    0.000    0.000    0.000    0.000 __init__.py:2113(type_name)
      379    0.000    0.000    0.000    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
      168    0.000    0.000    0.000    0.000 text.py:933(set_color)
      346    0.000    0.000    0.000    0.000 artist.py:371(get_transform)
        2    0.000    0.000    0.000    0.000 _base.py:563(set_figure)
      235    0.000    0.000    0.000    0.000 lines.py:635(axes)
      180    0.000    0.000    0.000    0.000 constraints.py:285(serialize)
       20    0.000    0.000    0.000    0.000 function_base.py:2144(<listcomp>)
       12    0.000    0.000    0.000    0.000 patches.py:436(set_fill)
       26    0.000    0.000    0.000    0.000 gen_logging_ops.py:23(_assert)
      895    0.000    0.000    0.000    0.000 nested_structure_coder.py:257(can_encode)
      264    0.000    0.000    0.000    0.000 base_layer_utils.py:503(__init__)
       32    0.000    0.000    0.000    0.000 _methods.py:36(_sum)
       32    0.000    0.000    0.000    0.000 _methods.py:78(_clip_dep_invoke_with_casting)
      130    0.000    0.000    0.000    0.000 function.py:1430(forward)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:39(seterr)
       27    0.000    0.000    0.000    0.000 math_ops.py:1850(_has_fully_defined_shape)
      239    0.000    0.000    0.000    0.000 ops.py:5185(__enter__)
  316/308    0.000    0.000    0.000    0.000 spines.py:220(_ensure_position_is_set)
    24/12    0.000    0.000    0.000    0.000 units.py:197(get_converter)
      100    0.000    0.000    0.000    0.000 tf_utils.py:187(<listcomp>)
       82    0.000    0.000    0.000    0.000 base_layer.py:2578(_get_node_attribute_at_index)
       32    0.000    0.000    0.000    0.000 axis.py:1664(set_minor_locator)
     1064    0.000    0.000    0.000    0.000 base_layer.py:1218(name)
       77    0.000    0.000    0.000    0.000 axis.py:197(_set_labelrotation)
     10/8    0.000    0.000    0.000    0.000 transforms.py:1709(__eq__)
       34    0.000    0.000    0.000    0.000 shape_base.py:25(atleast_1d)
      210    0.000    0.000    0.000    0.000 data_structures.py:1059(<lambda>)
      110    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrType}
      490    0.000    0.000    0.000    0.000 weakref.py:125(_commit_removals)
      168    0.000    0.000    0.000    0.000 text.py:1227(set_usetex)
      440    0.000    0.000    0.000    0.000 device_spec.py:350(_components_to_string)
      233    0.000    0.000    0.000    0.000 lines.py:1271(set_markersize)
     3060    0.000    0.000    0.000    0.000 copy.py:190(_deepcopy_atomic)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:898(_from_components)
     1220    0.000    0.000    0.000    0.000 function.py:2566(<genexpr>)
      333    0.000    0.000    0.000    0.000 resource_variable_ops.py:503(device)
      969    0.000    0.000    0.000    0.000 transforms.py:1868(get_matrix)
      214    0.000    0.000    0.000    0.000 transforms.py:2658(get_matrix)
        4    0.000    0.000    0.000    0.000 data_adapter.py:1337(expand_1d)
      165    0.000    0.000    0.000    0.000 nested_structure_coder.py:403(do_encode)
        4    0.000    0.000    0.000    0.000 figure.py:956(set_edgecolor)
      200    0.000    0.000    0.000    0.000 tf_utils.py:281(_is_atomic_nested)
        2    0.000    0.000    0.000    0.000 _base.py:3435(set_ybound)
        2    0.000    0.000    0.000    0.000 _base.py:913(_gen_axes_patch)
       20    0.000    0.000    0.000    0.000 cycler.py:349(by_key)
       21    0.000    0.000    0.000    0.000 __init__.py:149(get)
      895    0.000    0.000    0.000    0.000 nested_structure_coder.py:307(can_encode)
      370    0.000    0.000    0.000    0.000 auto_control_deps_utils.py:54(<listcomp>)
        9    0.000    0.000    0.000    0.000 transpiler.py:190(instantiate)
      631    0.000    0.000    0.000    0.000 device_spec.py:426(__hash__)
      233    0.000    0.000    0.000    0.000 lines.py:1038(set_antialiased)
     1033    0.000    0.000    0.000    0.000 ops.py:4575(control_inputs)
      105    0.000    0.000    0.000    0.000 backend_agg.py:55(get_hinting_flag)
        6    0.000    0.000    0.000    0.000 transforms.py:904(p1)
       10    0.000    0.000    0.000    0.000 _base.py:2045(_process_unit_info)
     2030    0.000    0.000    0.000    0.000 data_structures.py:447(_external_modification)
      803    0.000    0.000    0.000    0.000 tf_stack.py:123(get_filtered_filenames)
       70    0.000    0.000    0.000    0.000 functional.py:816(_trackable_saved_model_saver)
      100    0.000    0.000    0.000    0.000 ops.py:3933(add_to_collection)
      149    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)
      820    0.000    0.000    0.000    0.000 generic_utils.py:167(get_registered_name)
      552    0.000    0.000    0.000    0.000 ops.py:5066(_colocation_stack)
      266    0.000    0.000    0.000    0.000 __init__.py:1860(_str_lower_equal)
       29    0.000    0.000    0.000    0.000 backprop.py:116(get_attr)
      468    0.000    0.000    0.000    0.000 font_manager.py:940(_normalize_font_family)
      756    0.000    0.000    0.000    0.000 context.py:808(scope_name)
     2030    0.000    0.000    0.000    0.000 data_structures.py:431(_non_append_mutation)
     1192    0.000    0.000    0.000    0.000 ops.py:4634(<genexpr>)
       20    0.000    0.000    0.000    0.000 layer_utils.py:224(invalidate_all)
        8    0.000    0.000    0.000    0.000 transforms.py:1509(transform_path)
       52    0.000    0.000    0.000    0.000 base_layer.py:2070(input)
       32    0.000    0.000    0.000    0.000 axis.py:1634(set_minor_formatter)
        4    0.000    0.000    0.000    0.000 _base.py:800(_update_transScale)
       20    0.000    0.000    0.000    0.000 _base.py:2048(_process_single_axis)
        3    0.000    0.000    0.000    0.000 compile_utils.py:382(update_state)
      720    0.000    0.000    0.000    0.000 nested_structure_coder.py:170(<genexpr>)
      239    0.000    0.000    0.000    0.000 ops.py:5193(__exit__)
       15    0.000    0.000    0.000    0.000 uuid.py:106(__init__)
       26    0.000    0.000    0.000    0.000 gen_math_ops.py:5437(logical_not)
     1320    0.000    0.000    0.000    0.000 device_spec.py:38(_as_int_or_none)
       22    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
      117    0.000    0.000    0.000    0.000 node.py:147(map_arguments)
      716    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        5    0.000    0.000    0.000    0.000 save.py:527(_trace_resource_initializers)
      440    0.000    0.000    0.000    0.000 device_spec.py:42(_as_device_str_or_none)
      168    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
      180    0.000    0.000    0.000    0.000 serialized_attributes.py:183(<dictcomp>)
       26    0.000    0.000    0.000    0.000 __init__.py:138(connect)
        7    0.000    0.000    0.000    0.000 base_layer.py:2409(_init_set_name)
        5    0.000    0.000    0.000    0.000 gen_io_ops.py:1520(<listcomp>)
        5    0.000    0.000    0.000    0.000 layer_utils.py:182(print_row)
       16    0.000    0.000    0.000    0.000 _base.py:3087(_validate_converted_limits)
      772    0.000    0.000    0.000    0.000 resource_variable_ops.py:513(name)
      694    0.000    0.000    0.000    0.000 transforms.py:939(get_points)
      976    0.000    0.000    0.000    0.000 artist.py:800(get_visible)
       45    0.000    0.000    0.000    0.000 <string>:24(_replace)
      233    0.000    0.000    0.000    0.000 lines.py:1050(set_color)
       95    0.000    0.000    0.000    0.000 resource_variable_ops.py:100(<listcomp>)
       20    0.000    0.000    0.000    0.000 function_base.py:2164(<listcomp>)
      410    0.000    0.000    0.000    0.000 base_serialization.py:33(__init__)
      145    0.000    0.000    0.000    0.000 stride_tricks.py:262(<listcomp>)
       18    0.000    0.000    0.000    0.000 layer_utils.py:109(<genexpr>)
       50    0.000    0.000    0.000    0.000 function.py:2292(_deterministic_dict_values)
       10    0.000    0.000    0.000    0.000 saving_utils.py:291(_enforce_names_consistency)
        9    0.000    0.000    0.000    0.000 util.py:34(squeeze_or_expand_dimensions)
      233    0.000    0.000    0.000    0.000 lines.py:1213(set_markeredgecolor)
       35    0.000    0.000    0.000    0.000 backend_pdf.py:2085(encode_string)
       25    0.000    0.000    0.000    0.000 serialized_attributes.py:142(new)
       13    0.000    0.000    0.000    0.000 __init__.py:138(deserialize)
       33    0.000    0.000    0.000    0.000 transforms.py:2408(__init__)
      338    0.000    0.000    0.000    0.000 __init__.py:1850(_str_equal)
        6    0.000    0.000    0.000    0.000 _datasource.py:376(_isurl)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:441(__enter__)
        7    0.000    0.000    0.000    0.000 training.py:684(run_eagerly)
      159    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddControlInput}
        7    0.000    0.000    0.000    0.000 tensor_util.py:1017(shape_tensor)
       35    0.000    0.000    0.000    0.000 utils.py:99(layer_uses_training_bool)
        8    0.000    0.000    0.000    0.000 path.py:526(get_extents)
      130    0.000    0.000    0.000    0.000 tape.py:163(should_record_backprop)
      820    0.000    0.000    0.000    0.000 __init__.py:2111(<genexpr>)
      240    0.000    0.000    0.000    0.000 base_layer.py:2468(<genexpr>)
        6    0.000    0.000    0.000    0.000 backend_bases.py:1635(__init__)
       35    0.000    0.000    0.000    0.000 backend_pdf.py:1718(track_characters)
       47    0.000    0.000    0.000    0.000 backend_pdf.py:2223(paint)
      252    0.000    0.000    0.000    0.000 base_layer.py:3234(<genexpr>)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(nonzero)
       10    0.000    0.000    0.000    0.000 utils_impl.py:218(get_variables_dir)
       60    0.000    0.000    0.000    0.000 version_utils.py:125(is_v1_layer_or_model)
       32    0.000    0.000    0.000    0.000 ticker.py:508(__init__)
       33    0.000    0.000    0.000    0.000 transforms.py:2451(get_matrix)
       25    0.000    0.000    0.000    0.000 serialized_attributes.py:174(functions_to_serialize)
       94    0.000    0.000    0.000    0.000 backend_bases.py:958(set_joinstyle)
      530    0.000    0.000    0.000    0.000 text.py:1151(set_text)
       40    0.000    0.000    0.000    0.000 serialization.py:28(get_json_type)
      260    0.000    0.000    0.000    0.000 ops.py:4888(_override_gradient_function)
        8    0.000    0.000    0.000    0.000 transforms.py:957(set)
      495    0.000    0.000    0.000    0.000 nested_structure_coder.py:376(can_encode)
        2    0.000    0.000    0.000    0.000 axis.py:2232(_get_label)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1626(writeInfoDict)
        4    0.000    0.000    0.000    0.000 training.py:2637(reduce_per_replica)
      968    0.000    0.000    0.000    0.000 artist.py:888(get_agg_filter)
      282    0.000    0.000    0.000    0.000 {method '__subclasses__' of 'type' objects}
      130    0.000    0.000    0.000    0.000 function.py:1413(__init__)
        2    0.000    0.000    0.000    0.000 functional.py:825(_map_graph_network)
      721    0.000    0.000    0.000    0.000 ops.py:113(tensor_id)
      254    0.000    0.000    0.000    0.000 _weakrefset.py:81(add)
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._op_def_registry.get}
        5    0.000    0.000    0.000    0.000 signature_def_utils_impl.py:350(op_signature_def)
       42    0.000    0.000    0.000    0.000 transforms.py:2544(__init__)
       82    0.000    0.000    0.000    0.000 transforms.py:376(intervalx)
       40    0.000    0.000    0.000    0.000 weakref.py:165(__setitem__)
        6    0.000    0.000    0.000    0.000 policy.py:488(global_policy)
        3    0.000    0.000    0.000    0.000 resource_variable_ops.py:280(__del__)
        5    0.000    0.000    0.000    0.000 execute.py:281(convert_to_mixed_eager_tensors)
      820    0.000    0.000    0.000    0.000 {method 'join' of 'bytes' objects}
       40    0.000    0.000    0.000    0.000 base_layer.py:1569(metrics)
       12    0.000    0.000    0.000    0.000 ticker.py:1681(nonsingular)
      545    0.000    0.000    0.000    0.000 nested_structure_coder.py:353(can_encode)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:563(all_reduce_fn)
        3    0.000    0.000    0.000    0.000 base_layer.py:2985(_set_save_spec)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1264(writeExtGSTates)
        5    0.000    0.000    0.000    0.000 file_io.py:631(has_atomic_move)
       22    0.000    0.000    0.000    0.000 fromnumeric.py:2324(all)
      120    0.000    0.000    0.000    0.000 encoder.py:104(__init__)
        9    0.000    0.000    0.000    0.000 function_wrappers.py:47(__init__)
       50    0.000    0.000    0.000    0.000 function.py:2893(<genexpr>)
       38    0.000    0.000    0.000    0.000 patches.py:768(_convert_units)
       18    0.000    0.000    0.000    0.000 optimizer_v2.py:621(_assume_mirrored)
      880    0.000    0.000    0.000    0.000 device_spec.py:34(_as_str_or_none)
       66    0.000    0.000    0.000    0.000 lines.py:963(get_markerfacecolor)
       20    0.000    0.000    0.000    0.000 weakref.py:102(__init__)
        7    0.000    0.000    0.000    0.000 policy.py:296(__init__)
       16    0.000    0.000    0.000    0.000 transforms.py:2266(blended_transform_factory)
      120    0.000    0.000    0.000    0.000 graph_view.py:80(_name_slot_variable)
       95    0.000    0.000    0.000    0.000 resource_variable_ops.py:99(<listcomp>)
        2    0.000    0.000    0.000    0.000 transforms.py:1318(contains_branch_seperately)
       65    0.000    0.000    0.000    0.000 serialized_attributes.py:162(functions)
       43    0.000    0.000    0.000    0.000 distribute_lib.py:296(_require_cross_replica_or_default_context_extended)
       82    0.000    0.000    0.000    0.000 transforms.py:385(intervaly)
       16    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2199(batch_reduce_to)
      450    0.000    0.000    0.000    0.000 meta_graph.py:159(mark_op_as_used)
        8    0.000    0.000    0.000    0.000 parse.py:361(urlparse)
        4    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
       66    0.000    0.000    0.000    0.000 lines.py:928(get_markeredgecolor)
       48    0.000    0.000    0.000    0.000 getlimits.py:365(__new__)
        6    0.000    0.000    0.000    0.000 _dill.py:400(__init__)
      268    0.000    0.000    0.000    0.000 functional.py:821(_make_node_key)
       21    0.000    0.000    0.000    0.000 experiment_2.py:46(update_nn)
      595    0.000    0.000    0.000    0.000 artist.py:197(axes)
       10    0.000    0.000    0.000    0.000 transforms.py:274(frozen)
      250    0.000    0.000    0.000    0.000 op_def_library.py:166(_MakeBool)
      255    0.000    0.000    0.000    0.000 execute.py:184(make_bool)
        2    0.000    0.000    0.000    0.000 transforms.py:1298(contains_branch)
       15    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
       70    0.000    0.000    0.000    0.000 markers.py:240(__bool__)
        3    0.000    0.000    0.000    0.000 weights_broadcast_ops.py:136(broadcast_weights)
       82    0.000    0.000    0.000    0.000 tensor_shape.py:268(assert_is_compatible_with)
      133    0.000    0.000    0.000    0.000 tf_inspect.py:283(<listcomp>)
       64    0.000    0.000    0.000    0.000 backend_pdf.py:1606(recordXref)
      330    0.000    0.000    0.000    0.000 nested_structure_coder.py:400(can_encode)
      129    0.000    0.000    0.000    0.000 base_layer.py:2505(<listcomp>)
       94    0.000    0.000    0.000    0.000 backend_bases.py:890(set_capstyle)
      941    0.000    0.000    0.000    0.000 font_manager.py:679(get_family)
       50    0.000    0.000    0.000    0.000 save_impl.py:446(get_training_arg_value)
       65    0.000    0.000    0.000    0.000 optimizer_v2.py:1333(<lambda>)
        8    0.000    0.000    0.000    0.000 spines.py:381(set_position)
      968    0.000    0.000    0.000    0.000 artist.py:868(get_rasterized)
      791    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
      494    0.000    0.000    0.000    0.000 traceable_stack.py:115(peek_top_obj)
      368    0.000    0.000    0.000    0.000 transforms.py:1689(<lambda>)
       70    0.000    0.000    0.000    0.000 transforms.py:2736(get_affine)
      130    0.000    0.000    0.000    0.000 policy.py:461(get_config)
      189    0.000    0.000    0.000    0.000 base_layer.py:2968(_split_out_first_arg)
       43    0.000    0.000    0.000    0.000 tensor_shape.py:988(assert_same_rank)
       20    0.000    0.000    0.000    0.000 callbacks.py:914(__init__)
      190    0.000    0.000    0.000    0.000 saveable_object_util.py:249(<lambda>)
       45    0.000    0.000    0.000    0.000 base_layer.py:2299(_compute_dtype)
      220    0.000    0.000    0.000    0.000 device_spec.py:300(_string_to_components)
        2    0.000    0.000    0.000    0.000 axis.py:1963(_get_offset_text)
       12    0.000    0.000    0.000    0.000 axis.py:2147(get_ticks_position)
       65    0.000    0.000    0.000    0.000 input_layer.py:205(_trackable_saved_model_saver)
        1    0.000    0.000    0.000    0.000 compile_utils.py:298(build)
       50    0.000    0.000    0.000    0.000 base_layer.py:2089(output)
      435    0.000    0.000    0.000    0.000 stride_tricks.py:266(<genexpr>)
        9    0.000    0.000    0.000    0.000 distribute_lib.py:2665(__enter__)
       62    0.000    0.000    0.000    0.000 def_function.py:556(_get_key_for_call_stats)
      190    0.000    0.000    0.000    0.000 resource_variable_ops.py:583(op)
      196    0.000    0.000    0.000    0.000 {method 'index' of 'str' objects}
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:446(__exit__)
       65    0.000    0.000    0.000    0.000 metrics.py:312(_trackable_saved_model_saver)
       30    0.000    0.000    0.000    0.000 ops.py:4760(_attr_scope)
        8    0.000    0.000    0.000    0.000 _base.py:810(get_position)
        2    0.000    0.000    0.000    0.000 axis.py:2252(_get_offset_text)
        2    0.000    0.000    0.000    0.000 _base.py:612(_set_lim_and_transforms)
     1218    0.000    0.000    0.000    0.000 font_manager.py:727(get_size_in_points)
       24    0.000    0.000    0.000    0.000 __init__.py:1633(safe_first_element)
       32    0.000    0.000    0.000    0.000 ticker.py:1994(le)
       10    0.000    0.000    0.000    0.000 signature_def_utils_impl.py:32(build_signature_def)
        6    0.000    0.000    0.000    0.000 math_ops.py:3458(add_n)
       85    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
       30    0.000    0.000    0.000    0.000 base_layer.py:1970(output_mask)
       45    0.000    0.000    0.000    0.000 <string>:16(_make)
       23    0.000    0.000    0.000    0.000 random_seed.py:41(get_seed)
      814    0.000    0.000    0.000    0.000 multiarray.py:707(dot)
       39    0.000    0.000    0.000    0.000 functional.py:522(_flatten_to_reference_inputs)
       20    0.000    0.000    0.000    0.000 copy.py:219(_deepcopy_tuple)
        5    0.000    0.000    0.000    0.000 utils_impl.py:225(get_variables_path)
        5    0.000    0.000    0.000    0.000 generic_utils.py:745(to_snake_case)
       95    0.000    0.000    0.000    0.000 meta_graph.py:230(_op_name)
        5    0.000    0.000    0.000    0.000 execute.py:282(<listcomp>)
       18    0.000    0.000    0.000    0.000 backend_bases.py:2185(mpl_connect)
       30    0.000    0.000    0.000    0.000 base_layer.py:1948(input_mask)
        4    0.000    0.000    0.000    0.000 base_layer.py:1228(supports_masking)
      506    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
       32    0.000    0.000    0.000    0.000 scale.py:718(scale_factory)
       64    0.000    0.000    0.000    0.000 backend_pdf.py:1596(reserveObject)
        9    0.000    0.000    0.000    0.000 distribute_lib.py:2677(__exit__)
      166    0.000    0.000    0.000    0.000 font_manager.py:1030(get_default_size)
       34    0.000    0.000    0.000    0.000 {built-in method zlib.compressobj}
       12    0.000    0.000    0.000    0.000 transforms.py:2221(__init__)
       29    0.000    0.000    0.000    0.000 backprop.py:86(make_attr)
        4    0.000    0.000    0.000    0.000 transforms.py:2720(get_transformed_path_and_affine)
       63    0.000    0.000    0.000    0.000 base_layer.py:2383(_dtype)
        9    0.000    0.000    0.000    0.000 transpiler.py:356(_cached_factory)
        7    0.000    0.000    0.000    0.000 data_adapter.py:1340(_expand_single_1d_tensor)
        5    0.000    0.000    0.000    0.000 utils_impl.py:242(get_assets_dir)
       12    0.000    0.000    0.000    0.000 axis.py:1828(_get_ticks_position)
       60    0.000    0.000    0.000    0.000 signature_serialization.py:233(<lambda>)
      378    0.000    0.000    0.000    0.000 context.py:803(scope_name)
       76    0.000    0.000    0.000    0.000 base_layer.py:1213(dtype)
       40    0.000    0.000    0.000    0.000 weakref.py:109(remove)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1804(nonzero)
      155    0.000    0.000    0.000    0.000 data_structures.py:1033(_is_function)
       21    0.000    0.000    0.000    0.000 backprop_util.py:25(IsTrainable)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:1016(with_rank)
       39    0.000    0.000    0.000    0.000 ops.py:2519(_get_attr_bool)
        1    0.000    0.000    0.000    0.000 compile_utils.py:134(build)
        8    0.000    0.000    0.000    0.000 transforms.py:1520(transform_path_affine)
        6    0.000    0.000    0.000    0.000 transforms.py:278(__array__)
        6    0.000    0.000    0.000    0.000 numeric.py:2244(within_tol)
        4    0.000    0.000    0.000    0.000 transforms.py:1669(set)
     10/8    0.000    0.000    0.000    0.000 transforms.py:2335(__eq__)
      104    0.000    0.000    0.000    0.000 {built-in method math.log10}
        1    0.000    0.000    0.000    0.000 functional.py:340(_lookup_dependency)
       20    0.000    0.000    0.000    0.000 ops.py:407(name)
       70    0.000    0.000    0.000    0.000 {method 'tell' of '_io.BufferedWriter' objects}
        5    0.000    0.000    0.000    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
        5    0.000    0.000    0.000    0.000 training.py:2288(state_updates)
       52    0.000    0.000    0.000    0.000 converter.py:177(__eq__)
      941    0.000    0.000    0.000    0.000 font_manager.py:691(get_style)
       10    0.000    0.000    0.000    0.000 re.py:184(sub)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2225(_batch_reduce_to)
      941    0.000    0.000    0.000    0.000 font_manager.py:704(get_weight)
       45    0.000    0.000    0.000    0.000 _internal.py:830(npy_ctypes_check)
       30    0.000    0.000    0.000    0.000 input_layer.py:195(get_config)
      300    0.000    0.000    0.000    0.000 data_structures.py:377(__getitem__)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2228(<listcomp>)
        5    0.000    0.000    0.000    0.000 tensor_spec.py:144(from_tensor)
        2    0.000    0.000    0.000    0.000 figure.py:976(set_dpi)
       64    0.000    0.000    0.000    0.000 _methods.py:73(_clip_dep_is_byte_swapped)
       10    0.000    0.000    0.000    0.000 layer_serialization.py:132(python_properties)
      340    0.000    0.000    0.000    0.000 generic_utils.py:113(serialize_keras_class_and_config)
       21    0.000    0.000    0.000    0.000 fractions.py:386(reverse)
      227    0.000    0.000    0.000    0.000 keras_tensor.py:43(keras_tensors_enabled)
        3    0.000    0.000    0.000    0.000 def_function.py:102(called_with_tracing)
       63    0.000    0.000    0.000    0.000 fractions.py:84(__new__)
      644    0.000    0.000    0.000    0.000 path.py:197(vertices)
       80    0.000    0.000    0.000    0.000 save_impl.py:634(_get_layer_call_method)
      262    0.000    0.000    0.000    0.000 base_layer.py:1265(input_spec)
      330    0.000    0.000    0.000    0.000 func_graph.py:478(deref)
        4    0.000    0.000    0.000    0.000 base_layer.py:1560(_clear_losses)
       40    0.000    0.000    0.000    0.000 callbacks.py:988(<genexpr>)
      130    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetShouldRecordBackprop}
       10    0.000    0.000    0.000    0.000 base.py:92(__init__)
        3    0.000    0.000    0.000    0.000 confusion_matrix.py:34(remove_squeezable_dimensions)
       15    0.000    0.000    0.000    0.000 distribution_strategy_context.py:60(_push_per_thread_mode)
        6    0.000    0.000    0.000    0.000 iterator_ops.py:888(_component_specs)
      941    0.000    0.000    0.000    0.000 font_manager.py:730(get_file)
      514    0.000    0.000    0.000    0.000 text.py:856(get_text)
        8    0.000    0.000    0.000    0.000 transforms.py:1731(transform_path_affine)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:139(geterr)
        5    0.000    0.000    0.000    0.000 utils_impl.py:101(build_tensor_info_from_op)
       18    0.000    0.000    0.000    0.000 distribute_lib.py:2168(reduce_to)
        2    0.000    0.000    0.000    0.000 transforms.py:1639(__eq__)
      657    0.000    0.000    0.000    0.000 policy.py:453(name)
      234    0.000    0.000    0.000    0.000 functional.py:504(<genexpr>)
       94    0.000    0.000    0.000    0.000 backend_bases.py:868(set_alpha)
      368    0.000    0.000    0.000    0.000 __init__.py:886(<listcomp>)
      200    0.000    0.000    0.000    0.000 saveable_object.py:80(device)
        2    0.000    0.000    0.000    0.000 backend_bases.py:3360(new_figure_manager_given_figure)
        3    0.000    0.000    0.000    0.000 training.py:569(_reset_compile_cache)
      260    0.000    0.000    0.000    0.000 function.py:2067(_get_gradient_function)
       16    0.000    0.000    0.000    0.000 tf_inspect.py:365(isclass)
       32    0.000    0.000    0.000    0.000 axis.py:864(reset_ticks)
        2    0.000    0.000    0.000    0.000 figure.py:1423(_add_axes_internal)
        2    0.000    0.000    0.000    0.000 transforms.py:2093(__eq__)
        2    0.000    0.000    0.000    0.000 functional.py:760(_compute_tensor_usage_count)
        3    0.000    0.000    0.000    0.000 math_grad.py:1225(_ShapesFullySpecifiedAndEqual)
       20    0.000    0.000    0.000    0.000 {built-in method numpy.frompyfunc}
      105    0.000    0.000    0.000    0.000 nested_structure_coder.py:310(do_encode)
      100    0.000    0.000    0.000    0.000 tf_utils.py:289(_convert_object_or_list)
       15    0.000    0.000    0.000    0.000 distribution_strategy_context.py:64(_pop_per_thread_mode)
       50    0.000    0.000    0.000    0.000 smart_cond.py:62(smart_constant_value)
       90    0.000    0.000    0.000    0.000 base_layer.py:672(<listcomp>)
      195    0.000    0.000    0.000    0.000 func_graph.py:779(saveable)
       94    0.000    0.000    0.000    0.000 backend_bases.py:885(set_antialiased)
       48    0.000    0.000    0.000    0.000 {built-in method builtins.__import__}
       90    0.000    0.000    0.000    0.000 nn_ops.py:3294(_tf_deterministic_ops)
        2    0.000    0.000    0.000    0.000 gridspec.py:366(get_subplot_params)
      132    0.000    0.000    0.000    0.000 lines.py:518(get_fillstyle)
      288    0.000    0.000    0.000    0.000 typing.py:1089(__eq__)
        5    0.000    0.000    0.000    0.000 training.py:639(metrics_names)
        5    0.000    0.000    0.000    0.000 io_utils.py:57(path_to_string)
      120    0.000    0.000    0.000    0.000 json_utils.py:50(<genexpr>)
       40    0.000    0.000    0.000    0.000 save_impl.py:426(fn_input_signature)
       24    0.000    0.000    0.000    0.000 spines.py:154(get_patch_transform)
       16    0.000    0.000    0.000    0.000 axis.py:1175(<listcomp>)
        8    0.000    0.000    0.000    0.000 weakref.py:51(_cb)
       26    0.000    0.000    0.000    0.000 weakref.py:44(__new__)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2249(alpha_cmd)
        5    0.000    0.000    0.000    0.000 signature_serialization.py:63(_validate_inputs)
      303    0.000    0.000    0.000    0.000 resource_variable_ops.py:518(shape)
       64    0.000    0.000    0.000    0.000 ticker.py:1984(closeto)
      384    0.000    0.000    0.000    0.000 {method 'rstrip' of 'bytes' objects}
       36    0.000    0.000    0.000    0.000 distribute_lib.py:340(_require_strategy_scope_strategy)
      140    0.000    0.000    0.000    0.000 text.py:25(_wrap_text)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1982(_get_output_canvas)
      941    0.000    0.000    0.000    0.000 font_manager.py:713(get_stretch)
        5    0.000    0.000    0.000    0.000 function.py:1724(_call_with_structured_signature)
       16    0.000    0.000    0.000    0.000 transforms.py:2622(get_matrix)
        6    0.000    0.000    0.000    0.000 losses_utils.py:129(cast_losses_to_common_dtype)
      941    0.000    0.000    0.000    0.000 font_manager.py:698(get_variant)
       40    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        4    0.000    0.000    0.000    0.000 _base.py:2407(<listcomp>)
       12    0.000    0.000    0.000    0.000 _base.py:4215(get_children)
       10    0.000    0.000    0.000    0.000 save.py:196(<dictcomp>)
       16    0.000    0.000    0.000    0.000 compile_utils.py:46(_conform_to_outputs)
      230    0.000    0.000    0.000    0.000 data_structures.py:1039(<lambda>)
       30    0.000    0.000    0.000    0.000 math_ops.py:3849(conj)
       26    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
      130    0.000    0.000    0.000    0.000 function.py:505(stateful_ops)
       32    0.000    0.000    0.000    0.000 __init__.py:1891(method)
       18    0.000    0.000    0.000    0.000 tf_stack.py:53(__enter__)
        2    0.000    0.000    0.000    0.000 transforms.py:817(update_from_path)
      704    0.000    0.000    0.000    0.000 artist.py:1052(sticky_edges)
        2    0.000    0.000    0.000    0.000 _datasource.py:322(__init__)
      371    0.000    0.000    0.000    0.000 backend_pdf.py:278(pdfRepr)
        5    0.000    0.000    0.000    0.000 io_utils.py:40(_path_to_string)
      264    0.000    0.000    0.000    0.000 figure.py:463(_get_dpi)
        6    0.000    0.000    0.000    0.000 _dill.py:145(numpyufunc)
        5    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.HasAtomicMove}
       30    0.000    0.000    0.000    0.000 module.py:132(name_scope)
       10    0.000    0.000    0.000    0.000 functional_saver.py:168(<dictcomp>)
       20    0.000    0.000    0.000    0.000 data_structures.py:902(_list_functions_for_serialization)
       36    0.000    0.000    0.000    0.000 axis.py:1844(<genexpr>)
       48    0.000    0.000    0.000    0.000 pickle.py:262(_getattribute)
       39    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrBool}
      790    0.000    0.000    0.000    0.000 nested_structure_coder.py:330(can_encode)
      100    0.000    0.000    0.000    0.000 tf_utils.py:273(_is_serialized_node_data)
      454    0.000    0.000    0.000    0.000 tf_decorator.py:278(decorator_argspec)
       32    0.000    0.000    0.000    0.000 ticker.py:2001(ge)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:879(from_config)
       36    0.000    0.000    0.000    0.000 distribute_lib.py:1373(experimental_local_results)
      200    0.000    0.000    0.000    0.000 saveable_object.py:61(__init__)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:347(_require_strategy_scope_extended)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1679(__init__)
        5    0.000    0.000    0.000    0.000 save.py:89(__init__)
        5    0.000    0.000    0.000    0.000 signature_serialization.py:224(_list_functions_for_serialization)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1159(_dense_apply_args)
        4    0.000    0.000    0.000    0.000 transforms.py:1485(get_matrix)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
        3    0.000    0.000    0.000    0.000 base_layer.py:1717(add_update)
        5    0.000    0.000    0.000    0.000 functional.py:272(output_shape)
        5    0.000    0.000    0.000    0.000 function_serialization.py:78(serialize_bare_concrete_function)
       85    0.000    0.000    0.000    0.000 function.py:2003(structured_outputs)
        8    0.000    0.000    0.000    0.000 __init__.py:157(_remove_proxy)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1200(alphaState)
        1    0.000    0.000    0.000    0.000 rmsprop.py:98(__init__)
        4    0.000    0.000    0.000    0.000 axis.py:2345(_update_offset_text_position)
       32    0.000    0.000    0.000    0.000 ticker.py:1973(__init__)
      372    0.000    0.000    0.000    0.000 __init__.py:836(<listcomp>)
        2    0.000    0.000    0.000    0.000 posixpath.py:376(abspath)
      312    0.000    0.000    0.000    0.000 _base.py:586(<genexpr>)
        8    0.000    0.000    0.000    0.000 _base.py:903(_set_artist_props)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2294(clip_cmd)
       21    0.000    0.000    0.000    0.000 fractions.py:374(forward)
        9    0.000    0.000    0.000    0.000 ops.py:4962(prevent_feeding)
       35    0.000    0.000    0.000    0.000 cp1252.py:11(encode)
       55    0.000    0.000    0.000    0.000 graph_view.py:176(root)
      233    0.000    0.000    0.000    0.000 lines.py:547(set_markevery)
      301    0.000    0.000    0.000    0.000 path.py:211(codes)
        4    0.000    0.000    0.000    0.000 compile_utils.py:70(_maybe_broadcast_to_outputs)
       18    0.000    0.000    0.000    0.000 converter.py:184(uses)
       95    0.000    0.000    0.000    0.000 ops.py:6008(has_default_graph)
       10    0.000    0.000    0.000    0.000 dtypes.py:215(__reduce__)
       20    0.000    0.000    0.000    0.000 patches.py:458(set_capstyle)
       20    0.000    0.000    0.000    0.000 function_base.py:2120(<listcomp>)
      273    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
        1    0.000    0.000    0.000    0.000 version_utils.py:54(__new__)
      155    0.000    0.000    0.000    0.000 data_structures.py:330(_name_element)
        6    0.000    0.000    0.000    0.000 pickle.py:347(__init__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1613(writeXref)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2172(switch_backends)
        2    0.000    0.000    0.000    0.000 _datasource.py:458(abspath)
       20    0.000    0.000    0.000    0.000 callbacks.py:1650(on_train_begin)
        5    0.000    0.000    0.000    0.000 signature_serialization.py:245(create_signature_map)
       10    0.000    0.000    0.000    0.000 array_ops.py:1443(_get_dtype_from_nested_lists)
       99    0.000    0.000    0.000    0.000 path.py:351(__len__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:217(<listcomp>)
       92    0.000    0.000    0.000    0.000 backend_bases.py:994(get_hatch_path)
      120    0.000    0.000    0.000    0.000 base_layer_utils.py:475(training)
        8    0.000    0.000    0.000    0.000 parse.py:412(urlsplit)
       20    0.000    0.000    0.000    0.000 copy.py:220(<listcomp>)
       14    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:416(parent)
      171    0.000    0.000    0.000    0.000 backend_pdf.py:2115(<genexpr>)
      132    0.000    0.000    0.000    0.000 backend_pdf.py:2360(<listcomp>)
       12    0.000    0.000    0.000    0.000 patches.py:402(set_linestyle)
        6    0.000    0.000    0.000    0.000 _datasource.py:337(_iszip)
        1    0.000    0.000    0.000    0.000 metrics_utils.py:63(update_state_wrapper)
       16    0.000    0.000    0.000    0.000 axis.py:922(_translate_tick_kw)
      140    0.000    0.000    0.000    0.000 {method 'get_width_height' of 'matplotlib.ft2font.FT2Font' objects}
       42    0.000    0.000    0.000    0.000 statistics.py:159(<genexpr>)
        2    0.000    0.000    0.000    0.000 functional.py:623(_validate_graph_inputs_and_outputs)
       50    0.000    0.000    0.000    0.000 utils.py:233(get_training_arg)
        7    0.000    0.000    0.000    0.000 loss_scale.py:46(get)
       22    0.000    0.000    0.000    0.000 patches.py:382(set_linewidth)
      362    0.000    0.000    0.000    0.000 backend_pdf.py:292(pdfRepr)
       30    0.000    0.000    0.000    0.000 input_spec.py:95(get_config)
       63    0.000    0.000    0.000    0.000 node.py:276(is_keras_tensor)
      190    0.000    0.000    0.000    0.000 variables.py:1182(_gather_saveables_for_checkpoint)
       50    0.000    0.000    0.000    0.000 nested_structure_coder.py:356(do_encode)
       50    0.000    0.000    0.000    0.000 function.py:2583(<dictcomp>)
       12    0.000    0.000    0.000    0.000 text.py:535(set_clip_box)
      506    0.000    0.000    0.000    0.000 fromnumeric.py:2232(_any_dispatcher)
       15    0.000    0.000    0.000    0.000 input_spec.py:109(to_tensor_shape)
      120    0.000    0.000    0.000    0.000 base_layer.py:853(compute_mask)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2405(cumsum)
       21    0.000    0.000    0.000    0.000 fractions.py:401(_add)
       10    0.000    0.000    0.000    0.000 functional_saver.py:44(__init__)
        4    0.000    0.000    0.000    0.000 _datasource.py:367(_possible_names)
      129    0.000    0.000    0.000    0.000 typing.py:1019(_abc_negative_cache)
       25    0.000    0.000    0.000    0.000 metrics.py:233(dtype)
      130    0.000    0.000    0.000    0.000 function.py:1436(record)
        9    0.000    0.000    0.000    0.000 inspect.py:643(getfile)
        3    0.000    0.000    0.000    0.000 metrics_utils.py:479(ragged_assert_compatible_and_get_flat_values)
      196    0.000    0.000    0.000    0.000 axis.py:662(formatter)
      226    0.000    0.000    0.000    0.000 cycler.py:227(<genexpr>)
       28    0.000    0.000    0.000    0.000 {built-in method builtins.min}
       77    0.000    0.000    0.000    0.000 axis.py:215(get_tick_padding)
       64    0.000    0.000    0.000    0.000 axis.py:653(locator)
        4    0.000    0.000    0.000    0.000 ticker.py:2222(view_limits)
        2    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
       30    0.000    0.000    0.000    0.000 save_impl.py:72(should_skip_serialization)
        2    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.update_path_extents}
        1    0.000    0.000    0.000    0.000 base_layer.py:1242(stateful)
       18    0.000    0.000    0.000    0.000 distribute_lib.py:257(__enter__)
       19    0.000    0.000    0.000    0.000 tensor_shape.py:1203(__eq__)
        8    0.000    0.000    0.000    0.000 ticker.py:644(get_offset)
        2    0.000    0.000    0.000    0.000 __init__.py:1605(index_of)
       32    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
        6    0.000    0.000    0.000    0.000 losses_utils.py:152(<listcomp>)
        4    0.000    0.000    0.000    0.000 transforms.py:1623(__init__)
       10    0.000    0.000    0.000    0.000 training.py:2609(_get_compile_args)
      258    0.000    0.000    0.000    0.000 base_layer.py:2506(<genexpr>)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2629(<listcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:111(add)
       75    0.000    0.000    0.000    0.000 typing.py:1033(_abc_negative_cache_version)
      648    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
        7    0.000    0.000    0.000    0.000 policy.py:342(_parse_name)
       10    0.000    0.000    0.000    0.000 type_spec.py:304(__reduce__)
       65    0.000    0.000    0.000    0.000 serialized_attributes.py:165(<dictcomp>)
      155    0.000    0.000    0.000    0.000 policy.py:392(variable_dtype)
        4    0.000    0.000    0.000    0.000 axis.py:1010(get_inverted)
        7    0.000    0.000    0.000    0.000 loss_scale.py:421(get)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:276(__init__)
        5    0.000    0.000    0.000    0.000 backend.py:984(unique_object_name)
        4    0.000    0.000    0.000    0.000 figure.py:199(update)
        8    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.get_path_extents}
      189    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
       35    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:37(get_canvas_width_height)
       21    0.000    0.000    0.000    0.000 fractions.py:423(_div)
      190    0.000    0.000    0.000    0.000 resource_variable_ops.py:592(synchronization)
       21    0.000    0.000    0.000    0.000 statistics.py:233(_convert)
        6    0.000    0.000    0.000    0.000 backprop.py:846(__enter__)
      100    0.000    0.000    0.000    0.000 base.py:1014(_list_functions_for_serialization)
       47    0.000    0.000    0.000    0.000 backend_pdf.py:2208(fill)
       20    0.000    0.000    0.000    0.000 training_utils.py:1241(__exit__)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:1173(_restore_slot_variable)
        3    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:226(destroy_resource_op)
       43    0.000    0.000    0.000    0.000 op_def_library.py:532(<genexpr>)
       94    0.000    0.000    0.000    0.000 backend_bases.py:963(set_linewidth)
       74    0.000    0.000    0.000    0.000 backend_pdf.py:2239(linewidth_cmd)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2281(push)
       24    0.000    0.000    0.000    0.000 patches.py:271(get_patch_transform)
      234    0.000    0.000    0.000    0.000 font_manager.py:839(set_file)
        5    0.000    0.000    0.000    0.000 signature_serialization.py:225(<dictcomp>)
       90    0.000    0.000    0.000    0.000 initializers_v2.py:528(get_config)
      312    0.000    0.000    0.000    0.000 _base.py:588(<genexpr>)
        3    0.000    0.000    0.000    0.000 training.py:2750(_is_scalar)
        1    0.000    0.000    0.000    0.000 compile_utils.py:248(_get_loss_object)
        9    0.000    0.000    0.000    0.000 function_wrappers.py:83(__exit__)
       43    0.000    0.000    0.000    0.000 op_def_library.py:416(<genexpr>)
       10    0.000    0.000    0.000    0.000 figure.py:453(_get_axes)
      119    0.000    0.000    0.000    0.000 tf_decorator.py:266(decorated_target)
      190    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1658(writeTrailer)
        3    0.000    0.000    0.000    0.000 compile_utils.py:606(match_dtype_and_rank)
       20    0.000    0.000    0.000    0.000 saving_utils.py:294(_has_name)
        2    0.000    0.000    0.000    0.000 functional.py:659(<listcomp>)
      230    0.000    0.000    0.000    0.000 base.py:1032(_map_resources)
       26    0.000    0.000    0.000    0.000 resource_variable_ops.py:268(__init__)
        4    0.000    0.000    0.000    0.000 transforms.py:909(intervalx)
        6    0.000    0.000    0.000    0.000 layer_utils.py:105(<listcomp>)
       42    0.000    0.000    0.000    0.000 variables.py:22(ld)
       18    0.000    0.000    0.000    0.000 __init__.py:185(process)
        5    0.000    0.000    0.000    0.000 posixpath.py:154(dirname)
        1    0.000    0.000    0.000    0.000 abc.py:132(__new__)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:519(<genexpr>)
        3    0.000    0.000    0.000    0.000 tf_utils.py:192(get_shapes)
        2    0.000    0.000    0.000    0.000 _base.py:2691(set_axisbelow)
       40    0.000    0.000    0.000    0.000 __init__.py:118(__init__)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
       40    0.000    0.000    0.000    0.000 weakref.py:334(__new__)
       20    0.000    0.000    0.000    0.000 saving_utils.py:305(<genexpr>)
       70    0.000    0.000    0.000    0.000 policy.py:406(compute_dtype)
       20    0.000    0.000    0.000    0.000 data_structures.py:161(_attribute_sentinel)
        6    0.000    0.000    0.000    0.000 backprop.py:856(_push_tape)
       32    0.000    0.000    0.000    0.000 scale.py:97(__init__)
       12    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
        2    0.000    0.000    0.000    0.000 training.py:2401(_set_save_spec)
       15    0.000    0.000    0.000    0.000 backend.py:887(name_scope)
        4    0.000    0.000    0.000    0.000 figure.py:651(get_children)
       12    0.000    0.000    0.000    0.000 figure.py:70(as_list)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1704(draw_event)
       15    0.000    0.000    0.000    0.000 uuid.py:280(hex)
       30    0.000    0.000    0.000    0.000 module.py:195(_flatten)
       82    0.000    0.000    0.000    0.000 node.py:215(input_tensors)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:361(convert_n_to_tensor_or_indexed_slices)
        2    0.000    0.000    0.000    0.000 figure.py:168(__init__)
        8    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
       15    0.000    0.000    0.000    0.000 {built-in method from_bytes}
       10    0.000    0.000    0.000    0.000 backend_pdf.py:2253(hatch_cmd)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2624(<listcomp>)
        9    0.000    0.000    0.000    0.000 {built-in method numpy.fromiter}
        5    0.000    0.000    0.000    0.000 variable_scope.py:1400(__init__)
       62    0.000    0.000    0.000    0.000 def_function.py:431(__init__)
      246    0.000    0.000    0.000    0.000 artist.py:580(get_gid)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(unravel_index)
       78    0.000    0.000    0.000    0.000 enum.py:584(__reduce_ex__)
        4    0.000    0.000    0.000    0.000 training.py:2760(_minimum_control_deps)
       20    0.000    0.000    0.000    0.000 training_utils.py:1220(__init__)
      100    0.000    0.000    0.000    0.000 generic_utils.py:188(skip_failed_serialization)
       15    0.000    0.000    0.000    0.000 ops.py:2527(_get_attr_int)
      164    0.000    0.000    0.000    0.000 axis.py:285(get_loc)
       40    0.000    0.000    0.000    0.000 weakref.py:339(__init__)
       74    0.000    0.000    0.000    0.000 {built-in method math.floor}
        7    0.000    0.000    0.000    0.000 version_utils.py:84(should_use_v2)
        3    0.000    0.000    0.000    0.000 losses_utils.py:120(scale_loss_for_distribution)
       64    0.000    0.000    0.000    0.000 axis.py:666(formatter)
      231    0.000    0.000    0.000    0.000 markers.py:246(get_fillstyle)
       28    0.000    0.000    0.000    0.000 artist.py:594(get_snap)
       25    0.000    0.000    0.000    0.000 serialized_attributes.py:157(__init__)
        8    0.000    0.000    0.000    0.000 figure.py:913(get_size_inches)
        2    0.000    0.000    0.000    0.000 functional.py:947(_build_map)
       80    0.000    0.000    0.000    0.000 functional.py:1026(_should_skip_first_node)
        2    0.000    0.000    0.000    0.000 _base.py:2383(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3008(get_xbound)
        2    0.000    0.000    0.000    0.000 _base.py:3419(get_ybound)
        2    0.000    0.000    0.000    0.000 figure.py:1100(_process_projection_requirements)
        8    0.000    0.000    0.000    0.000 figure.py:778(set_canvas)
      280    0.000    0.000    0.000    0.000 text.py:1241(get_usetex)
       32    0.000    0.000    0.000    0.000 ticker.py:1663(raise_if_exceeds)
       20    0.000    0.000    0.000    0.000 function_base.py:2115(<listcomp>)
        3    0.000    0.000    0.000    0.000 activations.py:495(get)
      190    0.000    0.000    0.000    0.000 resource_variable_ops.py:596(aggregation)
        8    0.000    0.000    0.000    0.000 axis.py:834(limit_range_for_scale)
        4    0.000    0.000    0.000    0.000 backend_bases.py:151(__init__)
      168    0.000    0.000    0.000    0.000 text.py:554(set_wrap)
      165    0.000    0.000    0.000    0.000 markers.py:269(get_marker)
       44    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
       20    0.000    0.000    0.000    0.000 graph_view.py:67(_slot_variable_naming_for_optimizer)
        9    0.000    0.000    0.000    0.000 distribution_strategy_context.py:90(get_replica_context)
        4    0.000    0.000    0.000    0.000 _base.py:129(__init__)
      180    0.000    0.000    0.000    0.000 path.py:251(should_simplify)
        6    0.000    0.000    0.000    0.000 posixpath.py:338(normpath)
       40    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
        5    0.000    0.000    0.000    0.000 save.py:103(add_object)
        3    0.000    0.000    0.000    0.000 backprop.py:1051(<listcomp>)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:320(internal_convert_n_to_tensor_or_indexed_slices)
       16    0.000    0.000    0.000    0.000 ticker.py:707(<genexpr>)
        2    0.000    0.000    0.000    0.000 __init__.py:1320(_check_1d)
       14    0.000    0.000    0.000    0.000 core.py:593(filled)
       35    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
        5    0.000    0.000    0.000    0.000 signature_serialization.py:164(_normalize_outputs)
        2    0.000    0.000    0.000    0.000 _base.py:3064(get_xlim)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:437(__init__)
        9    0.000    0.000    0.000    0.000 inspect.py:1495(currentframe)
        4    0.000    0.000    0.000    0.000 _bootlocale.py:23(getpreferredencoding)
       10    0.000    0.000    0.000    0.000 signature_serialization.py:64(<genexpr>)
       65    0.000    0.000    0.000    0.000 data_structures.py:1082(<lambda>)
        2    0.000    0.000    0.000    0.000 _base.py:3475(get_ylim)
        4    0.000    0.000    0.000    0.000 _datasource.py:503(_sanitize_relative_path)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:837(sort)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1297(writeHatches)
       47    0.000    0.000    0.000    0.000 backend_pdf.py:2197(stroke)
      130    0.000    0.000    0.000    0.000 function.py:2293(<genexpr>)
      164    0.000    0.000    0.000    0.000 artist.py:688(get_path_effects)
       20    0.000    0.000    0.000    0.000 weakref.py:288(update)
       36    0.000    0.000    0.000    0.000 enum.py:581(__hash__)
        2    0.000    0.000    0.000    0.000 warnings.py:119(filterwarnings)
       25    0.000    0.000    0.000    0.000 serialized_attributes.py:177(<dictcomp>)
       13    0.000    0.000    0.000    0.000 __init__.py:38(populate_deserializable_objects)
       42    0.000    0.000    0.000    0.000 backprop.py:109(__init__)
        8    0.000    0.000    0.000    0.000 transforms.py:1652(_set)
        2    0.000    0.000    0.000    0.000 {built-in method today}
        4    0.000    0.000    0.000    0.000 training.py:2650(_reduce)
        6    0.000    0.000    0.000    0.000 base_layer_utils.py:281(needs_keras_history)
       19    0.000    0.000    0.000    0.000 backend.py:976(track_variable)
       18    0.000    0.000    0.000    0.000 distribute_lib.py:261(__exit__)
       24    0.000    0.000    0.000    0.000 figure.py:235(_update_this)
       52    0.000    0.000    0.000    0.000 image.py:129(<genexpr>)
      145    0.000    0.000    0.000    0.000 __init__.py:1598(<lambda>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1688(finalize)
       47    0.000    0.000    0.000    0.000 backend_pdf.py:299(__init__)
       16    0.000    0.000    0.000    0.000 compile_utils.py:549(map_to_output_names)
       13    0.000    0.000    0.000    0.000 initializers_v2.py:747(_get_dtype)
      160    0.000    0.000    0.000    0.000 base_layer.py:1255(activity_regularizer)
        6    0.000    0.000    0.000    0.000 tpu.py:208(is_tpu_strategy)
        5    0.000    0.000    0.000    0.000 file_io.py:50(__init__)
        4    0.000    0.000    0.000    0.000 _base.py:2411(<listcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:1651(clf)
       38    0.000    0.000    0.000    0.000 text.py:347(<listcomp>)
      322    0.000    0.000    0.000    0.000 transforms.py:1740(get_affine)
       16    0.000    0.000    0.000    0.000 transforms.py:1768(is_separable)
       16    0.000    0.000    0.000    0.000 parse.py:109(_coerce_args)
       21    0.000    0.000    0.000    0.000 weakref.py:480(pop)
        2    0.000    0.000    0.000    0.000 activations.py:457(deserialize)
        5    0.000    0.000    0.000    0.000 save.py:354(<listcomp>)
      8/2    0.000    0.000    0.000    0.000 functional.py:978(_build_map_helper)
        5    0.000    0.000    0.000    0.000 backend.py:708(get_default_graph_uid_map)
       18    0.000    0.000    0.000    0.000 backprop.py:726(_handle_or_self)
        5    0.000    0.000    0.000    0.000 execute.py:283(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:2994(xaxis_inverted)
       32    0.000    0.000    0.000    0.000 text.py:777(get_fontsize)
       12    0.000    0.000    0.000    0.000 artist.py:719(set_clip_box)
        8    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
       15    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrInt}
       20    0.000    0.000    0.000    0.000 base_layer_utils.py:754(v2_dtype_behavior_enabled)
       55    0.000    0.000    0.000    0.000 base.py:569(_name_based_restores)
       60    0.000    0.000    0.000    0.000 axis.py:649(locator)
      129    0.000    0.000    0.000    0.000 backend_bases.py:1013(get_sketch_params)
        2    0.000    0.000    0.000    0.000 gridspec.py:246(__init__)
       20    0.000    0.000    0.000    0.000 transforms.py:2249(get_matrix)
       48    0.000    0.000    0.000    0.000 pickle.py:275(whichmodule)
       41    0.000    0.000    0.000    0.000 {method 'write' of '_io.TextIOWrapper' objects}
       12    0.000    0.000    0.000    0.000 tf_utils.py:467(<genexpr>)
        6    0.000    0.000    0.000    0.000 base_layer.py:2916(_call_fn_arg_defaults)
        4    0.000    0.000    0.000    0.000 _base.py:142(set_prop_cycle)
        4    0.000    0.000    0.000    0.000 _base.py:2414(<listcomp>)
      128    0.000    0.000    0.000    0.000 ticker.py:220(set_axis)
        1    0.000    0.000    0.000    0.000 training.py:2472(_validate_compile)
        2    0.000    0.000    0.000    0.000 training_utils.py:1946(get_static_batch_size)
       10    0.000    0.000    0.000    0.000 optimizer_v2.py:860(get_config)
       88    0.000    0.000    0.000    0.000 node.py:221(output_tensors)
        9    0.000    0.000    0.000    0.000 function_wrappers.py:74(__enter__)
        6    0.000    0.000    0.000    0.000 backprop.py:851(__exit__)
       66    0.000    0.000    0.000    0.000 backend_agg.py:256(points_to_pixels)
      246    0.000    0.000    0.000    0.000 backend_bases.py:155(open_group)
      100    0.000    0.000    0.000    0.000 tf_utils.py:254(__init__)
       18    0.000    0.000    0.000    0.000 tf_stack.py:71(__exit__)
      246    0.000    0.000    0.000    0.000 backend_bases.py:162(close_group)
      112    0.000    0.000    0.000    0.000 markers.py:313(_set_nothing)
        9    0.000    0.000    0.000    0.000 tf_utils.py:339(is_symbolic_tensor)
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:164(have_all_keras_metadata)
       20    0.000    0.000    0.000    0.000 func_graph.py:664(captures)
       62    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
       16    0.000    0.000    0.000    0.000 backend_pdf.py:2273(fillcolor_cmd)
        6    0.000    0.000    0.000    0.000 base_layer.py:2929(_call_fn_arg_positions)
       35    0.000    0.000    0.000    0.000 functional.py:221(input)
        4    0.000    0.000    0.000    0.000 distribute_lib.py:2658(__init__)
        5    0.000    0.000    0.000    0.000 function.py:2487(signature_summary)
        9    0.000    0.000    0.000    0.000 tensor_util.py:596(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3405(yaxis_inverted)
        2    0.000    0.000    0.000    0.000 figure.py:1959(sca)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2564(__init__)
        4    0.000    0.000    0.000    0.000 transforms.py:2342(_iter_break_from_left_to_right)
       88    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
       15    0.000    0.000    0.000    0.000 six.py:582(iterkeys)
       10    0.000    0.000    0.000    0.000 metrics.py:237(get_config)
       13    0.000    0.000    0.000    0.000 base.py:763(_preload_simple_restoration)
      220    0.000    0.000    0.000    0.000 device_spec.py:260(job)
       16    0.000    0.000    0.000    0.000 ticker.py:1819(__call__)
       24    0.000    0.000    0.000    0.000 cycler.py:225(__iter__)
      145    0.000    0.000    0.000    0.000 stride_tricks.py:202(_broadcast_arrays_dispatcher)
       27    0.000    0.000    0.000    0.000 inspect.py:687(<genexpr>)
        6    0.000    0.000    0.000    0.000 __init__.py:1286(debug)
        1    0.000    0.000    0.000    0.000 losses.py:1857(get)
        3    0.000    0.000    0.000    0.000 initializers_v2.py:521(__init__)
       58    0.000    0.000    0.000    0.000 text.py:832(get_position)
       12    0.000    0.000    0.000    0.000 patches.py:475(set_joinstyle)
       10    0.000    0.000    0.000    0.000 _datasource.py:206(keys)
      268    0.000    0.000    0.000    0.000 fromnumeric.py:2671(_amin_dispatcher)
       64    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
        6    0.000    0.000    0.000    0.000 metrics_utils.py:498(<genexpr>)
        3    0.000    0.000    0.000    0.000 def_function.py:62(called_with_tracing)
      220    0.000    0.000    0.000    0.000 device_spec.py:268(task)
        4    0.000    0.000    0.000    0.000 transforms.py:914(intervaly)
      175    0.000    0.000    0.000    0.000 {method 'get_descent' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 _datasource.py:354(_splitzipext)
       20    0.000    0.000    0.000    0.000 saving_utils.py:306(<genexpr>)
        6    0.000    0.000    0.000    0.000 base_layer.py:1300(input_spec)
       95    0.000    0.000    0.000    0.000 op_def_library.py:665(<listcomp>)
       94    0.000    0.000    0.000    0.000 backend_bases.py:975(set_snap)
        2    0.000    0.000    0.000    0.000 transforms.py:768(null)
      224    0.000    0.000    0.000    0.000 fromnumeric.py:3126(_around_dispatcher)
        8    0.000    0.000    0.000    0.000 _methods.py:44(_any)
      135    0.000    0.000    0.000    0.000 _collections_abc.py:392(__subclasshook__)
      191    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1357(writeGouraudTriangles)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2366(copy_properties)
        3    0.000    0.000    0.000    0.000 math_grad.py:143(_IsScalar)
       29    0.000    0.000    0.000    0.000 backprop.py:75(op_attr_type)
        3    0.000    0.000    0.000    0.000 array_ops.py:852(_check_index)
        5    0.000    0.000    0.000    0.000 compat.py:125(as_str_any)
      220    0.000    0.000    0.000    0.000 device_spec.py:264(replica)
       16    0.000    0.000    0.000    0.000 axis.py:1442(get_minor_ticks)
        2    0.000    0.000    0.000    0.000 _base.py:224(_getdefaults)
        4    0.000    0.000    0.000    0.000 artist.py:1017(set_label)
        1    0.000    0.000    0.000    0.000 losses.py:1838(deserialize)
      145    0.000    0.000    0.000    0.000 data_structures.py:475(_make_storage)
        8    0.000    0.000    0.000    0.000 indexed_slices.py:283(internal_convert_to_tensor_or_indexed_slices)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(iscomplexobj)
        6    0.000    0.000    0.000    0.000 _dill.py:127(ndarraysubclassinstance)
        9    0.000    0.000    0.000    0.000 converter.py:188(call_options)
       95    0.000    0.000    0.000    0.000 saveable_object_util.py:99(_read_variable_closure)
        5    0.000    0.000    0.000    0.000 variable_scope.py:1115(__init__)
        3    0.000    0.000    0.000    0.000 tape.py:45(push_new_tape)
       26    0.000    0.000    0.000    0.000 context.py:1980(shared_name)
       94    0.000    0.000    0.000    0.000 backend_bases.py:967(set_url)
        4    0.000    0.000    0.000    0.000 transforms.py:1632(_init)
       94    0.000    0.000    0.000    0.000 artist.py:633(get_sketch_params)
       40    0.000    0.000    0.000    0.000 save_impl.py:457(_maybe_wrap_with_training_arg)
        6    0.000    0.000    0.000    0.000 backprop.py:869(_pop_tape)
      190    0.000    0.000    0.000    0.000 saveable_object.py:75(optional_restore)
        2    0.000    0.000    0.000    0.000 figure.py:1070(_make_key)
      164    0.000    0.000    0.000    0.000 backend_bases.py:778(restore)
        2    0.000    0.000    0.000    0.000 decorators.py:41(wrapper)
       64    0.000    0.000    0.000    0.000 backend_pdf.py:229(__init__)
        5    0.000    0.000    0.000    0.000 save_options.py:39(__init__)
       20    0.000    0.000    0.000    0.000 optimizer_v2.py:731(get_slot_names)
        6    0.000    0.000    0.000    0.000 input_spec.py:57(__init__)
        6    0.000    0.000    0.000    0.000 base_layer.py:2937(_call_accepts_kwargs)
       55    0.000    0.000    0.000    0.000 base.py:561(_unconditional_checkpoint_dependencies)
        2    0.000    0.000    0.000    0.000 figure.py:513(set_constrained_layout)
        2    0.000    0.000    0.000    0.000 text.py:1042(set_fontsize)
        4    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
       70    0.000    0.000    0.000    0.000 text.py:230(_get_multialignment)
       40    0.000    0.000    0.000    0.000 function_base.py:2116(<genexpr>)
       64    0.000    0.000    0.000    0.000 {method 'write' of '_io.BytesIO' objects}
       20    0.000    0.000    0.000    0.000 callbacks.py:934(set_params)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:1256(_filter_grads)
       95    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:1217(<listcomp>)
      220    0.000    0.000    0.000    0.000 device_spec.py:276(device_index)
      140    0.000    0.000    0.000    0.000 axis.py:342(<genexpr>)
      170    0.000    0.000    0.000    0.000 path.py:230(simplify_threshold)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:539(<listcomp>)
       66    0.000    0.000    0.000    0.000 backend_pdf.py:235(pdfRepr)
        2    0.000    0.000    0.000    0.000 functional.py:845(<setcomp>)
       26    0.000    0.000    0.000    0.000 distribute_lib.py:1991(_container_strategy)
        2    0.000    0.000    0.000    0.000 errors_impl.py:297(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:104(bubble)
       82    0.000    0.000    0.000    0.000 backend_bases.py:1001(get_hatch_color)
       32    0.000    0.000    0.000    0.000 text.py:350(<listcomp>)
       66    0.000    0.000    0.000    0.000 markers.py:310(get_snap_threshold)
        4    0.000    0.000    0.000    0.000 {method 'get_sfnt_table' of 'matplotlib.ft2font.FT2Font' objects}
       30    0.000    0.000    0.000    0.000 base_layer.py:2200(outbound_nodes)
        2    0.000    0.000    0.000    0.000 util.py:1354(saver_with_op_caching)
       30    0.000    0.000    0.000    0.000 tf_inspect.py:40(_convert_maybe_argspec_to_fullargspec)
        2    0.000    0.000    0.000    0.000 figure.py:1907(_set_artist_props)
       82    0.000    0.000    0.000    0.000 backend_bases.py:807(get_clip_path)
       66    0.000    0.000    0.000    0.000 markers.py:263(get_joinstyle)
       10    0.000    0.000    0.000    0.000 re.py:324(_subx)
       35    0.000    0.000    0.000    0.000 {built-in method math.sin}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2265(rgb_cmd)
        3    0.000    0.000    0.000    0.000 init_ops_v2.py:506(__init__)
        8    0.000    0.000    0.000    0.000 patches.py:742(get_path)
       32    0.000    0.000    0.000    0.000 ticker.py:276(set_locs)
      142    0.000    0.000    0.000    0.000 __init__.py:1765(<listcomp>)
       36    0.000    0.000    0.000    0.000 inspect.py:690(<genexpr>)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2288(pop)
        1    0.000    0.000    0.000    0.000 backend.py:217(get_uid)
        3    0.000    0.000    0.000    0.000 tape.py:41(watched_variables)
       82    0.000    0.000    0.000    0.000 backend_bases.py:1009(get_hatch_linewidth)
        2    0.000    0.000    0.000    0.000 gridspec.py:200(__getitem__)
        4    0.000    0.000    0.000    0.000 transforms.py:2127(__init__)
       10    0.000    0.000    0.000    0.000 transforms.py:2377(transform_path_non_affine)
        8    0.000    0.000    0.000    0.000 transforms.py:336(p1)
       35    0.000    0.000    0.000    0.000 {method 'get_bitmap_offset' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 rcsetup.py:163(validate_axisbelow)
       12    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1177(<listcomp>)
        2    0.000    0.000    0.000    0.000 training_utils.py:1912(get_input_shape_and_dtype)
       40    0.000    0.000    0.000    0.000 saving_utils.py:273(_serialize_fn)
      100    0.000    0.000    0.000    0.000 tf_utils.py:257(as_list)
        6    0.000    0.000    0.000    0.000 base_layer.py:3219(<genexpr>)
        7    0.000    0.000    0.000    0.000 util.py:1078(__init__)
        6    0.000    0.000    0.000    0.000 distribution_strategy_context.py:50(__init__)
        3    0.000    0.000    0.000    0.000 backprop.py:822(__init__)
       45    0.000    0.000    0.000    0.000 def_function.py:915(function_spec)
       35    0.000    0.000    0.000    0.000 backend_agg.py:239(get_canvas_width_height)
        2    0.000    0.000    0.000    0.000 _base.py:2389(<listcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:1048(_set_artist_props)
       82    0.000    0.000    0.000    0.000 backend_bases.py:857(get_snap)
       66    0.000    0.000    0.000    0.000 markers.py:304(get_alt_path)
        4    0.000    0.000    0.000    0.000 __init__.py:601(push)
        4    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
        5    0.000    0.000    0.000    0.000 training.py:677(<listcomp>)
       30    0.000    0.000    0.000    0.000 training.py:2563(_assert_compile_was_called)
        1    0.000    0.000    0.000    0.000 metrics_utils.py:98(result_wrapper)
        9    0.000    0.000    0.000    0.000 function_wrappers.py:91(ret)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:325(require_replica_context)
       55    0.000    0.000    0.000    0.000 base.py:553(_update_uid)
       55    0.000    0.000    0.000    0.000 base.py:565(_unconditional_dependency_names)
        2    0.000    0.000    0.000    0.000 backend_agg.py:108(_update_methods)
       12    0.000    0.000    0.000    0.000 axis.py:1412(get_major_locator)
       77    0.000    0.000    0.000    0.000 axis.py:153(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_inline.py:55(draw_if_interactive)
        2    0.000    0.000    0.000    0.000 figure.py:1089(fixlist)
       66    0.000    0.000    0.000    0.000 lines.py:602(get_markevery)
       18    0.000    0.000    0.000    0.000 enum.py:347(__repr__)
       70    0.000    0.000    0.000    0.000 {built-in method math.radians}
        2    0.000    0.000    0.000    0.000 backend_mixed.py:15(__init__)
       47    0.000    0.000    0.000    0.000 backend_pdf.py:323(_paint_path)
       20    0.000    0.000    0.000    0.000 callbacks.py:1042(on_train_begin)
       60    0.000    0.000    0.000    0.000 save_impl.py:574(<listcomp>)
       90    0.000    0.000    0.000    0.000 init_ops_v2.py:62(get_config)
        4    0.000    0.000    0.000    0.000 distribution_strategy_context.py:56(__init__)
       51    0.000    0.000    0.000    0.000 def_function.py:926(_initialize_uninitialized_variables)
       20    0.000    0.000    0.000    0.000 tensor_shape.py:700(__reduce__)
        2    0.000    0.000    0.000    0.000 _base.py:2602(<listcomp>)
       70    0.000    0.000    0.000    0.000 text.py:550(get_wrap)
        2    0.000    0.000    0.000    0.000 text.py:1059(set_fontweight)
       66    0.000    0.000    0.000    0.000 lines.py:896(get_drawstyle)
       24    0.000    0.000    0.000    0.000 cycler.py:138(keys)
      142    0.000    0.000    0.000    0.000 __init__.py:1760(<listcomp>)
       56    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
       13    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       20    0.000    0.000    0.000    0.000 training.py:2544(_maybe_load_initial_epoch_from_ckpt)
       20    0.000    0.000    0.000    0.000 callbacks.py:1679(on_train_end)
        1    0.000    0.000    0.000    0.000 losses.py:213(__init__)
        3    0.000    0.000    0.000    0.000 base_layer.py:418(build)
       12    0.000    0.000    0.000    0.000 tpu.py:209(<lambda>)
       10    0.000    0.000    0.000    0.000 function.py:3676(__init__)
       82    0.000    0.000    0.000    0.000 backend_bases.py:845(get_rgb)
       14    0.000    0.000    0.000    0.000 patches.py:302(set_antialiased)
       32    0.000    0.000    0.000    0.000 ticker.py:532(set_useOffset)
       40    0.000    0.000    0.000    0.000 cycler.py:371(<genexpr>)
        4    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
       63    0.000    0.000    0.000    0.000 {built-in method math.gcd}
       10    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsTensor}
       26    0.000    0.000    0.000    0.000 resource_variable_ops.py:460(_assign_dependencies)
        6    0.000    0.000    0.000    0.000 tape.py:145(pop_tape)
        4    0.000    0.000    0.000    0.000 axis.py:2160(get_minpos)
       92    0.000    0.000    0.000    0.000 backend_bases.py:990(get_hatch)
        8    0.000    0.000    0.000    0.000 mathtext.py:3316(__init__)
       70    0.000    0.000    0.000    0.000 artist.py:793(get_alpha)
       32    0.000    0.000    0.000    0.000 {method 'get_glyph_name' of 'matplotlib.ft2font.FT2Font' objects}
       20    0.000    0.000    0.000    0.000 numbers.py:283(__float__)
        2    0.000    0.000    0.000    0.000 warnings.py:159(_add_filter)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:512(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2240(mpl_disconnect)
       70    0.000    0.000    0.000    0.000 text.py:255(get_rotation_mode)
       10    0.000    0.000    0.000    0.000 weakref.py:389(__delitem__)
       47    0.000    0.000    0.000    0.000 backend_pdf.py:302(pdfRepr)
       30    0.000    0.000    0.000    0.000 activations.py:405(linear)
        1    0.000    0.000    0.000    0.000 losses.py:84(__init__)
       55    0.000    0.000    0.000    0.000 functional.py:791(_assert_weights_created)
        9    0.000    0.000    0.000    0.000 base_layer.py:2489(_set_mask_keras_history_checked)
       15    0.000    0.000    0.000    0.000 checkpoint_options.py:44(__init__)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:916(num_elements)
        6    0.000    0.000    0.000    0.000 _base.py:3241(get_xscale)
        4    0.000    0.000    0.000    0.000 figure.py:1704(<lambda>)
        2    0.000    0.000    0.000    0.000 figure.py:155(__contains__)
       66    0.000    0.000    0.000    0.000 backend_bases.py:660(points_to_pixels)
       82    0.000    0.000    0.000    0.000 backend_bases.py:817(get_dashes)
       12    0.000    0.000    0.000    0.000 text.py:528(_update_clip_properties)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
        2    0.000    0.000    0.000    0.000 contextlib.py:338(__exit__)
        2    0.000    0.000    0.000    0.000 warnings.py:449(__enter__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:2377(finalize)
        8    0.000    0.000    0.000    0.000 policy.py:433(should_cast_variables)
        8    0.000    0.000    0.000    0.000 backend_bases.py:757(copy_properties)
       12    0.000    0.000    0.000    0.000 patches.py:491(set_hatch)
       10    0.000    0.000    0.000    0.000 pickle.py:645(save_bool)
       20    0.000    0.000    0.000    0.000 weakref.py:371(_commit_removals)
        4    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:32(option_image_nocomposite)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:65(validate)
       54    0.000    0.000    0.000    0.000 distribute_lib.py:2970(_local_results)
       18    0.000    0.000    0.000    0.000 distribute_lib.py:242(get_update_replica_id)
      8/4    0.000    0.000    0.000    0.000 transforms.py:2348(<lambda>)
        2    0.000    0.000    0.000    0.000 __init__.py:631(bubble)
       23    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeWatchedVariables}
        8    0.000    0.000    0.000    0.000 node.py:123(parent_nodes)
        2    0.000    0.000    0.000    0.000 functional.py:289(_set_output_names)
       10    0.000    0.000    0.000    0.000 distribution_strategy_context.py:42(__init__)
       50    0.000    0.000    0.000    0.000 def_function.py:906(python_function)
       10    0.000    0.000    0.000    0.000 meta_graph.py:171(<listcomp>)
       47    0.000    0.000    0.000    0.000 variables.py:63(_make_getter)
        4    0.000    0.000    0.000    0.000 array_ops.py:778(<genexpr>)
       16    0.000    0.000    0.000    0.000 _base.py:2548(<genexpr>)
       28    0.000    0.000    0.000    0.000 backend_bases.py:912(set_dashes)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1265(__init__)
        2    0.000    0.000    0.000    0.000 transforms.py:2606(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:170(disconnect)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2017(_clip_dispatcher)
        2    0.000    0.000    0.000    0.000 posixpath.py:64(isabs)
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetNew}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2236(joinstyle_cmd)
       16    0.000    0.000    0.000    0.000 compile_utils.py:596(map_missing_dict_keys)
        6    0.000    0.000    0.000    0.000 layer_utils.py:107(<listcomp>)
       30    0.000    0.000    0.000    0.000 base_layer.py:1223(supports_masking)
       18    0.000    0.000    0.000    0.000 distribute_lib.py:253(__init__)
        3    0.000    0.000    0.000    0.000 distribution_strategy_context.py:154(in_cross_replica_context)
       20    0.000    0.000    0.000    0.000 data_structures.py:747(<dictcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:487(set_tight_layout)
        2    0.000    0.000    0.000    0.000 figure.py:66(__init__)
        9    0.000    0.000    0.000    0.000 _pylab_helpers.py:99(get_active)
       70    0.000    0.000    0.000    0.000 text.py:739(get_color)
       66    0.000    0.000    0.000    0.000 markers.py:298(get_path)
       32    0.000    0.000    0.000    0.000 {method 'get_char_index' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 npyio.py:1339(WriteWrap)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2838(_prod_dispatcher)
        6    0.000    0.000    0.000    0.000 pickle.py:188(__init__)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2242(dash_cmd)
       20    0.000    0.000    0.000    0.000 callbacks.py:944(on_train_begin)
       35    0.000    0.000    0.000    0.000 layer_serialization.py:144(objects_to_serialize)
       30    0.000    0.000    0.000    0.000 base_layer.py:2194(inbound_nodes)
       18    0.000    0.000    0.000    0.000 cache.py:74(_get_key)
        3    0.000    0.000    0.000    0.000 tape.py:51(push_tape)
       10    0.000    0.000    0.000    0.000 tensor_shape.py:1223(__reduce__)
        4    0.000    0.000    0.000    0.000 axis.py:2460(get_minpos)
       28    0.000    0.000    0.000    0.000 axis.py:383(<dictcomp>)
       12    0.000    0.000    0.000    0.000 axis.py:822(get_scale)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:109(set_active)
       66    0.000    0.000    0.000    0.000 markers.py:266(get_capstyle)
       13    0.000    0.000    0.000    0.000 __init__.py:60(__hash__)
        2    0.000    0.000    0.000    0.000 rcsetup.py:123(validate_bool)
        2    0.000    0.000    0.000    0.000 __init__.py:517(__init__)
       15    0.000    0.000    0.000    0.000 training.py:2632(_compile_was_called)
       40    0.000    0.000    0.000    0.000 callbacks.py:758(on_train_end)
        7    0.000    0.000    0.000    0.000 graph_view.py:145(__init__)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:1397(num_replicas_in_sync)
        2    0.000    0.000    0.000    0.000 init_ops.py:105(__init__)
       50    0.000    0.000    0.000    0.000 base.py:621(_object_identifier)
        1    0.000    0.000    0.000    0.000 Experiment.py:208(<listcomp>)
       24    0.000    0.000    0.000    0.000 axis.py:1579(set_units)
       16    0.000    0.000    0.000    0.000 axis.py:788(get_remove_overlapping_locs)
        8    0.000    0.000    0.000    0.000 figure.py:1703(<genexpr>)
        2    0.000    0.000    0.000    0.000 figure.py:544(set_constrained_layout_pads)
        8    0.000    0.000    0.000    0.000 figure.py:140(current_key_axes)
        8    0.000    0.000    0.000    0.000 transforms.py:296(y0)
        4    0.000    0.000    0.000    0.000 core.py:677(getdata)
       34    0.000    0.000    0.000    0.000 shape_base.py:21(_atleast_1d_dispatcher)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       35    0.000    0.000    0.000    0.000 {built-in method math.cos}
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2233(capstyle_cmd)
        3    0.000    0.000    0.000    0.000 losses.py:185(_get_reduction)
        6    0.000    0.000    0.000    0.000 policy.py:517(policy_defaults_to_floatx)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:379(_clip_gradients)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:656(_set_hyper)
        2    0.000    0.000    0.000    0.000 tf_utils.py:420(assert_no_legacy_layers)
       20    0.000    0.000    0.000    0.000 data_structures.py:903(<dictcomp>)
       50    0.000    0.000    0.000    0.000 base.py:633(_tracking_metadata)
       14    0.000    0.000    0.000    0.000 _base.py:2470(_get_axis_list)
        2    0.000    0.000    0.000    0.000 transforms.py:394(width)
        2    0.000    0.000    0.000    0.000 type_check.py:280(iscomplexobj)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1800(_nonzero_dispatcher)
       24    0.000    0.000    0.000    0.000 typing.py:889(__extrahook__)
        8    0.000    0.000    0.000    0.000 {built-in method sys.is_finalizing}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:921(<listcomp>)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:271(__hash__)
       42    0.000    0.000    0.000    0.000 statistics.py:170(_coerce)
       83    0.000    0.000    0.000    0.000 fractions.py:278(denominator)
        2    0.000    0.000    0.000    0.000 compile_utils.py:416(_get_metric_objects)
        5    0.000    0.000    0.000    0.000 signature_serialization.py:215(__iter__)
       15    0.000    0.000    0.000    0.000 base_layer.py:2821(<genexpr>)
       19    0.000    0.000    0.000    0.000 layer_utils.py:273(<listcomp>)
       18    0.000    0.000    0.000    0.000 resource_variable_ops.py:573(constraint)
        4    0.000    0.000    0.000    0.000 dataset_ops.py:4595(<listcomp>)
       24    0.000    0.000    0.000    0.000 spines.py:217(get_path)
        8    0.000    0.000    0.000    0.000 _base.py:2432(tol)
        6    0.000    0.000    0.000    0.000 _base.py:3635(get_yscale)
        4    0.000    0.000    0.000    0.000 figure.py:78(get)
       32    0.000    0.000    0.000    0.000 ticker.py:556(set_useMathText)
        6    0.000    0.000    0.000    0.000 transforms.py:931(minposx)
        2    0.000    0.000    0.000    0.000 gridspec.py:31(__init__)
        6    0.000    0.000    0.000    0.000 weakref.py:73(__eq__)
       44    0.000    0.000    0.000    0.000 {method '__subclasshook__' of 'object' objects}
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
        8    0.000    0.000    0.000    0.000 {built-in method math.copysign}
       35    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:24(flipy)
        2    0.000    0.000    0.000    0.000 training_utils.py:1926(_is_graph_model)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:500(<genexpr>)
        2    0.000    0.000    0.000    0.000 tf_utils.py:434(<listcomp>)
        9    0.000    0.000    0.000    0.000 api.py:119(__init__)
        5    0.000    0.000    0.000    0.000 distribution_strategy_context.py:327(_get_default_replica_context)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:2042(op)
        8    0.000    0.000    0.000    0.000 axis.py:1559(have_units)
        4    0.000    0.000    0.000    0.000 figure.py:152(__call__)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2473(_ptp_dispatcher)
       33    0.000    0.000    0.000    0.000 _collections_abc.py:302(__subclasshook__)
        4    0.000    0.000    0.000    0.000 re.py:231(compile)
       32    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.BytesIO' objects}
       62    0.000    0.000    0.000    0.000 fractions.py:274(numerator)
       20    0.000    0.000    0.000    0.000 save_impl.py:113(<listcomp>)
       30    0.000    0.000    0.000    0.000 layer_serialization.py:34(object_identifier)
        1    0.000    0.000    0.000    0.000 generic_utils.py:283(class_and_config_for_serialized_keras_object)
        9    0.000    0.000    0.000    0.000 generic_utils.py:772(validate_kwargs)
       12    0.000    0.000    0.000    0.000 base_layer_utils.py:303(<genexpr>)
        6    0.000    0.000    0.000    0.000 functional.py:776(<setcomp>)
        6    0.000    0.000    0.000    0.000 base_layer.py:1000(<genexpr>)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:61(all)
        9    0.000    0.000    0.000    0.000 conversion.py:251(_create_custom_vars)
        3    0.000    0.000    0.000    0.000 init_ops.py:1401(_compute_fans)
       12    0.000    0.000    0.000    0.000 math_ops.py:1800(<genexpr>)
       12    0.000    0.000    0.000    0.000 math_ops.py:3500(<genexpr>)
        9    0.000    0.000    0.000    0.000 tf_stack.py:83(reset)
       12    0.000    0.000    0.000    0.000 axis.py:1865(get_label_position)
        8    0.000    0.000    0.000    0.000 _base.py:897(get_axes_locator)
       12    0.000    0.000    0.000    0.000 figure.py:74(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:508(__init__)
       60    0.000    0.000    0.000    0.000 ticker.py:295(_set_locator)
        2    0.000    0.000    0.000    0.000 __init__.py:1294(get_backend)
        2    0.000    0.000    0.000    0.000 __init__.py:573(__init__)
        2    0.000    0.000    0.000    0.000 py3k.py:50(asstr)
        9    0.000    0.000    0.000    0.000 inspect.py:229(istraceback)
        9    0.000    0.000    0.000    0.000 inspect.py:239(isframe)
       18    0.000    0.000    0.000    0.000 _collections_abc.py:367(__subclasshook__)
        2    0.000    0.000    0.000    0.000 warnings.py:468(__exit__)
        4    0.000    0.000    0.000    0.000 codecs.py:185(__init__)
        5    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        6    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRemove}
        4    0.000    0.000    0.000    0.000 data_adapter.py:1412(unpack_x_y_sample_weight)
        1    0.000    0.000    0.000    0.000 training.py:2629(_get_distribution_strategy)
        1    0.000    0.000    0.000    0.000 compile_utils.py:280(__init__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:370(_create_ordered_metrics)
        5    0.000    0.000    0.000    0.000 signature_serialization.py:203(__init__)
        6    0.000    0.000    0.000    0.000 input_spec.py:75(<dictcomp>)
       21    0.000    0.000    0.000    0.000 regularizers.py:360(get)
        3    0.000    0.000    0.000    0.000 init_ops_v2.py:997(_assert_float_dtype)
       18    0.000    0.000    0.000    0.000 resource_variable_ops.py:664(<lambda>)
       10    0.000    0.000    0.000    0.000 array_ops.py:1407(<genexpr>)
        7    0.000    0.000    0.000    0.000 ops.py:6423(<genexpr>)
        9    0.000    0.000    0.000    0.000 tf_stack.py:95(reset)
        2    0.000    0.000    0.000    0.000 _base.py:886(set_axes_locator)
       28    0.000    0.000    0.000    0.000 axis.py:361(<dictcomp>)
       28    0.000    0.000    0.000    0.000 axis.py:372(<dictcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:645(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:44(get_projection_class)
        2    0.000    0.000    0.000    0.000 figure.py:932(get_facecolor)
        2    0.000    0.000    0.000    0.000 figure.py:944(get_dpi)
        4    0.000    0.000    0.000    0.000 transforms.py:1271(_iter_break_from_left_to_right)
        2    0.000    0.000    0.000    0.000 pyplot.py:619(get_fignums)
        6    0.000    0.000    0.000    0.000 __init__.py:626(clear)
        4    0.000    0.000    0.000    0.000 __init__.py:827(__init__)
       22    0.000    0.000    0.000    0.000 fromnumeric.py:2320(_all_dispatcher)
        4    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        9    0.000    0.000    0.000    0.000 inspect.py:253(iscode)
        2    0.000    0.000    0.000    0.000 contextlib.py:271(__init__)
        2    0.000    0.000    0.000    0.000 os.py:794(fsencode)
        1    0.000    0.000    0.000    0.000 enum.py:312(__getattr__)
       12    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       24    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetAdd}
        3    0.000    0.000    0.000    0.000 tmpp97_pviq.py:7(inner_factory)
        4    0.000    0.000    0.000    0.000 training.py:152(is_functional_model_init_params)
        1    0.000    0.000    0.000    0.000 losses.py:107(_set_name_scope)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:635(<genexpr>)
        4    0.000    0.000    0.000    0.000 node.py:116(<listcomp>)
       14    0.000    0.000    0.000    0.000 constraints.py:299(get)
        3    0.000    0.000    0.000    0.000 init_ops_v2.py:1020(__init__)
        1    0.000    0.000    0.000    0.000 base_layer_utils.py:315(is_in_eager_or_tf_function)
       15    0.000    0.000    0.000    0.000 functional.py:255(output)
        1    0.000    0.000    0.000    0.000 data_structures.py:66(_should_wrap_tuple)
        3    0.000    0.000    0.000    0.000 backprop.py:875(__del__)
        3    0.000    0.000    0.000    0.000 def_function.py:80(get_tracing_count)
        3    0.000    0.000    0.000    0.000 math_ops.py:1801(<listcomp>)
       13    0.000    0.000    0.000    0.000 tensor_shape.py:849(__bool__)
        1    0.000    0.000    0.000    0.000 Experiment.py:123(__init__)
       32    0.000    0.000    0.000    0.000 scale.py:43(__init__)
       12    0.000    0.000    0.000    0.000 _base.py:535(get_window_extent)
        8    0.000    0.000    0.000    0.000 figure.py:505(get_constrained_layout)
        6    0.000    0.000    0.000    0.000 widgets.py:34(__init__)
        2    0.000    0.000    0.000    0.000 backend_bases.py:117(get_registered_canvas_class)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1236(__init__)
        2    0.000    0.000    0.000    0.000 gridspec.py:382(<dictcomp>)
        8    0.000    0.000    0.000    0.000 path.py:630(unit_rectangle)
        4    0.000    0.000    0.000    0.000 transforms.py:286(x0)
        4    0.000    0.000    0.000    0.000 __init__.py:1312(is_interactive)
        6    0.000    0.000    0.000    0.000 __init__.py:51(__init__)
       32    0.000    0.000    0.000    0.000 function_base.py:1137(_diff_dispatcher)
        1    0.000    0.000    0.000    0.000 abc.py:135(<setcomp>)
        2    0.000    0.000    0.000    0.000 warnings.py:428(__init__)
        5    0.000    0.000    0.000    0.000 tmpdswf691e.py:7(inner_factory)
        4    0.000    0.000    0.000    0.000 compile_utils.py:98(<lambda>)
        2    0.000    0.000    0.000    0.000 functional.py:938(<listcomp>)
       20    0.000    0.000    0.000    0.000 save_impl.py:117(<dictcomp>)
        5    0.000    0.000    0.000    0.000 saving_utils.py:142(<dictcomp>)
       10    0.000    0.000    0.000    0.000 layer_serialization.py:128(object_identifier)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1045(_init_set_name)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:1246(_distribution_strategy_scope)
        4    0.000    0.000    0.000    0.000 node.py:115(<listcomp>)
       40    0.000    0.000    0.000    0.000 node.py:118(keras_inputs)
        6    0.000    0.000    0.000    0.000 base_layer_utils.py:165(<genexpr>)
        6    0.000    0.000    0.000    0.000 base_layer.py:2629(<genexpr>)
       10    0.000    0.000    0.000    0.000 metric_serialization.py:28(object_identifier)
       10    0.000    0.000    0.000    0.000 backend.py:166(backend)
       12    0.000    0.000    0.000    0.000 scale.py:79(limit_range_for_scale)
        4    0.000    0.000    0.000    0.000 _base.py:232(<genexpr>)
        2    0.000    0.000    0.000    0.000 _base.py:2971(set_axis_on)
        2    0.000    0.000    0.000    0.000 figure.py:96(_entry_from_axes)
       16    0.000    0.000    0.000    0.000 ticker.py:1822(tick_values)
        6    0.000    0.000    0.000    0.000 transforms.py:935(minposy)
       28    0.000    0.000    0.000    0.000 transforms.py:2053(get_matrix)
        2    0.000    0.000    0.000    0.000 transforms.py:400(height)
        2    0.000    0.000    0.000    0.000 __init__.py:1997(__init__)
       12    0.000    0.000    0.000    0.000 _datasource.py:173(_load)
        2    0.000    0.000    0.000    0.000 _datasource.py:332(__del__)
        6    0.000    0.000    0.000    0.000 posixpath.py:135(splitdrive)
        3    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1629(is_string_like)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:268(__lt__)
       10    0.000    0.000    0.000    0.000 save.py:187(<dictcomp>)
        2    0.000    0.000    0.000    0.000 training.py:2475(<genexpr>)
       10    0.000    0.000    0.000    0.000 network_serialization.py:28(object_identifier)
        1    0.000    0.000    0.000    0.000 compile_utils.py:334(_set_metric_names)
        2    0.000    0.000    0.000    0.000 compile_utils.py:419(<listcomp>)
        3    0.000    0.000    0.000    0.000 compile_utils.py:626(get_mask)
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:483(frozen)
        2    0.000    0.000    0.000    0.000 functional.py:626(<setcomp>)
        4    0.000    0.000    0.000    0.000 functional.py:768(<genexpr>)
        5    0.000    0.000    0.000    0.000 base_layer.py:2825(<genexpr>)
        4    0.000    0.000    0.000    0.000 functional.py:141(<genexpr>)
        2    0.000    0.000    0.000    0.000 functional.py:149(<lambda>)
        3    0.000    0.000    0.000    0.000 backend.py:360(global_learning_phase_is_set)
       27    0.000    0.000    0.000    0.000 transpiler.py:203(<genexpr>)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:2901(variable_created_in_scope)
       18    0.000    0.000    0.000    0.000 distribute_lib.py:2947(_reduce_to)
        3    0.000    0.000    0.000    0.000 collective_util.py:50(__init__)
       16    0.000    0.000    0.000    0.000 axis.py:1364(<listcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:1486(<dictcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:928(get_edgecolor)
       12    0.000    0.000    0.000    0.000 figure.py:76(<listcomp>)
       35    0.000    0.000    0.000    0.000 backend_bases.py:637(flipy)
        8    0.000    0.000    0.000    0.000 artist.py:350(is_transform_set)
        4    0.000    0.000    0.000    0.000 artist.py:1033(get_zorder)
        2    0.000    0.000    0.000    0.000 __init__.py:2148(_check_getitem)
        6    0.000    0.000    0.000    0.000 pickle.py:195(end_framing)
        2    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
        6    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1493(writeImages)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1556(writePathCollectionTemplates)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:508(<dictcomp>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:37(__init__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:270(_should_broadcast)
        6    0.000    0.000    0.000    0.000 compile_utils.py:398(<genexpr>)
        5    0.000    0.000    0.000    0.000 save_options.py:98(_validate_namespace_whitelist)
        8    0.000    0.000    0.000    0.000 functional.py:905(<lambda>)
        1    0.000    0.000    0.000    0.000 layer_utils.py:168(<listcomp>)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:514(<listcomp>)
        3    0.000    0.000    0.000    0.000 tape.py:38(__init__)
        4    0.000    0.000    0.000    0.000 backend_agg.py:272(option_image_nocomposite)
        2    0.000    0.000    0.000    0.000 _base.py:604(_request_autoscale_view)
        8    0.000    0.000    0.000    0.000 _base.py:1202(get_aspect)
        2    0.000    0.000    0.000    0.000 __init__.py:19(get_projection_class)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2582(notify_axes_change)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1679(_idle_draw_cntx)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1687(is_saving)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:29(get_fig_manager)
        2    0.000    0.000    0.000    0.000 gridspec.py:204(_normalize)
        4    0.000    0.000    0.000    0.000 lines.py:1447(is_dashed)
       12    0.000    0.000    0.000    0.000 transforms.py:1284(depth)
        2    0.000    0.000    0.000    0.000 _datasource.py:225(__getitem__)
       16    0.000    0.000    0.000    0.000 parse.py:98(_noop)
        2    0.000    0.000    0.000    0.000 __init__.py:586(update)
        6    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
        2    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        2    0.000    0.000    0.000    0.000 {method 'utcoffset' of 'datetime.datetime' objects}
        1    0.000    0.000    0.000    0.000 experiment_2.py:26(NeuralNetwork2)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1533(writeMarkers)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1632(is_date)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:601(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1273(_write_soft_mask_groups)
        2    0.000    0.000    0.000    0.000 compile_utils.py:40(build)
        1    0.000    0.000    0.000    0.000 compile_utils.py:151(_create_metrics)
        6    0.000    0.000    0.000    0.000 compile_utils.py:399(<genexpr>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:480(_should_broadcast)
        3    0.000    0.000    0.000    0.000 compile_utils.py:631(apply_mask)
        5    0.000    0.000    0.000    0.000 signature_serialization.py:206(_add_signature)
        5    0.000    0.000    0.000    0.000 signature_serialization.py:212(__getitem__)
        5    0.000    0.000    0.000    0.000 layer_serialization.py:147(functions_to_serialize)
        3    0.000    0.000    0.000    0.000 node.py:72(<lambda>)
        3    0.000    0.000    0.000    0.000 tf_utils.py:194(<lambda>)
        1    0.000    0.000    0.000    0.000 generic_utils.py:199(get_registered_object)
        5    0.000    0.000    0.000    0.000 functional.py:355(_should_compute_mask)
        4    0.000    0.000    0.000    0.000 distribute_lib.py:2745(strategy)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2976(_num_replicas_in_sync)
        5    0.000    0.000    0.000    0.000 function.py:1969(inputs)
        1    0.000    0.000    0.000    0.000 function.py:3127(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:242(_setdefaults)
        4    0.000    0.000    0.000    0.000 _base.py:321(<genexpr>)
        2    0.000    0.000    0.000    0.000 _base.py:2133(use_sticky_edges)
        4    0.000    0.000    0.000    0.000 _base.py:2405(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3884(set_navigate)
        2    0.000    0.000    0.000    0.000 _base.py:3900(set_navigate_mode)
        2    0.000    0.000    0.000    0.000 figure.py:2059(add_axobserver)
        2    0.000    0.000    0.000    0.000 figure.py:1073(fixitems)
        4    0.000    0.000    0.000    0.000 figure.py:483(get_tight_layout)
        4    0.000    0.000    0.000    0.000 backend_bases.py:895(set_clip_rectangle)
        2    0.000    0.000    0.000    0.000 gridspec.py:532(num2)
        2    0.000    0.000    0.000    0.000 gridspec.py:113(set_height_ratios)
        2    0.000    0.000    0.000    0.000 patches.py:290(get_facecolor)
        2    0.000    0.000    0.000    0.000 artist.py:827(get_clip_path)
        2    0.000    0.000    0.000    0.000 artist.py:961(set_in_layout)
        4    0.000    0.000    0.000    0.000 __init__.py:828(<dictcomp>)
        2    0.000    0.000    0.000    0.000 npyio.py:1205(_savetxt_dispatcher)
        2    0.000    0.000    0.000    0.000 _iotools.py:46(_is_string_like)
        2    0.000    0.000    0.000    0.000 type_check.py:207(_is_type_dispatcher)
        2    0.000    0.000    0.000    0.000 multiarray.py:990(unravel_index)
        2    0.000    0.000    0.000    0.000 parse.py:394(_checknetloc)
        1    0.000    0.000    0.000    0.000 enum.py:28(_is_dunder)
        1    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        1    0.000    0.000    0.000    0.000 experiment_2.py:45(Experiment2)
        1    0.000    0.000    0.000    0.000 tmp_c03j0ll.py:7(inner_factory)
        4    0.000    0.000    0.000    0.000 compile_utils.py:93(_broadcast_fn)
        2    0.000    0.000    0.000    0.000 distributed_training_utils.py:439(is_tpu_strategy)
        1    0.000    0.000    0.000    0.000 policy.py:444(loss_scale)
        4    0.000    0.000    0.000    0.000 node.py:74(<lambda>)
        3    0.000    0.000    0.000    0.000 base_layer.py:2442(_handle_activity_regularization)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:881(value_type)
        2    0.000    0.000    0.000    0.000 figure.py:97(<dictcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:528(num2)
        2    0.000    0.000    0.000    0.000 gridspec.py:549(get_gridspec)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:78(has_fignum)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:115(<listcomp>)
        2    0.000    0.000    0.000    0.000 patches.py:286(get_edgecolor)
        6    0.000    0.000    0.000    0.000 gridspec.py:67(get_geometry)
        4    0.000    0.000    0.000    0.000 transforms.py:2085(inverted)
        2    0.000    0.000    0.000    0.000 artist.py:1013(get_label)
        8    0.000    0.000    0.000    0.000 artist.py:1201(mouseover)
        6    0.000    0.000    0.000    0.000 multiarray.py:635(result_type)
        2    0.000    0.000    0.000    0.000 contextlib.py:17(__enter__)
        8    0.000    0.000    0.000    0.000 __init__.py:537(__missing__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:521(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:525(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:529(<genexpr>)
        1    0.000    0.000    0.000    0.000 fractions.py:504(__trunc__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:421(_get_metric_object)
        5    0.000    0.000    0.000    0.000 file_io.py:193(__enter__)
        3    0.000    0.000    0.000    0.000 tensor_util.py:499(<listcomp>)
        2    0.000    0.000    0.000    0.000 _subplots.py:117(get_subplotspec)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2597(destroy)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1929(draw)
        2    0.000    0.000    0.000    0.000 gridspec.py:93(set_width_ratios)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2401(_cumsum_dispatcher)
        6    0.000    0.000    0.000    0.000 numeric.py:2163(_isclose_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:833(_sort_dispatcher)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}


