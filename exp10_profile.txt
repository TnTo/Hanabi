         991410035 function calls (961514344 primitive calls) in 6113.263 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        2    0.002    0.001 6105.027 3052.513 Experiment.py:191(run)
       50    0.005    0.000 5053.033  101.061 Experiment.py:184(train)
       50    0.478    0.010 5053.028  101.061 Experiment.py:113(train)
105089/104993    2.732    0.000 4247.216    0.040 def_function.py:757(__call__)
105089/104993    0.858    0.000 4239.846    0.040 def_function.py:798(_call)
105064/104968    0.808    0.000 4237.396    0.040 function.py:2825(__call__)
   105089    0.986    0.000 4210.799    0.040 function.py:1827(_filtered_call)
   105113    2.411    0.000 4207.150    0.040 function.py:1850(_call_flat)
   105113    3.968    0.000 4197.185    0.040 function.py:509(call)
   104753    1.002    0.000 4194.674    0.040 execute.py:33(quick_execute)
   104753 4193.476    0.040 4193.476    0.040 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
       50    0.002    0.000 3374.840   67.497 training.py:106(_method_wrapper)
       50    1.401    0.028 3374.837   67.497 training.py:824(fit)
    39970    1.965    0.000 2582.545    0.065 training.py:126(_method_wrapper)
    39970    4.533    0.000 2551.210    0.064 training.py:1486(predict)
       50    0.002    0.000 1668.616   33.372 function_base.py:2063(__call__)
       50    0.592    0.012 1668.614   33.372 function_base.py:2154(_vectorize_call)
    26711    1.768    0.000 1668.017    0.062 Experiment.py:101(Q)
    40020    1.433    0.000 1192.328    0.030 data_adapter.py:1073(__init__)
    40020    1.609    0.000 1177.764    0.029 data_adapter.py:254(__init__)
   120060    4.435    0.000 1030.783    0.009 dataset_ops.py:3186(__init__)
230394/229578    3.716    0.000 1020.060    0.004 function.py:3147(_maybe_define_function)
125160/124968    2.332    0.000 1000.207    0.008 function.py:2870(_get_concrete_function_garbage_collected)
   120060    0.505    0.000  998.097    0.008 function.py:2931(get_concrete_function)
120424/120304    3.736    0.000  982.902    0.008 function.py:3047(_create_graph_function)
       52    0.637    0.012  975.578   18.761 Experiment.py:171(play_episode)
    26832    0.754    0.000  963.294    0.036 Experiment.py:82(move)
120424/120304    7.266    0.000  917.160    0.008 func_graph.py:801(func_graph_from_py_func)
    80040    0.318    0.000  561.322    0.007 dataset_ops.py:1557(map)
    40020    0.127    0.000  536.856    0.013 dataset_ops.py:1704(flat_map)
    40020    1.300    0.000  536.729    0.013 dataset_ops.py:4119(__init__)
   120060    0.779    0.000  495.827    0.004 dataset_ops.py:3358(wrapper_fn)
   120060    1.377    0.000  489.842    0.004 dataset_ops.py:3292(_wrapper_helper)
120103/120064    0.953    0.000  473.257    0.004 api.py:247(wrapper)
120150/120076    1.903    0.000  471.140    0.004 api.py:417(converted_call)
   685286  450.538    0.001  453.223    0.001 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
120131/120088    0.501    0.000  445.451    0.004 api.py:330(_call_unconverted)
443831/443511   38.490    0.000  402.506    0.001 op_def_library.py:299(_apply_op_helper)
536195/404892    1.081    0.000  401.396    0.001 dispatch.py:198(wrapper)
    81837    0.680    0.000  374.628    0.005 data_adapter.py:1135(enumerate_epochs)
  2179312    0.805    0.000  374.295    0.000 {built-in method builtins.iter}
    40020    0.197    0.000  373.484    0.009 dataset_ops.py:403(__iter__)
    40029    0.561    0.000  373.226    0.009 iterator_ops.py:648(__init__)
    40020    1.259    0.000  371.574    0.009 iterator_ops.py:700(_create_iterator)
    40020    0.205    0.000  346.158    0.009 gen_dataset_ops.py:2987(make_iterator)
966696/966132    9.225    0.000  319.606    0.000 func_graph.py:528(_create_op_internal)
   967332   12.953    0.000  307.216    0.000 ops.py:3418(_create_op_internal)
    40020    1.427    0.000  304.146    0.008 dataset_ops.py:4031(__init__)
    40020    0.773    0.000  293.601    0.007 data_adapter.py:330(slice_batch_indices)
    40020    0.667    0.000  290.719    0.007 data_adapter.py:373(slice_inputs)
    40020    1.434    0.000  256.858    0.006 dataset_ops.py:4069(__init__)
   967332   24.044    0.000  205.919    0.000 ops.py:1839(__init__)
1949412/1948817    7.180    0.000  196.364    0.000 ops.py:1448(convert_to_tensor)
   731948    1.467    0.000  175.998    0.000 constant_op.py:166(constant)
   731948    7.630    0.000  174.531    0.000 constant_op.py:267(_constant_impl)
   120424    8.635    0.000  165.975    0.001 auto_control_deps.py:301(__exit__)
671325/666177    4.696    0.000  153.119    0.000 nest.py:573(map_structure)
   968664    5.604    0.000  141.950    0.000 auto_control_deps.py:519(_get_resource_inputs)
    80039    0.238    0.000  136.832    0.002 array_ops.py:1028(slice)
    80039    0.801    0.000  136.595    0.002 gen_array_ops.py:9212(_slice)
671325/666177    1.133    0.000  133.761    0.000 nest.py:635(<listcomp>)
   966668    5.749    0.000  118.137    0.000 auto_control_deps_utils.py:89(get_read_write_resource_inputs)
   200195    0.225    0.000   94.694    0.000 constant_op.py:335(_constant_tensor_conversion_function)
    40020    0.210    0.000   93.682    0.002 data_adapter.py:315(permutation)
    40023    0.785    0.000   93.314    0.002 math_ops.py:1731(range)
   967332   15.290    0.000   89.841    0.000 ops.py:1764(_create_c_op)
  1293189    7.756    0.000   87.422    0.000 ops.py:2471(get_attr)
   240848    5.128    0.000   86.967    0.000 func_graph.py:1148(_get_defun_inputs)
   120424    0.220    0.000   84.333    0.001 func_graph.py:1136(_get_defun_inputs_from_args)
   491553    0.695    0.000   81.452    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
       13    0.142    0.011   78.217    6.017 _dill.py:253(dump)
       13    0.000    0.000   78.074    6.006 _dill.py:414(dump)
       13    0.000    0.000   78.074    6.006 pickle.py:398(dump)
14695920/13   26.784    0.000   78.074    6.006 pickle.py:457(save)
127414/37    0.181    0.000   78.070    2.110 pickle.py:774(save_list)
127414/37    0.607    0.000   78.069    2.110 pickle.py:787(_batch_appends)
722845/2267    3.724    0.000   77.994    0.034 _dill.py:903(save_module_dict)
722845/2267    1.307    0.000   77.973    0.034 pickle.py:814(save_dict)
722845/2267    5.241    0.000   77.959    0.034 pickle.py:827(_batch_setitems)
575274/10552    2.677    0.000   77.823    0.007 pickle.py:539(save_reduce)
       12    0.023    0.002   74.640    6.220 Experiment.py:226(save_status)
   120474    0.549    0.000   67.856    0.001 func_graph.py:930(convert)
10499356/6653388    7.148    0.000   67.257    0.000 {built-in method builtins.next}
   162684    3.394    0.000   67.100    0.000 graph_only_ops.py:29(graph_placeholder)
   120474    0.796    0.000   66.011    0.001 auto_control_deps.py:182(mark_as_return)
   168924    0.927    0.000   65.838    0.000 array_ops.py:244(identity)
   168924    1.056    0.000   63.213    0.000 gen_array_ops.py:3973(identity)
  1293189   56.211    0.000   61.703    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
   120424    2.371    0.000   61.218    0.001 function.py:1460(__init__)
    64490    0.202    0.000   59.152    0.001 callbacks.py:281(_call_batch_hook)
    64490    0.774    0.000   58.405    0.001 callbacks.py:332(_call_batch_hook_helper)
    32245    0.187    0.000   56.503    0.002 callbacks.py:432(on_train_batch_end)
    32245    0.175    0.000   56.183    0.002 callbacks.py:302(_call_batch_end_hook)
    40020    0.132    0.000   55.329    0.001 data_adapter.py:393(grab_batch)
    40070    0.168    0.000   54.418    0.001 data_adapter.py:394(<lambda>)
    40070    0.301    0.000   54.142    0.001 array_ops.py:4589(gather)
    40070    0.696    0.000   53.533    0.001 gen_array_ops.py:3790(gather_v2)
    34092    3.390    0.000   53.105    0.002 generic_utils.py:528(update)
    32245    0.109    0.000   51.340    0.002 callbacks.py:960(on_train_batch_end)
    32245    0.482    0.000   51.232    0.002 callbacks.py:999(_batch_update_progbar)
5652533/3731861    2.993    0.000   50.879    0.000 contextlib.py:79(__enter__)
    80039    0.201    0.000   47.993    0.001 dataset_ops.py:569(from_tensors)
    80039    0.903    0.000   47.792    0.001 dataset_ops.py:2980(__init__)
   120424    0.941    0.000   47.298    0.000 function.py:597(__init__)
   120424    7.151    0.000   45.686    0.000 function.py:412(__init__)
    40037    0.173    0.000   43.538    0.001 array_ops.py:59(reshape)
    40037    0.362    0.000   42.141    0.001 gen_array_ops.py:8143(reshape)
   560278    6.448    0.000   40.890    0.000 dataset_ops.py:186(__init__)
   360433   11.098    0.000   40.766    0.000 tensor_util.py:360(make_tensor_proto)
  1127556    7.914    0.000   39.688    0.000 func_graph.py:365(inner_cm)
    40020    0.145    0.000   38.418    0.001 dataset_ops.py:606(from_tensor_slices)
    40020    0.821    0.000   38.272    0.001 dataset_ops.py:2999(__init__)
    40019    0.120    0.000   38.239    0.001 dataset_ops.py:1002(concatenate)
    40019    0.848    0.000   38.119    0.001 dataset_ops.py:3504(__init__)
    34104    0.429    0.000   37.760    0.001 iostream.py:334(flush)
    40023    0.506    0.000   33.029    0.001 gen_math_ops.py:7268(_range)
74072022/74070522   20.086    0.000   32.776    0.000 {built-in method builtins.isinstance}
   120606    4.627    0.000   30.485    0.000 func_graph.py:165(__init__)
    80039    0.624    0.000   29.709    0.000 gen_dataset_ops.py:6595(tensor_dataset)
   967332    9.198    0.000   29.709    0.000 ops.py:3521(_create_op_helper)
  3422111   28.936    0.000   28.936    0.000 {method 'acquire' of '_thread.lock' objects}
5652533/3736426    9.045    0.000   28.787    0.000 contextlib.py:85(__exit__)
    34104    0.305    0.000   28.180    0.001 threading.py:533(wait)
    40020    0.810    0.000   28.156    0.001 iterator_ops.py:531(__del__)
    40019    0.566    0.000   27.853    0.001 gen_dataset_ops.py:853(concatenate_dataset)
    34002    0.363    0.000   27.752    0.001 threading.py:263(wait)
  1571891    1.295    0.000   27.424    0.000 nest.py:536(pack_sequence_as)
  1611915    4.629    0.000   26.949    0.000 nest.py:496(_pack_sequence_as)
  1209555    2.201    0.000   26.548    0.000 tf_stack.py:131(extract_stack)
   320160    0.629    0.000   26.455    0.000 dataset_ops.py:2956(__init__)
    40020    0.510    0.000   26.359    0.001 gen_dataset_ops.py:6664(tensor_slice_dataset)
   967332   15.322    0.000   25.447    0.000 ops.py:1737(_NodeDef)
   563778    2.974    0.000   25.074    0.000 func_graph.py:362(as_default)
   967332   24.755    0.000   24.755    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
    40020    0.205    0.000   24.123    0.001 gen_dataset_ops.py:1262(delete_iterator)
  1209555   23.830    0.000   23.845    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
  5652533    9.517    0.000   22.652    0.000 contextlib.py:157(helper)
   120618    9.991    0.000   21.325    0.000 ops.py:2862(__init__)
   241064    0.910    0.000   20.899    0.000 func_graph.py:69(convert_structure_to_signature)
5838838/5731591   11.603    0.000   20.415    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
  1133748    6.134    0.000   19.967    0.000 ops.py:5580(get_controller)
   561276    4.036    0.000   19.798    0.000 base.py:800(_track_trackable)
   120400    0.911    0.000   19.680    0.000 function.py:3632(decorated)
    40020    0.188    0.000   19.087    0.000 gen_dataset_ops.py:2003(flat_map_dataset)
  2899656    3.333    0.000   18.742    0.000 object_identity.py:195(update)
    40020    0.535    0.000   17.753    0.000 dataset_ops.py:356(_apply_options)
   200100    0.319    0.000   17.167    0.000 dataset_ops.py:2967(__init__)
  6088501    3.642    0.000   17.105    0.000 nest.py:274(flatten)
   523501    3.435    0.000   17.009    0.000 ops.py:3868(_get_op_def)
563794/563793    1.347    0.000   16.861    0.000 tf_contextlib.py:25(contextmanager)
   244914    1.049    0.000   16.780    0.000 iostream.py:195(schedule)
    80040    0.161    0.000   16.646    0.000 dataset_ops.py:1128(repeat)
        1    0.002    0.002   16.626   16.626 Experiment.py:204(save)
    80040    0.919    0.000   16.484    0.000 dataset_ops.py:3552(__init__)
   232110    3.060    0.000   15.838    0.000 function.py:2977(_cache_key)
 14591514    5.314    0.000   15.563    0.000 ops.py:2376(type)
  1635725    4.338    0.000   15.561    0.000 Hanabi.py:159(toarray)
2581506/1979350    3.857    0.000   15.287    0.000 {built-in method builtins.any}
21541985/21538301   12.006    0.000   14.993    0.000 {built-in method builtins.getattr}
   120400    1.470    0.000   14.957    0.000 function.py:2767(__init__)
   565984    1.617    0.000   14.877    0.000 ops.py:6458(__enter__)
  2899656   10.103    0.000   14.587    0.000 object_identity.py:196(<listcomp>)
    40020    0.197    0.000   14.468    0.000 dataset_ops.py:920(range)
   244914   14.356    0.000   14.356    0.000 socket.py:357(send)
    40020    0.648    0.000   14.272    0.000 dataset_ops.py:3570(__init__)
  5427085    2.945    0.000   14.220    0.000 <__array_function__ internals>:2(concatenate)
    40020    0.524    0.000   14.073    0.000 dataset_ops.py:4375(__init__)
  6345491   11.632    0.000   13.830    0.000 dtypes.py:606(as_dtype)
    40020    0.203    0.000   13.823    0.000 gen_dataset_ops.py:3036(map_dataset)
    66631    0.973    0.000   13.665    0.000 Hanabi.py:259(toarray)
    68133    0.316    0.000   13.641    0.000 Hanabi.py:371(save)
  1360694    1.684    0.000   13.521    0.000 {built-in method _functools.reduce}
  6088501   13.151    0.000   13.463    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
   972219    5.800    0.000   13.447    0.000 ops.py:2312(inputs)
   222286    0.617    0.000   13.421    0.000 tf_utils.py:513(to_numpy_or_python_type)
    40020    0.177    0.000   13.118    0.000 gen_dataset_ops.py:5057(parallel_map_dataset_v2)
   967228    1.321    0.000   12.888    0.000 ops.py:386(_create_with_tf_output)
  5652533   10.364    0.000   12.788    0.000 contextlib.py:59(__init__)
       12    0.000    0.000   12.680    1.057 training.py:1918(save)
       12    0.000    0.000   12.679    1.057 save.py:47(save_model)
  1021700    0.980    0.000   12.679    0.000 Experiment.py:108(<lambda>)
       12    0.034    0.003   12.678    1.057 save.py:40(save)
  4237288    7.309    0.000   12.667    0.000 abc.py:180(__instancecheck__)
       12    0.005    0.000   12.602    1.050 save.py:788(save)
   120059    2.311    0.000   12.573    0.000 structure.py:70(normalize_element)
 24865044    6.174    0.000   12.085    0.000 {method 'get' of 'dict' objects}
27944108/27943148   11.359    0.000   12.018    0.000 {built-in method builtins.hasattr}
   687829   11.963    0.000   11.963    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
   120570    0.821    0.000   11.827    0.000 function.py:2299(from_function_and_signature)
   967228    3.688    0.000   11.567    0.000 ops.py:359(__init__)
    40020    0.111    0.000   11.529    0.000 dataset_ops.py:1031(prefetch)
    40020    0.756    0.000   11.417    0.000 dataset_ops.py:4289(__init__)
   967332    0.973    0.000   11.343    0.000 lock_util.py:126(__exit__)
   400199    0.877    0.000   11.303    0.000 dataset_ops.py:546(_flat_structure)
   805329    5.241    0.000   11.269    0.000 tf_decorator.py:67(make_decorator)
   241064    0.167    0.000   11.097    0.000 func_graph.py:130(<listcomp>)
    68133    0.164    0.000   11.095    0.000 Hanabi.py:379(<listcomp>)
    43760    0.843    0.000   11.012    0.000 resource_variable_ops.py:838(assign)
   120424   10.966    0.000   10.966    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
   340665    0.446    0.000   10.931    0.000 Hanabi.py:245(save)
   160950    1.384    0.000   10.930    0.000 func_graph.py:82(encode_arg)
563794/563793    2.158    0.000   10.872    0.000 contextlib.py:129(contextmanager)
  1498584    4.932    0.000   10.808    0.000 Hanabi.py:111(save)
   967332    0.775    0.000   10.668    0.000 lock_util.py:123(__enter__)
  7946662    4.695    0.000   10.426    0.000 compat.py:114(as_str)
   967332    3.479    0.000   10.370    0.000 lock_util.py:96(release)
   587364    0.946    0.000   10.358    0.000 Experiment.py:93(<lambda>)
   340665    0.529    0.000   10.307    0.000 Hanabi.py:246(<listcomp>)
 14591514   10.248    0.000   10.248    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
1775147/1775107    2.707    0.000   10.088    0.000 base.py:453(_method_wrapper)
2138171/1175390    3.069    0.000   10.036    0.000 {built-in method builtins.hash}
  4399378    9.969    0.000    9.971    0.000 {built-in method numpy.array}
   967332    2.668    0.000    9.893    0.000 lock_util.py:86(acquire)
   240119    0.942    0.000    9.781    0.000 structure.py:299(_to_tensor_list_helper)
  2556194    8.505    0.000    9.741    0.000 object_identity.py:174(__init__)
   140434    0.798    0.000    9.724    0.000 iostream.py:382(write)
1151151/1145093    2.401    0.000    9.630    0.000 nest.py:461(_packed_nest_with_indices)
   520258    0.788    0.000    9.622    0.000 dataset_ops.py:2927(merge)
  1151439    5.364    0.000    9.539    0.000 nest.py:129(_sequence_like)
  1132736    3.536    0.000    9.524    0.000 ops.py:4091(name_scope)
    40020    0.096    0.000    9.422    0.000 dataset_ops.py:957(zip)
  1934664    9.389    0.000    9.389    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
  1854512    9.377    0.000    9.377    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
   535655    1.037    0.000    9.340    0.000 type_spec.py:337(__get_cmp_key)
    40020    0.480    0.000    9.326    0.000 dataset_ops.py:3472(__init__)
   319343    0.489    0.000    9.280    0.000 type_spec.py:301(__hash__)
   333155    1.197    0.000    9.176    0.000 Hanabi.py:212(toarray)
  1120575    1.691    0.000    8.973    0.000 structure.py:257(get_flat_tensor_specs)
   520258    2.491    0.000    8.834    0.000 options.py:89(merge_options)
   967332    8.829    0.000    8.829    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
  2143312    8.802    0.000    8.802    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
   966668    1.505    0.000    8.643    0.000 tpu.py:223(tpu_replicated_input_resolver)
730142/232110    1.624    0.000    8.458    0.000 function.py:95(_make_input_signature_hashable)
       12    0.013    0.001    8.438    0.703 save.py:1030(_build_meta_graph)
   121529    0.415    0.000    8.353    0.000 tf_inspect.py:238(getfullargspec)
   561266    2.281    0.000    8.332    0.000 base.py:854(_handle_deferred_dependencies)
   683894    3.410    0.000    8.267    0.000 functools.py:44(update_wrapper)
   967332    3.100    0.000    8.242    0.000 ops.py:4439(_apply_device_functions)
360428/360228    0.553    0.000    8.232    0.000 structure.py:407(type_spec_from_value)
 18292370    4.968    0.000    8.170    0.000 pickle.py:213(write)
  1739777    3.716    0.000    8.162    0.000 dtypes.py:172(is_compatible_with)
    40020    0.416    0.000    8.134    0.000 callbacks.py:202(__init__)
   200099    0.276    0.000    8.094    0.000 structure.py:355(to_tensor_list)
1417782/535655    2.493    0.000    8.058    0.000 type_spec.py:342(__make_cmp_key)
    72486    0.255    0.000    7.937    0.000 nest.py:1061(map_structure_up_to)
  1217280    1.500    0.000    7.875    0.000 {built-in method builtins.all}
  5357546    4.830    0.000    7.838    0.000 ops.py:5989(get_default_graph)
    72486    0.710    0.000    7.681    0.000 nest.py:1142(map_structure_with_tuple_paths_up_to)
   360428    1.117    0.000    7.678    0.000 type_spec.py:555(_type_spec_from_value)
   121457    1.495    0.000    7.637    0.000 inspect.py:1089(getfullargspec)
   120084    2.478    0.000    7.482    0.000 conversion.py:129(is_whitelisted)
    40118    0.244    0.000    7.464    0.000 resource_variable_ops.py:606(numpy)
   240219    0.219    0.000    7.193    0.000 structure.py:321(reduce_fn)
    40020    0.147    0.000    7.121    0.000 data_adapter.py:995(_process_tensorlike)
 11957895    4.493    0.000    7.100    0.000 pickle.py:448(get)
  2225170    7.058    0.000    7.058    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
  1753982    3.529    0.000    6.996    0.000 tensor_shape.py:746(__init__)
   608043    2.378    0.000    6.971    0.000 tensor_spec.py:39(__init__)
  1654312    3.757    0.000    6.808    0.000 Hanabi.py:70(toarray)
  2839124    6.756    0.000    6.768    0.000 _collections_abc.py:742(__iter__)
   649705    4.701    0.000    6.763    0.000 tensor_shape.py:1193(as_proto)
   932010    0.761    0.000    6.762    0.000 ops.py:421(shape)
  3308730    2.708    0.000    6.758    0.000 c_api_util.py:157(tf_buffer)
    66631    0.281    0.000    6.736    0.000 Hanabi.py:272(<listcomp>)
212408/43634    0.780    0.000    6.662    0.000 training.py:322(__setattr__)
    40394    0.428    0.000    6.642    0.000 resource_variable_ops.py:668(read_value)
   400199    0.924    0.000    6.587    0.000 dataset_ops.py:528(_flat_shapes)
   120106    0.895    0.000    6.571    0.000 api.py:157(tf_convert)
  2926657    3.535    0.000    6.449    0.000 nest.py:203(_yield_sorted_items)
  2116917    1.399    0.000    6.428    0.000 nest.py:198(_yield_value)
   560287    0.718    0.000    6.400    0.000 structure.py:273(get_flat_tensor_shapes)
  4361699    2.632    0.000    6.279    0.000 dtypes.py:84(base_dtype)
  1933336    2.605    0.000    6.247    0.000 tpu.py:239(replace_with_unreplicated_resources)
    40020    0.201    0.000    6.213    0.000 callbacks.py:274(set_model)
   967332    4.094    0.000    6.213    0.000 lock_util.py:106(_another_group_active)
   105113    2.019    0.000    6.182    0.000 function.py:2151(_build_call_outputs)
  4339546    5.369    0.000    6.180    0.000 dtypes.py:192(__eq__)
   120400    0.195    0.000    6.167    0.000 context.py:2346(add_function)
   120424    0.357    0.000    6.082    0.000 function.py:1549(_set_function_spec)
   444520    1.934    0.000    6.002    0.000 ops.py:444(_c_api_shape)
  2983331    3.408    0.000    5.995    0.000 compat.py:64(as_bytes)
   120400    0.332    0.000    5.956    0.000 context.py:1085(add_function)
    80040    0.206    0.000    5.910    0.000 gen_dataset_ops.py:5498(repeat_dataset)
   967332    5.497    0.000    5.866    0.000 ops.py:6880(_reconstruct_sequence_inputs)
   967332    1.680    0.000    5.820    0.000 threading.py:357(notify_all)
  7947226    3.877    0.000    5.732    0.000 compat.py:90(as_text)
   120424    2.603    0.000    5.663    0.000 function.py:1562(_initialize_function_spec)
   120064    0.177    0.000    5.645    0.000 structure.py:210(from_compatible_tensor_list)
   967332    4.509    0.000    5.632    0.000 ops.py:3052(_add_op)
122389/121457    0.781    0.000    5.603    0.000 inspect.py:2183(_signature_from_callable)
   120400    5.550    0.000    5.550    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
226574/53406    1.211    0.000    5.511    0.000 base_layer.py:2756(__setattr__)
   966536    1.556    0.000    5.492    0.000 errors_impl.py:264(__init__)
   200199    0.411    0.000    5.478    0.000 type_spec.py:211(_to_tensor_list)
   120064    0.886    0.000    5.468    0.000 structure.py:175(_from_tensor_list_helper)
  2503243    3.261    0.000    5.467    0.000 context.py:1851(executing_eagerly)
   200199    0.296    0.000    5.463    0.000 structure.py:376(<lambda>)
    72486    0.112    0.000    5.459    0.000 nest.py:1234(<listcomp>)
  7191310    5.415    0.000    5.415    0.000 _weakrefset.py:70(__contains__)
    40020    0.136    0.000    5.396    0.000 gen_dataset_ops.py:5296(range_dataset)
    72486    0.115    0.000    5.347    0.000 nest.py:1137(<lambda>)
   120100    0.606    0.000    5.323    0.000 inspect_utils.py:82(isbuiltin)
  1047700    2.905    0.000    5.280    0.000 ops.py:4206(unique_name)
  1247664    2.720    0.000    5.256    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
    39970    0.407    0.000    5.179    0.000 training.py:2667(concat)
   720600    0.408    0.000    5.145    0.000 api.py:519(<genexpr>)
   371515    0.394    0.000    5.119    0.000 constant_op.py:298(_constant_eager_impl)
   846782    2.194    0.000    5.097    0.000 ops.py:3848(_get_tensor_by_tf_output)
   120103    0.876    0.000    5.056    0.000 api.py:244(decorator)
     1847    0.027    0.000    5.036    0.003 callbacks.py:397(on_epoch_end)
   120591    0.082    0.000    4.976    0.000 c_api_util.py:53(__del__)
  1426313    2.468    0.000    4.938    0.000 pickle.py:413(memoize)
   120591    4.894    0.000    4.894    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteGraph}
    40020    0.122    0.000    4.880    0.000 gen_dataset_ops.py:3266(model_dataset)
  1451920    1.173    0.000    4.860    0.000 ops.py:1925(<genexpr>)
   120149    0.277    0.000    4.828    0.000 <__array_function__ internals>:2(array_equal)
   247880    0.827    0.000    4.825    0.000 nest.py:1379(flatten_with_tuple_paths)
   108204    0.912    0.000    4.793    0.000 tf_utils.py:531(_to_single_numpy_or_python_type)
   266524    0.507    0.000    4.743    0.000 Hanabi.py:219(<listcomp>)
   600500    0.936    0.000    4.737    0.000 api.py:343(_is_of_known_loaded_module)
   371515    4.190    0.000    4.725    0.000 constant_op.py:70(convert_to_eager_tensor)
   121457    1.972    0.000    4.697    0.000 inspect.py:2102(_signature_from_function)
    40977    0.229    0.000    4.683    0.000 resource_variable_ops.py:643(_read_variable_op)
  1690747    3.008    0.000    4.682    0.000 base.py:577(_maybe_initialize_trackable)
   967228    4.680    0.000    4.680    0.000 c_api_util.py:190(tf_output)
   200199    0.570    0.000    4.649    0.000 tensor_spec.py:155(_to_components)
  1241249    1.143    0.000    4.579    0.000 structure.py:269(<lambda>)
5100/4716    0.018    0.000    4.560    0.001 def_function.py:1052(_get_concrete_function_garbage_collected)
    43770    0.399    0.000    4.471    0.000 resource_variable_ops.py:830(_lazy_read)
  1933387    1.968    0.000    4.447    0.000 registry.py:82(lookup)
  364/244    0.003    0.000    4.429    0.018 def_function.py:583(wrapped_fn)
5076/4692    0.008    0.000    4.424    0.001 def_function.py:1091(get_concrete_function)
   644593    1.699    0.000    4.419    0.000 op_def_library.py:173(_MakeType)
   120618    0.502    0.000    4.342    0.000 c_api_util.py:45(__init__)
   120149    1.722    0.000    4.309    0.000 numeric.py:2287(array_equal)
4944/1200    0.013    0.000    4.235    0.004 save_impl.py:546(get_concrete_function)
  2728545    3.861    0.000    4.224    0.000 {built-in method builtins.sorted}
    40020    0.119    0.000    4.163    0.000 gen_dataset_ops.py:5189(prefetch_dataset)
1344/1152    0.010    0.000    4.113    0.004 save_impl.py:401(add_trace)
     1847    0.005    0.000    4.065    0.002 callbacks.py:971(on_epoch_end)
     1847    0.021    0.000    4.061    0.002 callbacks.py:1019(_finalize_progbar)
   967332    1.027    0.000    4.033    0.000 ops.py:5153(_mutation_lock)
    39970    0.340    0.000    3.985    0.000 array_ops.py:1562(concat)
  4202550    2.588    0.000    3.967    0.000 options.py:74(get_fn)
    53330    0.053    0.000    3.952    0.000 <__array_function__ internals>:2(vstack)
   966538    3.663    0.000    3.936    0.000 errors_impl.py:64(__init__)
  1401386    1.757    0.000    3.858    0.000 type_spec.py:262(_flat_tensor_specs)
   108156    0.415    0.000    3.858    0.000 type_spec.py:293(__eq__)
    40020    0.121    0.000    3.853    0.000 data_adapter.py:963(select_data_adapter)
       24    0.001    0.000    3.841    0.160 functional_saver.py:202(save)
   400199    0.566    0.000    3.839    0.000 dataset_ops.py:537(_flat_types)
   967332    2.519    0.000    3.818    0.000 threading.py:334(notify)
       12    0.001    0.000    3.810    0.317 util.py:1152(save)
       12    0.000    0.000    3.804    0.317 util.py:1117(_save_cached_when_graph_building)
       24    0.001    0.000    3.801    0.158 functional_saver.py:252(save_fn)
    40020    0.213    0.000    3.773    0.000 gen_dataset_ops.py:106(anonymous_iterator_v2)
   120618    3.771    0.000    3.771    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
   967332    1.646    0.000    3.764    0.000 ops.py:1995(_control_flow_post_processing)
   240994    2.487    0.000    3.753    0.000 function.py:2388(__init__)
   973975    1.098    0.000    3.739    0.000 tensor_shape.py:1230(as_shape)
    40020    0.717    0.000    3.724    0.000 data_adapter.py:965(<listcomp>)
   360416    0.705    0.000    3.718    0.000 tensor_util.py:309(_AssertCompatible)
    53330    0.102    0.000    3.699    0.000 shape_base.py:224(vstack)
   120060    0.414    0.000    3.687    0.000 data_adapter.py:1011(_convert_numpy_and_scipy)
   967332    1.544    0.000    3.663    0.000 ops.py:5059(_snapshot_colocation_stack_metadata)
  1078589    1.394    0.000    3.653    0.000 tensor_spec.py:87(__hash__)
  4361747    3.647    0.000    3.647    0.000 dtypes.py:71(_is_ref_dtype)
708891/535655    0.778    0.000    3.641    0.000 type_spec.py:357(<listcomp>)
   240300    0.213    0.000    3.570    0.000 ag_logging.py:138(log)
   280134    0.819    0.000    3.564    0.000 nest.py:195(map_structure)
320160/240120    1.445    0.000    3.559    0.000 options.py:37(__eq__)
   566874    0.694    0.000    3.558    0.000 ops.py:3886(as_default)
  1933336    1.554    0.000    3.553    0.000 auto_control_deps.py:125(op_is_stateful)
       24    0.001    0.000    3.543    0.148 functional_saver.py:57(save)
   240848    0.937    0.000    3.524    0.000 func_graph.py:1061(check_mutation)
       24    0.000    0.000    3.510    0.146 gen_io_ops.py:1694(save_v2)
   120399    0.205    0.000    3.505    0.000 c_api_util.py:94(__del__)
   440228    0.459    0.000    3.496    0.000 structure.py:286(get_flat_tensor_types)
    40020    0.137    0.000    3.442    0.000 gen_dataset_ops.py:7053(zip_dataset)
44106/44076    0.256    0.000    3.433    0.000 variables.py:258(__call__)
    25501    0.427    0.000    3.427    0.000 Experiment.py:58(availableActionsData)
  2738025    1.381    0.000    3.424    0.000 _dill.py:380(get)
   968755    1.231    0.000    3.409    0.000 func_graph.py:595(capture)
   161574    0.594    0.000    3.405    0.000 ops.py:2422(_set_attr)
   966668    1.163    0.000    3.398    0.000 dataset_ops.py:4572(_resource_resolver)
   966948    1.872    0.000    3.382    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
   345696    0.859    0.000    3.381    0.000 ops.py:5639(init_scope)
       12    0.000    0.000    3.368    0.281 gen_io_ops.py:1743(save_v2_eager_fallback)
   240316    0.218    0.000    3.358    0.000 ag_logging.py:121(has_verbosity)
   414734    0.375    0.000    3.354    0.000 nest.py:1310(yield_flat_paths)
    26832    0.181    0.000    3.348    0.000 Experiment.py:39(availableActions)
     2280    0.010    0.000    3.308    0.001 save_impl.py:415(trace_with_training)
   120399    3.300    0.000    3.300    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteFunction}
    40020    0.100    0.000    3.283    0.000 dataset_ops.py:2112(with_options)
  2561338    3.281    0.000    3.281    0.000 {built-in method tensorflow.python._pywrap_utils.FlattenForData}
   170/74    0.002    0.000    3.258    0.044 def_function.py:663(_initialize)
  3518787    2.200    0.000    3.256    0.000 ops.py:4998(_device_function_stack)
   640315    1.314    0.000    3.232    0.000 nest.py:157(pack_sequence_as)
    40020    0.322    0.000    3.228    0.000 dataset_ops.py:3581(_parse_args)
   170/74    0.001    0.000    3.212    0.043 function.py:2850(_get_concrete_function_internal_garbage_collected)
    40977    0.207    0.000    3.211    0.000 resource_variable_ops.py:646(read_and_set_handle)
   600500    3.208    0.000    3.208    0.000 api.py:347(<genexpr>)
 18293160    3.201    0.000    3.201    0.000 {method 'write' of '_io.BufferedWriter' objects}
1093574/769766    1.470    0.000    3.197    0.000 nest.py:720(_yield_flat_up_to)
    40020    0.186    0.000    3.183    0.000 dataset_ops.py:4358(__init__)
     2856    0.004    0.000    3.168    0.001 save.py:141(list_functions)
  1533256    3.168    0.000    3.168    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
 14007681    3.163    0.000    3.163    0.000 {built-in method _struct.pack}
   240316    0.567    0.000    3.141    0.000 ag_logging.py:114(get_verbosity)
   148322    0.509    0.000    3.118    0.000 ops.py:1039(numpy)
       84    0.000    0.000    3.062    0.036 base_layer.py:3017(_list_functions_for_serialization)
       84    0.001    0.000    3.061    0.036 base_serialization.py:76(list_functions_for_serialization)
   654981    1.701    0.000    3.046    0.000 ops.py:6385(name_scope)
14651407/14651332    3.046    0.000    3.046    0.000 {built-in method builtins.len}
   104726    0.688    0.000    3.045    0.000 def_function.py:97(called_without_tracing)
  1948800    1.871    0.000    3.038    0.000 ops.py:5075(_control_dependencies_stack)
   120424    0.173    0.000    3.027    0.000 func_graph.py:1258(_get_defun_inputs_from_kwargs)
   181373    2.924    0.000    3.026    0.000 {method 'reduce' of 'numpy.ufunc' objects}
  1397220    1.283    0.000    3.011    0.000 nest.py:96(_sorted)
  5357546    3.008    0.000    3.008    0.000 ops.py:5557(get_default)
   967332    1.655    0.000    3.006    0.000 lock_util.py:74(group)
   765030    2.986    0.000    2.986    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
  1654365    2.974    0.000    2.974    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
   240740    2.974    0.000    2.974    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
    32245    0.095    0.000    2.931    0.000 callbacks.py:418(on_train_batch_begin)
   671325    0.660    0.000    2.926    0.000 nest.py:631(<listcomp>)
  1209380    1.093    0.000    2.917    0.000 ops.py:216(uid)
   120060    0.163    0.000    2.898    0.000 dataset_ops.py:3602(_build_tensor)
   966062    1.225    0.000    2.894    0.000 auto_control_deps_utils.py:112(<genexpr>)
   443831    0.893    0.000    2.881    0.000 op_def_library.py:84(_Flatten)
   560278    1.324    0.000    2.877    0.000 dataset_ops.py:3795(__init__)
     1847    0.031    0.000    2.877    0.002 training.py:1617(reset_metrics)
    41277    0.122    0.000    2.870    0.000 gen_resource_variable_ops.py:452(read_variable_op)
 18735600    2.867    0.000    2.867    0.000 inspect_utils.py:84(<genexpr>)
       24    0.008    0.000    2.859    0.119 save.py:168(__init__)
   805329    2.308    0.000    2.838    0.000 tf_decorator.py:236(__init__)
  8930118    2.696    0.000    2.813    0.000 enum.py:332(<genexpr>)
    32245    0.109    0.000    2.766    0.000 callbacks.py:293(_call_batch_begin_hook)
   566874    0.908    0.000    2.758    0.000 context.py:2001(graph_mode)
  2161512    1.068    0.000    2.756    0.000 config_lib.py:50(get_action)
       12    0.000    0.000    2.732    0.228 signature_serialization.py:71(find_function_to_export)
       12    0.000    0.000    2.732    0.228 training.py:2581(_list_functions_for_serialization)
   110191    0.613    0.000    2.729    0.000 function.py:2513(canonicalize_function_inputs)
       50    0.001    0.000    2.721    0.054 function_base.py:2093(_get_ufunc_and_otypes)
  4465099    2.694    0.000    2.694    0.000 context.py:791(executing_eagerly)
   846782    0.809    0.000    2.692    0.000 ops.py:3823(_get_operation_by_tf_operation)
  312/192    0.006    0.000    2.643    0.014 save_impl.py:511(wrapper)
   161431    0.445    0.000    2.625    0.000 ops.py:5202(device)
    43770    0.235    0.000    2.620    0.000 resource_variable_ops.py:1924(__init__)
   160137    0.203    0.000    2.615    0.000 structure.py:229(<lambda>)
   295489    0.664    0.000    2.593    0.000 _collections_abc.py:657(get)
     1846    0.032    0.000    2.579    0.001 metrics.py:241(reset_states)
    44066    0.134    0.000    2.577    0.000 gen_resource_variable_ops.py:123(assign_variable_op)
   240318    0.420    0.000    2.573    0.000 os.py:760(getenv)
   200219    0.245    0.000    2.572    0.000 array_ops.py:1489(_autopacking_conversion_function)
  2085205    1.682    0.000    2.570    0.000 ops.py:5094(_distribution_strategy_stack)
   845111    0.761    0.000    2.561    0.000 op_def_library.py:510(<listcomp>)
  636/588    0.002    0.000    2.545    0.004 layer_serialization.py:81(_get_serialized_attributes)
    32514    0.131    0.000    2.544    0.000 gen_array_ops.py:1183(concat_v2)
       72    0.000    0.000    2.540    0.035 layer_serialization.py:77(functions_to_serialize)
       12    0.000    0.000    2.533    0.211 model_serialization.py:45(_get_serialized_attributes_internal)
   360433    1.560    0.000    2.524    0.000 tensor_util.py:339(_is_array_like)
  1411085    2.443    0.000    2.516    0.000 traceable_stack.py:119(peek_objs)
   966668    0.867    0.000    2.509    0.000 auto_control_deps.py:136(collective_manager_ids_from_op)
   120062    0.121    0.000    2.503    0.000 op_def_library.py:700(<listcomp>)
   967332    0.861    0.000    2.485    0.000 ops.py:4637(_record_op_seen_by_control_dependencies)
   565984    0.722    0.000    2.480    0.000 ops.py:6498(__exit__)
   443421    0.800    0.000    2.480    0.000 func_graph.py:1055(device_stack_has_callable)
   244716    1.130    0.000    2.460    0.000 tensor_shape.py:1074(is_compatible_with)
  4111585    2.374    0.000    2.459    0.000 object_identity.py:211(__iter__)
  2201094    2.388    0.000    2.455    0.000 options.py:33(__init__)
   120424    2.414    0.000    2.414    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
   967228    2.413    0.000    2.413    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
   160137    0.321    0.000    2.412    0.000 tensor_spec.py:169(_from_compatible_tensor_list)
    34092    0.109    0.000    2.401    0.000 <__array_function__ internals>:2(mean)
   120366    0.282    0.000    2.388    0.000 op_def_library.py:184(_MakeShape)
   610238    1.245    0.000    2.383    0.000 context.py:219(push)
   240247    0.438    0.000    2.382    0.000 tensor_util.py:263(inner)
  1287856    1.559    0.000    2.380    0.000 six.py:588(iteritems)
  1183185    1.228    0.000    2.359    0.000 tensor_shape.py:756(<listcomp>)
      780    0.011    0.000    2.348    0.003 def_function.py:1024(_list_all_concrete_functions_for_serialization)
  2546113    1.518    0.000    2.341    0.000 ops.py:4079(_name_stack)
    44076    0.795    0.000    2.319    0.000 resource_variable_ops.py:341(__init__)
   200219    0.667    0.000    2.317    0.000 array_ops.py:1479(_should_not_autopack)
 18773746    2.299    0.000    2.299    0.000 {built-in method builtins.id}
   967332    1.086    0.000    2.287    0.000 ops.py:5019(_snapshot_device_function_stack_metadata)
   967332    0.862    0.000    2.281    0.000 ops.py:4603(_control_dependencies_for_inputs)
    85803    0.397    0.000    2.276    0.000 resource_variable_ops.py:329(variable_accessed)
  2949761    2.276    0.000    2.276    0.000 {built-in method numpy.zeros}
   120/96    0.001    0.000    2.270    0.024 utils.py:153(wrap_with_training_arg)
  1662728    2.266    0.000    2.266    0.000 <string>:1(__init__)
   120/96    0.001    0.000    2.259    0.024 tf_utils.py:42(smart_cond)
   120/96    0.000    0.000    2.258    0.024 smart_cond.py:27(smart_cond)
   120/96    0.000    0.000    2.257    0.024 utils.py:163(replace_training_and_call)
     1846    0.092    0.000    2.249    0.001 backend.py:3565(batch_set_value)
  372/308    0.012    0.000    2.239    0.007 base_layer.py:875(__call__)
   850732    1.004    0.000    2.225    0.000 tf_decorator.py:200(unwrap)
       12    0.003    0.000    2.202    0.184 save.py:594(_fill_meta_graph_def)
   282098    1.125    0.000    2.199    0.000 distribution_strategy_context.py:79(_get_per_thread_mode)
    34092    0.461    0.000    2.187    0.000 fromnumeric.py:3231(mean)
   320323    0.497    0.000    2.179    0.000 tensor_util.py:194(GetNumpyAppendFn)
   966586    0.742    0.000    2.179    0.000 {method 'throw' of 'generator' objects}
    39970    0.263    0.000    2.164    0.000 callbacks.py:571(on_predict_end)
   120400    0.226    0.000    2.157    0.000 function.py:3595(defun_with_attributes)
    60/12    0.000    0.000    2.132    0.178 layer_serialization.py:101(_get_serialized_attributes_internal)
       88    0.000    0.000    2.132    0.024 functional.py:367(call)
   148322    0.207    0.000    2.131    0.000 ops.py:1027(_numpy)
       88    0.007    0.000    2.131    0.024 functional.py:464(_run_internal_graph)
    60/12    0.002    0.000    2.114    0.176 save_impl.py:134(wrap_layer_functions)
   220310    0.659    0.000    2.110    0.000 function.py:2646(_convert_numpy_inputs)
   761238    1.319    0.000    2.100    0.000 tensor_shape.py:866(__getitem__)
    40020    0.308    0.000    2.100    0.000 dataset_ops.py:2889(_graph_rewrites)
  1220476    1.564    0.000    2.096    0.000 context.py:773(_mode)
   160613    0.858    0.000    2.078    0.000 ops.py:616(set_shape)
  1133748    1.431    0.000    2.067    0.000 ops.py:5387(get_controller)
   120166    0.203    0.000    2.066    0.000 {method 'all' of 'numpy.ndarray' objects}
   647413    1.851    0.000    2.062    0.000 tensor_shape.py:1199(<listcomp>)
  2585902    2.046    0.000    2.046    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
   575365    1.863    0.000    2.043    0.000 _dill.py:386(__missing__)
 14695920    2.042    0.000    2.042    0.000 pickle.py:200(commit_frame)
  3138288    2.036    0.000    2.036    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
   240898    0.200    0.000    2.031    0.000 function.py:1529(<genexpr>)
    40020    0.064    0.000    2.027    0.000 structure.py:329(to_batched_tensor_list)
   111870    1.452    0.000    2.013    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_EncodeArg}
      120    0.001    0.000    2.011    0.017 save_impl.py:495(add_function)
  168/120    0.002    0.000    1.988    0.017 save_impl.py:567(call_and_return_conditional_losses)
   104729    0.909    0.000    1.984    0.000 def_function.py:91(_get_counter)
  1935895    1.178    0.000    1.976    0.000 ops.py:5044(_colocation_stack)
  2281596    1.539    0.000    1.970    0.000 config_lib.py:33(matches)
  336/192    0.002    0.000    1.950    0.010 save_impl.py:541(__call__)
   148322    1.924    0.000    1.924    0.000 {method '_numpy_internal' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   847505    1.054    0.000    1.923    0.000 control_flow_util.py:266(CheckInputFromValidContext)
   200185    0.241    0.000    1.897    0.000 distribution_strategy_context.py:179(get_strategy)
   120144    0.422    0.000    1.876    0.000 function.py:3245(validate_signature)
   120178    0.125    0.000    1.863    0.000 _methods.py:47(_all)
    84314    0.285    0.000    1.849    0.000 base_layer.py:2690(_obj_reference_counts)
   160759    0.391    0.000    1.836    0.000 context.py:2016(device)
  8121042    1.834    0.000    1.834    0.000 context.py:1826(context_safe)
  1209380    1.823    0.000    1.823    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
    42115    0.371    0.000    1.816    0.000 base_layer.py:2714(__delattr__)
  1889500    1.814    0.000    1.814    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceOrComposite}
  1445910    0.627    0.000    1.813    0.000 __init__.py:1298(info)
   120060    0.474    0.000    1.778    0.000 function_utils.py:89(get_func_name)
   244278    0.723    0.000    1.778    0.000 tf_logging.py:210(vlog)
   966944    1.777    0.000    1.777    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
   970560    1.148    0.000    1.772    0.000 _collections_abc.py:676(items)
    68133    0.253    0.000    1.772    0.000 Hanabi.py:365(count_discarded)
       52    0.563    0.011    1.752    0.034 Experiment.py:160(create_episode)
    34092    0.634    0.000    1.726    0.000 _methods.py:134(_mean)
     1716    0.037    0.000    1.715    0.001 function.py:3085(_define_function_with_shape_relaxation)
    66631    0.381    0.000    1.694    0.000 Hanabi.py:215(<listcomp>)
   320323    1.023    0.000    1.682    0.000 tensor_util.py:186(GetFromNumpyDTypeDict)
  4547293    1.346    0.000    1.680    0.000 {built-in method builtins.setattr}
   120424    0.447    0.000    1.675    0.000 auto_control_deps.py:178(__init__)
  8214103    1.663    0.000    1.663    0.000 {method 'append' of 'list' objects}
  1690194    1.167    0.000    1.663    0.000 __init__.py:1544(isEnabledFor)
   120606    1.007    0.000    1.630    0.000 ops.py:4037(get_all_collection_keys)
    22234    0.256    0.000    1.623    0.000 Experiment.py:52(<listcomp>)
   240318    1.001    0.000    1.616    0.000 os.py:664(__getitem__)
   225593    0.769    0.000    1.614    0.000 function.py:2008(captured_inputs)
    39970    0.212    0.000    1.605    0.000 callbacks.py:554(on_predict_begin)
   505104    0.664    0.000    1.602    0.000 Hanabi.py:200(save)
   161574    0.265    0.000    1.594    0.000 ops.py:2431(_set_attr_with_buf)
  1824502    1.567    0.000    1.585    0.000 {built-in method __new__ of type object at 0x9d12c0}
  2700332    1.585    0.000    1.585    0.000 {method 'encode' of 'str' objects}
   966668    1.115    0.000    1.578    0.000 control_flow_util.py:82(IsInWhileLoop)
   560278    1.187    0.000    1.547    0.000 tracking.py:215(__init__)
    81766    0.557    0.000    1.529    0.000 tape.py:104(variable_accessed)
    60/48    0.000    0.000    1.527    0.032 utils.py:169(<lambda>)
    40020    0.411    0.000    1.526    0.000 optimization_options.py:215(_graph_rewrites)
   280134    0.265    0.000    1.523    0.000 nest.py:245(<listcomp>)
   444520    1.513    0.000    1.513    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
    40020    0.083    0.000    1.511    0.000 structure.py:351(<lambda>)
   242564    0.191    0.000    1.510    0.000 nest.py:357(assert_same_structure)
   120084    0.308    0.000    1.510    0.000 conversion.py:242(cache_whitelisted)
   361512    1.327    0.000    1.504    0.000 ops.py:3761(get_operations)
    68133    0.339    0.000    1.487    0.000 Hanabi.py:366(<dictcomp>)
 14695920    1.476    0.000    1.476    0.000 pickle.py:523(persistent_id)
   603098    1.460    0.000    1.460    0.000 op_def_library.py:38(_Attr)
  2343537    1.448    0.000    1.448    0.000 ops.py:3071(_c_graph)
    40020    0.096    0.000    1.429    0.000 type_spec.py:498(_to_batched_tensor_list)
   120424    0.411    0.000    1.428    0.000 auto_control_deps.py:225(__enter__)
  2901996    1.426    0.000    1.426    0.000 lock_util.py:110(_validate_group_id)
   443831    0.633    0.000    1.423    0.000 op_def_library.py:87(<listcomp>)
    66631    0.757    0.000    1.421    0.000 Hanabi.py:266(<listcomp>)
   120618    0.571    0.000    1.411    0.000 lock_util.py:54(__init__)
   729270    0.672    0.000    1.400    0.000 tensor_shape.py:1180(as_list)
    80038    0.208    0.000    1.390    0.000 dataset_ops.py:2796(get_legacy_output_types)
   443834    0.600    0.000    1.384    0.000 ops.py:6051(_get_graph_from_inputs)
   129078    0.898    0.000    1.380    0.000 inspect.py:2452(__init__)
   563794    1.248    0.000    1.378    0.000 functools.py:74(wraps)
  1001334    0.758    0.000    1.367    0.000 threading.py:254(_is_owned)
    40019    0.275    0.000    1.365    0.000 structure.py:119(convert_legacy_structure)
    25721    0.112    0.000    1.362    0.000 <__array_function__ internals>:2(amax)
   120060    0.673    0.000    1.357    0.000 data_adapter.py:235(can_handle)
   573598    0.351    0.000    1.355    0.000 nest.py:104(_is_namedtuple)
   160734    0.142    0.000    1.354    0.000 func_graph.py:1142(_get_composite_tensor_spec)
    26832    0.272    0.000    1.349    0.000 Hanabi.py:312(move)
      192    0.001    0.000    1.347    0.007 utils.py:66(return_outputs_and_add_losses)
  1488353    1.213    0.000    1.337    0.000 enum.py:331(__iter__)
   242564    1.318    0.000    1.319    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructure}
    40053    0.148    0.000    1.296    0.000 distribute_lib.py:2863(__enter__)
   571261    0.393    0.000    1.293    0.000 dtypes.py:205(__ne__)
   120474    0.172    0.000    1.271    0.000 ops.py:1602(convert_to_tensor_or_composite)
   120424    1.121    0.000    1.261    0.000 function.py:229(_parse_func_attrs)
    20578    0.470    0.000    1.257    0.000 Experiment.py:66(<listcomp>)
   161574    1.245    0.000    1.245    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetAttr}
   967332    1.232    0.000    1.232    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
    40020    0.287    0.000    1.229    0.000 training.py:2626(_in_multi_worker_mode)
    40059    0.216    0.000    1.223    0.000 tensor_util.py:1036(maybe_set_static_shape)
  1426313    0.799    0.000    1.214    0.000 pickle.py:436(put)
   213095    0.451    0.000    1.201    0.000 ops.py:1160(shape)
   121457    0.933    0.000    1.198    0.000 inspect.py:2732(__init__)
   443443    0.485    0.000    1.194    0.000 backprop.py:170(_must_record_gradient)
    80106    0.300    0.000    1.193    0.000 variable_scope.py:2738(variable_creator_scope)
  1104377    1.002    0.000    1.191    0.000 tensor_shape.py:185(__init__)
   360300    0.739    0.000    1.181    0.000 api.py:352(_is_known_loaded_type)
   966948    1.179    0.000    1.179    0.000 context.py:1204(op_callbacks)
  1815939    1.177    0.000    1.177    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
   120150    0.259    0.000    1.167    0.000 conversion.py:234(is_in_whitelist_cache)
   154722    1.140    0.000    1.163    0.000 threading.py:215(__init__)
   279018    0.535    0.000    1.151    0.000 threading.py:1104(is_alive)
    25721    0.164    0.000    1.151    0.000 fromnumeric.py:2551(amax)
    80065    0.194    0.000    1.148    0.000 training.py:679(distribute_strategy)
   966983    0.675    0.000    1.141    0.000 ag_ctx.py:29(_control_ctx)
   160759    0.644    0.000    1.139    0.000 context.py:827(device)
       12    0.000    0.000    1.137    0.095 functional_saver.py:172(to_proto)
   848214    1.124    0.000    1.124    0.000 ops.py:3800(_get_operation_by_name_unsafe)
   160759    0.830    0.000    1.116    0.000 context.py:1738(__enter__)
   361188    0.609    0.000    1.114    0.000 function.py:3763(__del__)
      260    0.001    0.000    1.102    0.004 core.py:1192(call)
      260    0.003    0.000    1.101    0.004 core.py:30(dense)
   242258    0.486    0.000    1.100    0.000 ag_ctx.py:61(__exit__)
   120474    0.236    0.000    1.099    0.000 ops.py:1625(internal_convert_to_tensor_or_composite)
    40193    0.275    0.000    1.089    0.000 monitoring.py:335(get_cell)
   120228    0.215    0.000    1.085    0.000 function.py:1494(<listcomp>)
   200240    1.075    0.000    1.075    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt32ArrayToTensorProto}
  1127556    0.735    0.000    1.072    0.000 ops.py:5117(_auto_cast_variable_read_dtype)
   120400    0.833    0.000    1.072    0.000 function.py:2728(__init__)
    22234    0.323    0.000    1.068    0.000 Experiment.py:47(<listcomp>)
   120424    0.233    0.000    1.065    0.000 variable_scope.py:1433(get_variable_scope)
   692355    0.762    0.000    1.064    0.000 tensor_conversion_registry.py:114(get)
  1012022    0.785    0.000    1.052    0.000 ops.py:402(graph)
  1369152    0.728    0.000    1.040    0.000 op_def_library.py:80(_IsListValue)
   966536    0.787    0.000    1.036    0.000 errors_impl.py:117(__str__)
      384    0.019    0.000    1.030    0.003 functional_ops.py:1112(partitioned_call)
    80090    0.185    0.000    1.026    0.000 data_adapter.py:275(<genexpr>)
    20578    0.334    0.000    1.018    0.000 Experiment.py:71(<listcomp>)
   889360    0.879    0.000    1.015    0.000 Hanabi.py:196(__init__)
      144    0.000    0.000    1.013    0.007 save_impl.py:585(call)
  1264089    0.476    0.000    1.012    0.000 {method 'extend' of 'list' objects}
  1814837    0.839    0.000    1.010    0.000 ops.py:3472(<genexpr>)
   346464    0.542    0.000    1.005    0.000 tape.py:150(stop_recording)
   573598    1.004    0.000    1.004    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
    40024    0.084    0.000    1.000    0.000 nest.py:1403(list_to_tuple)
    26611    0.187    0.000    0.995    0.000 fromnumeric.py:73(_wrapreduction)
    80465    0.993    0.000    0.993    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInputList}
    83634    0.129    0.000    0.992    0.000 data_adapter.py:1164(catch_stop_iteration)
  1413739    0.978    0.000    0.978    0.000 op_def_registry.py:34(get)
   610238    0.760    0.000    0.963    0.000 context.py:239(pop)
   108268    0.351    0.000    0.955    0.000 <__array_function__ internals>:2(ndim)
    80040    0.212    0.000    0.951    0.000 data_adapter.py:1549(_is_distributed_dataset)
   857443    0.385    0.000    0.945    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
   548556    0.941    0.000    0.941    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
     2312    0.015    0.000    0.938    0.000 func_graph.py:644(_capture_helper)
  1934664    0.927    0.000    0.927    0.000 lock_util.py:108(<genexpr>)
  3637912    0.922    0.000    0.922    0.000 ops.py:397(dtype)
   140434    0.134    0.000    0.921    0.000 iostream.py:320(_schedule_flush)
    43456    0.406    0.000    0.918    0.000 tensor_shape.py:1136(most_specific_compatible_shape)
    80081    0.470    0.000    0.917    0.000 ops.py:1523(internal_convert_n_to_tensor)
    40019    0.099    0.000    0.916    0.000 dataset_ops.py:3523(<listcomp>)
   160613    0.910    0.000    0.910    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
   120166    0.344    0.000    0.908    0.000 cache.py:43(has)
     2186    0.016    0.000    0.906    0.000 func_graph.py:1123(_create_substitute_placeholder)
   240119    0.291    0.000    0.902    0.000 nest.py:104(assert_same_structure)
    80038    0.121    0.000    0.897    0.000 dataset_ops.py:2762(get_legacy_output_classes)
   280358    0.223    0.000    0.895    0.000 function.py:3246(<genexpr>)
   105078    0.894    0.000    0.894    0.000 weakref.py:431(__contains__)
   966668    0.664    0.000    0.890    0.000 registry.py:74(list)
   120086    0.117    0.000    0.888    0.000 op_def_library.py:695(<listcomp>)
   565984    0.845    0.000    0.887    0.000 ops.py:6439(__init__)
   244278    0.346    0.000    0.876    0.000 __init__.py:1359(log)
   130302    0.310    0.000    0.876    0.000 object_identity.py:192(add)
  1934664    0.875    0.000    0.875    0.000 traceable_stack.py:123(peek_traceable_objs)
    40020    0.131    0.000    0.874    0.000 data_adapter.py:681(can_handle)
   950557    0.612    0.000    0.873    0.000 function.py:2840(input_signature)
    72486    0.109    0.000    0.872    0.000 nest.py:1226(<listcomp>)
    41829    0.106    0.000    0.864    0.000 context.py:2310(async_wait)
  3222284    0.863    0.000    0.863    0.000 {method 'pop' of 'dict' objects}
  1001866    0.861    0.000    0.861    0.000 {built-in method builtins.max}
   609254    0.450    0.000    0.861    0.000 pickle.py:652(save_long)
   120067    0.857    0.000    0.857    0.000 {tensorflow.python.framework.fast_tensor_util.AppendInt64ArrayToTensorProto}
   149300    0.495    0.000    0.849    0.000 tensor_spec.py:90(__eq__)
    40650    0.070    0.000    0.846    0.000 ops.py:5314(colocate_with)
600300/480240    0.489    0.000    0.844    0.000 dataset_ops.py:2972(element_spec)
   120100    0.398    0.000    0.844    0.000 cache.py:50(__getitem__)
  3307831    0.840    0.000    0.840    0.000 {method 'items' of 'dict' objects}
  1440916    0.835    0.000    0.835    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequenceForData}
   120424    0.230    0.000    0.832    0.000 variable_scope.py:1420(get_variable_scope_store)
  1168003    0.569    0.000    0.830    0.000 ops.py:3015(_variable_creator_stack)
   443831    0.826    0.000    0.826    0.000 op_def_library.py:737(<listcomp>)
       52    0.002    0.000    0.818    0.016 Experiment.py:169(<listcomp>)
     1040    0.006    0.000    0.817    0.001 Hanabi.py:290(__init__)
    40020    0.147    0.000    0.808    0.000 dataset_ops.py:3147(_to_tensor_list)
    40020    0.058    0.000    0.804    0.000 dataset_ops.py:3005(<lambda>)
  1473162    0.802    0.000    0.802    0.000 {method 'pop' of 'list' objects}
   465718    0.801    0.000    0.801    0.000 {method 'format' of 'str' objects}
560583/360416    0.652    0.000    0.800    0.000 tensor_util.py:219(_GetDenseDimensions)
   961110    0.645    0.000    0.796    0.000 tensor_shape.py:843(__len__)
   168804    0.322    0.000    0.796    0.000 object_identity.py:131(__getitem__)
   180055    0.325    0.000    0.789    0.000 object_identity.py:186(__contains__)
   212950    0.540    0.000    0.786    0.000 iterator_ops.py:766(_type_spec)
  3530753    0.783    0.000    0.783    0.000 tensor_shape.py:247(value)
    40650    0.111    0.000    0.776    0.000 ops.py:5291(_colocate_with_for_gradient)
   120375    0.121    0.000    0.775    0.000 function.py:384(__del__)
    40193    0.224    0.000    0.775    0.000 monitoring.py:136(get_cell)
   120060    0.340    0.000    0.771    0.000 tf_inspect.py:370(isfunction)
   105030    0.385    0.000    0.765    0.000 nest.py:873(flatten_up_to)
   848382    0.764    0.000    0.764    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
       16    0.000    0.000    0.760    0.047 func_graph.py:958(wrapper)
  1006920    0.488    0.000    0.759    0.000 ops.py:2245(_add_control_inputs)
   120205    0.345    0.000    0.756    0.000 math_ops.py:866(cast)
       24    0.000    0.000    0.755    0.031 function.py:3718(bound_method_wrapper)
     1040    0.044    0.000    0.753    0.001 Hanabi.py:129(__init__)
    80038    0.109    0.000    0.751    0.000 dataset_ops.py:2779(get_legacy_output_shapes)
  3090433    0.749    0.000    0.749    0.000 {method 'startswith' of 'str' objects}
    41829    0.117    0.000    0.747    0.000 context.py:645(sync_executors)
    40020    0.156    0.000    0.746    0.000 tensor_spec.py:190(_unbatch)
3061572/3060852    0.727    0.000    0.734    0.000 {method 'update' of 'set' objects}
   321463    0.464    0.000    0.731    0.000 tensor_shape.py:252(is_compatible_with)
    69256    0.111    0.000    0.731    0.000 Hanabi.py:191(save)
    60/48    0.000    0.000    0.730    0.015 utils.py:170(<lambda>)
   160759    0.549    0.000    0.729    0.000 context.py:1772(__exit__)
    66668    0.111    0.000    0.728    0.000 Hanabi.py:183(save)
    40053    0.178    0.000    0.727    0.000 distribute_lib.py:2872(__exit__)
   729222    0.532    0.000    0.727    0.000 tensor_shape.py:1191(<listcomp>)
   120060    0.726    0.000    0.726    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionSetAttrValueProto}
   456576    0.492    0.000    0.723    0.000 ops.py:1033(dtype)
    80040    0.093    0.000    0.722    0.000 options.py:45(__ne__)
  2949020    0.719    0.000    0.719    0.000 ops.py:2381(graph)
   560287    0.480    0.000    0.710    0.000 structure.py:283(<listcomp>)
  1151439    0.698    0.000    0.698    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
   240848    0.294    0.000    0.694    0.000 variable_scope.py:1202(set_use_resource)
   245584    0.520    0.000    0.693    0.000 func_graph.py:740(internal_captures)
   603030    0.496    0.000    0.688    0.000 ops.py:3972(get_collection_ref)
   977916    0.493    0.000    0.686    0.000 traceable_stack.py:127(__len__)
   120064    0.236    0.000    0.679    0.000 structure.py:196(<listcomp>)
   967332    0.676    0.000    0.676    0.000 lock_util.py:119(__init__)
      583    0.001    0.000    0.674    0.001 resource_variable_ops.py:1908(_dense_var_to_tensor)
   847505    0.512    0.000    0.673    0.000 control_flow_util.py:180(GetOutputContext)
      583    0.002    0.000    0.672    0.001 resource_variable_ops.py:1317(_dense_var_to_tensor)
        4    0.000    0.000    0.671    0.168 distribute_lib.py:1130(run)
        4    0.000    0.000    0.670    0.168 distribute_lib.py:2537(call_for_each_replica)
        4    0.000    0.000    0.670    0.167 distribute_lib.py:2941(_call_for_each_replica)
   120424    0.669    0.000    0.669    0.000 function.py:474(<listcomp>)
   242258    0.293    0.000    0.667    0.000 ag_ctx.py:53(__enter__)
     1847    0.031    0.000    0.667    0.000 callbacks.py:1045(on_epoch_end)
      583    0.003    0.000    0.664    0.001 resource_variable_ops.py:550(value)
  2031622    0.539    0.000    0.659    0.000 {built-in method builtins.issubclass}
    81766    0.115    0.000    0.658    0.000 distribution_strategy_context.py:215(get_strategy_and_replica_context)
   561276    0.511    0.000    0.655    0.000 base.py:677(_lookup_dependency)
        3    0.000    0.000    0.655    0.218 tmpu_v700ox.py:9(tf__train_function)
        3    0.000    0.000    0.655    0.218 training.py:785(step_function)
   120375    0.112    0.000    0.655    0.000 context.py:2351(remove_function)
  2366284    0.638    0.000    0.648    0.000 {method 'keys' of 'dict' objects}
   120424    0.325    0.000    0.647    0.000 function.py:356(_inference_name)
   253662    0.367    0.000    0.647    0.000 training.py:328(<genexpr>)
        3    0.000    0.000    0.647    0.216 training.py:788(run_step)
        3    0.000    0.000    0.641    0.214 training.py:716(train_step)
  5427085    0.641    0.000    0.641    0.000 multiarray.py:145(concatenate)
   575227    0.640    0.000    0.641    0.000 {method '__reduce_ex__' of 'object' objects}
  1127556    0.638    0.000    0.638    0.000 ops.py:5101(_distribution_strategy_stack)
   845111    0.636    0.000    0.636    0.000 op_def_library.py:64(_IsListParameter)
  2585494    0.613    0.000    0.631    0.000 object_identity.py:175(<genexpr>)
   120169    0.222    0.000    0.631    0.000 tensor_util.py:280(_check_not_tensor)
    41829    0.629    0.000    0.629    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextSyncExecutors}
  1132736    0.628    0.000    0.628    0.000 ops.py:4086(_name_stack)
   970560    0.624    0.000    0.624    0.000 _collections_abc.py:698(__init__)
   120366    0.248    0.000    0.621    0.000 execute.py:201(make_shape)
   365823    0.192    0.000    0.620    0.000 _asarray.py:16(asarray)
80143/80093    0.317    0.000    0.619    0.000 nest.py:126(_packed_nest_with_indices)
  1723413    0.617    0.000    0.617    0.000 tensor_spec.py:68(dtype)
    53838    0.154    0.000    0.617    0.000 Hanabi.py:277(score)
   120100    0.160    0.000    0.615    0.000 tf_inspect.py:335(getmodule)
   240119    0.611    0.000    0.611    0.000 {built-in method tensorflow.python._pywrap_utils.AssertSameStructureForData}
    52000    0.248    0.000    0.607    0.000 Hanabi.py:90(__init__)
   120424    0.199    0.000    0.601    0.000 ops.py:6351(get_collection)
   575274    0.330    0.000    0.600    0.000 pickle.py:723(save_tuple)
      156    0.040    0.000    0.597    0.004 tracking.py:103(_list_functions_for_serialization)
  1935804    0.594    0.000    0.594    0.000 ops.py:3043(_check_not_finalized)
    40020    0.124    0.000    0.590    0.000 data_adapter.py:117(__init__)
    40053    0.095    0.000    0.590    0.000 distribute_lib.py:791(scope)
  1741846    0.589    0.000    0.589    0.000 ops.py:796(_as_tf_output)
   286336    0.396    0.000    0.589    0.000 weakref.py:428(get)
   210178    0.588    0.000    0.588    0.000 def_function.py:752(_get_tracing_count)
  2661678    0.586    0.000    0.586    0.000 ops.py:2036(_get_control_flow_context)
    40020    0.312    0.000    0.583    0.000 training.py:2453(_check_call_args)
   687829    0.581    0.000    0.581    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
   120210    0.267    0.000    0.578    0.000 options.py:51(__setattr__)
   842258    0.422    0.000    0.577    0.000 inspect.py:81(ismethod)
   240318    0.343    0.000    0.572    0.000 os.py:742(encode)
    40020    0.118    0.000    0.571    0.000 data_adapter.py:529(can_handle)
  2389898    0.570    0.000    0.570    0.000 ops.py:392(op)
   836664    0.446    0.000    0.569    0.000 tensor_shape.py:819(rank)
  2073755    0.567    0.000    0.567    0.000 {method 'release' of '_thread.lock' objects}
    34104    0.157    0.000    0.561    0.000 threading.py:498(__init__)
     1847    0.055    0.000    0.561    0.000 callbacks.py:377(on_epoch_begin)
    53330    0.039    0.000    0.559    0.000 <__array_function__ internals>:2(atleast_2d)
   120084    0.275    0.000    0.557    0.000 config_lib.py:62(get_action)
   338516    0.372    0.000    0.551    0.000 object_identity.py:183(_wrap_key)
   966588    0.549    0.000    0.549    0.000 {built-in method sys.exc_info}
   281159    0.357    0.000    0.545    0.000 context.py:1831(ensure_initialized)
    40023    0.541    0.000    0.541    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
   240209    0.243    0.000    0.541    0.000 ag_ctx.py:35(control_status_ctx)
   240898    0.181    0.000    0.535    0.000 func_graph.py:1023(<genexpr>)
   284542    0.321    0.000    0.535    0.000 {method 'join' of 'str' objects}
   443831    0.476    0.000    0.528    0.000 op_def_library.py:89(<listcomp>)
       12    0.000    0.000    0.528    0.044 functional_saver.py:193(_traced_restore)
      281    0.003    0.000    0.528    0.002 gen_math_ops.py:5591(mat_mul)
   279018    0.289    0.000    0.526    0.000 threading.py:1062(_wait_for_tstate_lock)
    80834    0.333    0.000    0.523    0.000 ops.py:2979(_variable_creator_scope)
   120267    0.520    0.000    0.520    0.000 {method 'astype' of 'numpy.ndarray' objects}
   120375    0.153    0.000    0.520    0.000 context.py:1154(remove_function)
   440228    0.344    0.000    0.519    0.000 structure.py:296(<listcomp>)
   483109    0.449    0.000    0.519    0.000 inspect.py:159(isfunction)
   121221    0.225    0.000    0.518    0.000 tf_inspect.py:390(ismethod)
   606438    0.387    0.000    0.515    0.000 object_identity.py:63(__hash__)
       12    0.000    0.000    0.515    0.043 functional_saver.py:297(restore)
       12    0.000    0.000    0.515    0.043 functional_saver.py:310(restore_fn)
        3    0.000    0.000    0.514    0.171 training.py:2696(_minimize)
       12    0.002    0.000    0.513    0.043 functional_saver.py:80(restore)
   120424    0.228    0.000    0.511    0.000 object_identity.py:223(__len__)
   120424    0.196    0.000    0.509    0.000 func_graph.py:1081(flatten)
   141336    0.101    0.000    0.507    0.000 _asarray.py:88(asanyarray)
  1209611    0.502    0.000    0.502    0.000 {built-in method _thread.get_ident}
       12    0.007    0.001    0.502    0.042 save.py:276(map_resources)
  1049211    0.499    0.000    0.499    0.000 {method 'lower' of 'str' objects}
  2168535    0.498    0.000    0.498    0.000 _dill.py:1515(is_dill)
  1690194    0.496    0.000    0.496    0.000 __init__.py:1530(getEffectiveLevel)
    40053    0.096    0.000    0.494    0.000 distribute_lib.py:2892(_scope)
   108352    0.493    0.000    0.493    0.000 {method 'item' of 'numpy.generic' objects}
   120606    0.378    0.000    0.488    0.000 ops.py:4040(<listcomp>)
      276    0.001    0.000    0.474    0.002 resource_variable_ops.py:636(_map_resources)
  1373024    0.474    0.000    0.474    0.000 tensor_spec.py:63(shape)
      276    0.002    0.000    0.473    0.002 saveable_object_util.py:119(restore)
   162861    0.327    0.000    0.472    0.000 <frozen importlib._bootstrap>:997(_handle_fromlist)
    53330    0.181    0.000    0.468    0.000 shape_base.py:83(atleast_2d)
      260    0.003    0.000    0.468    0.002 nn_ops.py:3307(bias_add)
   146546    0.468    0.000    0.468    0.000 data_adapter.py:1184(steps)
   444700    0.343    0.000    0.467    0.000 func_graph.py:1057(<genexpr>)
   120861    0.463    0.000    0.463    0.000 {built-in method tensorflow.python._pywrap_tf_session.AddControlInput}
       12    0.005    0.000    0.463    0.039 save.py:703(_serialize_object_graph)
    80090    0.067    0.000    0.463    0.000 callbacks.py:235(<genexpr>)
   998202    0.461    0.000    0.461    0.000 context.py:514(ensure_initialized)
   120623    0.439    0.000    0.459    0.000 weakref.py:354(__init__)
      384    0.002    0.000    0.457    0.001 functional_ops.py:1175(<listcomp>)
   120100    0.217    0.000    0.455    0.000 inspect.py:714(getmodule)
  1817906    0.455    0.000    0.455    0.000 ops.py:2307(outputs)
   115963    0.145    0.000    0.454    0.000 function.py:2632(_is_ndarray)
      276    0.003    0.000    0.450    0.002 resource_variable_ops.py:2133(copy_to_graph_uninitialized)
     1716    0.007    0.000    0.448    0.000 function.py:177(_shape_relaxed_type_for_composite_tensor)
      289    0.007    0.000    0.447    0.002 resource_variable_ops.py:1821(__init__)
   532038    0.291    0.000    0.444    0.000 {method 'add' of 'set' objects}
   161574    0.443    0.000    0.443    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
   140434    0.206    0.000    0.443    0.000 iostream.py:307(_is_master_process)
   485430    0.439    0.000    0.439    0.000 ops.py:2801(name_from_scope_name)
    26832    0.214    0.000    0.437    0.000 Hanabi.py:340(is_ended)
    25501    0.180    0.000    0.434    0.000 Experiment.py:61(<listcomp>)
   280134    0.172    0.000    0.434    0.000 nest.py:241(<listcomp>)
   120151    0.422    0.000    0.433    0.000 converter.py:153(__init__)
   240234    0.223    0.000    0.432    0.000 cache.py:92(_get_key)
5148/1716    0.021    0.000    0.432    0.000 type_spec.py:134(_with_tensor_ranks_only)
   241905    0.275    0.000    0.431    0.000 <string>:12(__new__)
   560278    0.431    0.000    0.431    0.000 {built-in method _weakref.proxy}
    40020    0.238    0.000    0.429    0.000 callbacks.py:247(_add_default_callbacks)
   320552    0.428    0.000    0.428    0.000 {method 'ravel' of 'numpy.ndarray' objects}
  1401378    0.424    0.000    0.424    0.000 ops.py:3354(building_function)
  2294796    0.424    0.000    0.424    0.000 {built-in method builtins.callable}
   933309    0.421    0.000    0.421    0.000 {method 'update' of 'dict' objects}
  1415505    0.418    0.000    0.418    0.000 traceable_stack.py:121(<genexpr>)
45802/45801    0.101    0.000    0.411    0.000 ops.py:5744(executing_eagerly_outside_functions)
   241004    0.278    0.000    0.405    0.000 traceable_stack.py:131(copy)
       12    0.000    0.000    0.401    0.033 save_impl.py:202(default_save_signature)
    66631    0.279    0.000    0.400    0.000 Hanabi.py:263(<listcomp>)
  1530022    0.397    0.000    0.400    0.000 {method 'values' of 'dict' objects}
    40020    0.197    0.000    0.399    0.000 iterator_ops.py:525(__init__)
    40053    0.169    0.000    0.398    0.000 distribute_lib.py:2853(__init__)
    40709    0.397    0.000    0.397    0.000 {method 'copy' of 'numpy.ndarray' objects}
    40070    0.197    0.000    0.396    0.000 callbacks.py:815(_implements_train_batch_hooks)
    43364    0.114    0.000    0.395    0.000 context.py:2006(eager_mode)
  1127556    0.389    0.000    0.389    0.000 ops.py:3039(_variable_creator_stack)
   105113    0.156    0.000    0.388    0.000 tape.py:220(could_possibly_record)
   105089    0.347    0.000    0.387    0.000 function.py:1844(<listcomp>)
  1466745    0.387    0.000    0.387    0.000 tensor_shape.py:826(dims)
   120424    0.161    0.000    0.387    0.000 function.py:1581(<listcomp>)
   126218    0.386    0.000    0.386    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
    40019    0.107    0.000    0.381    0.000 ops.py:2263(_add_control_input)
      389    0.005    0.000    0.380    0.001 deprecation.py:473(new_func)
   326653    0.376    0.000    0.376    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
    44036    0.051    0.000    0.376    0.000 tensor_shape.py:1121(assert_is_compatible_with)
    14469    0.056    0.000    0.376    0.000 <__array_function__ internals>:2(argmax)
   104726    0.373    0.000    0.373    0.000 def_function.py:72(called_without_tracing)
    40020    0.093    0.000    0.372    0.000 data_adapter.py:448(can_handle)
   967332    0.368    0.000    0.370    0.000 ops.py:5061(<dictcomp>)
   361884    0.290    0.000    0.368    0.000 memory.py:24(dismantle_ordered_dict)
  1160576    0.367    0.000    0.367    0.000 dataset_ops.py:216(_variant_tensor)
    53838    0.235    0.000    0.365    0.000 Hanabi.py:278(<listcomp>)
     3430    0.007    0.000    0.361    0.000 function.py:3110(<genexpr>)
   560278    0.360    0.000    0.360    0.000 tracking.py:186(__init__)
        3    0.000    0.000    0.359    0.120 optimizer_v2.py:473(apply_gradients)
  1127556    0.358    0.000    0.358    0.000 ops.py:5133(_auto_cast_variable_read_dtype)
   120163    0.212    0.000    0.358    0.000 converter.py:174(__hash__)
   737660    0.355    0.000    0.355    0.000 {method 'replace' of 'str' objects}
     1715    0.008    0.000    0.354    0.000 function.py:169(_is_type_subset)
   129404    0.273    0.000    0.350    0.000 enum.py:267(__call__)
  1226289    0.348    0.000    0.348    0.000 context.py:1718(context_switches)
    40020    0.055    0.000    0.346    0.000 nest.py:1417(sequence_fn)
    27127    0.065    0.000    0.344    0.000 Experiment.py:166(<lambda>)
    40020    0.101    0.000    0.344    0.000 dataset_ops.py:565(_type_spec)
  1072449    0.342    0.000    0.342    0.000 function.py:2463(input_signature)
13728/3432    0.025    0.000    0.341    0.000 type_spec.py:148(relax)
    80090    0.043    0.000    0.341    0.000 data_adapter.py:550(<genexpr>)
   240209    0.143    0.000    0.338    0.000 api.py:153(is_autograph_artifact)
   483432    0.331    0.000    0.338    0.000 traceable_stack.py:83(__init__)
   240120    0.314    0.000    0.337    0.000 tracking.py:154(resource_tracker_scope)
   723287    0.336    0.000    0.336    0.000 {method 'split' of 'str' objects}
   120424    0.251    0.000    0.334    0.000 func_graph.py:735(external_captures)
   209054    0.146    0.000    0.334    0.000 layer_utils.py:43(has_weights)
44875/43891    0.119    0.000    0.326    0.000 data_structures.py:103(sticky_attribute_assignment)
   887662    0.322    0.000    0.322    0.000 op_def_library.py:235(_MaybeColocateWith)
   320568    0.115    0.000    0.320    0.000 generic_utils.py:792(is_default)
     2021    0.021    0.000    0.320    0.000 {built-in method builtins.print}
        6    0.000    0.000    0.318    0.053 distribute_lib.py:2683(merge_call)
        6    0.000    0.000    0.318    0.053 distribute_lib.py:2717(_merge_call)
    40020    0.071    0.000    0.317    0.000 dataset_ops.py:2920(_autotune_settings)
    40020    0.092    0.000    0.317    0.000 version_utils.py:114(disallow_legacy_graph)
    40020    0.111    0.000    0.317    0.000 dataset_ops.py:2907(_graph_rewrite_configs)
        3    0.000    0.000    0.316    0.105 optimizer_v2.py:588(_distributed_apply)
      384    0.002    0.000    0.314    0.001 ops.py:3360(create_op)
     2903    0.021    0.000    0.313    0.000 base_layer.py:1347(weights)
    50311    0.048    0.000    0.313    0.000 _collections_abc.py:664(__contains__)
     1847    0.018    0.000    0.313    0.000 callbacks.py:955(on_epoch_begin)
   120375    0.313    0.000    0.313    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextRemoveFunction}
   122196    0.220    0.000    0.308    0.000 function.py:1959(name)
       24    0.000    0.000    0.306    0.013 distribute_lib.py:2233(update)
     1092    0.010    0.000    0.305    0.000 save.py:725(_write_object_proto)
    40081    0.086    0.000    0.303    0.000 tensor_util.py:804(constant_value)
       24    0.000    0.000    0.303    0.013 distribute_lib.py:2952(_update)
       24    0.000    0.000    0.303    0.013 distribute_lib.py:2957(_update_non_slot)
       24    0.000    0.000    0.300    0.013 optimizer_v2.py:591(apply_grad_to_update_var)
       24    0.001    0.000    0.300    0.012 rmsprop.py:175(_resource_apply_dense)
    40070    0.137    0.000    0.298    0.000 data_adapter.py:535(_is_composite)
   240114    0.194    0.000    0.296    0.000 dataset_ops.py:2738(get_structure)
     2002    0.004    0.000    0.293    0.000 base_layer.py:2235(variables)
      276    0.002    0.000    0.292    0.001 resource_variable_ops.py:307(shape_safe_assign_variable_handle)
   210060    0.146    0.000    0.289    0.000 nest.py:954(<genexpr>)
    40062    0.070    0.000    0.288    0.000 distribution_strategy_context.py:199(has_strategy)
   120424    0.241    0.000    0.287    0.000 ops.py:3997(get_collection)
   566748    0.285    0.000    0.285    0.000 ops.py:5035(_device_function_stack)
    91302    0.284    0.000    0.284    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   328242    0.281    0.000    0.281    0.000 {method 'decode' of 'bytes' objects}
    41277    0.150    0.000    0.280    0.000 resource_variable_ops.py:317(_maybe_set_handle_data)
   120424    0.278    0.000    0.278    0.000 function.py:3061(<listcomp>)
   120060    0.142    0.000    0.277    0.000 dataset_ops.py:3366(<listcomp>)
    46728    0.031    0.000    0.276    0.000 __init__.py:340(set_verbosity)
   120100    0.164    0.000    0.275    0.000 inspect_utils.py:96(isconstructor)
       24    0.002    0.000    0.275    0.011 graph_view.py:336(_serialize_gathered_objects)
   606331    0.274    0.000    0.274    0.000 func_graph.py:427(outer_graph)
    40020    0.072    0.000    0.272    0.000 gen_dataset_ops.py:6697(<listcomp>)
   717043    0.272    0.000    0.272    0.000 context.py:749(_handle)
  1401386    0.272    0.000    0.272    0.000 tensor_spec.py:37(<lambda>)
     1936    0.085    0.000    0.271    0.000 training.py:589(metrics)
    40019    0.057    0.000    0.271    0.000 gen_dataset_ops.py:6628(<listcomp>)
    14469    0.046    0.000    0.270    0.000 fromnumeric.py:1112(argmax)
210058/210034    0.130    0.000    0.267    0.000 nest.py:750(assert_shallow_structure)
   442120    0.265    0.000    0.265    0.000 array_ops.py:1485(<genexpr>)
       12    0.000    0.000    0.264    0.022 saving_utils.py:125(_wrapped_model)
41480/41444    0.114    0.000    0.264    0.000 tracking.py:440(wrapped)
   120424    0.089    0.000    0.263    0.000 object_identity.py:225(<listcomp>)
   717076    0.263    0.000    0.263    0.000 context.py:813(device_name)
   240700    0.263    0.000    0.263    0.000 {method 'SetInParent' of 'google.protobuf.pyext._message.CMessage' objects}
   265841    0.189    0.000    0.262    0.000 object_identity.py:128(_wrap_key)
     1719    0.007    0.000    0.255    0.000 type_spec.py:110(most_specific_compatible_type)
   173232    0.255    0.000    0.255    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
   160759    0.223    0.000    0.255    0.000 device.py:45(is_device_spec)
   250535    0.199    0.000    0.253    0.000 inspect.py:2781(<genexpr>)
   606438    0.251    0.000    0.251    0.000 object_identity.py:35(__init__)
   244914    0.250    0.000    0.250    0.000 iostream.py:93(_event_pipe)
    13832    0.058    0.000    0.250    0.000 Hanabi.py:237(getHint)
   966536    0.249    0.000    0.249    0.000 errors_impl.py:86(message)
    40019    0.043    0.000    0.248    0.000 gen_dataset_ops.py:895(<listcomp>)
   202143    0.114    0.000    0.246    0.000 tensor_shape.py:838(ndims)
    46728    0.058    0.000    0.245    0.000 _flagvalues.py:500(__setattr__)
    88098    0.107    0.000    0.243    0.000 resource_variable_ops.py:246(_handle_graph)
   573877    0.243    0.000    0.243    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
6874/1719    0.032    0.000    0.242    0.000 type_spec.py:395(__most_specific_compatible_type_serialization)
    40019    0.061    0.000    0.242    0.000 gen_dataset_ops.py:890(<listcomp>)
    68133    0.133    0.000    0.242    0.000 Hanabi.py:377(<dictcomp>)
   321518    0.242    0.000    0.242    0.000 context.py:823(_set_device)
   244070    0.237    0.000    0.238    0.000 object_identity.py:227(__iter__)
   140446    0.237    0.000    0.237    0.000 {built-in method posix.getpid}
    40118    0.083    0.000    0.234    0.000 tensor_shape.py:1166(is_fully_defined)
    80143    0.144    0.000    0.234    0.000 nest.py:53(_sequence_like)
   972386    0.234    0.000    0.234    0.000 ops.py:3148(_get_control_flow_context)
   966668    0.234    0.000    0.234    0.000 control_flow_util.py:191(GetContainingWhileContext)
   163478    0.127    0.000    0.233    0.000 object_identity.py:54(__eq__)
   456864    0.231    0.000    0.231    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
   443954    0.231    0.000    0.231    0.000 ops.py:452(<listcomp>)
8592/3438    0.009    0.000    0.231    0.000 type_spec.py:429(<genexpr>)
   200100    0.167    0.000    0.230    0.000 dataset_ops.py:4108(element_spec)
    40020    0.085    0.000    0.230    0.000 dataset_ops.py:3122(__init__)
   573646    0.229    0.000    0.229    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
       24    0.000    0.000    0.229    0.010 gen_io_ops.py:466(merge_v2_checkpoints)
   573886    0.228    0.000    0.228    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
       12    0.000    0.000    0.227    0.019 functional_saver.py:184(_traced_save)
    14649    0.033    0.000    0.227    0.000 fromnumeric.py:55(_wrapfunc)
   573589    0.227    0.000    0.227    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
   721218    0.227    0.000    0.227    0.000 tensor_shape.py:790(_v2_behavior)
    24213    0.133    0.000    0.226    0.000 Experiment.py:44(<listcomp>)
       48    0.015    0.000    0.225    0.005 graph_view.py:89(_serialize_slot_variables)
   120424    0.180    0.000    0.222    0.000 func_graph.py:750(deferred_internal_captures)
   368544    0.172    0.000    0.221    0.000 tensor_shape.py:704(as_dimension)
    40020    0.064    0.000    0.219    0.000 training.py:2772(_disallow_inside_tf_function)
   283100    0.176    0.000    0.217    0.000 function.py:422(<genexpr>)
    26832    0.112    0.000    0.215    0.000 Experiment.py:42(<listcomp>)
   120424    0.177    0.000    0.215    0.000 func_graph.py:745(deferred_external_captures)
   540809    0.214    0.000    0.214    0.000 iterator_ops.py:885(_serialize)
   200100    0.161    0.000    0.214    0.000 dataset_ops.py:4058(element_spec)
  1761130    0.214    0.000    0.214    0.000 options.py:59(<lambda>)
    40020    0.116    0.000    0.214    0.000 optimization_options.py:196(_autotune_settings)
        2    0.000    0.000    0.212    0.106 pyplot.py:720(savefig)
   120662    0.212    0.000    0.212    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
       12    0.000    0.000    0.211    0.018 gen_io_ops.py:521(merge_v2_checkpoints_eager_fallback)
   120424    0.153    0.000    0.210    0.000 function.py:475(<listcomp>)
    44093    0.209    0.000    0.210    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
       24    0.002    0.000    0.206    0.009 graph_view.py:412(objects_ids_and_slot_variables)
      202    0.001    0.000    0.205    0.001 math_ops.py:1122(binary_op_wrapper)
   321196    0.204    0.000    0.204    0.000 func_graph.py:97(<genexpr>)
    80038    0.082    0.000    0.204    0.000 dataset_ops.py:2775(<lambda>)
   240429    0.170    0.000    0.204    0.000 nest.py:81(_yield_value)
   120412    0.204    0.000    0.204    0.000 func_graph.py:127(<listcomp>)
   120424    0.203    0.000    0.203    0.000 c_api_util.py:86(__init__)
   240257    0.203    0.000    0.203    0.000 dtypes.py:103(as_numpy_dtype)
     3564    0.202    0.000    0.202    0.000 {built-in method builtins.dir}
   573606    0.202    0.000    0.202    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
   201837    0.200    0.000    0.200    0.000 function.py:484(<genexpr>)
   120618    0.200    0.000    0.200    0.000 threading.py:74(RLock)
    42282    0.136    0.000    0.199    0.000 tensor_util.py:986(is_tensor)
   105113    0.197    0.000    0.197    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetPossibleGradientTypes}
   560208    0.196    0.000    0.196    0.000 tracking.py:199(__del__)
   240994    0.188    0.000    0.195    0.000 function.py:2421(<dictcomp>)
   240270    0.107    0.000    0.195    0.000 data_adapter.py:252(<genexpr>)
    80090    0.055    0.000    0.194    0.000 callbacks.py:239(<genexpr>)
       12    0.000    0.000    0.194    0.016 graph_view.py:389(frozen_saveable_objects)
       12    0.000    0.000    0.193    0.016 file_io.py:549(atomic_write_string_to_file)
   120424    0.163    0.000    0.193    0.000 func_graph.py:491(variables)
   105113    0.193    0.000    0.193    0.000 function.py:271(__exit__)
    55328    0.115    0.000    0.192    0.000 Hanabi.py:99(receive_hint)
   309302    0.191    0.000    0.191    0.000 {built-in method _thread.allocate_lock}
   280187    0.191    0.000    0.191    0.000 distribution_strategy_context.py:337(_get_default_replica_mode)
    56912    0.091    0.000    0.190    0.000 object_identity.py:134(__setitem__)
    40020    0.068    0.000    0.190    0.000 data_adapter.py:617(can_handle)
      168    0.000    0.000    0.188    0.001 base_layer.py:3009(_tracking_metadata)
     3437    0.027    0.000    0.188    0.000 tensor_spec.py:100(most_specific_compatible_type)
      168    0.001    0.000    0.188    0.001 base_serialization.py:45(tracking_metadata)
      132    0.002    0.000    0.188    0.001 function_serialization.py:94(serialize_function)
    41522    0.077    0.000    0.187    0.000 execute.py:191(make_type)
   210226    0.186    0.000    0.186    0.000 context.py:135(config_proto_serialized)
    392/4    0.001    0.000    0.184    0.046 artist.py:30(draw_wrapper)
        4    0.000    0.000    0.184    0.046 figure.py:1688(draw)
      306    0.003    0.000    0.184    0.001 resource_variable_ops.py:146(_variable_handle_from_shape_and_dtype)
   105054    0.182    0.000    0.182    0.000 weakref.py:393(__getitem__)
    40020    0.099    0.000    0.182    0.000 callbacks.py:1038(__init__)
      8/4    0.000    0.000    0.182    0.045 image.py:119(_draw_list_compositing_images)
        4    0.000    0.000    0.182    0.045 _base.py:2555(draw)
   440218    0.182    0.000    0.182    0.000 dataset_ops.py:348(options)
    40020    0.044    0.000    0.181    0.000 dataset_ops.py:3493(_inputs)
    24144    0.065    0.000    0.181    0.000 Experiment.py:63(<listcomp>)
    14469    0.180    0.000    0.180    0.000 {method 'argmax' of 'numpy.ndarray' objects}
   160759    0.179    0.000    0.179    0.000 context.py:1733(__init__)
   244290    0.179    0.000    0.179    0.000 tf_logging.py:93(get_logger)
    80090    0.055    0.000    0.179    0.000 callbacks.py:237(<genexpr>)
   120618    0.178    0.000    0.178    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
   361200    0.174    0.000    0.175    0.000 function.py:3760(__init__)
   240206    0.113    0.000    0.175    0.000 api.py:148(autograph_artifact)
    64490    0.149    0.000    0.174    0.000 callbacks.py:675(on_train_batch_end)
   137346    0.172    0.000    0.172    0.000 trace.py:52(__init__)
       12    0.000    0.000    0.171    0.014 util.py:1100(_gather_saveables)
       12    0.000    0.000    0.168    0.014 ops.py:3268(as_graph_def)
    34092    0.161    0.000    0.167    0.000 _methods.py:50(_count_reduce_items)
       12    0.044    0.004    0.167    0.014 ops.py:3178(_as_graph_def)
      260    0.003    0.000    0.167    0.001 gen_nn_ops.py:648(bias_add)
       12    0.000    0.000    0.166    0.014 graph_view.py:364(serialize_object_graph)
   120424    0.117    0.000    0.163    0.000 function.py:442(<listcomp>)
    40125    0.077    0.000    0.162    0.000 object_identity.py:137(__delitem__)
   120424    0.161    0.000    0.161    0.000 function.py:423(<listcomp>)
44877/44875    0.142    0.000    0.161    0.000 data_structures.py:80(wrap_or_unwrap)
        8    0.000    0.000    0.160    0.020 axis.py:1219(draw)
      306    0.004    0.000    0.160    0.001 gen_resource_variable_ops.py:1163(var_handle_op)
    40020    0.038    0.000    0.159    0.000 data_adapter.py:756(can_handle)
    81766    0.159    0.000    0.159    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
   120424    0.134    0.000    0.159    0.000 func_graph.py:919(<listcomp>)
    17268    0.030    0.000    0.158    0.000 save.py:108(list_dependencies)
     3295    0.017    0.000    0.157    0.000 base_layer.py:1311(trainable_weights)
      144    0.000    0.000    0.157    0.001 layer_serialization.py:38(python_properties)
    40103    0.081    0.000    0.155    0.000 ops.py:5777(inside_function)
   323078    0.155    0.000    0.155    0.000 op_def_library.py:46(_AttrValue)
     4584    0.023    0.000    0.155    0.000 backend.py:489(deprecated_internal_learning_phase_scope)
    80040    0.092    0.000    0.154    0.000 type_spec.py:501(<genexpr>)
   120424    0.124    0.000    0.154    0.000 func_graph.py:1093(<listcomp>)
   561437    0.153    0.000    0.153    0.000 base.py:662(_deferred_dependencies)
   108268    0.152    0.000    0.152    0.000 fromnumeric.py:3037(ndim)
        3    0.000    0.000    0.152    0.051 backprop.py:983(gradient)
        3    0.000    0.000    0.152    0.051 imperative_grad.py:33(imperative_grad)
        3    0.001    0.000    0.152    0.051 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeGradient}
    46899    0.097    0.000    0.151    0.000 tensor_shape.py:215(__eq__)
   610642    0.151    0.000    0.151    0.000 {method 'values' of 'collections.OrderedDict' objects}
       12    0.000    0.000    0.151    0.013 signature_serialization.py:96(canonicalize_signatures)
     3280    0.013    0.000    0.149    0.000 base_layer.py:1326(non_trainable_weights)
       51    0.001    0.000    0.149    0.003 backprop.py:132(_gradient_function)
   129603    0.148    0.000    0.148    0.000 weakref.py:406(__setitem__)
    40020    0.072    0.000    0.148    0.000 optimization_options.py:259(_graph_rewrite_configs)
       48    0.016    0.000    0.144    0.003 graph_view.py:185(_breadth_first_traversal)
    40032    0.144    0.000    0.144    0.000 {built-in method math.ceil}
     6575    0.055    0.000    0.143    0.000 base_layer.py:2835(_gather_children_attribute)
    72486    0.069    0.000    0.143    0.000 nest.py:1232(<listcomp>)
    40020    0.077    0.000    0.143    0.000 dataset_ops.py:3487(<listcomp>)
   361538    0.143    0.000    0.143    0.000 context.py:818(device_spec)
    20201    0.087    0.000    0.143    0.000 base_layer.py:2847(_flatten_layers)
    40193    0.083    0.000    0.142    0.000 monitoring.py:303(set)
   120300    0.107    0.000    0.142    0.000 function.py:2845(flat_input_signature)
    80465    0.104    0.000    0.142    0.000 ops.py:1794(<listcomp>)
    40020    0.128    0.000    0.141    0.000 distribute_lib.py:943(experimental_distribute_dataset)
   120424    0.141    0.000    0.141    0.000 function.py:441(<listcomp>)
        2    0.000    0.000    0.140    0.070 figure.py:2063(savefig)
        2    0.000    0.000    0.140    0.070 backend_bases.py:2001(print_figure)
   320160    0.140    0.000    0.140    0.000 dataset_ops.py:2960(_inputs)
    40070    0.075    0.000    0.139    0.000 callbacks.py:827(_implements_predict_batch_hooks)
   480240    0.138    0.000    0.138    0.000 dataset_ops.py:3387(output_structure)
        2    0.000    0.000    0.137    0.068 backend_pdf.py:2532(print_pdf)
    26832    0.075    0.000    0.136    0.000 Hanabi.py:341(<listcomp>)
    96735    0.111    0.000    0.133    0.000 callbacks.py:659(on_train_batch_begin)
    80038    0.092    0.000    0.132    0.000 dataset_ops.py:2809(<lambda>)
   105113    0.132    0.000    0.132    0.000 context.py:1056(function_call_options)
   240994    0.130    0.000    0.131    0.000 function.py:2427(<dictcomp>)
    46728    0.018    0.000    0.131    0.000 __init__.py:174(value)
    40020    0.099    0.000    0.130    0.000 data_adapter.py:1239(_infer_steps)
   120169    0.105    0.000    0.129    0.000 tensor_util.py:281(<listcomp>)
    80040    0.076    0.000    0.129    0.000 optimization_options.py:189(_autotune_buffers)
   121272    0.128    0.000    0.129    0.000 {method 'popitem' of 'collections.OrderedDict' objects}
    34092    0.075    0.000    0.127    0.000 callbacks.py:985(_maybe_init_progbar)
    40020    0.071    0.000    0.127    0.000 iterator_ops.py:71(_device_stack_is_empty)
     6688    0.031    0.000    0.126    0.000 base_layer.py:2958(_dedup_weights)
   120085    0.124    0.000    0.125    0.000 weakref.py:356(remove)
   212950    0.124    0.000    0.124    0.000 iterator_ops.py:820(element_spec)
   216385    0.124    0.000    0.124    0.000 iterator_ops.py:878(__init__)
   338355    0.124    0.000    0.124    0.000 Hanabi.py:16(handSize)
    40070    0.066    0.000    0.123    0.000 callbacks.py:822(_implements_test_batch_hooks)
   120210    0.101    0.000    0.123    0.000 options.py:80(set_fn)
    80038    0.089    0.000    0.123    0.000 tensor_spec.py:116(_to_legacy_output_classes)
    40070    0.076    0.000    0.122    0.000 data_adapter.py:625(_is_list_of_scalars)
    40543    0.106    0.000    0.122    0.000 {method 'sort' of 'list' objects}
    40019    0.065    0.000    0.121    0.000 abc.py:196(__subclasscheck__)
   121457    0.121    0.000    0.121    0.000 {method 'values' of 'mappingproxy' objects}
        4    0.001    0.000    0.119    0.030 base_layer.py:996(_functional_construction_call)
   120424    0.090    0.000    0.119    0.000 object_identity.py:208(__len__)
       24    0.000    0.000    0.119    0.005 model_serialization.py:34(_python_properties_internal)
       12    0.000    0.000    0.118    0.010 file_io.py:323(write_string_to_file)
    80038    0.081    0.000    0.117    0.000 dataset_ops.py:2792(<lambda>)
     2570    0.031    0.000    0.116    0.000 custom_gradient.py:45(copy_handle_data)
   105113    0.116    0.000    0.116    0.000 function.py:265(__init__)
    84362    0.051    0.000    0.116    0.000 base_layer.py:2697(_maybe_create_attribute)
      103    0.001    0.000    0.115    0.001 gen_math_ops.py:6143(mul)
   173961    0.112    0.000    0.113    0.000 {built-in method builtins.sum}
   120116    0.091    0.000    0.113    0.000 inspect.py:64(ismodule)
    46728    0.047    0.000    0.113    0.000 __init__.py:179(_update_logging_levels)
    40575    0.078    0.000    0.113    0.000 types.py:135(__get__)
   129078    0.113    0.000    0.113    0.000 {method 'isidentifier' of 'str' objects}
   120100    0.093    0.000    0.112    0.000 inspect.py:277(isbuiltin)
   120346    0.095    0.000    0.112    0.000 context.py:1841(global_seed)
       97    0.000    0.000    0.112    0.001 math_ops.py:463(multiply)
   240117    0.112    0.000    0.112    0.000 dataset_ops.py:2991(element_spec)
    76503    0.111    0.000    0.111    0.000 Hanabi.py:280(availableActions)
      195    0.001    0.000    0.111    0.001 activations.py:190(softplus)
   120137    0.090    0.000    0.111    0.000 inspect.py:73(isclass)
      195    0.002    0.000    0.110    0.001 gen_nn_ops.py:10917(softplus)
   360817    0.107    0.000    0.110    0.000 ops.py:1922(<listcomp>)
       91    0.000    0.000    0.109    0.001 math_ops.py:1450(_mul_dispatch)
   243220    0.107    0.000    0.107    0.000 function.py:763(forward)
   104729    0.107    0.000    0.107    0.000 data_adapter.py:1232(should_sync)
 6744/360    0.013    0.000    0.106    0.000 generic_utils.py:235(serialize_keras_object)
   163478    0.079    0.000    0.106    0.000 object_identity.py:42(_assert_type)
       12    0.013    0.001    0.105    0.009 file_io.py:99(write)
    40020    0.077    0.000    0.105    0.000 callbacks.py:269(set_params)
   173138    0.104    0.000    0.104    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
    60/12    0.001    0.000    0.104    0.009 save_impl.py:210(_replace_child_layer_functions)
     3692    0.038    0.000    0.104    0.000 backend.py:1341(dtype)
   173138    0.103    0.000    0.103    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
    80081    0.080    0.000    0.102    0.000 op_def_library.py:447(<listcomp>)
   120424    0.078    0.000    0.102    0.000 function.py:443(<listcomp>)
       48    0.000    0.000    0.100    0.002 functional.py:597(get_config)
    63323    0.071    0.000    0.100    0.000 random.py:223(_randbelow)
    81766    0.100    0.000    0.100    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
      384    0.002    0.000    0.100    0.000 functional_ops.py:1217(_set_read_only_resource_inputs_attr)
       15    0.000    0.000    0.099    0.007 base.py:691(_add_variable_with_custom_getter)
    34002    0.062    0.000    0.099    0.000 threading.py:251(_acquire_restore)
       15    0.000    0.000    0.098    0.007 base_layer_utils.py:55(make_variable)
   120103    0.098    0.000    0.098    0.000 api.py:217(convert)
       15    0.000    0.000    0.097    0.006 variables.py:182(_variable_v1_call)
   120374    0.097    0.000    0.097    0.000 ops.py:3112(seed)
        4    0.000    0.000    0.097    0.024 base_layer.py:2614(_maybe_build)
       17    0.000    0.000    0.097    0.006 resource_variable_ops.py:1419(__init__)
       17    0.001    0.000    0.097    0.006 resource_variable_ops.py:1520(_init_from_args)
       10    0.000    0.000    0.096    0.010 base_layer.py:477(add_weight)
   245584    0.096    0.000    0.096    0.000 func_graph.py:743(<listcomp>)
        4    0.000    0.000    0.096    0.024 core.py:1159(build)
   137346    0.096    0.000    0.096    0.000 trace.py:123(__exit__)
      216    0.004    0.000    0.095    0.000 function_serialization.py:52(serialize_concrete_function)
   245032    0.095    0.000    0.095    0.000 function.py:501(name)
   120060    0.094    0.000    0.094    0.000 tracking.py:143(__init__)
   120060    0.075    0.000    0.094    0.000 base.py:1192(isspmatrix)
       10    0.000    0.000    0.094    0.009 variables.py:199(<lambda>)
       10    0.000    0.000    0.094    0.009 variable_scope.py:2557(default_variable_creator)
    53362    0.029    0.000    0.093    0.000 shape_base.py:220(_vhstack_dispatcher)
   120424    0.093    0.000    0.093    0.000 function.py:2479(vararg_name)
   164571    0.093    0.000    0.093    0.000 tensor_spec.py:73(name)
   242936    0.093    0.000    0.093    0.000 function.py:1974(structured_input_signature)
   107328    0.084    0.000    0.092    0.000 Hanabi.py:188(__init__)
       12    0.092    0.008    0.092    0.008 file_io.py:81(_prewrite_check)
   241100    0.091    0.000    0.091    0.000 function.py:2447(fullargspec)
      120    0.002    0.000    0.091    0.001 layer_serialization.py:43(_python_properties_internal)
   279018    0.090    0.000    0.090    0.000 threading.py:506(is_set)
    40020    0.081    0.000    0.089    0.000 data_adapter.py:884(can_handle)
   120210    0.063    0.000    0.089    0.000 data_adapter.py:247(_is_tensor)
       16    0.001    0.000    0.088    0.006 axis.py:1098(_update_ticks)
   120208    0.068    0.000    0.088    0.000 tensor_shape.py:1169(<genexpr>)
   104764    0.088    0.000    0.088    0.000 iterator_ops.py:895(_to_components)
    12363    0.033    0.000    0.087    0.000 random.py:255(choice)
   120060    0.087    0.000    0.087    0.000 dataset_ops.py:4023(_should_unpack_args)
   122155    0.087    0.000    0.087    0.000 ag_ctx.py:49(__init__)
    40224    0.075    0.000    0.087    0.000 op_def_library.py:148(_MakeInt)
   120399    0.059    0.000    0.087    0.000 function.py:3784(__del__)
     7456    0.010    0.000    0.086    0.000 ops.py:1173(get_shape)
        4    0.000    0.000    0.086    0.022 initializers_v2.py:387(__call__)
        4    0.000    0.000    0.086    0.022 init_ops_v2.py:528(__call__)
        4    0.000    0.000    0.086    0.022 init_ops_v2.py:1037(random_uniform)
        4    0.001    0.000    0.086    0.021 random_ops.py:207(random_uniform)
   127890    0.085    0.000    0.085    0.000 object_identity.py:38(unwrapped)
    40020    0.047    0.000    0.084    0.000 optimization_options.py:55(_graph_rewrites)
   120400    0.084    0.000    0.084    0.000 function.py:381(__init__)
     7775    0.042    0.000    0.084    0.000 layer_utils.py:234(filter_empty_layer_containers)
   120424    0.084    0.000    0.084    0.000 variable_scope.py:1166(use_resource)
    40120    0.083    0.000    0.083    0.000 callbacks.py:607(__init__)
   120321    0.083    0.000    0.083    0.000 converter.py:170(as_tuple)
      600    0.004    0.000    0.083    0.000 function.py:489(add_to_graph)
   282276    0.082    0.000    0.082    0.000 {method 'append' of 'collections.deque' objects}
      144    0.001    0.000    0.082    0.001 layer_serialization.py:113(get_config)
   104729    0.081    0.000    0.081    0.000 data_adapter.py:1212(step_increment)
       24    0.013    0.001    0.081    0.003 graph_view.py:318(_fill_object_graph_proto)
    92538    0.040    0.000    0.079    0.000 pickle.py:641(save_none)
      384    0.010    0.000    0.079    0.000 auto_control_deps_utils.py:36(get_read_only_resource_input_indices_graph)
   105089    0.079    0.000    0.079    0.000 trace.py:89(set_metadata)
   258156    0.078    0.000    0.078    0.000 inspect.py:2502(name)
   240120    0.078    0.000    0.078    0.000 dataset_ops.py:3409(function)
     6575    0.009    0.000    0.078    0.000 base_layer.py:2844(<genexpr>)
   120618    0.077    0.000    0.077    0.000 ops.py:4981(switch_to_thread_local)
   129404    0.077    0.000    0.077    0.000 enum.py:517(__new__)
     6264    0.007    0.000    0.077    0.000 graph_view.py:158(list_dependencies)
    96852    0.069    0.000    0.077    0.000 Hanabi.py:180(__init__)
   107328    0.076    0.000    0.076    0.000 Hanabi.py:304(availableActions)
    26832    0.051    0.000    0.076    0.000 Hanabi.py:354(next_player)
       12    0.003    0.000    0.076    0.006 meta_graph.py:457(strip_graph_default_valued_attrs)
       48    0.003    0.000    0.076    0.002 functional.py:1244(get_network_config)
      696    0.001    0.000    0.075    0.000 nested_structure_coder.py:86(encode_structure)
    48510    0.075    0.000    0.075    0.000 ops.py:1217(graph)
      852    0.005    0.000    0.075    0.000 ops.py:3319(_add_function)
    40197    0.061    0.000    0.074    0.000 execute.py:166(make_int)
   120424    0.074    0.000    0.074    0.000 function.py:3777(__init__)
       12    0.000    0.000    0.074    0.006 tmpjrr6y7yw.py:9(tf__signature_wrapper)
       12    0.000    0.000    0.074    0.006 file_io.py:516(rename)
       12    0.000    0.000    0.074    0.006 file_io.py:532(rename_v2)
       12    0.073    0.006    0.073    0.006 {built-in method tensorflow.python._pywrap_file_io.RenameFile}
     3168    0.019    0.000    0.073    0.000 meta_graph.py:474(_strip_node_default_valued_attrs)
        2    0.000    0.000    0.072    0.036 backend_bases.py:1932(draw_idle)
     6867    0.012    0.000    0.072    0.000 type_spec.py:286(_deserialize)
        2    0.000    0.000    0.072    0.036 backend_agg.py:384(draw)
       69    0.002    0.000    0.072    0.001 axis.py:56(__init__)
   127474    0.072    0.000    0.072    0.000 distribute_lib.py:771(extended)
   250620    0.072    0.000    0.072    0.000 function.py:1964(graph)
 3912/696    0.012    0.000    0.071    0.000 nested_structure_coder.py:78(_map_structure)
   120060    0.070    0.000    0.070    0.000 tracking.py:146(resources)
      340    0.002    0.000    0.070    0.000 def_function.py:579(_defun_with_scope)
   240848    0.070    0.000    0.070    0.000 function.py:2475(arg_names)
       12    0.000    0.000    0.070    0.006 function.py:1605(__call__)
       12    0.000    0.000    0.070    0.006 function.py:1657(_call_impl)
       12    0.000    0.000    0.069    0.006 function.py:1675(_call_with_flat_signature)
   225593    0.069    0.000    0.069    0.000 function.py:2014(<listcomp>)
     1040    0.020    0.000    0.068    0.000 random.py:263(shuffle)
   125136    0.068    0.000    0.068    0.000 function.py:3780(release)
   121126    0.068    0.000    0.068    0.000 tf2.py:42(enabled)
    80040    0.067    0.000    0.067    0.000 data_adapter.py:1147(_truncate_execution_to_epoch)
      852    0.066    0.000    0.066    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
    34104    0.053    0.000    0.064    0.000 threading.py:242(__exit__)
   120060    0.064    0.000    0.064    0.000 def_function.py:423(functions_run_eagerly)
    53489    0.035    0.000    0.064    0.000 shape_base.py:209(_arrays_for_stack_dispatcher)
   105113    0.064    0.000    0.064    0.000 context.py:127(executor_type)
       24    0.001    0.000    0.064    0.003 saving_utils.py:147(model_metadata)
      384    0.007    0.000    0.063    0.000 save_impl.py:309(_reset_layer_losses)
    43819    0.031    0.000    0.062    0.000 ops.py:535(get_shape)
       19    0.062    0.003    0.062    0.003 {built-in method io.open}
      288    0.003    0.000    0.062    0.000 core.py:1209(get_config)
    40020    0.043    0.000    0.061    0.000 dataset_ops.py:3489(<listcomp>)
   200100    0.059    0.000    0.059    0.000 dataset_ops.py:3605(element_spec)
      340    0.002    0.000    0.059    0.000 def_function.py:629(_defun)
    40193    0.059    0.000    0.059    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
    34104    0.042    0.000    0.059    0.000 threading.py:239(__enter__)
      387    0.005    0.000    0.059    0.000 tf_inspect.py:260(getcallargs)
   120424    0.059    0.000    0.059    0.000 function.py:2836(function_spec)
        3    0.000    0.000    0.059    0.020 compile_utils.py:164(__call__)
        4    0.000    0.000    0.059    0.015 gen_random_ops.py:695(random_uniform)
       24    0.013    0.001    0.058    0.002 graph_view.py:209(_add_attributes_to_object_graph)
  240/216    0.022    0.000    0.056    0.000 ops.py:6267(dismantle_graph)
    47632    0.047    0.000    0.056    0.000 Hanabi.py:147(numberOfTiles)
        9    0.000    0.000    0.055    0.006 math_grad.py:147(_SumGrad)
   120058    0.055    0.000    0.055    0.000 dataset_ops.py:3018(element_spec)
   120606    0.055    0.000    0.055    0.000 ops.py:3117(seed)
     1040    0.004    0.000    0.054    0.000 Hanabi.py:301(<listcomp>)
       12    0.009    0.001    0.054    0.005 save.py:247(fill_object_graph_proto)
    40020    0.033    0.000    0.053    0.000 data_adapter.py:1474(pack_x_y_sample_weight)
    88494    0.053    0.000    0.053    0.000 resource_variable_ops.py:545(handle)
    32514    0.039    0.000    0.053    0.000 training.py:1609(<lambda>)
       60    0.002    0.000    0.052    0.001 save_impl.py:83(wrap_layer_objects)
   266524    0.052    0.000    0.052    0.000 Hanabi.py:220(<listcomp>)
    72484    0.052    0.000    0.052    0.000 callbacks.py:476(on_predict_batch_end)
    86365    0.051    0.000    0.051    0.000 resource_variable_ops.py:588(trainable)
     5200    0.011    0.000    0.051    0.000 Hanabi.py:226(__init__)
       84    0.000    0.000    0.050    0.001 module.py:171(submodules)
    84602    0.050    0.000    0.050    0.000 object_identity.py:125(__init__)
       48    0.000    0.000    0.050    0.001 state_ops.py:198(assign)
  204/144    0.009    0.000    0.050    0.000 module.py:317(_flatten_module)
        3    0.000    0.000    0.050    0.017 math_grad.py:249(_MeanGrad)
   120149    0.049    0.000    0.049    0.000 numeric.py:2283(_array_equal_dispatcher)
     1936    0.023    0.000    0.049    0.000 compile_utils.py:123(metrics)
   129078    0.049    0.000    0.049    0.000 inspect.py:2514(kind)
     1847    0.029    0.000    0.048    0.000 generic_utils.py:497(__init__)
    46728    0.020    0.000    0.048    0.000 _flagvalues.py:525(_assert_validators)
   120424    0.048    0.000    0.048    0.000 function.py:2471(is_pure)
   160079    0.048    0.000    0.048    0.000 dataset_ops.py:2949(_inputs)
    72484    0.048    0.000    0.048    0.000 callbacks.py:464(on_predict_batch_begin)
     1847    0.029    0.000    0.048    0.000 callbacks.py:1660(on_epoch_end)
   120424    0.044    0.000    0.047    0.000 func_graph.py:1016(<listcomp>)
   120436    0.047    0.000    0.047    0.000 function.py:1586(<genexpr>)
    40026    0.047    0.000    0.047    0.000 {method 'tobytes' of 'numpy.ndarray' objects}
     5813    0.028    0.000    0.047    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
    36251    0.046    0.000    0.046    0.000 {built-in method time.time}
     4608    0.007    0.000    0.046    0.000 base.py:498(no_automatic_dependency_tracking_scope)
     2292    0.010    0.000    0.045    0.000 backend.py:429(deprecated_internal_set_learning_phase)
   137346    0.045    0.000    0.045    0.000 trace.py:85(__enter__)
   120688    0.045    0.000    0.045    0.000 function.py:2451(is_method)
      288    0.002    0.000    0.045    0.000 base_layer.py:640(get_config)
   121457    0.045    0.000    0.045    0.000 inspect.py:2821(return_annotation)
    34002    0.030    0.000    0.044    0.000 threading.py:248(_release_save)
    26611    0.044    0.000    0.044    0.000 fromnumeric.py:74(<dictcomp>)
    40020    0.036    0.000    0.044    0.000 dataset_ops.py:3150(<lambda>)
    40020    0.028    0.000    0.043    0.000 optimization_options.py:60(_graph_rewrite_configs)
   121457    0.043    0.000    0.043    0.000 inspect.py:2817(parameters)
        2    0.000    0.000    0.043    0.021 <__array_function__ internals>:2(savetxt)
        2    0.014    0.007    0.043    0.021 npyio.py:1211(savetxt)
       12    0.000    0.000    0.042    0.004 save.py:481(_generate_signatures)
       32    0.000    0.000    0.042    0.001 ticker.py:2201(__call__)
   108268    0.042    0.000    0.042    0.000 fromnumeric.py:3033(_ndim_dispatcher)
       51    0.000    0.000    0.042    0.001 math_ops.py:1419(_add_dispatch)
       51    0.000    0.000    0.041    0.001 gen_math_ops.py:463(add_v2)
   120060    0.041    0.000    0.041    0.000 dataset_ops.py:4139(element_spec)
       32    0.000    0.000    0.041    0.001 ticker.py:2205(tick_values)
   120424    0.041    0.000    0.041    0.000 func_graph.py:738(<listcomp>)
        4    0.000    0.000    0.041    0.010 pyplot.py:2759(plot)
    40644    0.041    0.000    0.041    0.000 device_spec.py:272(device_type)
       50    0.001    0.000    0.041    0.001 axis.py:289(draw)
       32    0.002    0.000    0.040    0.001 ticker.py:2141(_raw_ticks)
     4559    0.008    0.000    0.040    0.000 ops.py:5325(control_dependencies)
    80038    0.040    0.000    0.040    0.000 tensor_spec.py:110(_to_legacy_output_types)
       24    0.000    0.000    0.040    0.002 math_ops.py:4739(sqrt)
    39970    0.039    0.000    0.040    0.000 training.py:1420(make_predict_function)
       24    0.000    0.000    0.040    0.002 gen_math_ops.py:10161(sqrt)
   120057    0.040    0.000    0.040    0.000 dataset_ops.py:3544(element_spec)
      211    0.005    0.000    0.039    0.000 lines.py:269(__init__)
   105113    0.039    0.000    0.039    0.000 function.py:268(__enter__)
    92746    0.039    0.000    0.039    0.000 resource_variable_ops.py:498(dtype)
   129078    0.039    0.000    0.039    0.000 inspect.py:2510(annotation)
    40193    0.039    0.000    0.039    0.000 monitoring.py:295(__init__)
    80040    0.039    0.000    0.039    0.000 dataset_ops.py:4368(options)
    27152    0.038    0.000    0.038    0.000 {method 'reshape' of 'numpy.ndarray' objects}
        6    0.000    0.000    0.038    0.006 pyplot.py:861(gca)
    20800    0.018    0.000    0.038    0.000 Hanabi.py:233(draw)
       24    0.000    0.000    0.038    0.002 variables.py:1072(_run_op)
   120424    0.037    0.000    0.037    0.000 function.py:445(<listcomp>)
     3516    0.002    0.000    0.037    0.000 def_function.py:1042(<genexpr>)
       35    0.000    0.000    0.036    0.001 axis.py:2225(_get_tick)
        6    0.000    0.000    0.036    0.006 figure.py:1913(gca)
        2    0.000    0.000    0.036    0.018 figure.py:1259(add_subplot)
       34    0.000    0.000    0.036    0.001 axis.py:1938(_get_tick)
    80038    0.036    0.000    0.036    0.000 tensor_spec.py:113(_to_legacy_output_shapes)
  540/324    0.004    0.000    0.036    0.000 nested_structure_coder.py:179(do_encode)
        2    0.000    0.000    0.036    0.018 _subplots.py:18(__init__)
      308    0.002    0.000    0.036    0.000 ops.py:2013(colocation_groups)
    40032    0.028    0.000    0.036    0.000 tensor_shape.py:97(dimension_value)
        2    0.000    0.000    0.035    0.018 _base.py:378(__init__)
    23364    0.017    0.000    0.035    0.000 __init__.py:335(get_verbosity)
   120300    0.035    0.000    0.035    0.000 function.py:2467(flat_input_signature)
    40575    0.035    0.000    0.035    0.000 enum.py:599(value)
     1716    0.006    0.000    0.035    0.000 function.py:211(is_same_structure)
    46728    0.017    0.000    0.035    0.000 __init__.py:1280(setLevel)
     1152    0.005    0.000    0.035    0.000 auto_control_deps_utils.py:63(_get_read_only_resource_input_indices_op)
      228    0.001    0.000    0.034    0.000 func_graph.py:1269(dismantle_func_graph)
    90885    0.034    0.000    0.034    0.000 ops.py:167(__init__)
    10632    0.020    0.000    0.034    0.000 meta_graph.py:443(_is_default_attr_value)
    80122    0.034    0.000    0.034    0.000 tensor_spec.py:153(<lambda>)
    40078    0.033    0.000    0.033    0.000 backend_config.py:67(floatx)
       12    0.000    0.000    0.033    0.003 save.py:468(_call_function_with_mapped_captures)
     2532    0.003    0.000    0.033    0.000 ops.py:3264(<listcomp>)
      132    0.002    0.000    0.033    0.000 function_serialization.py:29(_serialize_function_spec)
    90885    0.032    0.000    0.032    0.000 ops.py:170(__enter__)
     1376    0.003    0.000    0.032    0.000 ops.py:4368(device)
   120060    0.032    0.000    0.032    0.000 dataset_ops.py:3496(element_spec)
    46728    0.027    0.000    0.032    0.000 converter.py:138(absl_to_standard)
       16    0.000    0.000    0.031    0.002 axis.py:1428(get_major_ticks)
    40020    0.031    0.000    0.031    0.000 data_adapter.py:413(get_size)
    40020    0.031    0.000    0.031    0.000 training_utils.py:643(handle_partial_sample_weights)
      384    0.005    0.000    0.031    0.000 save_impl.py:321(_restore_layer_losses)
      576    0.001    0.000    0.031    0.000 saveable_object.py:53(tensor)
   120424    0.030    0.000    0.030    0.000 func_graph.py:493(<listcomp>)
4230/1830    0.007    0.000    0.030    0.000 tracking.py:80(__setattr__)
      276    0.002    0.000    0.030    0.000 saveable_object_util.py:100(f)
    90885    0.030    0.000    0.030    0.000 ops.py:173(__exit__)
       50    0.000    0.000    0.029    0.001 random_ops.py:319(random_shuffle)
      168    0.001    0.000    0.029    0.000 json_utils.py:43(encode)
 11856/72    0.013    0.000    0.029    0.000 copy.py:132(deepcopy)
       12    0.000    0.000    0.029    0.002 gen_io_ops.py:1463(restore_v2)
      112    0.001    0.000    0.029    0.000 text.py:867(get_window_extent)
       50    0.001    0.000    0.029    0.001 gen_random_ops.py:528(random_shuffle)
    40070    0.028    0.000    0.028    0.000 callbacks.py:616(set_params)
    40020    0.028    0.000    0.028    0.000 data_adapter.py:1034(broadcast_sample_weight_modes)
    66631    0.028    0.000    0.028    0.000 Hanabi.py:216(<listcomp>)
        3    0.000    0.000    0.027    0.009 losses.py:117(__call__)
       72    0.001    0.000    0.026    0.000 serialized_attributes.py:205(set_and_validate_objects)
    34104    0.026    0.000    0.026    0.000 {built-in method _imp.lock_held}
    40020    0.026    0.000    0.026    0.000 data_adapter.py:1272(_validate_data_handler)
      768    0.009    0.000    0.026    0.000 ops.py:6937(set_int_list_attr)
        2    0.000    0.000    0.026    0.013 _base.py:948(cla)
      688    0.002    0.000    0.026    0.000 ops.py:4361(_add_device_to_stack)
    64490    0.026    0.000    0.026    0.000 callbacks.py:627(on_batch_end)
      158    0.003    0.000    0.026    0.000 lines.py:751(draw)
       16    0.000    0.000    0.025    0.002 axis.py:1171(_get_tick_bboxes)
       16    0.000    0.000    0.025    0.002 axis.py:1173(<listcomp>)
   120424    0.025    0.000    0.025    0.000 func_graph.py:753(<listcomp>)
  888/168    0.001    0.000    0.025    0.000 copy.py:210(_deepcopy_list)
    39970    0.025    0.000    0.025    0.000 training.py:1604(<lambda>)
      780    0.004    0.000    0.025    0.000 def_function.py:1009(_list_all_concrete_functions)
    34434    0.024    0.000    0.024    0.000 {built-in method builtins.abs}
        3    0.000    0.000    0.024    0.008 math_grad.py:1424(_DivNoNanGrad)
      108    0.001    0.000    0.024    0.000 functional.py:332(_checkpoint_dependencies)
        3    0.000    0.000    0.024    0.008 math_ops.py:3894(reduced_shape)
  1488/48    0.004    0.000    0.024    0.001 copy.py:236(_deepcopy_dict)
     1716    0.004    0.000    0.024    0.000 function.py:3103(<listcomp>)
    21116    0.015    0.000    0.024    0.000 pickle.py:645(save_bool)
       34    0.000    0.000    0.024    0.001 math_ops.py:524(subtract)
     1380    0.004    0.000    0.024    0.000 utils.py:116(list_all_layers)
      170    0.002    0.000    0.024    0.000 def_function.py:451(__init__)
        3    0.000    0.000    0.024    0.008 optimizer_v2.py:778(_prepare)
       34    0.000    0.000    0.024    0.001 gen_math_ops.py:10433(sub)
     7456    0.014    0.000    0.024    0.000 tensor_shape.py:1004(assert_has_rank)
    81718    0.024    0.000    0.024    0.000 distribute_lib.py:2973(value_container)
     6264    0.006    0.000    0.023    0.000 save.py:137(list_extra_dependencies)
      121    0.002    0.000    0.023    0.000 functional.py:308(_layer_checkpoint_dependencies)
10380/5580    0.015    0.000    0.023    0.000 data_structures.py:756(__getattribute__)
    40120    0.023    0.000    0.023    0.000 callbacks.py:619(set_model)
      432    0.001    0.000    0.023    0.000 data_structures.py:414(__init__)
     3534    0.011    0.000    0.023    0.000 ops.py:4557(__enter__)
        3    0.000    0.000    0.023    0.008 rmsprop.py:163(_prepare_local)
       27    0.000    0.000    0.023    0.001 math_ops.py:1267(truediv)
       27    0.000    0.000    0.023    0.001 math_ops.py:1220(_truediv_python3)
     3534    0.007    0.000    0.023    0.000 ops.py:4567(__exit__)
        2    0.000    0.000    0.023    0.011 _datasource.py:231(open)
   120424    0.023    0.000    0.023    0.000 func_graph.py:748(<listcomp>)
        2    0.000    0.000    0.023    0.011 _datasource.py:577(open)
        1    0.000    0.000    0.022    0.022 tmpzwdntdj_.py:9(tf__predict_function)
    40062    0.022    0.000    0.022    0.000 distribution_strategy_context.py:312(_get_default_strategy)
       12    0.022    0.002    0.022    0.002 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToGraphDef}
    96735    0.022    0.000    0.022    0.000 callbacks.py:622(on_batch_begin)
        1    0.000    0.000    0.022    0.022 training.py:1441(step_function)
      432    0.002    0.000    0.022    0.000 data_structures.py:309(__init__)
      158    0.003    0.000    0.022    0.000 text.py:272(_get_layout)
      444    0.005    0.000    0.022    0.000 nested_structure_coder.py:428(do_encode)
    26832    0.022    0.000    0.022    0.000 {method 'random' of '_random.Random' objects}
      552    0.001    0.000    0.022    0.000 variables.py:1079(__hash__)
       16    0.000    0.000    0.022    0.001 axis.py:1346(get_majorticklocs)
       20    0.000    0.000    0.022    0.001 math_ops.py:1921(reduce_sum)
      216    0.001    0.000    0.022    0.000 function.py:2041(add_to_graph)
       27    0.000    0.000    0.022    0.001 gen_math_ops.py:7416(real_div)
       16    0.000    0.000    0.021    0.001 axis.py:1350(get_minorticklocs)
        3    0.000    0.000    0.021    0.007 metrics_utils.py:73(decorated)
       24    0.000    0.000    0.021    0.001 resource_variable_ops.py:1953(value)
       24    0.000    0.000    0.021    0.001 resource_variable_ops.py:1959(_read_variable_op)
      132    0.004    0.000    0.021    0.000 nested_structure_coder.py:229(do_encode)
    94809    0.021    0.000    0.021    0.000 {method 'getrandbits' of '_random.Random' objects}
    40019    0.021    0.000    0.021    0.000 dataset_ops.py:3541(_inputs)
      128    0.002    0.000    0.020    0.000 text.py:670(draw)
     1716    0.006    0.000    0.020    0.000 function.py:157(_type_spec_for)
        1    0.000    0.000    0.020    0.020 training.py:1444(run_step)
     2610    0.005    0.000    0.020    0.000 func_graph.py:321(control_dependencies)
        3    0.000    0.000    0.020    0.007 metrics.py:173(update_state_fn)
     7776    0.008    0.000    0.019    0.000 backend.py:639(get_graph)
        3    0.000    0.000    0.019    0.006 losses_utils.py:71(compute_weighted_loss)
        3    0.000    0.000    0.019    0.006 metrics.py:336(update_state)
       24    0.000    0.000    0.019    0.001 array_ops.py:631(shape_internal)
    41767    0.019    0.000    0.019    0.000 data_adapter.py:227(on_epoch_end)
       12    0.000    0.000    0.019    0.002 builder_impl.py:757(copy_assets_to_destination_dir)
       13    0.000    0.000    0.019    0.001 resource_variable_ops.py:806(assign_add)
     1697    0.004    0.000    0.019    0.000 func_graph.py:265(watch_variable)
        3    0.000    0.000    0.019    0.006 optimizer_v2.py:689(_create_all_weights)
       24    0.000    0.000    0.019    0.001 gen_math_ops.py:10278(square)
    40020    0.018    0.000    0.018    0.000 data_adapter.py:410(get_dataset)
        4    0.000    0.000    0.018    0.005 axis.py:2303(_update_label_position)
      192    0.002    0.000    0.018    0.000 node.py:162(serialize)
        1    0.000    0.000    0.018    0.018 training.py:1396(predict_step)
        4    0.000    0.000    0.018    0.004 axis.py:2011(_update_label_position)
    55/16    0.000    0.000    0.018    0.001 variables.py:66(getter)
      120    0.001    0.000    0.018    0.000 save_impl.py:535(__init__)
    42/16    0.000    0.000    0.018    0.001 distribute_lib.py:2855(creator)
     1898    0.018    0.000    0.018    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
     4020    0.008    0.000    0.018    0.000 weakref.py:242(values)
11784/168    0.009    0.000    0.018    0.000 json_utils.py:47(_encode_tuple)
       16    0.000    0.000    0.018    0.001 axis.py:2187(get_tick_space)
    46728    0.013    0.000    0.018    0.000 __init__.py:190(_checkLevel)
    40020    0.018    0.000    0.018    0.000 data_adapter.py:1217(inferred_steps)
      480    0.003    0.000    0.018    0.000 data_structures.py:635(_track_value)
    41817    0.017    0.000    0.017    0.000 data_adapter.py:425(should_recreate_iterator)
 2568/168    0.004    0.000    0.017    0.000 json_utils.py:54(<dictcomp>)
       16    0.000    0.000    0.017    0.001 axis.py:2487(get_tick_space)
    34104    0.017    0.000    0.017    0.000 {method '__enter__' of '_thread.lock' objects}
      180    0.001    0.000    0.017    0.000 utils.py:202(get_training_arg_index)
    13699    0.008    0.000    0.017    0.000 pickle.py:680(save_float)
       60    0.001    0.000    0.017    0.000 save_impl.py:339(__init__)
       15    0.000    0.000    0.017    0.001 variables.py:223(_variable_v2_call)
    40020    0.017    0.000    0.017    0.000 dataset_ops.py:4143(_transformation_name)
       20    0.000    0.000    0.017    0.001 math_ops.py:1987(reduce_sum_with_dims)
       25    0.000    0.000    0.016    0.001 array_ops.py:3058(placeholder)
       20    0.000    0.000    0.016    0.001 array_ops.py:604(shape)
    34092    0.016    0.000    0.016    0.000 fromnumeric.py:3227(_mean_dispatcher)
    40020    0.016    0.000    0.016    0.000 distribute_lib.py:2993(_in_multi_worker_mode)
     2532    0.002    0.000    0.016    0.000 ops.py:3779(get_operation_by_name)
      714    0.003    0.000    0.016    0.000 traceable_stack.py:92(push_obj)
    40657    0.016    0.000    0.016    0.000 ops.py:3003(<lambda>)
       25    0.000    0.000    0.016    0.001 gen_array_ops.py:6769(placeholder)
       20    0.000    0.000    0.016    0.001 gen_math_ops.py:10493(_sum)
        4    0.000    0.000    0.016    0.004 axis.py:2284(_get_tick_boxes_siblings)
        4    0.000    0.000    0.016    0.004 axis.py:1992(_get_tick_boxes_siblings)
       13    0.000    0.000    0.016    0.001 def_function.py:681(variable_capturing_scope)
      948    0.002    0.000    0.016    0.000 _collections_abc.py:824(update)
        3    0.000    0.000    0.016    0.005 math_grad.py:1554(_SquaredDifferenceGrad)
       13    0.000    0.000    0.016    0.001 def_function.py:136(__init__)
     1104    0.002    0.000    0.016    0.000 saveable_object_util.py:134(saveable_objects_for_op)
 1104/384    0.003    0.000    0.016    0.000 utils.py:124(list_all_layers_and_sublayers)
      376    0.005    0.000    0.016    0.000 input_spec.py:132(assert_input_compatibility)
        3    0.000    0.000    0.015    0.005 losses_utils.py:59(reduce_weighted_loss)
     2905    0.003    0.000    0.015    0.000 ops.py:3636(as_graph_element)
     3432    0.004    0.000    0.015    0.000 function.py:3087(<genexpr>)
       16    0.000    0.000    0.015    0.001 axis.py:884(set_tick_params)
    25721    0.015    0.000    0.015    0.000 fromnumeric.py:2546(_amax_dispatcher)
     1725    0.002    0.000    0.015    0.000 ops.py:158(string_merge)
      372    0.001    0.000    0.015    0.000 ops.py:819(__hash__)
     3408    0.002    0.000    0.015    0.000 graph_view.py:61(_object_prefix_from_path)
        2    0.000    0.000    0.015    0.007 backend_pdf.py:592(finalize)
      600    0.001    0.000    0.015    0.000 base_layer.py:3013(_list_extra_dependencies_for_serialization)
     3534    0.005    0.000    0.015    0.000 ops.py:4646(control_dependencies)
        3    0.000    0.000    0.015    0.005 rmsprop.py:153(_create_slots)
       24    0.000    0.000    0.015    0.001 optimizer_v2.py:735(add_slot)
    23364    0.010    0.000    0.014    0.000 _flagvalues.py:468(__getitem__)
       12    0.000    0.000    0.014    0.001 math_grad.py:1672(_MatMulGrad)
     1415    0.006    0.000    0.014    0.000 ops.py:6601(__enter__)
       15    0.000    0.000    0.014    0.001 math_ops.py:1327(div_no_nan)
    39970    0.014    0.000    0.014    0.000 callbacks.py:804(on_predict_end)
     1218    0.002    0.000    0.014    0.000 ops.py:4275(_colocate_with_for_gradient)
       24    0.001    0.000    0.014    0.001 functional_saver.py:137(__init__)
    40020    0.014    0.000    0.014    0.000 dataset_ops.py:4062(_transformation_name)
      552    0.003    0.000    0.014    0.000 resource_variable_ops.py:64(get_resource_handle_data)
      480    0.001    0.000    0.014    0.000 data_structures.py:173(_track_value)
        2    0.000    0.000    0.014    0.007 backend_pdf.py:711(writeFonts)
    40020    0.014    0.000    0.014    0.000 dataset_ops.py:4112(_transformation_name)
    40020    0.014    0.000    0.014    0.000 {method 'pop' of 'set' objects}
        2    0.000    0.000    0.014    0.007 backend_pdf.py:896(embedTTF)
        2    0.000    0.000    0.013    0.007 backend_pdf.py:913(embedTTFType3)
      624    0.001    0.000    0.013    0.000 saveable_object_util.py:54(set_cpu0)
    39970    0.013    0.000    0.013    0.000 callbacks.py:793(on_predict_begin)
       18    0.000    0.000    0.013    0.001 array_ops.py:200(fill)
    70092    0.013    0.000    0.013    0.000 _flagvalues.py:148(_flags)
       13    0.000    0.000    0.013    0.001 gen_resource_variable_ops.py:23(assign_add_variable_op)
     12/8    0.000    0.000    0.013    0.002 axis.py:687(__get__)
      552    0.004    0.000    0.013    0.000 saveable_object_util.py:91(__init__)
       18    0.000    0.000    0.013    0.001 gen_array_ops.py:3357(fill)
     1725    0.003    0.000    0.013    0.000 device.py:133(shortcut_string_merge)
      714    0.007    0.000    0.013    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
       14    0.000    0.000    0.013    0.001 gen_array_ops.py:8994(shape)
       12    0.000    0.000    0.013    0.001 tf_logging.py:166(info)
    40020    0.013    0.000    0.013    0.000 distribute_lib.py:2904(_experimental_distribute_dataset)
        4    0.000    0.000    0.013    0.003 _base.py:2727(grid)
       12    0.000    0.000    0.013    0.001 file_io.py:197(__exit__)
        8    0.000    0.000    0.013    0.002 axis.py:1456(grid)
       12    0.013    0.001    0.013    0.001 file_io.py:223(close)
       12    0.000    0.000    0.013    0.001 __init__.py:1421(_log)
       24    0.000    0.000    0.013    0.001 functional_saver.py:115(sharded_filename)
     1560    0.007    0.000    0.013    0.000 function.py:2748(all_values)
       24    0.000    0.000    0.013    0.001 gen_io_ops.py:1756(sharded_filename)
       24    0.000    0.000    0.012    0.001 rmsprop.py:288(get_config)
     3534    0.005    0.000    0.012    0.000 ops.py:4592(_pop_control_dependencies_controller)
      360    0.001    0.000    0.012    0.000 encoder.py:182(encode)
     2905    0.006    0.000    0.012    0.000 ops.py:3672(_as_graph_element_locked)
      600    0.001    0.000    0.012    0.000 base_serialization.py:56(list_extra_dependencies_for_serialization)
       96    0.000    0.000    0.012    0.000 optimizer_v2.py:904(_serialize_hyperparameter)
       88    0.001    0.000    0.012    0.000 functional.py:556(_conform_to_reference_input)
      312    0.001    0.000    0.012    0.000 save_impl.py:438(training_arg_was_passed)
      704    0.009    0.000    0.012    0.000 base_layer.py:2515(_call_arg_was_passed)
        9    0.000    0.000    0.012    0.001 nn_grad.py:473(_SoftplusGrad)
     1847    0.011    0.000    0.011    0.000 callbacks.py:981(_reset_progbar)
        4    0.000    0.000    0.011    0.003 gen_math_ops.py:314(add)
       96    0.000    0.000    0.011    0.000 deprecation.py:311(new_func)
    13998    0.011    0.000    0.011    0.000 {method 'index' of 'list' objects}
      516    0.001    0.000    0.011    0.000 layer_serialization.py:73(objects_to_serialize)
       12    0.000    0.000    0.011    0.001 __init__.py:1446(handle)
       12    0.000    0.000    0.011    0.001 __init__.py:1500(callHandlers)
     1432    0.003    0.000    0.011    0.000 ops.py:762(consumers)
    34104    0.011    0.000    0.011    0.000 {method '__exit__' of '_thread.lock' objects}
       96    0.000    0.000    0.011    0.000 backend.py:3469(get_value)
      360    0.009    0.000    0.011    0.000 encoder.py:204(iterencode)
     3024    0.005    0.000    0.011    0.000 data_structures.py:497(_checkpoint_dependencies)
       12    0.000    0.000    0.011    0.001 __init__.py:852(handle)
      276    0.001    0.000    0.011    0.000 resource_variable_ops.py:110(_combine_handle_data)
       12    0.000    0.000    0.011    0.001 __init__.py:982(emit)
        9    0.000    0.000    0.011    0.001 optimizer_v2.py:673(_get_hyper)
       15    0.000    0.000    0.011    0.001 array_ops.py:2746(wrapped)
       13    0.000    0.000    0.011    0.001 initializers_v2.py:127(__call__)
      511    0.002    0.000    0.011    0.000 artist.py:974(update)
      123    0.003    0.000    0.011    0.000 lines.py:667(recache)
       84    0.001    0.000    0.011    0.000 base_layer.py:1356(updates)
       15    0.000    0.000    0.011    0.001 array_ops.py:2754(zeros)
       13    0.000    0.000    0.011    0.001 init_ops_v2.py:118(__call__)
     7601    0.011    0.000    0.011    0.000 base_layer.py:1246(trainable)
     4608    0.004    0.000    0.011    0.000 base.py:549(_setattr_tracking)
       50    0.001    0.000    0.011    0.000 callbacks.py:503(on_train_end)
      286    0.000    0.000    0.010    0.000 markers.py:205(__init__)
     2174    0.010    0.000    0.010    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
       12    0.000    0.000    0.010    0.001 utils_impl.py:210(get_or_create_variables_dir)
    16368    0.010    0.000    0.010    0.000 {method 'popleft' of 'collections.deque' objects}
  864/144    0.001    0.000    0.010    0.000 json_utils.py:52(<listcomp>)
    10992    0.003    0.000    0.010    0.000 graph_view.py:63(<genexpr>)
     1898    0.010    0.000    0.010    0.000 custom_gradient.py:75(<listcomp>)
      986    0.001    0.000    0.010    0.000 ops.py:521(_shape_tuple)
     1847    0.007    0.000    0.010    0.000 {method 'isatty' of '_io._IOBase' objects}
       24    0.000    0.000    0.010    0.000 array_ops.py:1393(_autopacking_helper)
     1849    0.008    0.000    0.010    0.000 copy.py:66(copy)
       14    0.000    0.000    0.009    0.001 file_io.py:453(recursive_create_dir)
       14    0.000    0.000    0.009    0.001 file_io.py:468(recursive_create_dir_v2)
      552    0.004    0.000    0.009    0.000 saveable_object_util.py:224(op_list_to_dict)
       14    0.009    0.001    0.009    0.001 {built-in method tensorflow.python._pywrap_file_io.RecursivelyCreateDir}
       27    0.000    0.000    0.009    0.000 gen_control_flow_ops.py:470(no_op)
       24    0.000    0.000    0.009    0.000 file_io.py:235(file_exists)
       15    0.000    0.000    0.009    0.001 gen_math_ops.py:3113(div_no_nan)
       24    0.000    0.000    0.009    0.000 file_io.py:252(file_exists_v2)
     1218    0.004    0.000    0.009    0.000 ops.py:4288(colocate_with)
       35    0.000    0.000    0.009    0.000 axis.py:603(_get_gridline)
       12    0.000    0.000    0.009    0.001 saving_utils.py:100(trace_model_call)
      286    0.001    0.000    0.009    0.000 markers.py:272(set_marker)
       34    0.000    0.000    0.009    0.000 axis.py:485(_get_gridline)
    13140    0.009    0.000    0.009    0.000 {method 'add' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
    20800    0.006    0.000    0.009    0.000 Hanabi.py:144(draw)
      420    0.001    0.000    0.009    0.000 data_structures.py:793(_checkpoint_dependencies)
    53330    0.009    0.000    0.009    0.000 shape_base.py:79(_atleast_2d_dispatcher)
       12    0.000    0.000    0.009    0.001 __init__.py:971(flush)
       24    0.009    0.000    0.009    0.000 {built-in method tensorflow.python._pywrap_file_io.FileExists}
       24    0.000    0.000    0.009    0.000 gen_array_ops.py:6416(pack)
     2895    0.002    0.000    0.009    0.000 tape.py:177(record_operation)
    14469    0.009    0.000    0.009    0.000 fromnumeric.py:1108(_argmax_dispatcher)
       24    0.000    0.000    0.009    0.000 string_ops.py:48(regex_full_match)
     3432    0.002    0.000    0.009    0.000 optimizer_v2.py:773(get_slot)
        3    0.000    0.000    0.009    0.003 training.py:760(<dictcomp>)
        3    0.000    0.000    0.009    0.003 metrics_utils.py:117(decorated)
       24    0.000    0.000    0.008    0.000 gen_string_ops.py:586(static_regex_full_match)
    63323    0.008    0.000    0.008    0.000 {method 'bit_length' of 'int' objects}
       24    0.000    0.000    0.008    0.000 string_ops.py:540(string_join)
      986    0.003    0.000    0.008    0.000 ops.py:515(_shape_as_list)
        4    0.000    0.000    0.008    0.002 axis.py:967(set_clip_path)
       24    0.000    0.000    0.008    0.000 gen_string_ops.py:819(string_join)
       34    0.000    0.000    0.008    0.000 axis.py:459(_get_tick1line)
       24    0.000    0.000    0.008    0.000 array_ops.py:4314(where)
9740/8208    0.005    0.000    0.008    0.000 artist.py:217(stale)
       35    0.000    0.000    0.008    0.000 axis.py:574(_get_tick1line)
       24    0.000    0.000    0.008    0.000 gen_math_ops.py:8744(select)
        1    0.000    0.000    0.008    0.008 input_layer.py:210(Input)
        1    0.000    0.000    0.008    0.008 Experiment.py:33(__init__)
        1    0.000    0.000    0.008    0.008 training.py:462(compile)
     8520    0.005    0.000    0.008    0.000 graph_view.py:51(_escape_local_name)
      372    0.002    0.000    0.008    0.000 base_layer.py:3208(_in_functional_construction_mode)
       48    0.000    0.000    0.008    0.000 training.py:2322(_undeduplicated_weights)
      425    0.002    0.000    0.008    0.000 training.py:2361(layers)
        3    0.000    0.000    0.008    0.003 array_ops.py:872(_slice_helper)
        1    0.000    0.000    0.008    0.008 input_layer.py:91(__init__)
      152    0.001    0.000    0.008    0.000 text.py:121(__init__)
      688    0.004    0.000    0.008    0.000 ops.py:121(__init__)
       12    0.000    0.000    0.008    0.001 nn_grad.py:327(_BiasAddGrad)
       35    0.000    0.000    0.008    0.000 axis.py:589(_get_tick2line)
      147    0.000    0.000    0.008    0.000 base_layer.py:2247(trainable_variables)
       24    0.000    0.000    0.008    0.000 saving_utils.py:57(model_input_signature)
      242    0.007    0.000    0.008    0.000 base_layer.py:2578(_get_node_attribute_at_index)
     4107    0.002    0.000    0.007    0.000 resource_variable_ops.py:2127(is_resource_variable)
       12    0.000    0.000    0.007    0.001 gen_nn_ops.py:725(bias_add_grad)
      276    0.001    0.000    0.007    0.000 resource_variable_ops.py:74(get_eager_safe_handle_data)
        2    0.000    0.000    0.007    0.004 backend_pdf.py:954(<listcomp>)
      146    0.000    0.000    0.007    0.000 base_layer.py:2070(input)
     3528    0.001    0.000    0.007    0.000 nested_structure_coder.py:176(can_encode)
       36    0.000    0.000    0.007    0.000 training.py:2313(weights)
       12    0.000    0.000    0.007    0.001 save.py:399(_map_function_arguments_to_created_inputs)
      512    0.001    0.000    0.007    0.000 backend_pdf.py:943(get_char_width)
     3141    0.005    0.000    0.007    0.000 traceable_stack.py:75(copy_metadata)
     1248    0.004    0.000    0.007    0.000 device_spec.py:111(__init__)
1824/1104    0.001    0.000    0.007    0.000 utils.py:127(<genexpr>)
       34    0.000    0.000    0.007    0.000 axis.py:470(_get_tick2line)
       24    0.000    0.000    0.007    0.000 patches.py:585(draw)
      174    0.001    0.000    0.007    0.000 transforms.py:1388(transform)
       32    0.000    0.000    0.007    0.000 ticker.py:672(set_locs)
       41    0.000    0.000    0.007    0.000 backend_pdf.py:1768(draw_path)
6976/6695    0.005    0.000    0.007    0.000 optimizer_v2.py:706(__getattribute__)
      168    0.000    0.000    0.007    0.000 def_function.py:434(__del__)
      306    0.002    0.000    0.007    0.000 resource_variable_ops.py:84(_set_handle_shapes_and_types)
       27    0.000    0.000    0.007    0.000 math_ops.py:1826(_ReductionDims)
      624    0.003    0.000    0.007    0.000 device_spec.py:236(replace)
        3    0.000    0.000    0.007    0.002 losses.py:239(call)
      840    0.003    0.000    0.007    0.000 function.py:361(_enclosing_xla_context)
     3464    0.003    0.000    0.007    0.000 optimizer_v2.py:1279(_var_key)
        3    0.000    0.000    0.007    0.002 metrics.py:188(result_fn)
       73    0.000    0.000    0.006    0.000 lines.py:1021(get_path)
       92    0.001    0.000    0.006    0.000 tensor_shape.py:926(merge_with)
     3534    0.003    0.000    0.006    0.000 ops.py:4589(_push_control_dependencies_controller)
        3    0.000    0.000    0.006    0.002 losses.py:1162(mean_squared_error)
       50    0.001    0.000    0.006    0.000 training_utils.py:1226(__enter__)
     2895    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
       60    0.000    0.000    0.006    0.000 save_impl.py:367(_generate_input_signature)
        7    0.000    0.000    0.006    0.001 version_utils.py:63(__new__)
 1546/697    0.003    0.000    0.006    0.000 backend_pdf.py:134(pdfRepr)
     1846    0.006    0.000    0.006    0.000 metrics.py:247(<listcomp>)
     1454    0.005    0.000    0.006    0.000 _weakrefset.py:26(__exit__)
        3    0.000    0.000    0.006    0.002 losses_utils.py:38(_safe_mean)
      572    0.001    0.000    0.006    0.000 markers.py:227(_recache)
      135    0.006    0.000    0.006    0.000 {method 'set_text' of 'matplotlib.ft2font.FT2Font' objects}
      512    0.006    0.000    0.006    0.000 {method 'load_char' of 'matplotlib.ft2font.FT2Font' objects}
        1    0.000    0.000    0.006    0.006 compile_utils.py:110(__init__)
       26    0.001    0.000    0.006    0.000 def_function.py:1423(decorated)
        3    0.000    0.000    0.006    0.002 math_grad.py:35(_safe_shape_div)
       24    0.001    0.000    0.006    0.000 save.py:224(_add_saveable_objects)
      512    0.000    0.000    0.006    0.000 <__array_function__ internals>:2(any)
       24    0.000    0.000    0.006    0.000 base_layer.py:2993(_get_save_spec)
       27    0.000    0.000    0.006    0.000 backend_pdf.py:2090(draw_text)
     21/8    0.006    0.000    0.006    0.001 version_utils.py:98(swap_class)
     1935    0.006    0.000    0.006    0.000 compile_utils.py:129(<listcomp>)
        3    0.000    0.000    0.006    0.002 metrics.py:394(result)
       24    0.000    0.000    0.006    0.000 def_function.py:1171(__get__)
     3528    0.002    0.000    0.006    0.000 nested_structure_coder.py:153(_is_tuple)
     2081    0.002    0.000    0.006    0.000 object_identity.py:220(_wrap_key)
     1365    0.002    0.000    0.006    0.000 ops.py:2180(_set_device_from_string)
      576    0.000    0.000    0.006    0.000 __init__.py:133(serialize)
      444    0.001    0.000    0.006    0.000 nested_structure_coder.py:379(do_encode)
      229    0.001    0.000    0.006    0.000 backend_pdf.py:641(output)
      120    0.001    0.000    0.006    0.000 save_impl.py:600(_create_call_fn_decorator)
     2616    0.006    0.000    0.006    0.000 {built-in method tensorflow.python._pywrap_tf_session.EqualAttrValueWrapper}
        3    0.000    0.000    0.006    0.002 optimizer_v2.py:797(_prepare_local)
     3238    0.004    0.000    0.006    0.000 ops.py:4579(add_op)
     6120    0.002    0.000    0.006    0.000 nested_structure_coder.py:157(_is_named_tuple)
     1415    0.003    0.000    0.006    0.000 ops.py:6635(__exit__)
       40    0.000    0.000    0.006    0.000 training.py:1890(trainable_weights)
       24    0.000    0.000    0.006    0.000 function.py:3700(class_method_to_instance_method)
       28    0.000    0.000    0.006    0.000 axis.py:334(_apply_params)
      672    0.001    0.000    0.006    0.000 revived_types.py:140(serialize)
        2    0.000    0.000    0.006    0.003 functional.py:108(__init__)
      384    0.002    0.000    0.006    0.000 nested_structure_coder.py:136(do_encode)
        4    0.000    0.000    0.006    0.001 _base.py:2491(_update_title_position)
      202    0.002    0.000    0.006    0.000 font_manager.py:623(__init__)
     1847    0.005    0.000    0.006    0.000 callbacks.py:1683(get_monitor_value)
       30    0.000    0.000    0.006    0.000 tf_utils.py:484(get_tensor_spec)
        8    0.000    0.000    0.006    0.001 gen_math_ops.py:1837(cast)
        9    0.000    0.000    0.006    0.001 math_ops.py:3594(sigmoid)
     1432    0.002    0.000    0.006    0.000 ops.py:772(<listcomp>)
       24    0.000    0.000    0.005    0.000 base_layer.py:2998(<lambda>)
       25    0.000    0.000    0.005    0.000 backend_pdf.py:1847(draw_markers)
       12    0.000    0.000    0.005    0.000 utils_impl.py:232(get_or_create_assets_dir)
     2186    0.005    0.000    0.005    0.000 func_graph.py:669(add_capture)
       25    0.000    0.000    0.005    0.000 axis.py:1398(_copy_tick_props)
      288    0.000    0.000    0.005    0.000 tf_utils.py:261(convert_inner_node_data)
      384    0.003    0.000    0.005    0.000 function.py:2071(_select_forward_and_backward_functions)
        7    0.000    0.000    0.005    0.001 gen_array_ops.py:11337(tile)
       54    0.000    0.000    0.005    0.000 backend_agg.py:196(get_text_width_height_descent)
       25    0.000    0.000    0.005    0.000 backend_bases.py:173(draw_markers)
       32    0.000    0.000    0.005    0.000 axis.py:825(_set_scale)
     3534    0.005    0.000    0.005    0.000 ops.py:4522(__init__)
      624    0.001    0.000    0.005    0.000 device_spec.py:142(from_string)
       68    0.000    0.000    0.005    0.000 backend_pdf.py:1691(check_gc)
        3    0.000    0.000    0.005    0.002 losses_utils.py:53(_num_elements)
       60    0.001    0.000    0.005    0.000 data_structures.py:735(__init__)
        9    0.000    0.000    0.005    0.001 gen_math_ops.py:8903(sigmoid)
      512    0.001    0.000    0.005    0.000 fromnumeric.py:2236(any)
      140    0.000    0.000    0.005    0.000 artist.py:1095(set)
       32    0.000    0.000    0.005    0.000 scale.py:105(set_default_locators_and_formatters)
     1082    0.002    0.000    0.005    0.000 __init__.py:1956(_setattr_cm)
  576/288    0.001    0.000    0.005    0.000 tf_utils.py:157(map_structure_with_atomic)
      255    0.002    0.000    0.005    0.000 base_layer.py:1378(losses)
      396    0.002    0.000    0.005    0.000 nested_structure_coder.py:202(do_encode)
        2    0.000    0.000    0.005    0.002 backend_pdf.py:435(__init__)
        1    0.000    0.000    0.005    0.005 Experiment.py:214(<listcomp>)
       16    0.000    0.000    0.005    0.000 transforms.py:695(union)
       32    0.000    0.000    0.005    0.000 artist.py:731(set_clip_path)
     4718    0.002    0.000    0.005    0.000 ops.py:193(_as_graph_element)
       50    0.000    0.000    0.005    0.000 <__array_function__ internals>:2(nanmin)
    10084    0.005    0.000    0.005    0.000 __init__.py:815(__getitem__)
     2873    0.002    0.000    0.005    0.000 ops.py:2062(device)
     1092    0.001    0.000    0.005    0.000 _collections_abc.py:851(setdefault)
       27    0.000    0.000    0.005    0.000 backend_agg.py:170(draw_text)
       32    0.000    0.000    0.005    0.000 ticker.py:253(format_ticks)
      189    0.001    0.000    0.005    0.000 font_manager.py:1166(findfont)
      328    0.002    0.000    0.005    0.000 tf_decorator.py:128(rewrap)
      408    0.001    0.000    0.005    0.000 policy.py:615(serialize)
       64    0.000    0.000    0.005    0.000 patches.py:260(get_transform)
      372    0.002    0.000    0.005    0.000 base_layer.py:2457(_set_mask_metadata)
       50    0.000    0.000    0.005    0.000 nanfunctions.py:230(nanmin)
     3456    0.005    0.000    0.005    0.000 tensor_spec.py:107(_serialize)
       12    0.000    0.000    0.005    0.000 base.py:97(restore)
        4    0.000    0.000    0.005    0.001 math_ops.py:1153(r_binary_op_wrapper)
        4    0.000    0.000    0.005    0.001 math_ops.py:2426(reduce_prod)
      2/1    0.000    0.000    0.005    0.005 training.py:237(__new__)
      452    0.003    0.000    0.005    0.000 artist.py:74(__init__)
      246    0.001    0.000    0.005    0.000 transforms.py:1986(scale)
       35    0.000    0.000    0.005    0.000 axis.py:544(_get_text1)
      144    0.000    0.000    0.005    0.000 base_layer.py:2252(non_trainable_variables)
     2070    0.002    0.000    0.005    0.000 base_layer.py:2942(_eager_losses)
     3024    0.003    0.000    0.005    0.000 data_structures.py:479(_check_external_modification)
       34    0.000    0.000    0.005    0.000 axis.py:427(_get_text1)
        2    0.000    0.000    0.004    0.002 _base.py:553(_init_axis)
        4    0.000    0.000    0.004    0.001 iterator_ops.py:735(__next__)
        4    0.000    0.000    0.004    0.001 iterator_ops.py:770(next)
        4    0.000    0.000    0.004    0.001 iterator_ops.py:738(_next_internal)
        9    0.000    0.000    0.004    0.000 array_ops.py:1328(stack)
       97    0.000    0.000    0.004    0.000 backprop.py:174(_record_gradient)
       24    0.000    0.000    0.004    0.000 axis.py:841(cla)
        1    0.000    0.000    0.004    0.004 backend.py:1141(placeholder)
      552    0.004    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetHandleShapeAndType}
        6    0.000    0.000    0.004    0.001 array_ops.py:713(size)
      174    0.000    0.000    0.004    0.000 transforms.py:2363(transform_affine)
       12    0.000    0.000    0.004    0.000 save.py:367(_map_captures_to_created_tensors)
       12    0.000    0.000    0.004    0.000 signature_serialization.py:265(validate_saveable_view)
        6    0.000    0.000    0.004    0.001 array_ops.py:745(size_internal)
      552    0.004    0.000    0.004    0.000 {built-in method FromString}
        2    0.000    0.000    0.004    0.002 __init__.py:359(to_filehandle)
     2349    0.002    0.000    0.004    0.000 ops.py:4258(get_name_scope)
      516    0.001    0.000    0.004    0.000 serialized_attributes.py:180(objects_to_serialize)
        1    0.000    0.000    0.004    0.004 training.py:2332(summary)
        1    0.000    0.000    0.004    0.004 layer_utils.py:112(print_summary)
       17    0.000    0.000    0.004    0.000 resource_variable_ops.py:198(eager_safe_variable_handle)
  156/148    0.000    0.000    0.004    0.000 _base.py:583(_unstale_viewLim)
      312    0.001    0.000    0.004    0.000 save_impl.py:453(get_input_arg_value)
      368    0.001    0.000    0.004    0.000 base_layer_utils.py:310(is_in_keras_graph)
        2    0.000    0.000    0.004    0.002 training.py:246(__init__)
       54    0.000    0.000    0.004    0.000 _backend_pdf_ps.py:41(get_text_width_height_descent)
     2081    0.003    0.000    0.004    0.000 object_identity.py:75(__init__)
        2    0.000    0.000    0.004    0.002 math_grad.py:67(SmartBroadcastGradientArgs)
        7    0.000    0.000    0.004    0.001 gen_math_ops.py:6318(neg)
       34    0.000    0.000    0.004    0.000 axis.py:444(_get_text2)
      100    0.000    0.000    0.004    0.000 structure.py:452(<listcomp>)
        4    0.000    0.000    0.004    0.001 core.py:1131(__init__)
   122/26    0.001    0.000    0.004    0.000 copy.py:268(_reconstruct)
      212    0.000    0.000    0.004    0.000 text.py:170(update)
      408    0.002    0.000    0.004    0.000 policy.py:593(_policy_equivalent_to_dtype)
        3    0.000    0.000    0.004    0.001 backend.py:2245(mean)
  238/190    0.001    0.000    0.004    0.000 transforms.py:2387(get_affine)
      372    0.001    0.000    0.004    0.000 base_layer.py:2395(_name_scope)
        3    0.000    0.000    0.004    0.001 math_ops.py:2255(reduce_mean)
        3    0.000    0.000    0.004    0.001 gen_data_flow_ops.py:704(dynamic_stitch)
       48    0.000    0.000    0.004    0.000 save_impl.py:237(replace_layer_functions)
       40    0.000    0.000    0.004    0.000 layer_utils.py:254(gather_trainable_weights)
       35    0.000    0.000    0.004    0.000 axis.py:559(_get_text2)
    25/16    0.000    0.000    0.004    0.000 version_utils.py:110(<genexpr>)
        3    0.000    0.000    0.004    0.001 optimizer_v2.py:848(_decayed_lr)
        3    0.000    0.000    0.004    0.001 gen_math_ops.py:5832(mean)
     1200    0.001    0.000    0.004    0.000 ops.py:3297(_is_function)
        1    0.000    0.000    0.004    0.004 metrics.py:162(__new__)
     6124    0.004    0.000    0.004    0.000 ops.py:5087(_control_dependencies_stack)
    23364    0.004    0.000    0.004    0.000 __init__.py:170(value)
      211    0.000    0.000    0.004    0.000 lines.py:1243(set_markerfacecolor)
        5    0.000    0.000    0.004    0.001 optimizer_v2.py:1003(add_weight)
     1936    0.004    0.000    0.004    0.000 compile_utils.py:291(metrics)
     1898    0.003    0.000    0.004    0.000 custom_gradient.py:77(<listcomp>)
       40    0.000    0.000    0.004    0.000 patches.py:776(get_patch_transform)
       40    0.000    0.000    0.004    0.000 patches.py:746(_update_patch_transform)
       16    0.000    0.000    0.004    0.000 spines.py:374(draw)
     1898    0.004    0.000    0.004    0.000 custom_gradient.py:78(<listcomp>)
     1600    0.001    0.000    0.004    0.000 ops.py:2052(name)
       72    0.000    0.000    0.004    0.000 base_layer.py:2108(input_shape)
        8    0.000    0.000    0.004    0.000 base_layer.py:297(__init__)
      356    0.001    0.000    0.004    0.000 base_layer.py:2312(_maybe_cast_inputs)
      507    0.001    0.000    0.004    0.000 pickle.py:705(save_str)
       12    0.000    0.000    0.004    0.000 axis.py:229(set_clip_path)
        3    0.000    0.000    0.004    0.001 gen_math_ops.py:5752(maximum)
       12    0.000    0.000    0.004    0.000 function_serialization.py:110(wrap_cached_variables)
       84    0.001    0.000    0.004    0.000 tensor_util.py:548(<listcomp>)
      448    0.002    0.000    0.004    0.000 base_layer.py:2528(_get_call_arg_value)
     7679    0.004    0.000    0.004    0.000 {built-in method from_iterable}
       97    0.002    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_RecordGradient}
      420    0.001    0.000    0.004    0.000 data_structures.py:824(_check_self_external_modification)
      692    0.001    0.000    0.004    0.000 base_layer.py:1232(dynamic)
       53    0.001    0.000    0.004    0.000 base_layer.py:2673(_get_trainable_state)
      288    0.000    0.000    0.004    0.000 activations.py:426(serialize)
      624    0.001    0.000    0.004    0.000 ops.py:3221(<listcomp>)
        1    0.003    0.003    0.003    0.003 {built-in method posix.mkdir}
        5    0.000    0.000    0.003    0.001 gen_array_ops.py:722(broadcast_gradient_args)
       32    0.001    0.000    0.003    0.000 ticker.py:759(_set_format)
        3    0.000    0.000    0.003    0.001 math_ops.py:570(scalar_mul)
     1365    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequestedDevice}
   288/96    0.000    0.000    0.003    0.000 copy.py:273(<genexpr>)
       75    0.000    0.000    0.003    0.000 lines.py:1330(update_from)
     1040    0.002    0.000    0.003    0.000 Hanabi.py:298(<dictcomp>)
       77    0.000    0.000    0.003    0.000 base_layer.py:2162(output_shape)
        2    0.000    0.000    0.003    0.002 backend_pdf.py:624(close)
        2    0.003    0.002    0.003    0.002 {method 'close' of '_io.BufferedWriter' objects}
      104    0.001    0.000    0.003    0.000 _dill.py:1327(save_type)
       60    0.000    0.000    0.003    0.000 save_impl.py:552(_wrap_call_and_conditional_losses)
        4    0.000    0.000    0.003    0.001 _axes.py:1414(plot)
        4    0.000    0.000    0.003    0.001 gen_dataset_ops.py:2588(iterator_get_next)
     3694    0.003    0.000    0.003    0.000 callbacks.py:632(on_epoch_begin)
      708    0.001    0.000    0.003    0.000 <__array_function__ internals>:2(dot)
      756    0.001    0.000    0.003    0.000 base_layer_utils.py:508(__enter__)
      848    0.001    0.000    0.003    0.000 execute.py:177(make_str)
       50    0.000    0.000    0.003    0.000 nanfunctions.py:70(_replace_nan)
      472    0.001    0.000    0.003    0.000 ops.py:6013(get_name_scope)
      725    0.002    0.000    0.003    0.000 font_manager.py:663(__hash__)
      120    0.000    0.000    0.003    0.000 node.py:227(input_shapes)
       81    0.000    0.000    0.003    0.000 _backend_pdf_ps.py:79(_get_font_ttf)
      492    0.001    0.000    0.003    0.000 data_structures.py:152(__init__)
       81    0.000    0.000    0.003    0.000 backend_agg.py:243(_get_agg_font)
       84    0.000    0.000    0.003    0.000 tensor_spec.py:130(is_compatible_with)
     2826    0.003    0.000    0.003    0.000 {method 'setdefault' of 'dict' objects}
       52    0.001    0.000    0.003    0.000 Experiment.py:180(<listcomp>)
      371    0.001    0.000    0.003    0.000 base_layer_utils.py:490(in_keras_graph)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:1609(writeObject)
      229    0.000    0.000    0.003    0.000 backend_pdf.py:642(<listcomp>)
       62    0.000    0.000    0.003    0.000 functional.py:237(input_shape)
       60    0.000    0.000    0.003    0.000 save_impl.py:581(_extract_outputs_from_fn)
     2873    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
        3    0.000    0.000    0.003    0.001 array_ops.py:1084(strided_slice)
     1272    0.002    0.000    0.003    0.000 device_spec.py:376(__eq__)
       12    0.000    0.000    0.003    0.000 ops.py:1319(convert_to_tensor_v2)
      192    0.002    0.000    0.003    0.000 base_layer.py:1438(add_loss)
       30    0.000    0.000    0.003    0.000 backend_pdf.py:238(write)
        7    0.000    0.000    0.003    0.000 variables.py:237(<lambda>)
      444    0.001    0.000    0.003    0.000 colors.py:157(to_rgba)
        2    0.000    0.000    0.003    0.001 training.py:312(_init_batch_counters)
       32    0.000    0.000    0.003    0.000 ticker.py:2817(__init__)
        7    0.000    0.000    0.003    0.000 variable_scope.py:2616(default_variable_creator_v2)
       96    0.000    0.000    0.003    0.000 layer_serialization.py:63(<lambda>)
      900    0.001    0.000    0.003    0.000 data_structures.py:818(_dirty)
        4    0.000    0.000    0.003    0.001 axis.py:744(__init__)
       84    0.001    0.000    0.003    0.000 tensor_spec.py:78(is_compatible_with)
        3    0.000    0.000    0.003    0.001 gen_array_ops.py:10170(strided_slice)
     2592    0.001    0.000    0.003    0.000 nested_structure_coder.py:226(can_encode)
     1198    0.001    0.000    0.003    0.000 auto_control_deps_utils.py:105(<genexpr>)
      287    0.000    0.000    0.003    0.000 transforms.py:1247(__add__)
     2400    0.002    0.000    0.003    0.000 utils.py:223(set_training_arg)
       32    0.000    0.000    0.003    0.000 ticker.py:2020(__init__)
      130    0.000    0.000    0.003    0.000 node.py:234(output_shapes)
     1454    0.002    0.000    0.003    0.000 _weakrefset.py:20(__enter__)
        4    0.000    0.000    0.003    0.001 gen_math_ops.py:6696(prod)
      696    0.001    0.000    0.003    0.000 nested_structure_coder.py:70(_get_encoders)
      144    0.002    0.000    0.003    0.000 __init__.py:1663(normalize_kwargs)
      432    0.000    0.000    0.003    0.000 data_structures.py:649(_list_functions_for_serialization)
      370    0.002    0.000    0.003    0.000 __init__.py:2096(_check_isinstance)
     5112    0.002    0.000    0.003    0.000 def_function.py:1036(<genexpr>)
       32    0.000    0.000    0.003    0.000 ticker.py:2095(set_params)
      663    0.001    0.000    0.003    0.000 transforms.py:1831(__init__)
      192    0.001    0.000    0.003    0.000 __init__.py:183(dumps)
       72    0.001    0.000    0.003    0.000 serialized_attributes.py:188(set_and_validate_functions)
      584    0.002    0.000    0.003    0.000 tensor_shape.py:1238(unknown_shape)
      684    0.002    0.000    0.003    0.000 ops.py:5175(__init__)
      473    0.001    0.000    0.003    0.000 transforms.py:126(invalidate)
      158    0.001    0.000    0.003    0.000 text.py:838(get_prop_tup)
        3    0.000    0.000    0.003    0.001 optimizer_v2.py:808(_create_hypers)
    13094    0.003    0.000    0.003    0.000 tf_decorator.py:262(decorated_target)
      132    0.000    0.000    0.003    0.000 axis.py:1891(getter)
       50    0.001    0.000    0.003    0.000 callbacks.py:486(on_train_begin)
      282    0.001    0.000    0.003    0.000 transforms.py:727(__init__)
       60    0.000    0.000    0.003    0.000 data_structures.py:832(_update_snapshot)
      372    0.001    0.000    0.003    0.000 base_layer.py:2495(_get_input_masks)
       94    0.001    0.000    0.003    0.000 transforms.py:1940(rotate_deg)
       24    0.000    0.000    0.003    0.000 function.py:2672(_convert_inputs_to_signature)
      914    0.001    0.000    0.003    0.000 artist.py:49(_stale_axes_callback)
     1847    0.003    0.000    0.003    0.000 iostream.py:316(closed)
       24    0.002    0.000    0.003    0.000 meta_graph.py:138(ops_used_by_graph_def)
     1402    0.001    0.000    0.003    0.000 transforms.py:1701(__init__)
      287    0.000    0.000    0.003    0.000 transforms.py:2462(composite_transform_factory)
        4    0.000    0.000    0.003    0.001 _base.py:2884(tick_params)
     5040    0.001    0.000    0.003    0.000 module.py:302(_is_module)
      924    0.002    0.000    0.002    0.000 <string>:35(_asdict)
      324    0.001    0.000    0.002    0.000 backend.py:1283(int_shape)
     1432    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputConsumers_wrapper}
      127    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(column_stack)
      588    0.001    0.000    0.002    0.000 serialized_attributes.py:168(checkpointable_objects)
      168    0.000    0.000    0.002    0.000 utils.py:131(maybe_add_training_arg)
       12    0.001    0.000    0.002    0.000 meta_graph.py:174(stripped_op_list_for_graph)
      848    0.001    0.000    0.002    0.000 op_def_library.py:159(_MakeStr)
     3045    0.002    0.000    0.002    0.000 __init__.py:2131(_check_in_list)
      211    0.000    0.000    0.002    0.000 lines.py:1257(set_markerfacecoloralt)
     3855    0.002    0.000    0.002    0.000 traceable_stack.py:30(__init__)
      120    0.000    0.000    0.002    0.000 function.py:2899(<genexpr>)
       26    0.000    0.000    0.002    0.000 def_function.py:1199(function)
       16    0.000    0.000    0.002    0.000 backend_agg.py:125(draw_path)
       12    0.000    0.000    0.002    0.000 signature_serialization.py:39(_get_signature)
        1    0.000    0.000    0.002    0.002 metrics.py:481(__init__)
      384    0.002    0.000    0.002    0.000 functional_ops.py:1178(<listcomp>)
      756    0.001    0.000    0.002    0.000 base_layer_utils.py:441(enter)
        1    0.000    0.000    0.002    0.002 metrics.py:326(__init__)
      211    0.001    0.000    0.002    0.000 lines.py:1147(set_linestyle)
      120    0.000    0.000    0.002    0.000 save_impl.py:509(layer_call_wrapper)
        1    0.000    0.000    0.002    0.002 Experiment.py:220(<listcomp>)
      266    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(amin)
      432    0.001    0.000    0.002    0.000 data_structures.py:650(<dictcomp>)
     1344    0.001    0.000    0.002    0.000 saveable_object_util.py:365(trace_save_restore_functions)
        3    0.000    0.000    0.002    0.001 util.py:123(scale_losses_by_sample_weight)
      513    0.001    0.000    0.002    0.000 __init__.py:1309(_to_unmasked_float_array)
     2460    0.001    0.000    0.002    0.000 base.py:543(_setattr_tracking)
       52    0.000    0.000    0.002    0.000 statistics.py:291(mean)
       16    0.002    0.000    0.002    0.000 {method 'draw_path' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      444    0.000    0.000    0.002    0.000 nested_structure_coder.py:423(can_encode)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:10355(squared_difference)
     1040    0.002    0.000    0.002    0.000 Hanabi.py:359(score)
      840    0.001    0.000    0.002    0.000 ops.py:416(device)
        2    0.000    0.000    0.002    0.001 _base.py:2332(autoscale_view)
       60    0.000    0.000    0.002    0.000 base_layer.py:2129(<listcomp>)
      492    0.001    0.000    0.002    0.000 layer_utils.py:179(__init__)
       32    0.000    0.000    0.002    0.000 ops.py:5225(combined)
     3456    0.001    0.000    0.002    0.000 object_identity.py:143(__iter__)
       19    0.000    0.000    0.002    0.000 genericpath.py:16(exists)
      152    0.000    0.000    0.002    0.000 _base.py:597(viewLim)
     3912    0.001    0.000    0.002    0.000 nested_structure_coder.py:133(can_encode)
     1584    0.001    0.000    0.002    0.000 base_layer.py:1235(<genexpr>)
      348    0.001    0.000    0.002    0.000 func_graph.py:468(variables)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:3851(floor_mod)
     5568    0.002    0.000    0.002    0.000 function.py:223(<genexpr>)
        3    0.000    0.000    0.002    0.001 math_grad.py:1656(_MatMulGradAgainstSecondOnly)
       48    0.000    0.000    0.002    0.000 utils.py:40(use_wrapped_call)
       19    0.002    0.000    0.002    0.000 {built-in method posix.stat}
       37    0.000    0.000    0.002    0.000 training.py:1899(non_trainable_weights)
      567    0.002    0.000    0.002    0.000 transforms.py:163(set_children)
       94    0.001    0.000    0.002    0.000 transforms.py:1924(rotate)
      104    0.001    0.000    0.002    0.000 pickle.py:905(save_global)
      696    0.002    0.000    0.002    0.000 nested_structure_coder.py:72(<listcomp>)
       68    0.001    0.000    0.002    0.000 backend_pdf.py:2328(delta)
     1415    0.002    0.000    0.002    0.000 ops.py:6583(__init__)
      108    0.001    0.000    0.002    0.000 functional.py:335(<listcomp>)
     6804    0.002    0.000    0.002    0.000 base.py:649(_checkpoint_dependencies)
  911/473    0.002    0.000    0.002    0.000 transforms.py:136(_invalidate_internal)
      264    0.000    0.000    0.002    0.000 base_layer.py:1237(stateful)
       32    0.001    0.000    0.002    0.000 ticker.py:683(_compute_offset)
     2472    0.001    0.000    0.002    0.000 copy.py:252(_keep_alive)
       50    0.000    0.000    0.002    0.000 text.py:259(update_from)
      864    0.000    0.000    0.002    0.000 regularizers.py:342(serialize)
       41    0.000    0.000    0.002    0.000 backend_pdf.py:1585(writePath)
  284/276    0.001    0.000    0.002    0.000 spines.py:424(get_spine_transform)
      228    0.001    0.000    0.002    0.000 func_graph.py:697(clear_captures)
      688    0.002    0.000    0.002    0.000 device.py:67(merge_device)
      123    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(broadcast_arrays)
        3    0.000    0.000    0.002    0.001 math_ops.py:1380(floordiv)
    14279    0.002    0.000    0.002    0.000 inspect.py:2506(default)
        4    0.000    0.000    0.002    0.000 _base.py:2398(handle_single_axis)
     5664    0.002    0.000    0.002    0.000 base.py:984(_list_extra_dependencies_for_serialization)
       65    0.000    0.000    0.002    0.000 base_layer.py:2182(<listcomp>)
       48    0.000    0.000    0.002    0.000 save_impl.py:385(to_tensor_spec_or_none)
       32    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(clip)
      144    0.001    0.000    0.002    0.000 backend_bases.py:737(__init__)
       40    0.000    0.000    0.002    0.000 transforms.py:1960(rotate_deg_around)
       37    0.000    0.000    0.002    0.000 backend_pdf.py:649(endStream)
      356    0.001    0.000    0.002    0.000 base_layer.py:2340(_should_cast_single_input)
      266    0.000    0.000    0.002    0.000 fromnumeric.py:2676(amin)
      350    0.001    0.000    0.002    0.000 weakref.py:438(items)
       12    0.000    0.000    0.002    0.000 metric_serialization.py:42(_get_serialized_attributes_internal)
        3    0.000    0.000    0.002    0.001 gen_math_ops.py:3773(floor_div)
        3    0.000    0.000    0.002    0.001 math_grad.py:1304(_MulGrad)
      127    0.001    0.000    0.002    0.000 shape_base.py:612(column_stack)
       37    0.000    0.000    0.002    0.000 layer_utils.py:277(gather_non_trainable_weights)
        4    0.002    0.000    0.002    0.000 {method 'close' of '_io.TextIOWrapper' objects}
      344    0.000    0.000    0.002    0.000 transforms.py:1714(transform)
     2208    0.002    0.000    0.002    0.000 base_layer.py:2954(_eager_losses)
        4    0.000    0.000    0.002    0.000 _base.py:1842(add_line)
        6    0.000    0.000    0.002    0.000 figure.py:466(_set_dpi)
       33    0.000    0.000    0.002    0.000 backend_pdf.py:398(end)
      136    0.000    0.000    0.002    0.000 artist.py:858(_set_gc_clip)
        2    0.000    0.000    0.002    0.001 _base.py:930(_gen_axes_spines)
      516    0.002    0.000    0.002    0.000 revived_types.py:73(to_proto)
        3    0.000    0.000    0.002    0.001 backprop.py:697(_ones)
       10    0.000    0.000    0.002    0.000 _base.py:945(<genexpr>)
     1336    0.001    0.000    0.002    0.000 def_function.py:911(input_signature)
      672    0.001    0.000    0.002    0.000 auto_control_deps_utils.py:66(<listcomp>)
        8    0.000    0.000    0.002    0.000 spines.py:517(linear_spine)
      368    0.001    0.000    0.002    0.000 base_layer.py:1200(_autographed_call)
       32    0.000    0.000    0.002    0.000 fromnumeric.py:2021(clip)
        3    0.000    0.000    0.002    0.001 array_ops.py:3007(ones)
      560    0.001    0.000    0.002    0.000 variables.py:1132(_shared_name)
      216    0.001    0.000    0.002    0.000 json_utils.py:37(default)
      511    0.000    0.000    0.002    0.000 artist.py:1006(<listcomp>)
      104    0.001    0.000    0.002    0.000 transforms.py:669(translated)
      444    0.001    0.000    0.002    0.000 colors.py:123(_is_nth_color)
      108    0.000    0.000    0.002    0.000 transforms.py:782(from_extents)
    69/61    0.000    0.000    0.002    0.000 backend_pdf.py:183(<listcomp>)
      708    0.001    0.000    0.002    0.000 nested_structure_coder.py:333(do_encode)
       52    0.001    0.000    0.002    0.000 statistics.py:105(_sum)
        8    0.000    0.000    0.002    0.000 pyplot.py:600(gcf)
     1327    0.001    0.000    0.002    0.000 base_layer_utils.py:399(call_context)
      238    0.001    0.000    0.002    0.000 transforms.py:2290(__init__)
      189    0.000    0.000    0.002    0.000 font_manager.py:673(__eq__)
     2493    0.001    0.000    0.002    0.000 ops.py:4584(op_in_group)
       36    0.000    0.000    0.002    0.000 fromnumeric.py:42(_wrapit)
     5104    0.002    0.000    0.002    0.000 device_spec.py:431(to_string)
      136    0.000    0.000    0.002    0.000 backend_bases.py:901(set_clip_path)
     6124    0.002    0.000    0.002    0.000 ops.py:3156(_set_control_flow_context)
        2    0.000    0.000    0.002    0.001 pyplot.py:427(figure)
        2    0.000    0.000    0.002    0.001 gen_array_ops.py:9139(size)
      352    0.001    0.000    0.002    0.000 transforms.py:1793(transform_affine)
       48    0.000    0.000    0.002    0.000 patches.py:526(_bind_draw_path_function)
      288    0.000    0.000    0.002    0.000 ops.py:6287(add_to_collection)
       12    0.000    0.000    0.002    0.000 patches.py:42(__init__)
        2    0.000    0.000    0.002    0.001 metrics.py:279(add_weight)
     2460    0.001    0.000    0.002    0.000 nested_structure_coder.py:280(can_encode)
      389    0.001    0.000    0.002    0.000 context.py:2390(_tmp_in_graph_mode)
        3    0.000    0.000    0.002    0.001 array_ops.py:2730(_constant_if_small)
      621    0.000    0.000    0.002    0.000 backend_pdf.py:635(write)
       16    0.000    0.000    0.002    0.000 conversion.py:109(convert)
     2034    0.002    0.000    0.002    0.000 transforms.py:82(__init__)
      328    0.001    0.000    0.002    0.000 backend_pdf.py:96(fill)
      192    0.001    0.000    0.002    0.000 node.py:188(serialize_first_arg_tensor)
      123    0.001    0.000    0.002    0.000 stride_tricks.py:206(broadcast_arrays)
        5    0.000    0.000    0.002    0.000 layer_utils.py:197(print_layer_summary)
        8    0.000    0.000    0.002    0.000 spines.py:36(__init__)
      139    0.000    0.000    0.002    0.000 path.py:96(__init__)
      384    0.001    0.000    0.002    0.000 forwardprop_util.py:34(__new__)
      219    0.000    0.000    0.002    0.000 artist.py:978(_update_property)
      688    0.001    0.000    0.002    0.000 device.py:172(is_null_merge)
       12    0.000    0.000    0.002    0.000 save.py:677(_verify_ops)
        1    0.000    0.000    0.002    0.002 pyplot.py:658(close)
        3    0.000    0.000    0.002    0.001 optimizer_v2.py:552(_aggregate_gradients)
      986    0.001    0.000    0.002    0.000 ops.py:517(<listcomp>)
      270    0.001    0.000    0.001    0.000 text.py:824(get_unitless_position)
        1    0.000    0.000    0.001    0.001 _pylab_helpers.py:40(destroy)
3576/1272    0.001    0.000    0.001    0.000 tensor_util.py:229(_FlattenToStrings)
      180    0.000    0.000    0.001    0.000 tensor_shape.py:282(merge_with)
        2    0.000    0.000    0.001    0.001 functional.py:117(_init_graph_network)
       32    0.000    0.000    0.001    0.000 ticker.py:2072(_validate_steps)
      276    0.001    0.000    0.001    0.000 resource_variable_ops.py:97(<listcomp>)
        1    0.001    0.001    0.001    0.001 {built-in method gc.collect}
     9766    0.001    0.000    0.001    0.000 artist.py:804(get_animated)
        8    0.000    0.000    0.001    0.000 base_layer.py:2884(_init_call_fn_args)
        2    0.000    0.000    0.001    0.001 backend_bases.py:3351(new_figure_manager)
       16    0.000    0.000    0.001    0.000 tf_stack.py:105(__init__)
     1888    0.001    0.000    0.001    0.000 artist.py:336(pchanged)
       50    0.000    0.000    0.001    0.000 transforms.py:2709(get_transformed_points_and_affine)
       16    0.000    0.000    0.001    0.000 transpiler.py:384(transform_function)
        3    0.000    0.000    0.001    0.000 training.py:2754(write_scalar_summaries)
      495    0.000    0.000    0.001    0.000 backend_pdf.py:414(write)
       54    0.000    0.000    0.001    0.000 font_manager.py:859(copy)
        2    0.000    0.000    0.001    0.001 gen_array_ops.py:785(broadcast_to)
      103    0.000    0.000    0.001    0.000 axis.py:618(update_position)
       46    0.000    0.000    0.001    0.000 markers.py:733(_set_tickdown)
       36    0.000    0.000    0.001    0.000 uuid.py:621(uuid4)
      368    0.001    0.000    0.001    0.000 __init__.py:882(get_siblings)
        8    0.000    0.000    0.001    0.000 spines.py:226(register_axis)
       48    0.000    0.000    0.001    0.000 markers.py:713(_set_tickleft)
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(round_)
       32    0.000    0.000    0.001    0.000 {method 'clip' of 'numpy.ndarray' objects}
       24    0.000    0.000    0.001    0.000 save.py:360(_tensor_dict_to_tensorinfo)
       11    0.000    0.000    0.001    0.000 tensor_util.py:674(_ConstantValue)
      408    0.000    0.000    0.001    0.000 policy.py:585(_is_convertible_to_dtype)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:792(scalar)
       98    0.000    0.000    0.001    0.000 axis.py:501(update_position)
     2988    0.001    0.000    0.001    0.000 nested_structure_coder.py:199(can_encode)
       32    0.000    0.000    0.001    0.000 _methods.py:97(_clip)
        3    0.000    0.000    0.001    0.000 summary_ops_v2.py:739(summary_writer_function)
       58    0.000    0.000    0.001    0.000 transforms.py:2696(_revalidate)
       24    0.000    0.000    0.001    0.000 save.py:361(<dictcomp>)
      708    0.000    0.000    0.001    0.000 base_layer.py:1240(<genexpr>)
        8    0.000    0.000    0.001    0.000 _base.py:153(__call__)
      472    0.001    0.000    0.001    0.000 ops.py:4596(_current_control_dependencies)
       60    0.000    0.000    0.001    0.000 save_impl.py:296(_restore_child_layer_functions)
      105    0.000    0.000    0.001    0.000 transforms.py:1972(translate)
        8    0.000    0.000    0.001    0.000 spines.py:238(cla)
        3    0.000    0.000    0.001    0.000 optimizer_v2.py:826(iterations)
        2    0.000    0.000    0.001    0.001 figure.py:275(__init__)
       24    0.000    0.000    0.001    0.000 utils_impl.py:70(build_tensor_info_internal)
       66    0.000    0.000    0.001    0.000 transforms.py:773(from_bounds)
        4    0.000    0.000    0.001    0.000 _base.py:310(_plot_args)
       16    0.000    0.000    0.001    0.000 inspect.py:680(getsourcefile)
     1454    0.001    0.000    0.001    0.000 _weakrefset.py:16(__init__)
       24    0.000    0.000    0.001    0.000 metric_serialization.py:32(_python_properties_internal)
      912    0.001    0.000    0.001    0.000 _collections_abc.py:879(__iter__)
       32    0.001    0.000    0.001    0.000 ticker.py:722(_set_order_of_magnitude)
       34    0.000    0.000    0.001    0.000 axis.py:407(_get_text1_transform)
  319/175    0.000    0.000    0.001    0.000 _base.py:724(get_yaxis_transform)
      376    0.001    0.000    0.001    0.000 base_layer_utils.py:541(is_subclassed)
       35    0.000    0.000    0.001    0.000 axis.py:523(_get_text1_transform)
       12    0.000    0.000    0.001    0.000 __init__.py:1406(makeRecord)
      576    0.000    0.000    0.001    0.000 constraints.py:285(serialize)
      672    0.001    0.000    0.001    0.000 base_layer.py:3001(_trackable_saved_model_saver)
      450    0.001    0.000    0.001    0.000 artist.py:695(set_figure)
       36    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(prod)
       70    0.000    0.000    0.001    0.000 backend_pdf.py:2177(new_gc)
        4    0.000    0.000    0.001    0.000 axis.py:2054(_update_offset_text_position)
       48    0.000    0.000    0.001    0.000 input_spec.py:230(to_tensor_spec)
       76    0.000    0.000    0.001    0.000 backend_pdf.py:2184(__init__)
      102    0.000    0.000    0.001    0.000 transforms.py:361(ymax)
       24    0.000    0.000    0.001    0.000 saving_utils.py:270(_serialize_nested_config)
      588    0.001    0.000    0.001    0.000 serialized_attributes.py:171(<dictcomp>)
       41    0.000    0.000    0.001    0.000 backend_pdf.py:1577(pathOperations)
  310/170    0.000    0.000    0.001    0.000 _base.py:648(get_xaxis_transform)
       26    0.000    0.000    0.001    0.000 backend_pdf.py:190(<listcomp>)
     2688    0.001    0.000    0.001    0.000 base.py:951(_gather_saveables_for_checkpoint)
      168    0.001    0.000    0.001    0.000 base_layer.py:3005(_object_identifier)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3590(round_)
        2    0.001    0.001    0.001    0.001 {built-in method matplotlib.ttconv.get_pdf_charprocs}
       34    0.000    0.000    0.001    0.000 _base.py:672(get_xaxis_text1_transform)
       12    0.001    0.000    0.001    0.000 __init__.py:251(__init__)
     1134    0.001    0.000    0.001    0.000 font_manager.py:1220(<genexpr>)
       35    0.000    0.000    0.001    0.000 _base.py:748(get_yaxis_text1_transform)
     1031    0.001    0.000    0.001    0.000 ops.py:6625(_restore_name_scope)
      256    0.000    0.000    0.001    0.000 {method 'max' of 'numpy.ndarray' objects}
       48    0.000    0.000    0.001    0.000 markers.py:719(_set_tickright)
      345    0.000    0.000    0.001    0.000 axis.py:325(_set_artist_props)
       32    0.000    0.000    0.001    0.000 ticker.py:256(<listcomp>)
       46    0.000    0.000    0.001    0.000 markers.py:727(_set_tickup)
      211    0.000    0.000    0.001    0.000 lines.py:648(set_data)
       50    0.001    0.000    0.001    0.000 function_base.py:2031(__init__)
      576    0.001    0.000    0.001    0.000 saveable_object.py:24(__init__)
       74    0.000    0.000    0.001    0.000 transforms.py:1532(transform_path_non_affine)
      432    0.000    0.000    0.001    0.000 re.py:169(match)
       36    0.000    0.000    0.001    0.000 fromnumeric.py:2843(prod)
     6048    0.001    0.000    0.001    0.000 data_structures.py:447(_external_modification)
       58    0.000    0.000    0.001    0.000 lines.py:724(_get_transformed_path)
     3003    0.001    0.000    0.001    0.000 base_layer.py:1218(name)
     1152    0.001    0.000    0.001    0.000 auto_control_deps_utils.py:54(<listcomp>)
      522    0.000    0.000    0.001    0.000 artist.py:168(convert_xunits)
       36    0.000    0.000    0.001    0.000 transforms.py:1015(get_points)
      389    0.000    0.000    0.001    0.000 artist.py:358(set_transform)
      112    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(around)
      288    0.000    0.000    0.001    0.000 tf_utils.py:187(<listcomp>)
      684    0.001    0.000    0.001    0.000 ops.py:5185(__enter__)
        8    0.000    0.000    0.001    0.000 base_layer.py:2907(_call_fn_args)
     1404    0.001    0.000    0.001    0.000 func_graph.py:489(<genexpr>)
     2460    0.001    0.000    0.001    0.000 nested_structure_coder.py:257(can_encode)
     2460    0.001    0.000    0.001    0.000 nested_structure_coder.py:307(can_encode)
      144    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
       41    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.convert_to_string}
       48    0.000    0.000    0.001    0.000 function.py:2709(<genexpr>)
      612    0.000    0.000    0.001    0.000 data_structures.py:1059(<lambda>)
     1725    0.001    0.000    0.001    0.000 device_spec.py:426(__hash__)
        6    0.000    0.000    0.001    0.000 transforms.py:1915(clear)
      142    0.000    0.000    0.001    0.000 transforms.py:2644(__init__)
     3222    0.001    0.000    0.001    0.000 object_identity.py:78(unwrapped)
       32    0.000    0.000    0.001    0.000 ticker.py:2087(_staircase)
      422    0.001    0.000    0.001    0.000 lines.py:1114(_split_drawstyle_linestyle)
       35    0.000    0.000    0.001    0.000 axis.py:526(_get_text2_transform)
       54    0.000    0.000    0.001    0.000 lines.py:709(_transform_path)
      714    0.001    0.000    0.001    0.000 traceable_stack.py:111(pop_obj)
       38    0.000    0.000    0.001    0.000 patches.py:341(_set_facecolor)
       34    0.000    0.000    0.001    0.000 axis.py:410(_get_text2_transform)
      224    0.000    0.000    0.001    0.000 transforms.py:2194(get_affine)
       16    0.000    0.000    0.001    0.000 transforms.py:703(<listcomp>)
      492    0.001    0.000    0.001    0.000 _weakrefset.py:36(__init__)
      444    0.001    0.000    0.001    0.000 nested_structure_coder.py:403(do_encode)
      576    0.000    0.000    0.001    0.000 tf_utils.py:281(_is_atomic_nested)
     2544    0.001    0.000    0.001    0.000 generic_utils.py:167(get_registered_name)
       33    0.000    0.000    0.001    0.000 backend_pdf.py:387(_writeHeader)
      170    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
        8    0.000    0.000    0.001    0.000 base_layer.py:2900(_call_full_argspec)
      132    0.001    0.000    0.001    0.000 ticker.py:573(__call__)
     3744    0.001    0.000    0.001    0.000 device_spec.py:38(_as_int_or_none)
      756    0.001    0.000    0.001    0.000 base_layer_utils.py:524(__exit__)
      125    0.001    0.000    0.001    0.000 artist.py:1074(update_from)
       35    0.000    0.000    0.001    0.000 _base.py:774(get_yaxis_text2_transform)
       25    0.001    0.000    0.001    0.000 {method 'draw_markers' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      352    0.001    0.000    0.001    0.000 node.py:147(map_arguments)
      153    0.000    0.000    0.001    0.000 path.py:159(_fast_from_codes_and_verts)
       34    0.000    0.000    0.001    0.000 _base.py:698(get_xaxis_text2_transform)
        4    0.000    0.000    0.001    0.000 _base.py:1868(_update_line_limits)
       86    0.000    0.000    0.001    0.000 transforms.py:346(xmin)
      256    0.000    0.000    0.001    0.000 _methods.py:28(_amax)
      368    0.001    0.000    0.001    0.000 base_layer.py:1157(_set_training_mode)
     1248    0.001    0.000    0.001    0.000 device_spec.py:350(_components_to_string)
       68    0.000    0.000    0.001    0.000 backend_bases.py:656(new_gc)
        1    0.001    0.001    0.001    0.001 Experiment.py:211(<listcomp>)
     6048    0.001    0.000    0.001    0.000 data_structures.py:431(_non_append_mutation)
      276    0.000    0.000    0.001    0.000 resource_variable_ops.py:100(<listcomp>)
       12    0.000    0.000    0.001    0.000 tf_utils.py:464(graph_context_for_symbolic_tensors)
      288    0.001    0.000    0.001    0.000 ops.py:3933(add_to_collection)
      444    0.000    0.000    0.001    0.000 artist.py:937(set_visible)
      108    0.000    0.000    0.001    0.000 utils.py:99(layer_uses_training_bool)
     2112    0.001    0.000    0.001    0.000 nested_structure_coder.py:170(<genexpr>)
      125    0.000    0.000    0.001    0.000 ops.py:2510(_get_attr_type)
       98    0.000    0.000    0.001    0.000 transforms.py:351(ymin)
      144    0.000    0.000    0.001    0.000 _methods.py:32(_amin)
       50    0.001    0.000    0.001    0.000 callbacks.py:1610(__init__)
        5    0.000    0.000    0.001    0.000 base_layer.py:2141(count_params)
     2808    0.001    0.000    0.001    0.000 function.py:2566(<genexpr>)
       72    0.000    0.000    0.001    0.000 serialized_attributes.py:142(new)
      112    0.000    0.000    0.001    0.000 fromnumeric.py:3130(around)
      211    0.000    0.000    0.001    0.000 lines.py:733(set_transform)
      756    0.001    0.000    0.001    0.000 base_layer_utils.py:503(__init__)
     1248    0.001    0.000    0.001    0.000 device_spec.py:42(_as_device_str_or_none)
       64    0.000    0.000    0.001    0.000 _methods.py:63(_clip_dep_is_scalar_nan)
      211    0.000    0.000    0.001    0.000 lines.py:1401(set_dash_capstyle)
       16    0.000    0.000    0.001    0.000 transforms.py:706(<listcomp>)
       27    0.000    0.000    0.001    0.000 backend_pdf.py:1929(_setup_textpos)
      102    0.001    0.000    0.001    0.000 {method 'write' of '_io.TextIOWrapper' objects}
       48    0.001    0.000    0.001    0.000 transforms.py:2779(nonsingular)
      489    0.001    0.000    0.001    0.000 {method 'compress' of 'zlib.Compress' objects}
      286    0.000    0.000    0.001    0.000 markers.py:249(set_fillstyle)
     1344    0.001    0.000    0.001    0.000 weakref.py:125(_commit_removals)
     2937    0.001    0.000    0.001    0.000 ops.py:4575(control_inputs)
      132    0.000    0.000    0.001    0.000 <string>:24(_replace)
      505    0.001    0.000    0.001    0.000 lines.py:1285(set_xdata)
     9312    0.001    0.000    0.001    0.000 copy.py:190(_deepcopy_atomic)
      204    0.001    0.000    0.001    0.000 font_manager.py:778(set_weight)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
      384    0.001    0.000    0.001    0.000 function.py:1430(forward)
       12    0.000    0.000    0.001    0.000 gen_io_ops.py:1520(<listcomp>)
     2062    0.001    0.000    0.001    0.000 context.py:808(scope_name)
        2    0.000    0.000    0.001    0.000 backend_agg.py:398(get_renderer)
      224    0.000    0.000    0.001    0.000 optimizer_v2.py:721(__setattr__)
        5    0.000    0.000    0.001    0.000 node.py:54(__init__)
      609    0.000    0.000    0.001    0.000 ops.py:6769(_op_to_colocate_with)
      352    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.affine_transform}
       60    0.000    0.000    0.001    0.000 layer_utils.py:224(invalidate_all)
      331    0.000    0.000    0.001    0.000 backend_pdf.py:251(__init__)
        4    0.000    0.000    0.001    0.000 _base.py:363(<listcomp>)
       50    0.000    0.000    0.001    0.000 path.py:354(iter_segments)
      516    0.001    0.000    0.001    0.000 serialized_attributes.py:183(<dictcomp>)
       54    0.000    0.000    0.001    0.000 transforms.py:2681(__init__)
        4    0.000    0.000    0.001    0.000 _base.py:251(_makeline)
     1027    0.001    0.000    0.001    0.000 api.py:122(get_effective_source_map)
        9    0.000    0.000    0.001    0.000 tensor_util.py:569(MakeNdarray)
      582    0.001    0.000    0.001    0.000 function_base.py:257(iterable)
       16    0.000    0.000    0.001    0.000 transforms.py:704(<listcomp>)
       69    0.001    0.000    0.001    0.000 posixpath.py:75(join)
       27    0.001    0.000    0.001    0.000 {method 'draw_glyphs_to_bitmap' of 'matplotlib.ft2font.FT2Font' objects}
        4    0.000    0.000    0.001    0.000 base_layer.py:2556(_set_connectivity_metadata)
     3990    0.001    0.000    0.001    0.000 artist.py:192(axes)
      736    0.001    0.000    0.001    0.000 base_layer.py:932(<genexpr>)
     3310    0.001    0.000    0.001    0.000 ops.py:4634(<genexpr>)
      211    0.000    0.000    0.001    0.000 lines.py:1096(set_linewidth)
        7    0.000    0.000    0.001    0.000 layer_utils.py:95(count_params)
      384    0.000    0.000    0.001    0.000 graph_view.py:80(_name_slot_variable)
       54    0.001    0.000    0.001    0.000 __init__.py:557(__setitem__)
       16    0.000    0.000    0.001    0.000 transforms.py:705(<listcomp>)
      108    0.000    0.000    0.001    0.000 transforms.py:1764(frozen)
      204    0.001    0.000    0.001    0.000 font_manager.py:814(set_size)
       86    0.000    0.000    0.001    0.000 transforms.py:356(xmax)
    28/24    0.000    0.000    0.001    0.000 transforms.py:412(bounds)
     1430    0.001    0.000    0.001    0.000 ops.py:5066(_colocation_stack)
      120    0.000    0.000    0.001    0.000 weakref.py:165(__setitem__)
       26    0.000    0.000    0.001    0.000 patches.py:348(set_facecolor)
        8    0.000    0.000    0.001    0.000 base_layer.py:2261(_set_dtype_policy)
      712    0.000    0.000    0.001    0.000 base_layer.py:2468(<genexpr>)
       12    0.000    0.000    0.001    0.000 save.py:527(_trace_resource_initializers)
       33    0.000    0.000    0.001    0.000 backend_pdf.py:423(_flush)
      168    0.001    0.000    0.001    0.000 functional.py:816(_trackable_saved_model_saver)
      164    0.000    0.000    0.001    0.000 font_manager.py:1325(get_font)
        2    0.000    0.000    0.001    0.000 _datasource.py:427(_findfile)
     1152    0.001    0.000    0.001    0.000 base_serialization.py:33(__init__)
       15    0.000    0.000    0.001    0.000 constant_op.py:347(_tensor_shape_tensor_conversion_function)
      892    0.001    0.000    0.001    0.000 resource_variable_ops.py:503(device)
      523    0.000    0.000    0.001    0.000 artist.py:180(convert_yunits)
      778    0.001    0.000    0.001    0.000 functional.py:821(_make_node_key)
       76    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(all)
       27    0.000    0.000    0.001    0.000 backend_pdf.py:654(fontName)
       38    0.000    0.000    0.001    0.000 transforms.py:986(__init__)
      736    0.000    0.000    0.001    0.000 base_layer.py:3234(<genexpr>)
      120    0.000    0.000    0.001    0.000 function.py:2292(_deterministic_dict_values)
      178    0.000    0.000    0.001    0.000 transforms.py:2367(transform_non_affine)
       16    0.000    0.000    0.001    0.000 transpiler.py:362(_transformed_factory)
        2    0.001    0.000    0.001    0.000 backend_agg.py:86(__init__)
       72    0.000    0.000    0.001    0.000 serialized_attributes.py:174(functions_to_serialize)
      120    0.001    0.000    0.001    0.000 base_layer.py:1569(metrics)
      520    0.000    0.000    0.001    0.000 lines.py:1297(set_ydata)
      618    0.000    0.000    0.001    0.000 figure.py:45(_stale_figure_callback)
      132    0.000    0.000    0.001    0.000 axis.py:301(set_label1)
      211    0.000    0.000    0.001    0.000 lines.py:1061(set_drawstyle)
      456    0.000    0.000    0.001    0.000 lines.py:59(_scale_dashes)
     1902    0.001    0.000    0.001    0.000 {method 'copy' of 'dict' objects}
  218/164    0.000    0.000    0.001    0.000 transforms.py:2319(_invalidate_internal)
      108    0.000    0.000    0.001    0.000 text.py:236(get_rotation)
       33    0.001    0.000    0.001    0.000 {method 'flush' of 'zlib.Compress' objects}
      168    0.001    0.000    0.001    0.000 version_utils.py:125(is_v1_layer_or_model)
       30    0.000    0.000    0.001    0.000 gen_resource_variable_ops.py:1265(var_is_initialized_op)
        4    0.000    0.000    0.001    0.000 patches.py:704(__init__)
       32    0.000    0.000    0.001    0.000 shape_base.py:286(hstack)
       50    0.000    0.000    0.001    0.000 function_base.py:2164(<listcomp>)
       96    0.000    0.000    0.001    0.000 serialization.py:28(get_json_type)
      132    0.000    0.000    0.001    0.000 axis.py:314(set_label2)
      384    0.000    0.000    0.001    0.000 tape.py:163(should_record_backprop)
       14    0.000    0.000    0.001    0.000 training.py:684(run_eagerly)
      408    0.000    0.000    0.001    0.000 policy.py:461(get_config)
      211    0.000    0.000    0.001    0.000 lines.py:1355(set_dash_joinstyle)
       60    0.000    0.000    0.001    0.000 _weakrefset.py:58(__iter__)
       32    0.000    0.000    0.001    0.000 distribute_lib.py:2896(colocate_vars_with)
        4    0.000    0.000    0.001    0.000 _base.py:3104(set_xlim)
      112    0.001    0.000    0.001    0.000 {method 'round' of 'numpy.ndarray' objects}
       36    0.000    0.000    0.001    0.000 uuid.py:106(__init__)
       12    0.000    0.000    0.001    0.000 execute.py:281(convert_to_mixed_eager_tensors)
     2496    0.001    0.000    0.001    0.000 device_spec.py:34(_as_str_or_none)
      170    0.000    0.000    0.001    0.000 def_function.py:556(_get_key_for_call_stats)
       50    0.000    0.000    0.001    0.000 training.py:762(make_train_function)
       33    0.000    0.000    0.001    0.000 backend_pdf.py:645(beginStream)
      132    0.000    0.000    0.001    0.000 base_layer.py:2299(_compute_dtype)
     1996    0.001    0.000    0.001    0.000 ops.py:113(tensor_id)
      139    0.000    0.000    0.001    0.000 path.py:188(_update_values)
     1332    0.000    0.000    0.001    0.000 nested_structure_coder.py:376(can_encode)
       16    0.001    0.000    0.001    0.000 transpiler.py:190(instantiate)
  610/332    0.000    0.000    0.001    0.000 transforms.py:2349(<lambda>)
      192    0.000    0.000    0.001    0.000 serialized_attributes.py:162(functions)
      211    0.000    0.000    0.001    0.000 lines.py:1416(set_solid_capstyle)
        8    0.000    0.000    0.001    0.000 tensor_util.py:1017(shape_tensor)
       24    0.000    0.000    0.001    0.000 saving_utils.py:291(_enforce_names_consistency)
      684    0.001    0.000    0.001    0.000 ops.py:5193(__exit__)
     1376    0.001    0.000    0.001    0.000 traceable_stack.py:115(peek_top_obj)
       38    0.000    0.000    0.001    0.000 patches.py:315(_set_edgecolor)
       60    0.000    0.000    0.001    0.000 weakref.py:102(__init__)
      180    0.000    0.000    0.001    0.000 optimizer_v2.py:1333(<lambda>)
      108    0.000    0.000    0.001    0.000 text.py:1193(_preprocess_math)
      888    0.000    0.000    0.001    0.000 nested_structure_coder.py:400(can_encode)
       32    0.000    0.000    0.001    0.000 ticker.py:1955(scale_range)
     1272    0.000    0.000    0.001    0.000 meta_graph.py:159(mark_op_as_used)
      108    0.000    0.000    0.001    0.000 text.py:41(get_rotation)
     2224    0.001    0.000    0.001    0.000 resource_variable_ops.py:513(name)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(ptp)
        2    0.000    0.000    0.001    0.000 _subplots.py:129(update_params)
       12    0.000    0.000    0.001    0.000 signature_def_utils_impl.py:350(op_signature_def)
        2    0.000    0.000    0.001    0.000 math_grad.py:189(EvaluateAsTuple)
       23    0.000    0.000    0.001    0.000 layer_utils.py:109(<genexpr>)
       76    0.000    0.000    0.001    0.000 fromnumeric.py:2324(all)
     1027    0.001    0.000    0.001    0.000 tf_stack.py:123(get_filtered_filenames)
      132    0.001    0.000    0.001    0.000 transforms.py:2859(_interval_contains_close)
      144    0.000    0.000    0.001    0.000 base_layer.py:2089(output)
       22    0.000    0.000    0.001    0.000 generic_utils.py:334(deserialize_keras_object)
      768    0.001    0.000    0.001    0.000 ops.py:4888(_override_gradient_function)
      202    0.000    0.000    0.001    0.000 font_manager.py:759(set_style)
      360    0.001    0.000    0.001    0.000 encoder.py:104(__init__)
       33    0.000    0.000    0.001    0.000 backend_pdf.py:348(__init__)
     1452    0.000    0.000    0.001    0.000 nested_structure_coder.py:353(can_encode)
      387    0.001    0.000    0.001    0.000 tf_inspect.py:283(<listcomp>)
       26    0.000    0.000    0.001    0.000 patches.py:330(set_edgecolor)
        2    0.000    0.000    0.001    0.000 gridspec.py:586(get_position)
       34    0.000    0.000    0.001    0.000 transforms.py:763(unit)
        2    0.000    0.000    0.001    0.000 pyplot.py:3029(title)
      564    0.001    0.000    0.001    0.000 base_layer.py:2968(_split_out_first_arg)
        2    0.000    0.000    0.001    0.000 backend_pdf.py:553(newPage)
      276    0.000    0.000    0.001    0.000 resource_variable_ops.py:99(<listcomp>)
       27    0.000    0.000    0.001    0.000 {method 'draw_text_image' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      541    0.000    0.000    0.001    0.000 __init__.py:1961(<listcomp>)
      204    0.000    0.000    0.001    0.000 transforms.py:2057(transform)
       32    0.000    0.000    0.001    0.000 axis.py:1648(set_major_locator)
       25    0.000    0.000    0.001    0.000 path.py:419(cleaned)
        2    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_TryEvaluateConstant_wrapper}
        6    0.000    0.000    0.001    0.000 figure.py:874(set_size_inches)
      552    0.000    0.000    0.001    0.000 saveable_object_util.py:249(<lambda>)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(diff)
      211    0.000    0.000    0.001    0.000 lines.py:1370(set_solid_joinstyle)
      750    0.001    0.000    0.001    0.000 {method 'find' of 'str' objects}
      150    0.000    0.000    0.001    0.000 lines.py:953(_get_markerfacecolor)
      373    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddControlInput}
      560    0.001    0.000    0.001    0.000 {method 'index' of 'str' objects}
       88    0.000    0.000    0.001    0.000 functional.py:522(_flatten_to_reference_inputs)
        8    0.000    0.000    0.001    0.000 _base.py:1436(apply_aspect)
      624    0.000    0.000    0.001    0.000 device_spec.py:300(_string_to_components)
       32    0.000    0.000    0.001    0.000 posixpath.py:121(splitext)
      384    0.001    0.000    0.001    0.000 function.py:1413(__init__)
      132    0.000    0.000    0.001    0.000 <string>:16(_make)
        6    0.000    0.000    0.001    0.000 layer_utils.py:182(print_row)
      372    0.000    0.000    0.000    0.000 base_layer.py:2505(<listcomp>)
       84    0.000    0.000    0.000    0.000 base_layer.py:1948(input_mask)
      154    0.000    0.000    0.000    0.000 text.py:1137(set_verticalalignment)
      206    0.000    0.000    0.000    0.000 __init__.py:1296(is_math_text)
       30    0.000    0.000    0.000    0.000 gen_math_ops.py:5437(logical_not)
       72    0.000    0.000    0.000    0.000 axis.py:1562(convert_units)
       50    0.000    0.000    0.000    0.000 function_base.py:2144(<listcomp>)
      123    0.000    0.000    0.000    0.000 stride_tricks.py:185(_broadcast_shape)
       36    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
       24    0.000    0.000    0.000    0.000 utils_impl.py:218(get_variables_dir)
       16    0.000    0.000    0.000    0.000 axis.py:1504(update_units)
      120    0.000    0.000    0.000    0.000 save_impl.py:446(get_training_arg_value)
        8    0.000    0.000    0.000    0.000 tf_utils.py:445(maybe_init_scope)
       36    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
      125    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrType}
       50    0.000    0.000    0.000    0.000 markers.py:301(get_transform)
     1464    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
     2048    0.000    0.000    0.000    0.000 policy.py:453(name)
      480    0.000    0.000    0.000    0.000 data_structures.py:1033(_is_function)
        2    0.000    0.000    0.000    0.000 _axes.py:148(set_title)
      168    0.000    0.000    0.000    0.000 signature_serialization.py:233(<lambda>)
       16    0.000    0.000    0.000    0.000 spines.py:266(_adjust_location)
       84    0.000    0.000    0.000    0.000 base_layer.py:1970(output_mask)
      276    0.000    0.000    0.000    0.000 meta_graph.py:230(_op_name)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2477(ptp)
        4    0.000    0.000    0.000    0.000 tensor_util.py:842(constant_value_as_shape)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:583(op)
       92    0.000    0.000    0.000    0.000 tensor_shape.py:988(assert_same_rank)
      150    0.000    0.000    0.000    0.000 transforms.py:2154(<lambda>)
      202    0.000    0.000    0.000    0.000 font_manager.py:796(set_stretch)
       24    0.000    0.000    0.000    0.000 signature_def_utils_impl.py:32(build_signature_def)
      609    0.000    0.000    0.000    0.000 op_def_library.py:166(_MakeBool)
      228    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedScalarContainer' objects}
      180    0.000    0.000    0.000    0.000 tensor_shape.py:268(assert_is_compatible_with)
      288    0.000    0.000    0.000    0.000 base_layer.py:672(<listcomp>)
      120    0.000    0.000    0.000    0.000 function.py:2893(<genexpr>)
    32/16    0.000    0.000    0.000    0.000 units.py:197(get_converter)
       12    0.000    0.000    0.000    0.000 execute.py:282(<listcomp>)
        4    0.000    0.000    0.000    0.000 _base.py:3498(set_ylim)
      160    0.000    0.000    0.000    0.000 axis.py:819(get_transform)
      150    0.000    0.000    0.000    0.000 artist.py:1037(set_zorder)
      502    0.000    0.000    0.000    0.000 backend_mixed.py:67(__getattr__)
      120    0.000    0.000    0.000    0.000 weakref.py:109(remove)
      912    0.000    0.000    0.000    0.000 data_structures.py:377(__getitem__)
        2    0.000    0.000    0.000    0.000 _datasource.py:517(exists)
      202    0.000    0.000    0.000    0.000 font_manager.py:769(set_variant)
      162    0.000    0.000    0.000    0.000 {method 'clear' of 'matplotlib.ft2font.FT2Font' objects}
       13    0.000    0.000    0.000    0.000 _dill.py:400(__init__)
        1    0.000    0.000    0.000    0.000 training.py:578(_configure_steps_per_execution)
      156    0.000    0.000    0.000    0.000 input_layer.py:205(_trackable_saved_model_saver)
       27    0.000    0.000    0.000    0.000 __init__.py:149(get)
      240    0.000    0.000    0.000    0.000 save_impl.py:634(_get_layer_call_method)
       12    0.000    0.000    0.000    0.000 training.py:2288(state_updates)
       32    0.000    0.000    0.000    0.000 function_base.py:1141(diff)
       54    0.000    0.000    0.000    0.000 random_seed.py:41(get_seed)
      116    0.000    0.000    0.000    0.000 transforms.py:2564(get_matrix)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(isclose)
    14/12    0.000    0.000    0.000    0.000 transforms.py:1709(__eq__)
     1056    0.000    0.000    0.000    0.000 generic_utils.py:113(serialize_keras_class_and_config)
       30    0.000    0.000    0.000    0.000 gen_logging_ops.py:23(_assert)
        1    0.000    0.000    0.000    0.000 metrics.py:153(__init__)
      176    0.000    0.000    0.000    0.000 scale.py:117(get_transform)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:47(__init__)
      372    0.000    0.000    0.000    0.000 __init__.py:833(clean)
      564    0.000    0.000    0.000    0.000 func_graph.py:779(saveable)
       72    0.000    0.000    0.000    0.000 units.py:58(_is_natively_supported)
      120    0.000    0.000    0.000    0.000 save_impl.py:426(fn_input_signature)
       38    0.000    0.000    0.000    0.000 backprop.py:116(get_attr)
       48    0.000    0.000    0.000    0.000 copy.py:219(_deepcopy_tuple)
      156    0.000    0.000    0.000    0.000 metrics.py:312(_trackable_saved_model_saver)
      768    0.000    0.000    0.000    0.000 function.py:2067(_get_gradient_function)
        6    0.000    0.000    0.000    0.000 numeric.py:2167(isclose)
       32    0.000    0.000    0.000    0.000 axis.py:1664(set_minor_locator)
       50    0.000    0.000    0.000    0.000 callbacks.py:914(__init__)
      140    0.000    0.000    0.000    0.000 ticker.py:564(fix_minus)
      621    0.000    0.000    0.000    0.000 execute.py:184(make_bool)
      236    0.000    0.000    0.000    0.000 text.py:1104(set_x)
       12    0.000    0.000    0.000    0.000 utils_impl.py:242(get_assets_dir)
      704    0.000    0.000    0.000    0.000 functional.py:504(<genexpr>)
       12    0.000    0.000    0.000    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
     1092    0.000    0.000    0.000    0.000 statistics.py:201(_exact_ratio)
       34    0.000    0.000    0.000    0.000 axis.py:413(apply_tickdir)
       36    0.000    0.000    0.000    0.000 shape_base.py:25(atleast_1d)
       40    0.000    0.000    0.000    0.000 text.py:1093(set_position)
      202    0.000    0.000    0.000    0.000 font_manager.py:746(set_family)
      288    0.000    0.000    0.000    0.000 tf_utils.py:289(_convert_object_or_list)
       35    0.000    0.000    0.000    0.000 axis.py:529(apply_tickdir)
      568    0.000    0.000    0.000    0.000 {built-in method builtins.round}
       27    0.000    0.000    0.000    0.000 math_ops.py:1855(_may_reduce_to_scalar)
        8    0.000    0.000    0.000    0.000 text.py:223(_get_xy_display)
       12    0.000    0.000    0.000    0.000 file_io.py:631(has_atomic_move)
      370    0.000    0.000    0.000    0.000 {method 'sub' of '_sre.SRE_Pattern' objects}
      536    0.000    0.000    0.000    0.000 backend_pdf.py:902(cvt)
        2    0.000    0.000    0.000    0.000 gridspec.py:133(get_grid_positions)
       12    0.000    0.000    0.000    0.000 patches.py:436(set_fill)
       32    0.000    0.000    0.000    0.000 axis.py:1620(set_major_formatter)
      110    0.000    0.000    0.000    0.000 _internal.py:830(npy_ctypes_check)
        4    0.000    0.000    0.000    0.000 figure.py:956(set_edgecolor)
        2    0.000    0.000    0.000    0.000 _base.py:563(set_figure)
      211    0.000    0.000    0.000    0.000 lines.py:1228(set_markeredgewidth)
      300    0.000    0.000    0.000    0.000 nested_structure_coder.py:310(do_encode)
     1056    0.000    0.000    0.000    0.000 func_graph.py:478(deref)
       32    0.000    0.000    0.000    0.000 _methods.py:228(_ptp)
      448    0.000    0.000    0.000    0.000 re.py:286(_compile)
        8    0.000    0.000    0.000    0.000 base_layer.py:2409(_init_set_name)
      772    0.000    0.000    0.000    0.000 base_layer.py:1265(input_spec)
       17    0.000    0.000    0.000    0.000 __init__.py:138(deserialize)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:39(seterr)
        2    0.000    0.000    0.000    0.000 _base.py:3024(set_xbound)
       69    0.000    0.000    0.000    0.000 artist.py:923(set_alpha)
        2    0.000    0.000    0.000    0.000 functional.py:825(_map_graph_network)
      152    0.000    0.000    0.000    0.000 text.py:240(set_rotation_mode)
       20    0.000    0.000    0.000    0.000 cycler.py:349(by_key)
      223    0.000    0.000    0.000    0.000 lines.py:31(_get_dash_pattern)
      124    0.000    0.000    0.000    0.000 transforms.py:2162(transform_non_affine)
      672    0.000    0.000    0.000    0.000 data_structures.py:1039(<lambda>)
      211    0.000    0.000    0.000    0.000 lines.py:1271(set_markersize)
      215    0.000    0.000    0.000    0.000 lines.py:635(axes)
        4    0.000    0.000    0.000    0.000 transforms.py:1318(contains_branch_seperately)
       50    0.000    0.000    0.000    0.000 {built-in method numpy.frompyfunc}
        2    0.000    0.000    0.000    0.000 axis.py:1945(_get_label)
     2160    0.000    0.000    0.000    0.000 nested_structure_coder.py:330(can_encode)
        4    0.000    0.000    0.000    0.000 _base.py:1116(_set_title_offset_trans)
       25    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.cleanup_path}
     1031    0.000    0.000    0.000    0.000 context.py:803(scope_name)
      246    0.000    0.000    0.000    0.000 text.py:1115(set_y)
       72    0.000    0.000    0.000    0.000 input_layer.py:195(get_config)
       12    0.000    0.000    0.000    0.000 training.py:639(metrics_names)
      152    0.000    0.000    0.000    0.000 text.py:933(set_color)
      104    0.000    0.000    0.000    0.000 {built-in method builtins.__import__}
       48    0.000    0.000    0.000    0.000 ops.py:407(name)
       32    0.000    0.000    0.000    0.000 axis.py:1634(set_minor_formatter)
       27    0.000    0.000    0.000    0.000 math_ops.py:1850(_has_fully_defined_shape)
      154    0.000    0.000    0.000    0.000 text.py:949(set_horizontalalignment)
       61    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
      182    0.000    0.000    0.000    0.000 base_layer.py:1213(dtype)
       60    0.000    0.000    0.000    0.000 data_structures.py:902(_list_functions_for_serialization)
      156    0.000    0.000    0.000    0.000 fractions.py:84(__new__)
       12    0.000    0.000    0.000    0.000 utils_impl.py:101(build_tensor_info_from_op)
      288    0.000    0.000    0.000    0.000 tf_utils.py:273(_is_serialized_node_data)
      480    0.000    0.000    0.000    0.000 data_structures.py:330(_name_element)
       24    0.000    0.000    0.000    0.000 base.py:92(__init__)
       52    0.000    0.000    0.000    0.000 fractions.py:386(reverse)
      166    0.000    0.000    0.000    0.000 transforms.py:2658(get_matrix)
        1    0.000    0.000    0.000    0.000 training.py:557(_get_optimizer)
        4    0.000    0.000    0.000    0.000 transforms.py:1298(contains_branch)
      370    0.000    0.000    0.000    0.000 __init__.py:2113(type_name)
      162    0.000    0.000    0.000    0.000 {method 'set_size' of 'matplotlib.ft2font.FT2Font' objects}
       12    0.000    0.000    0.000    0.000 utils_impl.py:225(get_variables_path)
        8    0.000    0.000    0.000    0.000 _base.py:859(_set_position)
       32    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
       16    0.000    0.000    0.000    0.000 distribute_lib.py:2665(__enter__)
      552    0.000    0.000    0.000    0.000 variables.py:1182(_gather_saveables_for_checkpoint)
      473    0.000    0.000    0.000    0.000 transforms.py:177(<lambda>)
      384    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetShouldRecordBackprop}
        4    0.000    0.000    0.000    0.000 data_adapter.py:1337(expand_1d)
        2    0.000    0.000    0.000    0.000 init_ops.py:111(__call__)
      288    0.000    0.000    0.000    0.000 artist.py:371(get_transform)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:63(_validate_inputs)
        6    0.000    0.000    0.000    0.000 transforms.py:904(p1)
      152    0.000    0.000    0.000    0.000 text.py:1227(set_usetex)
       16    0.000    0.000    0.000    0.000 distribute_lib.py:2677(__exit__)
       12    0.000    0.000    0.000    0.000 _base.py:2045(_process_unit_info)
        1    0.000    0.000    0.000    0.000 training.py:560(_get_single_optimizer)
       16    0.000    0.000    0.000    0.000 transpiler.py:356(_cached_factory)
        2    0.000    0.000    0.000    0.000 _base.py:913(_gen_axes_patch)
       69    0.000    0.000    0.000    0.000 axis.py:197(_set_labelrotation)
      214    0.000    0.000    0.000    0.000 backend_bases.py:938(set_foreground)
      132    0.000    0.000    0.000    0.000 transforms.py:1705(__array__)
        1    0.000    0.000    0.000    0.000 optimizers.py:872(get)
       12    0.000    0.000    0.000    0.000 __init__.py:829(format)
      288    0.000    0.000    0.000    0.000 json_utils.py:50(<genexpr>)
       24    0.000    0.000    0.000    0.000 layer_serialization.py:132(python_properties)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:898(_from_components)
        2    0.000    0.000    0.000    0.000 _base.py:3435(set_ybound)
        8    0.000    0.000    0.000    0.000 transforms.py:2720(get_transformed_path_and_affine)
      152    0.000    0.000    0.000    0.000 base_layer.py:2383(_dtype)
       60    0.000    0.000    0.000    0.000 data_structures.py:161(_attribute_sentinel)
       12    0.000    0.000    0.000    0.000 tensor_spec.py:144(from_tensor)
       58    0.000    0.000    0.000    0.000 transforms.py:2736(get_affine)
       12    0.000    0.000    0.000    0.000 io_utils.py:57(path_to_string)
      211    0.000    0.000    0.000    0.000 lines.py:1038(set_antialiased)
  284/276    0.000    0.000    0.000    0.000 spines.py:220(_ensure_position_is_set)
        8    0.000    0.000    0.000    0.000 transforms.py:278(__array__)
        9    0.000    0.000    0.000    0.000 util.py:34(squeeze_or_expand_dimensions)
      120    0.000    0.000    0.000    0.000 smart_cond.py:62(smart_constant_value)
      276    0.000    0.000    0.000    0.000 ops.py:6008(has_default_graph)
      852    0.000    0.000    0.000    0.000 resource_variable_ops.py:518(shape)
       24    0.000    0.000    0.000    0.000 _base.py:2048(_process_single_axis)
        3    0.000    0.000    0.000    0.000 compile_utils.py:382(update_state)
        8    0.000    0.000    0.000    0.000 transforms.py:1509(transform_path)
       24    0.000    0.000    0.000    0.000 functional_saver.py:168(<dictcomp>)
      576    0.000    0.000    0.000    0.000 saveable_object.py:80(device)
      404    0.000    0.000    0.000    0.000 font_manager.py:940(_normalize_font_family)
        8    0.000    0.000    0.000    0.000 policy.py:296(__init__)
       32    0.000    0.000    0.000    0.000 _methods.py:36(_sum)
       12    0.000    0.000    0.000    0.000 function.py:1724(_call_with_structured_signature)
      104    0.000    0.000    0.000    0.000 pickle.py:262(_getattribute)
       12    0.000    0.000    0.000    0.000 __init__.py:564(format)
       12    0.000    0.000    0.000    0.000 functional.py:272(output_shape)
       30    0.000    0.000    0.000    0.000 __init__.py:138(connect)
      576    0.000    0.000    0.000    0.000 saveable_object.py:61(__init__)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:563(all_reduce_fn)
      127    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)
        4    0.000    0.000    0.000    0.000 _base.py:800(_update_transScale)
      793    0.000    0.000    0.000    0.000 transforms.py:1868(get_matrix)
     1300    0.000    0.000    0.000    0.000 tf_decorator.py:278(decorator_argspec)
        7    0.000    0.000    0.000    0.000 policy.py:488(global_policy)
      658    0.000    0.000    0.000    0.000 keras_tensor.py:43(keras_tensors_enabled)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:441(__enter__)
      132    0.000    0.000    0.000    0.000 graph_view.py:176(root)
       32    0.000    0.000    0.000    0.000 ticker.py:508(__init__)
        2    0.000    0.000    0.000    0.000 axis.py:2232(_get_label)
       40    0.000    0.000    0.000    0.000 patches.py:768(_convert_units)
      100    0.000    0.000    0.000    0.000 callbacks.py:988(<genexpr>)
        4    0.000    0.000    0.000    0.000 figure.py:966(set_facecolor)
        6    0.000    0.000    0.000    0.000 backend_bases.py:1635(__init__)
      211    0.000    0.000    0.000    0.000 lines.py:1213(set_markeredgecolor)
       52    0.000    0.000    0.000    0.000 fractions.py:374(forward)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2199(batch_reduce_to)
       82    0.000    0.000    0.000    0.000 backend_bases.py:958(set_joinstyle)
       44    0.000    0.000    0.000    0.000 transforms.py:2544(__init__)
        1    0.000    0.000    0.000    0.000 optimizers.py:835(deserialize)
        8    0.000    0.000    0.000    0.000 path.py:526(get_extents)
      100    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
      196    0.000    0.000    0.000    0.000 node.py:276(is_keras_tensor)
        4    0.000    0.000    0.000    0.000 base_layer.py:2985(_set_save_spec)
       55    0.000    0.000    0.000    0.000 distribute_lib.py:296(_require_cross_replica_or_default_context_extended)
       38    0.000    0.000    0.000    0.000 backprop.py:86(make_attr)
       32    0.000    0.000    0.000    0.000 _methods.py:78(_clip_dep_invoke_with_casting)
       12    0.000    0.000    0.000    0.000 save.py:89(__init__)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:245(create_signature_map)
      228    0.000    0.000    0.000    0.000 function.py:2003(structured_outputs)
       16    0.000    0.000    0.000    0.000 transforms.py:2266(blended_transform_factory)
        5    0.000    0.000    0.000    0.000 base_layer.py:1228(supports_masking)
       84    0.000    0.000    0.000    0.000 module.py:132(name_scope)
       12    0.000    0.000    0.000    0.000 io_utils.py:40(_path_to_string)
    16/12    0.000    0.000    0.000    0.000 transforms.py:2335(__eq__)
       79    0.000    0.000    0.000    0.000 converter.py:177(__eq__)
       24    0.000    0.000    0.000    0.000 array_ops.py:1443(_get_dtype_from_nested_lists)
      202    0.000    0.000    0.000    0.000 __init__.py:1860(_str_lower_equal)
       16    0.000    0.000    0.000    0.000 _base.py:3087(_validate_converted_limits)
        4    0.000    0.000    0.000    0.000 training.py:2637(reduce_per_replica)
       81    0.000    0.000    0.000    0.000 backend_agg.py:55(get_hinting_flag)
      123    0.000    0.000    0.000    0.000 stride_tricks.py:262(<listcomp>)
       13    0.000    0.000    0.000    0.000 _dill.py:145(numpyufunc)
       22    0.000    0.000    0.000    0.000 distribution_strategy_context.py:64(_pop_per_thread_mode)
      211    0.000    0.000    0.000    0.000 lines.py:1050(set_color)
      258    0.000    0.000    0.000    0.000 __init__.py:1850(_str_equal)
        6    0.000    0.000    0.000    0.000 _datasource.py:376(_isurl)
        3    0.000    0.000    0.000    0.000 resource_variable_ops.py:280(__del__)
      260    0.000    0.000    0.000    0.000 nn_ops.py:3294(_tf_deterministic_ops)
      450    0.000    0.000    0.000    0.000 text.py:1151(set_text)
       24    0.000    0.000    0.000    0.000 optimizer_v2.py:621(_assume_mirrored)
       13    0.000    0.000    0.000    0.000 pickle.py:347(__init__)
       50    0.000    0.000    0.000    0.000 callbacks.py:1650(on_train_begin)
       25    0.000    0.000    0.000    0.000 transforms.py:2408(__init__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1626(writeInfoDict)
      288    0.000    0.000    0.000    0.000 initializers_v2.py:528(get_config)
       24    0.000    0.000    0.000    0.000 functional_saver.py:44(__init__)
       48    0.000    0.000    0.000    0.000 copy.py:220(<listcomp>)
       82    0.000    0.000    0.000    0.000 transforms.py:385(intervaly)
       32    0.000    0.000    0.000    0.000 __init__.py:1633(safe_first_element)
       24    0.000    0.000    0.000    0.000 save.py:196(<dictcomp>)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:2223(paint)
      192    0.000    0.000    0.000    0.000 serialized_attributes.py:165(<dictcomp>)
      744    0.000    0.000    0.000    0.000 base_layer.py:2506(<genexpr>)
        4    0.000    0.000    0.000    0.000 transforms.py:1639(__eq__)
      726    0.000    0.000    0.000    0.000 {method 'join' of 'bytes' objects}
       34    0.000    0.000    0.000    0.000 ops.py:4760(_attr_scope)
      543    0.000    0.000    0.000    0.000 artist.py:197(axes)
       32    0.000    0.000    0.000    0.000 tf_stack.py:53(__enter__)
       22    0.000    0.000    0.000    0.000 distribution_strategy_context.py:60(_push_per_thread_mode)
        8    0.000    0.000    0.000    0.000 transforms.py:957(set)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(nonzero)
      356    0.000    0.000    0.000    0.000 base_layer_utils.py:475(training)
       12    0.000    0.000    0.000    0.000 ticker.py:1681(nonsingular)
       50    0.000    0.000    0.000    0.000 lines.py:963(get_markerfacecolor)
      596    0.000    0.000    0.000    0.000 transforms.py:939(get_points)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1264(writeExtGSTates)
        3    0.000    0.000    0.000    0.000 def_function.py:102(called_with_tracing)
        8    0.000    0.000    0.000    0.000 spines.py:381(set_position)
        4    0.000    0.000    0.000    0.000 transforms.py:2093(__eq__)
      740    0.000    0.000    0.000    0.000 __init__.py:2111(<genexpr>)
       27    0.000    0.000    0.000    0.000 backend_pdf.py:2085(encode_string)
       50    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(copyto)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:224(_list_functions_for_serialization)
       52    0.000    0.000    0.000    0.000 tensor_shape.py:1203(__eq__)
        2    0.000    0.000    0.000    0.000 axis.py:1963(_get_offset_text)
       50    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.generic' objects}
      307    0.000    0.000    0.000    0.000 {built-in method posix.fspath}
      242    0.000    0.000    0.000    0.000 node.py:215(input_tensors)
        1    0.000    0.000    0.000    0.000 functional.py:340(_lookup_dependency)
       52    0.000    0.000    0.000    0.000 fractions.py:423(_div)
       12    0.000    0.000    0.000    0.000 function_serialization.py:78(serialize_bare_concrete_function)
       48    0.000    0.000    0.000    0.000 input_spec.py:109(to_tensor_shape)
        6    0.000    0.000    0.000    0.000 generic_utils.py:745(to_snake_case)
      120    0.000    0.000    0.000    0.000 function.py:2583(<dictcomp>)
       27    0.000    0.000    0.000    0.000 backprop_util.py:25(IsTrainable)
       24    0.000    0.000    0.000    0.000 dtypes.py:215(__reduce__)
      384    0.000    0.000    0.000    0.000 function.py:505(stateful_ops)
        2    0.000    0.000    0.000    0.000 axis.py:2252(_get_offset_text)
      441    0.000    0.000    0.000    0.000 {method 'endswith' of 'str' objects}
       52    0.000    0.000    0.000    0.000 fractions.py:401(_add)
       82    0.000    0.000    0.000    0.000 transforms.py:376(intervalx)
        3    0.000    0.000    0.000    0.000 weights_broadcast_ops.py:136(broadcast_weights)
       50    0.000    0.000    0.000    0.000 function_base.py:2120(<listcomp>)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:592(synchronization)
       25    0.000    0.000    0.000    0.000 transforms.py:2451(get_matrix)
       84    0.000    0.000    0.000    0.000 save_impl.py:72(should_skip_serialization)
      162    0.000    0.000    0.000    0.000 policy.py:406(compute_dtype)
       27    0.000    0.000    0.000    0.000 backend_pdf.py:1718(track_characters)
       82    0.000    0.000    0.000    0.000 backend_bases.py:890(set_capstyle)
       12    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.HasAtomicMove}
       12    0.000    0.000    0.000    0.000 transforms.py:2221(__init__)
      672    0.000    0.000    0.000    0.000 base.py:1032(_map_resources)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2225(_batch_reduce_to)
      288    0.000    0.000    0.000    0.000 base.py:1014(_list_functions_for_serialization)
       21    0.000    0.000    0.000    0.000 tf_inspect.py:365(isclass)
        2    0.000    0.000    0.000    0.000 _base.py:612(_set_lim_and_transforms)
      708    0.000    0.000    0.000    0.000 multiarray.py:707(dot)
       63    0.000    0.000    0.000    0.000 backend_pdf.py:1596(reserveObject)
       32    0.000    0.000    0.000    0.000 scale.py:718(scale_factory)
      788    0.000    0.000    0.000    0.000 artist.py:800(get_visible)
       16    0.000    0.000    0.000    0.000 inspect.py:643(getfile)
      120    0.000    0.000    0.000    0.000 weakref.py:339(__init__)
      120    0.000    0.000    0.000    0.000 utils.py:233(get_training_arg)
        1    0.000    0.000    0.000    0.000 compile_utils.py:298(build)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2228(<listcomp>)
       48    0.000    0.000    0.000    0.000 saving_utils.py:305(<genexpr>)
       32    0.000    0.000    0.000    0.000 converter.py:184(uses)
        6    0.000    0.000    0.000    0.000 math_ops.py:3458(add_n)
        1    0.000    0.000    0.000    0.000 compile_utils.py:134(build)
       23    0.000    0.000    0.000    0.000 base_layer_utils.py:754(v2_dtype_behavior_enabled)
      120    0.000    0.000    0.000    0.000 weakref.py:334(__new__)
       32    0.000    0.000    0.000    0.000 genericpath.py:117(_splitext)
        2    0.000    0.000    0.000    0.000 functional.py:760(_compute_tensor_usage_count)
       24    0.000    0.000    0.000    0.000 training.py:2609(_get_compile_args)
       48    0.000    0.000    0.000    0.000 saving_utils.py:294(_has_name)
      384    0.000    0.000    0.000    0.000 function.py:1436(record)
       33    0.000    0.000    0.000    0.000 {built-in method zlib.compressobj}
      288    0.000    0.000    0.000    0.000 tf_utils.py:254(__init__)
      369    0.000    0.000    0.000    0.000 stride_tricks.py:266(<genexpr>)
       12    0.000    0.000    0.000    0.000 tf_logging.py:75(_logger_find_caller)
       12    0.000    0.000    0.000    0.000 axis.py:2147(get_ticks_position)
       18    0.000    0.000    0.000    0.000 backend_bases.py:2185(mpl_connect)
      104    0.000    0.000    0.000    0.000 {built-in method math.log10}
       10    0.000    0.000    0.000    0.000 transforms.py:274(frozen)
       12    0.000    0.000    0.000    0.000 re.py:184(sub)
      354    0.000    0.000    0.000    0.000 policy.py:392(variable_dtype)
       12    0.000    0.000    0.000    0.000 variable_scope.py:1400(__init__)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2294(clip_cmd)
      104    0.000    0.000    0.000    0.000 statistics.py:159(<genexpr>)
       52    0.000    0.000    0.000    0.000 statistics.py:233(_convert)
      240    0.000    0.000    0.000    0.000 functional.py:1026(_should_skip_first_node)
       10    0.000    0.000    0.000    0.000 _base.py:903(_set_artist_props)
       32    0.000    0.000    0.000    0.000 ticker.py:1994(le)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:446(__exit__)
        6    0.000    0.000    0.000    0.000 numeric.py:2244(within_tol)
       45    0.000    0.000    0.000    0.000 ops.py:2519(_get_attr_bool)
        4    0.000    0.000    0.000    0.000 base_layer.py:1560(_clear_losses)
       50    0.000    0.000    0.000    0.000 lines.py:928(get_markeredgecolor)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2249(alpha_cmd)
       42    0.000    0.000    0.000    0.000 distribute_lib.py:340(_require_strategy_scope_strategy)
        8    0.000    0.000    0.000    0.000 transforms.py:1520(transform_path_affine)
      120    0.000    0.000    0.000    0.000 nested_structure_coder.py:356(do_encode)
       96    0.000    0.000    0.000    0.000 input_spec.py:95(get_config)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2168(reduce_to)
        8    0.000    0.000    0.000    0.000 parse.py:361(urlparse)
       63    0.000    0.000    0.000    0.000 backend_pdf.py:1606(recordXref)
      288    0.000    0.000    0.000    0.000 generic_utils.py:188(skip_failed_serialization)
       72    0.000    0.000    0.000    0.000 serialized_attributes.py:177(<dictcomp>)
        7    0.000    0.000    0.000    0.000 data_adapter.py:1340(_expand_single_1d_tensor)
        8    0.000    0.000    0.000    0.000 _base.py:810(get_position)
        4    0.000    0.000    0.000    0.000 transforms.py:1669(set)
       50    0.000    0.000    0.000    0.000 function_base.py:2115(<listcomp>)
       58    0.000    0.000    0.000    0.000 markers.py:240(__bool__)
      414    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
       60    0.000    0.000    0.000    0.000 metrics.py:233(dtype)
       86    0.000    0.000    0.000    0.000 functional.py:221(input)
      725    0.000    0.000    0.000    0.000 font_manager.py:679(get_family)
      784    0.000    0.000    0.000    0.000 artist.py:888(get_agg_filter)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:1016(with_rank)
       84    0.000    0.000    0.000    0.000 module.py:195(_flatten)
       24    0.000    0.000    0.000    0.000 type_spec.py:304(__reduce__)
        2    0.000    0.000    0.000    0.000 backend_bases.py:3360(new_figure_manager_given_figure)
       32    0.000    0.000    0.000    0.000 distribute_lib.py:347(_require_strategy_scope_extended)
       72    0.000    0.000    0.000    0.000 serialized_attributes.py:157(__init__)
      150    0.000    0.000    0.000    0.000 font_manager.py:1030(get_default_size)
       58    0.000    0.000    0.000    0.000 _methods.py:44(_any)
       74    0.000    0.000    0.000    0.000 training.py:2563(_assert_compile_was_called)
      492    0.000    0.000    0.000    0.000 base_layer.py:1255(activity_regularizer)
       78    0.000    0.000    0.000    0.000 op_def_library.py:416(<genexpr>)
       78    0.000    0.000    0.000    0.000 op_def_library.py:532(<genexpr>)
       60    0.000    0.000    0.000    0.000 weakref.py:288(update)
        1    0.000    0.000    0.000    0.000 version_utils.py:54(__new__)
      946    0.000    0.000    0.000    0.000 font_manager.py:727(get_size_in_points)
      169    0.000    0.000    0.000    0.000 enum.py:584(__reduce_ex__)
        2    0.000    0.000    0.000    0.000 _datasource.py:322(__init__)
        3    0.000    0.000    0.000    0.000 confusion_matrix.py:34(remove_squeezable_dimensions)
       30    0.000    0.000    0.000    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
      328    0.000    0.000    0.000    0.000 tf_decorator.py:266(decorated_target)
       12    0.000    0.000    0.000    0.000 axis.py:1828(_get_ticks_position)
      368    0.000    0.000    0.000    0.000 __init__.py:886(<listcomp>)
       24    0.000    0.000    0.000    0.000 spines.py:154(get_patch_transform)
       21    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:416(parent)
        3    0.000    0.000    0.000    0.000 training.py:569(_reset_compile_cache)
        8    0.000    0.000    0.000    0.000 transforms.py:1731(transform_path_affine)
      250    0.000    0.000    0.000    0.000 node.py:221(output_tensors)
      624    0.000    0.000    0.000    0.000 device_spec.py:264(replica)
        8    0.000    0.000    0.000    0.000 version_utils.py:84(should_use_v2)
        6    0.000    0.000    0.000    0.000 iterator_ops.py:888(_component_specs)
      100    0.000    0.000    0.000    0.000 function_base.py:2116(<genexpr>)
       16    0.000    0.000    0.000    0.000 compile_utils.py:46(_conform_to_outputs)
      170    0.000    0.000    0.000    0.000 def_function.py:431(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:976(set_dpi)
      725    0.000    0.000    0.000    0.000 font_manager.py:691(get_style)
      784    0.000    0.000    0.000    0.000 artist.py:868(get_rasterized)
       24    0.000    0.000    0.000    0.000 signature_serialization.py:64(<genexpr>)
      100    0.000    0.000    0.000    0.000 lines.py:518(get_fillstyle)
      624    0.000    0.000    0.000    0.000 device_spec.py:260(job)
      540    0.000    0.000    0.000    0.000 path.py:197(vertices)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1804(nonzero)
      294    0.000    0.000    0.000    0.000 transforms.py:1689(<lambda>)
       95    0.000    0.000    0.000    0.000 posixpath.py:41(_get_sep)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:225(<dictcomp>)
       48    0.000    0.000    0.000    0.000 getlimits.py:365(__new__)
       12    0.000    0.000    0.000    0.000 posixpath.py:154(dirname)
      352    0.000    0.000    0.000    0.000 {method 'rstrip' of 'bytes' objects}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1200(alphaState)
       50    0.000    0.000    0.000    0.000 callbacks.py:1679(on_train_end)
        4    0.000    0.000    0.000    0.000 __init__.py:1605(index_of)
       12    0.000    0.000    0.000    0.000 save.py:103(add_object)
       30    0.000    0.000    0.000    0.000 math_ops.py:3849(conj)
       44    0.000    0.000    0.000    0.000 _ufunc_config.py:139(geterr)
        8    0.000    0.000    0.000    0.000 loss_scale.py:46(get)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:879(from_config)
      356    0.000    0.000    0.000    0.000 base_layer.py:853(compute_mask)
      552    0.000    0.000    0.000    0.000 resource_variable_ops.py:596(aggregation)
        2    0.000    0.000    0.000    0.000 posixpath.py:376(abspath)
       36    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        2    0.000    0.000    0.000    0.000 {built-in method builtins.__build_class__}
       88    0.000    0.000    0.000    0.000 {built-in method builtins.min}
        3    0.000    0.000    0.000    0.000 math_grad.py:1225(_ShapesFullySpecifiedAndEqual)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:217(<listcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:1423(_add_axes_internal)
       32    0.000    0.000    0.000    0.000 axis.py:864(reset_ticks)
      252    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
       12    0.000    0.000    0.000    0.000 execute.py:283(<listcomp>)
       78    0.000    0.000    0.000    0.000 backend_bases.py:868(set_alpha)
      725    0.000    0.000    0.000    0.000 font_manager.py:698(get_variant)
       20    0.000    0.000    0.000    0.000 transforms.py:2622(get_matrix)
      128    0.000    0.000    0.000    0.000 backend_pdf.py:2360(<listcomp>)
      312    0.000    0.000    0.000    0.000 _base.py:586(<genexpr>)
      725    0.000    0.000    0.000    0.000 font_manager.py:713(get_stretch)
      120    0.000    0.000    0.000    0.000 {built-in method _weakref._remove_dead_weakref}
        1    0.000    0.000    0.000    0.000 rmsprop.py:98(__init__)
       48    0.000    0.000    0.000    0.000 graph_view.py:67(_slot_variable_naming_for_optimizer)
       12    0.000    0.000    0.000    0.000 posixpath.py:144(basename)
       45    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrBool}
      360    0.000    0.000    0.000    0.000 backend_pdf.py:278(pdfRepr)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:83(__exit__)
      624    0.000    0.000    0.000    0.000 device_spec.py:268(task)
        6    0.000    0.000    0.000    0.000 backend.py:984(unique_object_name)
       16    0.000    0.000    0.000    0.000 {tensorflow.python.framework.fast_tensor_util.AppendFloat32ArrayToTensorProto}
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1159(_dense_apply_args)
      108    0.000    0.000    0.000    0.000 text.py:25(_wrap_text)
       24    0.000    0.000    0.000    0.000 optimizer_v2.py:860(get_config)
       12    0.000    0.000    0.000    0.000 tf_logging.py:45(_get_caller)
      624    0.000    0.000    0.000    0.000 device_spec.py:276(device_index)
        4    0.000    0.000    0.000    0.000 axis.py:2345(_update_offset_text_position)
       64    0.000    0.000    0.000    0.000 ticker.py:1984(closeto)
        6    0.000    0.000    0.000    0.000 losses_utils.py:129(cast_losses_to_common_dtype)
      552    0.000    0.000    0.000    0.000 saveable_object.py:75(optional_restore)
      276    0.000    0.000    0.000    0.000 op_def_library.py:665(<listcomp>)
      312    0.000    0.000    0.000    0.000 function.py:2293(<genexpr>)
       30    0.000    0.000    0.000    0.000 weakref.py:44(__new__)
       69    0.000    0.000    0.000    0.000 {method 'tell' of '_io.BufferedWriter' objects}
      725    0.000    0.000    0.000    0.000 font_manager.py:704(get_weight)
        4    0.000    0.000    0.000    0.000 transforms.py:1485(get_matrix)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2281(push)
       32    0.000    0.000    0.000    0.000 ticker.py:2001(ge)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1679(__init__)
       12    0.000    0.000    0.000    0.000 save.py:354(<listcomp>)
       12    0.000    0.000    0.000    0.000 save_options.py:39(__init__)
      402    0.000    0.000    0.000    0.000 text.py:856(get_text)
      180    0.000    0.000    0.000    0.000 data_structures.py:1082(<lambda>)
        4    0.000    0.000    0.000    0.000 transforms.py:817(update_from_path)
        8    0.000    0.000    0.000    0.000 loss_scale.py:421(get)
       32    0.000    0.000    0.000    0.000 __init__.py:1891(method)
      512    0.000    0.000    0.000    0.000 fromnumeric.py:2232(_any_dispatcher)
       50    0.000    0.000    0.000    0.000 training_utils.py:1220(__init__)
       24    0.000    0.000    0.000    0.000 metrics.py:237(get_config)
       48    0.000    0.000    0.000    0.000 distribute_lib.py:1373(experimental_local_results)
        3    0.000    0.000    0.000    0.000 def_function.py:62(called_with_tracing)
       12    0.000    0.000    0.000    0.000 file_io.py:50(__init__)
        2    0.000    0.000    0.000    0.000 gridspec.py:366(get_subplot_params)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1613(writeXref)
      432    0.000    0.000    0.000    0.000 data_structures.py:475(_make_storage)
      276    0.000    0.000    0.000    0.000 saveable_object_util.py:99(_read_variable_closure)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
       36    0.000    0.000    0.000    0.000 uuid.py:280(hex)
       50    0.000    0.000    0.000    0.000 training_utils.py:1241(__exit__)
       64    0.000    0.000    0.000    0.000 _methods.py:73(_clip_dep_is_byte_swapped)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:164(_normalize_outputs)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1982(_get_output_canvas)
      211    0.000    0.000    0.000    0.000 lines.py:547(set_markevery)
      104    0.000    0.000    0.000    0.000 pickle.py:275(whichmodule)
        1    0.000    0.000    0.000    0.000 compile_utils.py:248(_get_loss_object)
       12    0.000    0.000    0.000    0.000 function.py:2487(signature_summary)
       20    0.000    0.000    0.000    0.000 patches.py:458(set_capstyle)
      372    0.000    0.000    0.000    0.000 __init__.py:836(<listcomp>)
       12    0.000    0.000    0.000    0.000 variable_scope.py:1115(__init__)
        4    0.000    0.000    0.000    0.000 _base.py:2407(<listcomp>)
       12    0.000    0.000    0.000    0.000 _base.py:4215(get_children)
        4    0.000    0.000    0.000    0.000 tf_utils.py:192(get_shapes)
        4    0.000    0.000    0.000    0.000 figure.py:651(get_children)
       82    0.000    0.000    0.000    0.000 backend_bases.py:885(set_antialiased)
       12    0.000    0.000    0.000    0.000 patches.py:402(set_linestyle)
      288    0.000    0.000    0.000    0.000 tf_utils.py:257(as_list)
        8    0.000    0.000    0.000    0.000 weakref.py:51(_cb)
       12    0.000    0.000    0.000    0.000 __init__.py:542(usesTime)
        1    0.000    0.000    0.000    0.000 training.py:2472(_validate_compile)
        7    0.000    0.000    0.000    0.000 layer_utils.py:105(<listcomp>)
       36    0.000    0.000    0.000    0.000 axis.py:1844(<genexpr>)
       10    0.000    0.000    0.000    0.000 figure.py:453(_get_axes)
      725    0.000    0.000    0.000    0.000 font_manager.py:730(get_file)
      228    0.000    0.000    0.000    0.000 cycler.py:227(<genexpr>)
        4    0.000    0.000    0.000    0.000 __init__.py:1320(_check_1d)
      318    0.000    0.000    0.000    0.000 backend_pdf.py:292(pdfRepr)
       84    0.000    0.000    0.000    0.000 variables.py:22(ld)
        6    0.000    0.000    0.000    0.000 backprop.py:846(__enter__)
       22    0.000    0.000    0.000    0.000 patches.py:382(set_linewidth)
        6    0.000    0.000    0.000    0.000 _datasource.py:337(_iszip)
        2    0.000    0.000    0.000    0.000 _datasource.py:458(abspath)
       36    0.000    0.000    0.000    0.000 six.py:582(iterkeys)
        4    0.000    0.000    0.000    0.000 activations.py:495(get)
        8    0.000    0.000    0.000    0.000 optimizer_v2.py:1173(_restore_slot_variable)
       12    0.000    0.000    0.000    0.000 text.py:535(set_clip_box)
      548    0.000    0.000    0.000    0.000 artist.py:1052(sticky_edges)
       75    0.000    0.000    0.000    0.000 path.py:351(__len__)
        4    0.000    0.000    0.000    0.000 _datasource.py:367(_possible_names)
       50    0.000    0.000    0.000    0.000 training.py:2544(_maybe_load_initial_epoch_from_ckpt)
       48    0.000    0.000    0.000    0.000 optimizer_v2.py:731(get_slot_names)
       24    0.000    0.000    0.000    0.000 patches.py:271(get_patch_transform)
        8    0.000    0.000    0.000    0.000 parse.py:412(urlsplit)
        4    0.000    0.000    0.000    0.000 compile_utils.py:70(_maybe_broadcast_to_outputs)
       48    0.000    0.000    0.000    0.000 saving_utils.py:306(<genexpr>)
      132    0.000    0.000    0.000    0.000 def_function.py:915(function_spec)
      569    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      120    0.000    0.000    0.000    0.000 save_impl.py:457(_maybe_wrap_with_training_arg)
        1    0.000    0.000    0.000    0.000 base_layer.py:1242(stateful)
      156    0.000    0.000    0.000    0.000 base.py:553(_update_uid)
      156    0.000    0.000    0.000    0.000 base.py:569(_name_based_restores)
       32    0.000    0.000    0.000    0.000 ticker.py:1973(__init__)
      125    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
        9    0.000    0.000    0.000    0.000 ops.py:4962(prevent_feeding)
        4    0.000    0.000    0.000    0.000 figure.py:199(update)
       12    0.000    0.000    0.000    0.000 figure.py:70(as_list)
       80    0.000    0.000    0.000    0.000 backend_bases.py:994(get_hatch_path)
        8    0.000    0.000    0.000    0.000 policy.py:342(_parse_name)
        3    0.000    0.000    0.000    0.000 base_layer.py:1717(add_update)
      276    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:1217(<listcomp>)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2405(cumsum)
       64    0.000    0.000    0.000    0.000 enum.py:581(__hash__)
      254    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        2    0.000    0.000    0.000    0.000 functional.py:623(_validate_graph_inputs_and_outputs)
      251    0.000    0.000    0.000    0.000 path.py:211(codes)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:74(__enter__)
       48    0.000    0.000    0.000    0.000 func_graph.py:664(captures)
       16    0.000    0.000    0.000    0.000 axis.py:1175(<listcomp>)
       24    0.000    0.000    0.000    0.000 __init__.py:809(acquire)
        2    0.000    0.000    0.000    0.000 training.py:2401(_set_save_spec)
        6    0.000    0.000    0.000    0.000 backprop.py:856(_push_tape)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2629(<listcomp>)
        4    0.000    0.000    0.000    0.000 axis.py:1010(get_inverted)
       32    0.000    0.000    0.000    0.000 artist.py:594(get_snap)
       27    0.000    0.000    0.000    0.000 cp1252.py:11(encode)
      168    0.000    0.000    0.000    0.000 save_impl.py:574(<listcomp>)
        6    0.000    0.000    0.000    0.000 losses_utils.py:152(<listcomp>)
        8    0.000    0.000    0.000    0.000 __init__.py:157(_remove_proxy)
       88    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
        2    0.000    0.000    0.000    0.000 backend_bases.py:2172(switch_backends)
        8    0.000    0.000    0.000    0.000 ticker.py:644(get_offset)
        8    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.get_path_extents}
       16    0.000    0.000    0.000    0.000 inspect.py:1495(currentframe)
       12    0.000    0.000    0.000    0.000 __init__.py:548(formatMessage)
       12    0.000    0.000    0.000    0.000 compat.py:125(as_str_any)
       64    0.000    0.000    0.000    0.000 axis.py:653(locator)
      216    0.000    0.000    0.000    0.000 figure.py:463(_get_dpi)
        4    0.000    0.000    0.000    0.000 transforms.py:1623(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method today}
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:276(__init__)
       32    0.000    0.000    0.000    0.000 tf_stack.py:71(__exit__)
      175    0.000    0.000    0.000    0.000 markers.py:246(get_fillstyle)
        8    0.000    0.000    0.000    0.000 transforms.py:2342(_iter_break_from_left_to_right)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1658(writeTrailer)
       13    0.000    0.000    0.000    0.000 _dill.py:127(ndarraysubclassinstance)
        3    0.000    0.000    0.000    0.000 activations.py:457(deserialize)
        3    0.000    0.000    0.000    0.000 metrics_utils.py:479(ragged_assert_compatible_and_get_flat_values)
        3    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:226(destroy_resource_op)
        4    0.000    0.000    0.000    0.000 ticker.py:2222(view_limits)
       30    0.000    0.000    0.000    0.000 resource_variable_ops.py:268(__init__)
      312    0.000    0.000    0.000    0.000 _base.py:588(<genexpr>)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:2208(fill)
        3    0.000    0.000    0.000    0.000 compile_utils.py:606(match_dtype_and_rank)
       17    0.000    0.000    0.000    0.000 initializers_v2.py:747(_get_dtype)
      288    0.000    0.000    0.000    0.000 init_ops_v2.py:62(get_config)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:281(needs_keras_history)
       44    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
       17    0.000    0.000    0.000    0.000 __init__.py:38(populate_deserializable_objects)
       16    0.000    0.000    0.000    0.000 axis.py:922(_translate_tick_kw)
        2    0.000    0.000    0.000    0.000 figure.py:168(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:111(add)
       52    0.000    0.000    0.000    0.000 Experiment.py:157(update_nn)
       50    0.000    0.000    0.000    0.000 callbacks.py:934(set_params)
       16    0.000    0.000    0.000    0.000 converter.py:188(call_options)
       82    0.000    0.000    0.000    0.000 backend_bases.py:963(set_linewidth)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:2253(hatch_cmd)
        2    0.000    0.000    0.000    0.000 functional.py:947(_build_map)
        2    0.000    0.000    0.000    0.000 figure.py:1651(clf)
       48    0.000    0.000    0.000    0.000 inspect.py:687(<genexpr>)
        4    0.000    0.000    0.000    0.000 initializers_v2.py:521(__init__)
       23    0.000    0.000    0.000    0.000 backend.py:976(track_variable)
       50    0.000    0.000    0.000    0.000 callbacks.py:1042(on_train_begin)
      156    0.000    0.000    0.000    0.000 base.py:561(_unconditional_checkpoint_dependencies)
       72    0.000    0.000    0.000    0.000 tf_inspect.py:40(_convert_maybe_argspec_to_fullargspec)
       32    0.000    0.000    0.000    0.000 scale.py:97(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:2691(set_axisbelow)
        2    0.000    0.000    0.000    0.000 figure.py:1100(_process_projection_requirements)
      216    0.000    0.000    0.000    0.000 text.py:1241(get_usetex)
        9    0.000    0.000    0.000    0.000 tensor_util.py:596(<listcomp>)
       96    0.000    0.000    0.000    0.000 saving_utils.py:273(_serialize_fn)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:261(__exit__)
       40    0.000    0.000    0.000    0.000 __init__.py:118(__init__)
       24    0.000    0.000    0.000    0.000 weakref.py:480(pop)
       16    0.000    0.000    0.000    0.000 backend.py:887(name_scope)
        3    0.000    0.000    0.000    0.000 backprop.py:1051(<listcomp>)
       12    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.generic' objects}
       69    0.000    0.000    0.000    0.000 axis.py:215(get_tick_padding)
        8    0.000    0.000    0.000    0.000 figure.py:778(set_canvas)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1704(draw_event)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:2366(copy_properties)
        1    0.000    0.000    0.000    0.000 Experiment.py:221(<listcomp>)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:361(convert_n_to_tensor_or_indexed_slices)
       51    0.000    0.000    0.000    0.000 numbers.py:283(__float__)
        6    0.000    0.000    0.000    0.000 backend.py:708(get_default_graph_uid_map)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:257(__enter__)
       51    0.000    0.000    0.000    0.000 backprop.py:109(__init__)
       64    0.000    0.000    0.000    0.000 axis.py:666(formatter)
       18    0.000    0.000    0.000    0.000 __init__.py:185(process)
       12    0.000    0.000    0.000    0.000 __init__.py:390(format)
       39    0.000    0.000    0.000    0.000 enum.py:347(__repr__)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:2197(stroke)
        3    0.000    0.000    0.000    0.000 training.py:2750(_is_scalar)
      156    0.000    0.000    0.000    0.000 base.py:565(_unconditional_dependency_names)
       32    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
        1    0.000    0.000    0.000    0.000 Experiment.py:222(<listcomp>)
        7    0.000    0.000    0.000    0.000 base_layer.py:2916(_call_fn_arg_defaults)
        8    0.000    0.000    0.000    0.000 figure.py:913(get_size_inches)
       12    0.000    0.000    0.000    0.000 __init__.py:329(getMessage)
       27    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:37(get_canvas_width_height)
       60    0.000    0.000    0.000    0.000 data_structures.py:903(<dictcomp>)
      145    0.000    0.000    0.000    0.000 def_function.py:926(_initialize_uninitialized_variables)
        4    0.000    0.000    0.000    0.000 gen_dataset_ops.py:2624(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3008(get_xbound)
      196    0.000    0.000    0.000    0.000 axis.py:662(formatter)
        4    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.update_path_extents}
        2    0.000    0.000    0.000    0.000 functional.py:659(<listcomp>)
      152    0.000    0.000    0.000    0.000 text.py:554(set_wrap)
        4    0.000    0.000    0.000    0.000 transforms.py:909(intervalx)
       26    0.000    0.000    0.000    0.000 transforms.py:2249(get_matrix)
       26    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        2    0.000    0.000    0.000    0.000 _base.py:2383(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_bases.py:151(__init__)
      298    0.000    0.000    0.000    0.000 transforms.py:1740(get_affine)
       16    0.000    0.000    0.000    0.000 transforms.py:1768(is_separable)
        6    0.000    0.000    0.000    0.000 artist.py:1017(set_label)
       24    0.000    0.000    0.000    0.000 weakref.py:389(__delitem__)
        2    0.000    0.000    0.000    0.000 warnings.py:119(filterwarnings)
        4    0.000    0.000    0.000    0.000 _bootlocale.py:23(getpreferredencoding)
       60    0.000    0.000    0.000    0.000 backend_pdf.py:2239(linewidth_cmd)
       10    0.000    0.000    0.000    0.000 backend_pdf.py:2265(rgb_cmd)
        1    0.000    0.000    0.000    0.000 metrics_utils.py:63(update_state_wrapper)
       10    0.000    0.000    0.000    0.000 tf_utils.py:339(is_symbolic_tensor)
        9    0.000    0.000    0.000    0.000 distribution_strategy_context.py:90(get_replica_context)
        8    0.000    0.000    0.000    0.000 axis.py:834(limit_range_for_scale)
       54    0.000    0.000    0.000    0.000 text.py:550(get_wrap)
       16    0.000    0.000    0.000    0.000 ticker.py:707(<genexpr>)
      108    0.000    0.000    0.000    0.000 {method 'get_width_height' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(unravel_index)
        6    0.000    0.000    0.000    0.000 posixpath.py:338(normpath)
     10/2    0.000    0.000    0.000    0.000 functional.py:978(_build_map_helper)
        1    0.000    0.000    0.000    0.000 losses.py:1857(get)
       84    0.000    0.000    0.000    0.000 base_layer.py:1223(supports_masking)
        1    0.000    0.000    0.000    0.000 backend.py:217(get_uid)
      120    0.000    0.000    0.000    0.000 def_function.py:906(python_function)
        6    0.000    0.000    0.000    0.000 indexed_slices.py:320(internal_convert_n_to_tensor_or_indexed_slices)
       15    0.000    0.000    0.000    0.000 ops.py:2527(_get_attr_int)
       24    0.000    0.000    0.000    0.000 __init__.py:816(release)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1688(finalize)
       84    0.000    0.000    0.000    0.000 backend_pdf.py:2115(<genexpr>)
        4    0.000    0.000    0.000    0.000 training.py:2650(_reduce)
        4    0.000    0.000    0.000    0.000 training.py:2760(_minimum_control_deps)
        3    0.000    0.000    0.000    0.000 tape.py:45(push_new_tape)
        2    0.000    0.000    0.000    0.000 _base.py:3064(get_xlim)
       24    0.000    0.000    0.000    0.000 figure.py:235(_update_this)
      128    0.000    0.000    0.000    0.000 ticker.py:220(set_axis)
       12    0.000    0.000    0.000    0.000 artist.py:719(set_clip_box)
        9    0.000    0.000    0.000    0.000 {built-in method numpy.fromiter}
       64    0.000    0.000    0.000    0.000 inspect.py:690(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1357(writeGouraudTriangles)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:519(<genexpr>)
        4    0.000    0.000    0.000    0.000 base_layer_utils.py:164(have_all_keras_metadata)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:506(__init__)
       14    0.000    0.000    0.000    0.000 util.py:1078(__init__)
       15    0.000    0.000    0.000    0.000 base.py:763(_preload_simple_restoration)
       18    0.000    0.000    0.000    0.000 core.py:593(filled)
        2    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
        4    0.000    0.000    0.000    0.000 distribute_lib.py:2658(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:3419(get_ybound)
        4    0.000    0.000    0.000    0.000 _base.py:224(_getdefaults)
      202    0.000    0.000    0.000    0.000 font_manager.py:839(set_file)
      123    0.000    0.000    0.000    0.000 __init__.py:1598(<lambda>)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
       16    0.000    0.000    0.000    0.000 compile_utils.py:549(map_to_output_names)
        8    0.000    0.000    0.000    0.000 base_layer.py:1300(input_spec)
        2    0.000    0.000    0.000    0.000 _base.py:2994(xaxis_inverted)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2564(__init__)
      202    0.000    0.000    0.000    0.000 backend_bases.py:155(open_group)
        4    0.000    0.000    0.000    0.000 _datasource.py:503(_sanitize_relative_path)
        2    0.000    0.000    0.000    0.000 training_utils.py:1946(get_static_batch_size)
       24    0.000    0.000    0.000    0.000 backprop.py:726(_handle_or_self)
       48    0.000    0.000    0.000    0.000 tensor_shape.py:700(__reduce__)
       22    0.000    0.000    0.000    0.000 _ufunc_config.py:437(__init__)
       12    0.000    0.000    0.000    0.000 __init__.py:387(usesTime)
      207    0.000    0.000    0.000    0.000 fractions.py:278(denominator)
       12    0.000    0.000    0.000    0.000 training.py:677(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:1838(deserialize)
       84    0.000    0.000    0.000    0.000 base_layer.py:2194(inbound_nodes)
       38    0.000    0.000    0.000    0.000 backprop.py:75(op_attr_type)
       26    0.000    0.000    0.000    0.000 resource_variable_ops.py:460(_assign_dependencies)
        2    0.000    0.000    0.000    0.000 figure.py:1959(sca)
       28    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
       24    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsTensor}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1297(writeHatches)
       36    0.000    0.000    0.000    0.000 training.py:2632(_compile_was_called)
        3    0.000    0.000    0.000    0.000 losses_utils.py:120(scale_loss_for_distribution)
        8    0.000    0.000    0.000    0.000 input_spec.py:57(__init__)
       12    0.000    0.000    0.000    0.000 patches.py:475(set_joinstyle)
        8    0.000    0.000    0.000    0.000 transforms.py:1652(_set)
      136    0.000    0.000    0.000    0.000 artist.py:688(get_path_effects)
       56    0.000    0.000    0.000    0.000 image.py:129(<genexpr>)
        4    0.000    0.000    0.000    0.000 _base.py:2411(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3475(get_ylim)
        4    0.000    0.000    0.000    0.000 _base.py:129(__init__)
       74    0.000    0.000    0.000    0.000 {built-in method math.floor}
       12    0.000    0.000    0.000    0.000 tf_utils.py:467(<genexpr>)
      125    0.000    0.000    0.000    0.000 functional.py:791(_assert_weights_created)
        2    0.000    0.000    0.000    0.000 _base.py:3405(yaxis_inverted)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2288(pop)
       24    0.000    0.000    0.000    0.000 function.py:3676(__init__)
       24    0.000    0.000    0.000    0.000 meta_graph.py:171(<listcomp>)
       32    0.000    0.000    0.000    0.000 ticker.py:1663(raise_if_exceeds)
       46    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
       64    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
       36    0.000    0.000    0.000    0.000 checkpoint_options.py:44(__init__)
        6    0.000    0.000    0.000    0.000 backprop.py:851(__exit__)
      144    0.000    0.000    0.000    0.000 base.py:621(_object_identifier)
       88    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        2    0.000    0.000    0.000    0.000 functional.py:845(<setcomp>)
       84    0.000    0.000    0.000    0.000 base_layer.py:2200(outbound_nodes)
       16    0.000    0.000    0.000    0.000 api.py:119(__init__)
      144    0.000    0.000    0.000    0.000 base.py:633(_tracking_metadata)
       30    0.000    0.000    0.000    0.000 context.py:1980(shared_name)
       98    0.000    0.000    0.000    0.000 markers.py:313(_set_nothing)
      202    0.000    0.000    0.000    0.000 artist.py:580(get_gid)
      144    0.000    0.000    0.000    0.000 __init__.py:1760(<listcomp>)
      266    0.000    0.000    0.000    0.000 fromnumeric.py:2671(_amin_dispatcher)
       24    0.000    0.000    0.000    0.000 __init__.py:705(filter)
       12    0.000    0.000    0.000    0.000 re.py:324(_subx)
       60    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
      100    0.000    0.000    0.000    0.000 callbacks.py:758(on_train_end)
       84    0.000    0.000    0.000    0.000 layer_serialization.py:144(objects_to_serialize)
       16    0.000    0.000    0.000    0.000 function_wrappers.py:91(ret)
       18    0.000    0.000    0.000    0.000 backend_pdf.py:2273(fillcolor_cmd)
        7    0.000    0.000    0.000    0.000 base_layer.py:2929(_call_fn_arg_positions)
        2    0.000    0.000    0.000    0.000 util.py:1354(saver_with_op_caching)
        6    0.000    0.000    0.000    0.000 tpu.py:208(is_tpu_strategy)
      132    0.000    0.000    0.000    0.000 axis.py:285(get_loc)
       32    0.000    0.000    0.000    0.000 text.py:777(get_fontsize)
      125    0.000    0.000    0.000    0.000 markers.py:269(get_marker)
        4    0.000    0.000    0.000    0.000 transforms.py:914(intervaly)
       24    0.000    0.000    0.000    0.000 cycler.py:225(__iter__)
      224    0.000    0.000    0.000    0.000 fromnumeric.py:3126(_around_dispatcher)
        6    0.000    0.000    0.000    0.000 __init__.py:1286(debug)
        2    0.000    0.000    0.000    0.000 posixpath.py:64(isabs)
       12    0.000    0.000    0.000    0.000 figure.py:76(<listcomp>)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(iscomplexobj)
       13    0.000    0.000    0.000    0.000 pickle.py:188(__init__)
        2    0.000    0.000    0.000    0.000 decorators.py:41(wrapper)
       12    0.000    0.000    0.000    0.000 threading.py:1230(current_thread)
       65    0.000    0.000    0.000    0.000 backend_pdf.py:235(pdfRepr)
      155    0.000    0.000    0.000    0.000 fractions.py:274(numerator)
       60    0.000    0.000    0.000    0.000 data_structures.py:747(<dictcomp>)
       50    0.000    0.000    0.000    0.000 backend_agg.py:256(points_to_pixels)
       16    0.000    0.000    0.000    0.000 axis.py:1442(get_minor_ticks)
       60    0.000    0.000    0.000    0.000 axis.py:649(locator)
       10    0.000    0.000    0.000    0.000 figure.py:140(current_key_axes)
        2    0.000    0.000    0.000    0.000 figure.py:104(bubble)
      202    0.000    0.000    0.000    0.000 backend_bases.py:162(close_group)
       28    0.000    0.000    0.000    0.000 text.py:347(<listcomp>)
       10    0.000    0.000    0.000    0.000 _datasource.py:206(keys)
        2    0.000    0.000    0.000    0.000 _datasource.py:354(_splitzipext)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:837(sort)
        8    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
       50    0.000    0.000    0.000    0.000 weakref.py:371(_commit_removals)
       27    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:539(<listcomp>)
       65    0.000    0.000    0.000    0.000 activations.py:405(linear)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:1256(_filter_grads)
       16    0.000    0.000    0.000    0.000 base_layer.py:2489(_set_mask_keras_history_checked)
        8    0.000    0.000    0.000    0.000 base_layer.py:3219(<genexpr>)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:325(require_replica_context)
        4    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:498(<genexpr>)
       60    0.000    0.000    0.000    0.000 save_impl.py:113(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:213(__init__)
       14    0.000    0.000    0.000    0.000 graph_view.py:145(__init__)
       32    0.000    0.000    0.000    0.000 distribute_lib.py:1991(_container_strategy)
       24    0.000    0.000    0.000    0.000 tensor_shape.py:1223(__reduce__)
        4    0.000    0.000    0.000    0.000 _base.py:2414(<listcomp>)
        4    0.000    0.000    0.000    0.000 _base.py:142(set_prop_cycle)
        2    0.000    0.000    0.000    0.000 figure.py:1070(_make_key)
        2    0.000    0.000    0.000    0.000 figure.py:513(set_constrained_layout)
        2    0.000    0.000    0.000    0.000 transforms.py:768(null)
      135    0.000    0.000    0.000    0.000 {method 'get_descent' of 'matplotlib.ft2font.FT2Font' objects}
       12    0.000    0.000    0.000    0.000 __init__.py:120(getLevelName)
       63    0.000    0.000    0.000    0.000 backend_pdf.py:229(__init__)
       96    0.000    0.000    0.000    0.000 layer_serialization.py:34(object_identifier)
        3    0.000    0.000    0.000    0.000 math_grad.py:143(_IsScalar)
        6    0.000    0.000    0.000    0.000 backprop.py:869(_pop_tape)
      140    0.000    0.000    0.000    0.000 axis.py:342(<genexpr>)
      136    0.000    0.000    0.000    0.000 backend_bases.py:778(restore)
       58    0.000    0.000    0.000    0.000 text.py:832(get_position)
        2    0.000    0.000    0.000    0.000 text.py:1042(set_fontsize)
       54    0.000    0.000    0.000    0.000 artist.py:793(get_alpha)
      123    0.000    0.000    0.000    0.000 stride_tricks.py:202(_broadcast_arrays_dispatcher)
       16    0.000    0.000    0.000    0.000 parse.py:109(_coerce_args)
      156    0.000    0.000    0.000    0.000 {built-in method math.gcd}
        4    0.000    0.000    0.000    0.000 transforms.py:1632(_init)
        2    0.000    0.000    0.000    0.000 training_utils.py:1912(get_input_shape_and_dtype)
       32    0.000    0.000    0.000    0.000 cache.py:74(_get_key)
       12    0.000    0.000    0.000    0.000 distribution_strategy_context.py:327(_get_default_replica_context)
        8    0.000    0.000    0.000    0.000 axis.py:1048(_set_artist_props)
       16    0.000    0.000    0.000    0.000 ticker.py:1819(__call__)
        7    0.000    0.000    0.000    0.000 base_layer.py:2937(_call_accepts_kwargs)
        3    0.000    0.000    0.000    0.000 array_ops.py:852(_check_index)
        2    0.000    0.000    0.000    0.000 errors_impl.py:297(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:2389(<listcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:1907(_set_artist_props)
      109    0.000    0.000    0.000    0.000 backend_bases.py:1013(get_sketch_params)
       26    0.000    0.000    0.000    0.000 text.py:350(<listcomp>)
     16/8    0.000    0.000    0.000    0.000 transforms.py:2348(<lambda>)
       62    0.000    0.000    0.000    0.000 {method 'write' of '_io.BytesIO' objects}
       15    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrInt}
       50    0.000    0.000    0.000    0.000 callbacks.py:944(on_train_begin)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:203(__init__)
        1    0.000    0.000    0.000    0.000 losses.py:84(__init__)
        4    0.000    0.000    0.000    0.000 base_layer.py:418(build)
        4    0.000    0.000    0.000    0.000 distribution_strategy_context.py:56(__init__)
        2    0.000    0.000    0.000    0.000 gridspec.py:200(__getitem__)
        2    0.000    0.000    0.000    0.000 gridspec.py:246(__init__)
       50    0.000    0.000    0.000    0.000 lines.py:602(get_markevery)
        4    0.000    0.000    0.000    0.000 transforms.py:2127(__init__)
        4    0.000    0.000    0.000    0.000 {method 'get_sfnt_table' of 'matplotlib.ft2font.FT2Font' objects}
       24    0.000    0.000    0.000    0.000 cycler.py:138(keys)
        2    0.000    0.000    0.000    0.000 __init__.py:517(__init__)
        4    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
        2    0.000    0.000    0.000    0.000 backend_inline.py:55(draw_if_interactive)
        2    0.000    0.000    0.000    0.000 text.py:1059(set_fontweight)
       54    0.000    0.000    0.000    0.000 text.py:230(_get_multialignment)
       50    0.000    0.000    0.000    0.000 markers.py:266(get_capstyle)
       12    0.000    0.000    0.000    0.000 transforms.py:2377(transform_path_non_affine)
       82    0.000    0.000    0.000    0.000 artist.py:633(get_sketch_params)
        2    0.000    0.000    0.000    0.000 rcsetup.py:163(validate_axisbelow)
       60    0.000    0.000    0.000    0.000 save_impl.py:117(<dictcomp>)
       72    0.000    0.000    0.000    0.000 distribute_lib.py:2970(_local_results)
       40    0.000    0.000    0.000    0.000 layer_utils.py:273(<listcomp>)
        3    0.000    0.000    0.000    0.000 backprop.py:822(__init__)
        3    0.000    0.000    0.000    0.000 tape.py:41(watched_variables)
       12    0.000    0.000    0.000    0.000 backend_bases.py:757(copy_properties)
        8    0.000    0.000    0.000    0.000 patches.py:742(get_path)
        8    0.000    0.000    0.000    0.000 transforms.py:336(p1)
        4    0.000    0.000    0.000    0.000 __init__.py:601(push)
        4    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1177(<listcomp>)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:242(get_update_replica_id)
        2    0.000    0.000    0.000    0.000 figure.py:1089(fixlist)
       68    0.000    0.000    0.000    0.000 backend_bases.py:857(get_snap)
       82    0.000    0.000    0.000    0.000 backend_bases.py:975(set_snap)
       80    0.000    0.000    0.000    0.000 backend_bases.py:990(get_hatch)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:109(set_active)
       14    0.000    0.000    0.000    0.000 patches.py:302(set_antialiased)
      144    0.000    0.000    0.000    0.000 path.py:230(simplify_threshold)
      156    0.000    0.000    0.000    0.000 path.py:251(should_simplify)
        4    0.000    0.000    0.000    0.000 dataset_ops.py:4595(<listcomp>)
       68    0.000    0.000    0.000    0.000 backend_bases.py:807(get_clip_path)
       12    0.000    0.000    0.000    0.000 threading.py:1076(name)
        2    0.000    0.000    0.000    0.000 warnings.py:159(_add_filter)
       24    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
       24    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
       41    0.000    0.000    0.000    0.000 backend_pdf.py:299(__init__)
        2    0.000    0.000    0.000    0.000 backend_mixed.py:15(__init__)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:215(__iter__)
       10    0.000    0.000    0.000    0.000 policy.py:433(should_cast_variables)
       36    0.000    0.000    0.000    0.000 functional.py:255(output)
       24    0.000    0.000    0.000    0.000 backend.py:166(backend)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:65(validate)
        6    0.000    0.000    0.000    0.000 distribution_strategy_context.py:50(__init__)
       27    0.000    0.000    0.000    0.000 backend_agg.py:239(get_canvas_width_height)
       69    0.000    0.000    0.000    0.000 axis.py:153(<dictcomp>)
       32    0.000    0.000    0.000    0.000 backend_bases.py:912(set_dashes)
       32    0.000    0.000    0.000    0.000 ticker.py:532(set_useOffset)
       50    0.000    0.000    0.000    0.000 markers.py:310(get_snap_threshold)
       27    0.000    0.000    0.000    0.000 {method 'get_bitmap_offset' of 'matplotlib.ft2font.FT2Font' objects}
        8    0.000    0.000    0.000    0.000 core.py:677(getdata)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:323(_paint_path)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:2377(finalize)
       12    0.000    0.000    0.000    0.000 tmpjrr6y7yw.py:7(inner_factory)
       16    0.000    0.000    0.000    0.000 conversion.py:251(_create_custom_vars)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:253(__init__)
       10    0.000    0.000    0.000    0.000 distribution_strategy_context.py:42(__init__)
       24    0.000    0.000    0.000    0.000 array_ops.py:1407(<genexpr>)
        8    0.000    0.000    0.000    0.000 indexed_slices.py:283(internal_convert_to_tensor_or_indexed_slices)
       68    0.000    0.000    0.000    0.000 backend_bases.py:845(get_rgb)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2240(mpl_disconnect)
       50    0.000    0.000    0.000    0.000 markers.py:263(get_joinstyle)
       50    0.000    0.000    0.000    0.000 markers.py:304(get_alt_path)
      144    0.000    0.000    0.000    0.000 __init__.py:1765(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:512(<genexpr>)
      104    0.000    0.000    0.000    0.000 statistics.py:170(_coerce)
        1    0.000    0.000    0.000    0.000 metrics_utils.py:98(result_wrapper)
       52    0.000    0.000    0.000    0.000 node.py:118(keras_inputs)
        2    0.000    0.000    0.000    0.000 functional.py:289(_set_output_names)
        4    0.000    0.000    0.000    0.000 array_ops.py:778(<genexpr>)
        6    0.000    0.000    0.000    0.000 tape.py:145(pop_tape)
        4    0.000    0.000    0.000    0.000 tensor_shape.py:916(num_elements)
        2    0.000    0.000    0.000    0.000 backend_agg.py:108(_update_methods)
        4    0.000    0.000    0.000    0.000 axis.py:2160(get_minpos)
        6    0.000    0.000    0.000    0.000 _base.py:3241(get_xscale)
       11    0.000    0.000    0.000    0.000 _pylab_helpers.py:99(get_active)
       12    0.000    0.000    0.000    0.000 patches.py:491(set_hatch)
       31    0.000    0.000    0.000    0.000 {method 'get_glyph_name' of 'matplotlib.ft2font.FT2Font' objects}
       40    0.000    0.000    0.000    0.000 cycler.py:371(<genexpr>)
        2    0.000    0.000    0.000    0.000 __init__.py:631(bubble)
        6    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(result_type)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       16    0.000    0.000    0.000    0.000 inspect.py:239(isframe)
        2    0.000    0.000    0.000    0.000 warnings.py:449(__enter__)
       13    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
       10    0.000    0.000    0.000    0.000 node.py:123(parent_nodes)
        3    0.000    0.000    0.000    0.000 distribution_strategy_context.py:154(in_cross_replica_context)
       16    0.000    0.000    0.000    0.000 tf_stack.py:83(reset)
       12    0.000    0.000    0.000    0.000 axis.py:1412(get_major_locator)
        2    0.000    0.000    0.000    0.000 _base.py:2602(<listcomp>)
       78    0.000    0.000    0.000    0.000 backend_bases.py:967(set_url)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1265(__init__)
        2    0.000    0.000    0.000    0.000 figure.py:66(__init__)
       54    0.000    0.000    0.000    0.000 text.py:255(get_rotation_mode)
       12    0.000    0.000    0.000    0.000 text.py:528(_update_clip_properties)
       32    0.000    0.000    0.000    0.000 ticker.py:276(set_locs)
       32    0.000    0.000    0.000    0.000 ticker.py:556(set_useMathText)
        8    0.000    0.000    0.000    0.000 transforms.py:296(y0)
       13    0.000    0.000    0.000    0.000 __init__.py:60(__hash__)
        8    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
       16    0.000    0.000    0.000    0.000 inspect.py:229(istraceback)
       27    0.000    0.000    0.000    0.000 {built-in method math.cos}
        2    0.000    0.000    0.000    0.000 tf_utils.py:420(assert_no_legacy_layers)
       55    0.000    0.000    0.000    0.000 variables.py:63(_make_getter)
       16    0.000    0.000    0.000    0.000 _base.py:2548(<genexpr>)
        4    0.000    0.000    0.000    0.000 figure.py:1704(<lambda>)
       68    0.000    0.000    0.000    0.000 backend_bases.py:1001(get_hatch_color)
       54    0.000    0.000    0.000    0.000 text.py:739(get_color)
       50    0.000    0.000    0.000    0.000 markers.py:298(get_path)
        1    0.000    0.000    0.000    0.000 __init__.py:170(disconnect)
        4    0.000    0.000    0.000    0.000 codecs.py:185(__init__)
       27    0.000    0.000    0.000    0.000 {built-in method math.sin}
       12    0.000    0.000    0.000    0.000 backend_pdf.py:271(__hash__)
        4    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:32(option_image_nocomposite)
       16    0.000    0.000    0.000    0.000 compile_utils.py:596(map_missing_dict_keys)
       12    0.000    0.000    0.000    0.000 saving_utils.py:142(<dictcomp>)
        1    0.000    0.000    0.000    0.000 base_layer_utils.py:315(is_in_eager_or_tf_function)
       12    0.000    0.000    0.000    0.000 tpu.py:209(<lambda>)
        2    0.000    0.000    0.000    0.000 figure.py:544(set_constrained_layout_pads)
        2    0.000    0.000    0.000    0.000 figure.py:155(__contains__)
       68    0.000    0.000    0.000    0.000 backend_bases.py:817(get_dashes)
       68    0.000    0.000    0.000    0.000 backend_bases.py:1009(get_hatch_linewidth)
        8    0.000    0.000    0.000    0.000 mathtext.py:3316(__init__)
        2    0.000    0.000    0.000    0.000 npyio.py:1339(WriteWrap)
        2    0.000    0.000    0.000    0.000 type_check.py:280(iscomplexobj)
       56    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
       12    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
        2    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
       54    0.000    0.000    0.000    0.000 {built-in method math.radians}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeWatchedVariables}
       24    0.000    0.000    0.000    0.000 network_serialization.py:28(object_identifier)
        2    0.000    0.000    0.000    0.000 compile_utils.py:416(_get_metric_objects)
        7    0.000    0.000    0.000    0.000 policy.py:517(policy_defaults_to_floatx)
        8    0.000    0.000    0.000    0.000 functional.py:776(<setcomp>)
       48    0.000    0.000    0.000    0.000 transpiler.py:203(<genexpr>)
        4    0.000    0.000    0.000    0.000 init_ops.py:1401(_compute_fans)
       30    0.000    0.000    0.000    0.000 resource_variable_ops.py:2042(op)
       12    0.000    0.000    0.000    0.000 math_ops.py:1800(<genexpr>)
        4    0.000    0.000    0.000    0.000 axis.py:2460(get_minpos)
       14    0.000    0.000    0.000    0.000 _base.py:2470(_get_axis_list)
       28    0.000    0.000    0.000    0.000 axis.py:361(<dictcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:487(set_tight_layout)
       34    0.000    0.000    0.000    0.000 transforms.py:2053(get_matrix)
        2    0.000    0.000    0.000    0.000 transforms.py:2606(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:1294(get_backend)
        2    0.000    0.000    0.000    0.000 rcsetup.py:123(validate_bool)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2017(_clip_dispatcher)
       76    0.000    0.000    0.000    0.000 fromnumeric.py:2320(_all_dispatcher)
        2    0.000    0.000    0.000    0.000 contextlib.py:338(__exit__)
       26    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetNew}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2236(joinstyle_cmd)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2242(dash_cmd)
        1    0.000    0.000    0.000    0.000 Experiment.py:134(__init__)
        2    0.000    0.000    0.000    0.000 training_utils.py:1926(_is_graph_model)
        3    0.000    0.000    0.000    0.000 losses.py:185(_get_reduction)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:656(_set_hyper)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:664(<lambda>)
       32    0.000    0.000    0.000    0.000 scale.py:43(__init__)
        4    0.000    0.000    0.000    0.000 figure.py:78(get)
       50    0.000    0.000    0.000    0.000 backend_bases.py:660(points_to_pixels)
       60    0.000    0.000    0.000    0.000 ticker.py:295(_set_locator)
       50    0.000    0.000    0.000    0.000 lines.py:896(get_drawstyle)
        2    0.000    0.000    0.000    0.000 gridspec.py:31(__init__)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2473(_ptp_dispatcher)
       12    0.000    0.000    0.000    0.000 process.py:146(name)
       41    0.000    0.000    0.000    0.000 backend_pdf.py:302(pdfRepr)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2233(capstyle_cmd)
       24    0.000    0.000    0.000    0.000 save.py:187(<dictcomp>)
       12    0.000    0.000    0.000    0.000 save_options.py:98(_validate_namespace_whitelist)
        6    0.000    0.000    0.000    0.000 metrics_utils.py:500(<genexpr>)
        8    0.000    0.000    0.000    0.000 base_layer.py:1000(<genexpr>)
        4    0.000    0.000    0.000    0.000 backend.py:360(global_learning_phase_is_set)
        2    0.000    0.000    0.000    0.000 init_ops.py:105(__init__)
       24    0.000    0.000    0.000    0.000 resource_variable_ops.py:573(constraint)
       24    0.000    0.000    0.000    0.000 axis.py:1579(set_units)
       12    0.000    0.000    0.000    0.000 axis.py:822(get_scale)
       12    0.000    0.000    0.000    0.000 _base.py:535(get_window_extent)
        8    0.000    0.000    0.000    0.000 transforms.py:1271(_iter_break_from_left_to_right)
       31    0.000    0.000    0.000    0.000 {method 'get_char_index' of 'matplotlib.ft2font.FT2Font' objects}
        4    0.000    0.000    0.000    0.000 __init__.py:827(__init__)
       36    0.000    0.000    0.000    0.000 fromnumeric.py:2838(_prod_dispatcher)
       16    0.000    0.000    0.000    0.000 inspect.py:253(iscode)
        7    0.000    0.000    0.000    0.000 weakref.py:73(__eq__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:921(<listcomp>)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:212(__getitem__)
       24    0.000    0.000    0.000    0.000 layer_serialization.py:128(object_identifier)
        2    0.000    0.000    0.000    0.000 tf_utils.py:434(<listcomp>)
       16    0.000    0.000    0.000    0.000 base_layer_utils.py:303(<genexpr>)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:997(_assert_float_dtype)
       20    0.000    0.000    0.000    0.000 base_layer.py:2821(<genexpr>)
        3    0.000    0.000    0.000    0.000 tape.py:51(push_tape)
       16    0.000    0.000    0.000    0.000 tf_stack.py:95(reset)
        6    0.000    0.000    0.000    0.000 _base.py:3635(get_yscale)
       28    0.000    0.000    0.000    0.000 axis.py:372(<dictcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:645(__init__)
        8    0.000    0.000    0.000    0.000 lines.py:1447(is_dashed)
        2    0.000    0.000    0.000    0.000 pyplot.py:619(get_fignums)
       50    0.000    0.000    0.000    0.000 nanfunctions.py:226(_nanmin_dispatcher)
       27    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:24(flipy)
        3    0.000    0.000    0.000    0.000 tmpu_v700ox.py:7(inner_factory)
        4    0.000    0.000    0.000    0.000 data_adapter.py:1412(unpack_x_y_sample_weight)
       12    0.000    0.000    0.000    0.000 signature_serialization.py:206(_add_signature)
       12    0.000    0.000    0.000    0.000 layer_serialization.py:147(functions_to_serialize)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:379(_clip_gradients)
       24    0.000    0.000    0.000    0.000 metric_serialization.py:28(object_identifier)
       18    0.000    0.000    0.000    0.000 constraints.py:299(get)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:165(<genexpr>)
        4    0.000    0.000    0.000    0.000 init_ops_v2.py:1020(__init__)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:1397(num_replicas_in_sync)
       12    0.000    0.000    0.000    0.000 function.py:1969(inputs)
       12    0.000    0.000    0.000    0.000 math_ops.py:3500(<genexpr>)
       15    0.000    0.000    0.000    0.000 tensor_shape.py:849(__bool__)
       28    0.000    0.000    0.000    0.000 axis.py:383(<dictcomp>)
       16    0.000    0.000    0.000    0.000 axis.py:788(get_remove_overlapping_locs)
        8    0.000    0.000    0.000    0.000 _base.py:232(<genexpr>)
        8    0.000    0.000    0.000    0.000 figure.py:1703(<genexpr>)
        4    0.000    0.000    0.000    0.000 figure.py:152(__call__)
        2    0.000    0.000    0.000    0.000 gridspec.py:382(<dictcomp>)
        2    0.000    0.000    0.000    0.000 transforms.py:394(width)
        2    0.000    0.000    0.000    0.000 os.py:794(fsencode)
        2    0.000    0.000    0.000    0.000 warnings.py:468(__exit__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:370(_create_ordered_metrics)
       10    0.000    0.000    0.000    0.000 generic_utils.py:772(validate_kwargs)
       12    0.000    0.000    0.000    0.000 functional.py:355(_should_compute_mask)
        4    0.000    0.000    0.000    0.000 loss_reduction.py:61(all)
       24    0.000    0.000    0.000    0.000 spines.py:217(get_path)
        2    0.000    0.000    0.000    0.000 __init__.py:44(get_projection_class)
        2    0.000    0.000    0.000    0.000 figure.py:932(get_facecolor)
        6    0.000    0.000    0.000    0.000 widgets.py:34(__init__)
       12    0.000    0.000    0.000    0.000 figure.py:74(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:508(__init__)
        6    0.000    0.000    0.000    0.000 transforms.py:931(minposx)
        4    0.000    0.000    0.000    0.000 transforms.py:286(x0)
        2    0.000    0.000    0.000    0.000 __init__.py:573(__init__)
       12    0.000    0.000    0.000    0.000 _datasource.py:173(_load)
        2    0.000    0.000    0.000    0.000 _datasource.py:332(__del__)
       32    0.000    0.000    0.000    0.000 function_base.py:1137(_diff_dispatcher)
        4    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 re.py:231(compile)
        1    0.000    0.000    0.000    0.000 enum.py:312(__getattr__)
        2    0.000    0.000    0.000    0.000 warnings.py:428(__init__)
       24    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetAdd}
        2    0.000    0.000    0.000    0.000 training.py:2475(<genexpr>)
        1    0.000    0.000    0.000    0.000 training.py:2629(_get_distribution_strategy)
        4    0.000    0.000    0.000    0.000 compile_utils.py:98(<lambda>)
        4    0.000    0.000    0.000    0.000 training.py:152(is_functional_model_init_params)
        8    0.000    0.000    0.000    0.000 input_spec.py:75(<dictcomp>)
        5    0.000    0.000    0.000    0.000 node.py:115(<listcomp>)
        1    0.000    0.000    0.000    0.000 generic_utils.py:283(class_and_config_for_serialized_keras_object)
        8    0.000    0.000    0.000    0.000 base_layer.py:2629(<genexpr>)
       24    0.000    0.000    0.000    0.000 distribute_lib.py:2947(_reduce_to)
        3    0.000    0.000    0.000    0.000 math_ops.py:1801(<listcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:1559(have_units)
        8    0.000    0.000    0.000    0.000 _base.py:2432(tol)
        4    0.000    0.000    0.000    0.000 _base.py:242(_setdefaults)
        8    0.000    0.000    0.000    0.000 figure.py:505(get_constrained_layout)
        2    0.000    0.000    0.000    0.000 backend_bases.py:117(get_registered_canvas_class)
       27    0.000    0.000    0.000    0.000 backend_bases.py:637(flipy)
        8    0.000    0.000    0.000    0.000 path.py:630(unit_rectangle)
        4    0.000    0.000    0.000    0.000 __init__.py:1312(is_interactive)
        6    0.000    0.000    0.000    0.000 __init__.py:626(clear)
        2    0.000    0.000    0.000    0.000 __init__.py:1997(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:2148(_check_getitem)
        2    0.000    0.000    0.000    0.000 py3k.py:50(asstr)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1800(_nonzero_dispatcher)
       50    0.000    0.000    0.000    0.000 multiarray.py:1043(copyto)
       12    0.000    0.000    0.000    0.000 process.py:35(current_process)
       13    0.000    0.000    0.000    0.000 pickle.py:195(end_framing)
       16    0.000    0.000    0.000    0.000 parse.py:98(_noop)
        6    0.000    0.000    0.000    0.000 posixpath.py:135(splitdrive)
        6    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRemove}
        1    0.000    0.000    0.000    0.000 compile_utils.py:280(__init__)
        2    0.000    0.000    0.000    0.000 functional.py:938(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:107(_set_name_scope)
        6    0.000    0.000    0.000    0.000 optimizer_v2.py:635(<genexpr>)
        4    0.000    0.000    0.000    0.000 optimizer_v2.py:1246(_distribution_strategy_scope)
        5    0.000    0.000    0.000    0.000 node.py:116(<listcomp>)
       26    0.000    0.000    0.000    0.000 regularizers.py:360(get)
        4    0.000    0.000    0.000    0.000 functional.py:768(<genexpr>)
        3    0.000    0.000    0.000    0.000 collective_util.py:50(__init__)
        1    0.000    0.000    0.000    0.000 data_structures.py:66(_should_wrap_tuple)
       16    0.000    0.000    0.000    0.000 axis.py:1364(<listcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:1486(<dictcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:886(set_axes_locator)
        2    0.000    0.000    0.000    0.000 figure.py:96(_entry_from_axes)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1236(__init__)
        6    0.000    0.000    0.000    0.000 transforms.py:935(minposy)
       10    0.000    0.000    0.000    0.000 artist.py:350(is_transform_set)
       10    0.000    0.000    0.000    0.000 artist.py:1201(mouseover)
        2    0.000    0.000    0.000    0.000 contextlib.py:271(__init__)
        4    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1493(writeImages)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1629(is_string_like)
        2    0.000    0.000    0.000    0.000 compile_utils.py:37(__init__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:334(_set_metric_names)
        3    0.000    0.000    0.000    0.000 compile_utils.py:626(get_mask)
        1    0.000    0.000    0.000    0.000 layer_utils.py:168(<listcomp>)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1045(_init_set_name)
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:483(frozen)
        4    0.000    0.000    0.000    0.000 tf_utils.py:194(<lambda>)
        2    0.000    0.000    0.000    0.000 functional.py:626(<setcomp>)
        2    0.000    0.000    0.000    0.000 functional.py:149(<lambda>)
        4    0.000    0.000    0.000    0.000 distribute_lib.py:2745(strategy)
        3    0.000    0.000    0.000    0.000 def_function.py:80(get_tracing_count)
        8    0.000    0.000    0.000    0.000 _base.py:897(get_axes_locator)
        8    0.000    0.000    0.000    0.000 _base.py:1202(get_aspect)
        2    0.000    0.000    0.000    0.000 figure.py:928(get_edgecolor)
        2    0.000    0.000    0.000    0.000 figure.py:944(get_dpi)
        8    0.000    0.000    0.000    0.000 backend_bases.py:895(set_clip_rectangle)
       16    0.000    0.000    0.000    0.000 ticker.py:1822(tick_values)
       24    0.000    0.000    0.000    0.000 transforms.py:1284(depth)
        2    0.000    0.000    0.000    0.000 transforms.py:400(height)
        6    0.000    0.000    0.000    0.000 __init__.py:51(__init__)
        8    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
        8    0.000    0.000    0.000    0.000 {built-in method math.copysign}
        1    0.000    0.000    0.000    0.000 tmpzwdntdj_.py:7(inner_factory)
        2    0.000    0.000    0.000    0.000 compile_utils.py:270(_should_broadcast)
        6    0.000    0.000    0.000    0.000 compile_utils.py:398(<genexpr>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:419(<listcomp>)
       16    0.000    0.000    0.000    0.000 layer_utils.py:107(<listcomp>)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:514(<listcomp>)
        4    0.000    0.000    0.000    0.000 base_layer.py:2442(_handle_activity_regularization)
        5    0.000    0.000    0.000    0.000 base_layer.py:2825(<genexpr>)
        4    0.000    0.000    0.000    0.000 functional.py:141(<genexpr>)
        8    0.000    0.000    0.000    0.000 distribute_lib.py:2901(variable_created_in_scope)
        3    0.000    0.000    0.000    0.000 backprop.py:875(__del__)
       12    0.000    0.000    0.000    0.000 file_io.py:193(__enter__)
        7    0.000    0.000    0.000    0.000 ops.py:6423(<genexpr>)
        3    0.000    0.000    0.000    0.000 tape.py:38(__init__)
       12    0.000    0.000    0.000    0.000 axis.py:1865(get_label_position)
        4    0.000    0.000    0.000    0.000 _base.py:2405(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:2971(set_axis_on)
        2    0.000    0.000    0.000    0.000 __init__.py:19(get_projection_class)
        4    0.000    0.000    0.000    0.000 figure.py:483(get_tight_layout)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2582(notify_axes_change)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1679(_idle_draw_cntx)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:29(get_fig_manager)
        2    0.000    0.000    0.000    0.000 gridspec.py:204(_normalize)
        6    0.000    0.000    0.000    0.000 gridspec.py:67(get_geometry)
        4    0.000    0.000    0.000    0.000 artist.py:1013(get_label)
        4    0.000    0.000    0.000    0.000 artist.py:1033(get_zorder)
        2    0.000    0.000    0.000    0.000 __init__.py:586(update)
        2    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
       31    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.BytesIO' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1273(_write_soft_mask_groups)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:268(__lt__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:508(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1533(writeMarkers)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1632(is_date)
        2    0.000    0.000    0.000    0.000 compile_utils.py:40(build)
        1    0.000    0.000    0.000    0.000 compile_utils.py:151(_create_metrics)
        6    0.000    0.000    0.000    0.000 compile_utils.py:399(<genexpr>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:421(_get_metric_object)
        2    0.000    0.000    0.000    0.000 compile_utils.py:480(_should_broadcast)
        1    0.000    0.000    0.000    0.000 function.py:3127(<listcomp>)
        9    0.000    0.000    0.000    0.000 iterator_ops.py:881(value_type)
        4    0.000    0.000    0.000    0.000 backend_agg.py:272(option_image_nocomposite)
       12    0.000    0.000    0.000    0.000 scale.py:79(limit_range_for_scale)
        2    0.000    0.000    0.000    0.000 _base.py:2133(use_sticky_edges)
        2    0.000    0.000    0.000    0.000 _base.py:3884(set_navigate)
        4    0.000    0.000    0.000    0.000 _base.py:604(_request_autoscale_view)
        2    0.000    0.000    0.000    0.000 figure.py:1073(fixitems)
        2    0.000    0.000    0.000    0.000 figure.py:2059(add_axobserver)
        2    0.000    0.000    0.000    0.000 figure.py:97(<dictcomp>)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1687(is_saving)
        2    0.000    0.000    0.000    0.000 gridspec.py:532(num2)
        2    0.000    0.000    0.000    0.000 gridspec.py:113(set_height_ratios)
        2    0.000    0.000    0.000    0.000 patches.py:290(get_facecolor)
        2    0.000    0.000    0.000    0.000 _datasource.py:225(__getitem__)
        2    0.000    0.000    0.000    0.000 _iotools.py:46(_is_string_like)
       36    0.000    0.000    0.000    0.000 shape_base.py:21(_atleast_1d_dispatcher)
        2    0.000    0.000    0.000    0.000 parse.py:394(_checknetloc)
        2    0.000    0.000    0.000    0.000 contextlib.py:17(__enter__)
        2    0.000    0.000    0.000    0.000 copyreg.py:87(__newobj__)
       10    0.000    0.000    0.000    0.000 __init__.py:537(__missing__)
        2    0.000    0.000    0.000    0.000 {method 'utcoffset' of 'datetime.datetime' objects}
        6    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        8    0.000    0.000    0.000    0.000 {built-in method sys.is_finalizing}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:529(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:601(<dictcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1556(writePathCollectionTemplates)
        1    0.000    0.000    0.000    0.000 fractions.py:504(__trunc__)
        4    0.000    0.000    0.000    0.000 compile_utils.py:93(_broadcast_fn)
        3    0.000    0.000    0.000    0.000 compile_utils.py:631(apply_mask)
        2    0.000    0.000    0.000    0.000 distributed_training_utils.py:439(is_tpu_strategy)
       10    0.000    0.000    0.000    0.000 functional.py:905(<lambda>)
        4    0.000    0.000    0.000    0.000 node.py:72(<lambda>)
        5    0.000    0.000    0.000    0.000 node.py:74(<lambda>)
        1    0.000    0.000    0.000    0.000 generic_utils.py:199(get_registered_object)
        3    0.000    0.000    0.000    0.000 tensor_util.py:499(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3900(set_navigate_mode)
        8    0.000    0.000    0.000    0.000 _base.py:321(<genexpr>)
        2    0.000    0.000    0.000    0.000 _subplots.py:117(get_subplotspec)
        2    0.000    0.000    0.000    0.000 gridspec.py:528(num2)
        2    0.000    0.000    0.000    0.000 gridspec.py:549(get_gridspec)
        1    0.000    0.000    0.000    0.000 _pylab_helpers.py:78(has_fignum)
        2    0.000    0.000    0.000    0.000 patches.py:286(get_edgecolor)
        4    0.000    0.000    0.000    0.000 transforms.py:2085(inverted)
        2    0.000    0.000    0.000    0.000 artist.py:961(set_in_layout)
        4    0.000    0.000    0.000    0.000 __init__.py:828(<dictcomp>)
        2    0.000    0.000    0.000    0.000 npyio.py:1205(_savetxt_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2401(_cumsum_dispatcher)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:833(_sort_dispatcher)
        6    0.000    0.000    0.000    0.000 multiarray.py:635(result_type)
        2    0.000    0.000    0.000    0.000 multiarray.py:990(unravel_index)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 enum.py:28(_is_dunder)
        1    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        4    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:521(<genexpr>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:525(<genexpr>)
        1    0.000    0.000    0.000    0.000 policy.py:444(loss_scale)
        3    0.000    0.000    0.000    0.000 distribute_lib.py:2976(_num_replicas_in_sync)
        1    0.000    0.000    0.000    0.000 backend_bases.py:2597(destroy)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1929(draw)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:115(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:93(set_width_ratios)
        4    0.000    0.000    0.000    0.000 artist.py:827(get_clip_path)
        2    0.000    0.000    0.000    0.000 type_check.py:207(_is_type_dispatcher)
        6    0.000    0.000    0.000    0.000 numeric.py:2163(_isclose_dispatcher)


