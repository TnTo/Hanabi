         667171 function calls (647416 primitive calls) in 4.167 seconds

   Ordered by: cumulative time

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
        1    0.002    0.002    2.290    2.290 Experiment.py:234(load_experiment)
        1    0.076    0.076    2.000    2.000 _dill.py:268(load)
        1    0.000    0.000    1.924    1.924 _dill.py:472(load)
        1    1.924    1.924    1.924    1.924 {function Unpickler.load at 0x7fe92b9d8940}
        1    0.000    0.000    1.803    1.803 Experiment.py:193(save)
        2    0.000    0.000    1.199    0.600 pyplot.py:2838(plot)
        4    0.000    0.000    1.196    0.299 pyplot.py:2366(gca)
        6    0.000    0.000    1.000    0.167 pyplot.py:736(gcf)
        2    0.000    0.000    1.000    0.500 pyplot.py:555(figure)
        2    0.000    0.000    1.000    0.500 pyplot.py:312(new_figure_manager)
        2    0.000    0.000    1.000    0.500 backend_bases.py:3487(new_figure_manager)
        2    0.000    0.000    0.937    0.469 backend_bases.py:3496(new_figure_manager_given_figure)
        2    0.000    0.000    0.546    0.273 pyplot.py:856(savefig)
        2    0.000    0.000    0.539    0.270 figure.py:2169(savefig)
        2    0.000    0.000    0.539    0.270 backend_qt5agg.py:80(print_figure)
        2    0.000    0.000    0.486    0.243 backend_qt5agg.py:19(__init__)
        2    0.022    0.011    0.486    0.243 backend_qt5.py:217(__init__)
        2    0.000    0.000    0.471    0.236 backend_bases.py:2083(print_figure)
        2    0.072    0.036    0.452    0.226 backend_qt5.py:535(__init__)
        2    0.430    0.215    0.446    0.223 backend_qt5.py:96(_create_qApp)
 1071/226    0.004    0.000    0.370    0.002 deprecation.py:384(wrapper)
    388/4    0.001    0.000    0.337    0.084 artist.py:33(draw_wrapper)
        4    0.000    0.000    0.337    0.084 figure.py:1819(draw)
        2    0.000    0.000    0.336    0.168 backend_bases.py:1600(wrapper)
        2    0.000    0.000    0.335    0.168 backend_pdf.py:2576(print_pdf)
      8/4    0.000    0.000    0.330    0.083 image.py:113(_draw_list_compositing_images)
        4    0.000    0.000    0.330    0.083 _base.py:2665(draw)
        2    0.000    0.000    0.305    0.153 backend_qt5.py:600(_get_toolbar)
        2    0.223    0.112    0.305    0.152 backend_qt5.py:653(__init__)
        1    0.001    0.001    0.261    0.261 save.py:137(load_model)
        1    0.000    0.000    0.258    0.258 load.py:93(load)
        1    0.000    0.000    0.250    0.250 load.py:606(load_internal)
        1    0.000    0.000    0.248    0.248 load.py:176(__init__)
        1    0.000    0.000    0.247    0.247 load.py:112(__init__)
        8    0.000    0.000    0.209    0.026 axis.py:1156(draw)
        4    0.000    0.000    0.196    0.049 figure.py:2021(gca)
        2    0.000    0.000    0.196    0.098 figure.py:1254(add_subplot)
        2    0.000    0.000    0.195    0.098 _subplots.py:18(__init__)
        2    0.000    0.000    0.195    0.097 _base.py:434(__init__)
    30/19    0.000    0.000    0.193    0.010 <frozen importlib._bootstrap>:986(_find_and_load)
     16/5    0.000    0.000    0.193    0.039 <frozen importlib._bootstrap>:956(_find_and_load_unlocked)
     15/5    0.000    0.000    0.192    0.038 <frozen importlib._bootstrap>:650(_load_unlocked)
     13/4    0.000    0.000    0.176    0.044 <frozen importlib._bootstrap_external>:777(exec_module)
        2    0.000    0.000    0.175    0.088 _base.py:1038(cla)
       18    0.000    0.000    0.169    0.009 __init__.py:109(import_module)
    19/18    0.000    0.000    0.169    0.009 <frozen importlib._bootstrap>:1002(_gcd_import)
1964/1637    0.115    0.000    0.150    0.000 {built-in method numpy.core._multiarray_umath.implement_array_function}
      112    0.001    0.000    0.147    0.001 text.py:861(get_window_extent)
        1    0.002    0.002    0.142    0.142 function_deserialization.py:278(load_function_def_library)
       13    0.000    0.000    0.137    0.011 <frozen importlib._bootstrap_external>:849(get_code)
      158    0.003    0.000    0.137    0.001 text.py:266(_get_layout)
        4    0.000    0.000    0.135    0.034 axis.py:899(set_clip_path)
        2    0.000    0.000    0.134    0.067 backend_bases.py:2047(_get_output_canvas)
        2    0.000    0.000    0.134    0.067 backend_bases.py:107(get_registered_canvas_class)
     25/6    0.000    0.000    0.132    0.022 <frozen importlib._bootstrap>:211(_call_with_frames_removed)
       26    0.000    0.000    0.127    0.005 <frozen importlib._bootstrap_external>:969(get_data)
       30    0.000    0.000    0.119    0.004 artist.py:723(set_clip_path)
       62    0.000    0.000    0.119    0.002 patches.py:258(get_transform)
       38    0.000    0.000    0.118    0.003 patches.py:791(get_patch_transform)
       38    0.001    0.000    0.117    0.003 patches.py:761(_update_patch_transform)
    25/15    0.001    0.000    0.117    0.008 {built-in method builtins.exec}
       92    0.000    0.000    0.114    0.001 transforms.py:1937(rotate_deg)
      339    0.000    0.000    0.113    0.000 <__array_function__ internals>:2(dot)
       92    0.001    0.000    0.113    0.001 transforms.py:1921(rotate)
       38    0.000    0.000    0.113    0.003 transforms.py:1957(rotate_deg_around)
       81    0.000    0.000    0.111    0.001 _backend_pdf_ps.py:116(_get_font_ttf)
       54    0.000    0.000    0.110    0.002 _backend_pdf_ps.py:81(get_text_width_height_descent)
       26    0.109    0.004    0.109    0.004 {method 'read' of '_io.BufferedReader' objects}
        4    0.000    0.000    0.104    0.026 _base.py:2607(_update_title_position)
        1    0.000    0.000    0.099    0.099 backend_pdf.py:1(<module>)
      189    0.001    0.000    0.091    0.000 font_manager.py:1252(findfont)
       26    0.002    0.000    0.086    0.003 function_def_to_graph.py:33(function_def_to_graph)
       16    0.001    0.000    0.084    0.005 axis.py:1016(_update_ticks)
        1    0.000    0.000    0.076    0.076 load.py:210(_load_all)
       50    0.000    0.000    0.074    0.001 axis.py:283(draw)
        8    0.000    0.000    0.072    0.009 base_layer.py:875(__call__)
        8    0.000    0.000    0.071    0.009 base_layer.py:996(_functional_construction_call)
        2    0.004    0.002    0.071    0.035 font_manager.py:1316(_findfont_cached)
      8/4    0.000    0.000    0.070    0.017 {built-in method builtins.__import__}
        2    0.000    0.000    0.068    0.034 backend_agg.py:400(draw)
        2    0.061    0.031    0.062    0.031 figure.py:250(__init__)
       26    0.000    0.000    0.062    0.002 importer.py:408(import_graph_def_for_function)
       26    0.001    0.000    0.061    0.002 importer.py:415(_import_graph_def_internal)
       16    0.000    0.000    0.061    0.004 axis.py:1375(get_major_ticks)
    78/39    0.000    0.000    0.060    0.002 variables.py:258(__call__)
       39    0.000    0.000    0.059    0.002 resource_variable_ops.py:1419(__init__)
       39    0.002    0.000    0.059    0.002 resource_variable_ops.py:1520(_init_from_args)
      128    0.002    0.000    0.054    0.000 text.py:665(draw)
       54    0.054    0.001    0.054    0.001 {built-in method posix.stat}
        3    0.000    0.000    0.054    0.018 genericpath.py:27(isfile)
       18    0.000    0.000    0.050    0.003 axis.py:2008(_get_tick)
       18    0.000    0.000    0.050    0.003 axis.py:416(__init__)
      333    0.001    0.000    0.049    0.000 artist.py:1086(set)
       26    0.001    0.000    0.048    0.002 importer.py:237(_ProcessNewOps)
   103/66    0.000    0.000    0.048    0.001 dispatch.py:198(wrapper)
       37    0.002    0.000    0.047    0.001 axis.py:56(__init__)
  364/300    0.000    0.000    0.046    0.000 <frozen importlib._bootstrap>:1017(_handle_fromlist)
       16    0.000    0.000    0.046    0.003 axis.py:1089(_get_tick_bboxes)
       16    0.000    0.000    0.046    0.003 axis.py:1091(<listcomp>)
       22    0.000    0.000    0.044    0.002 base_layer.py:477(add_weight)
        2    0.044    0.022    0.044    0.022 {built-in method sizeHint}
  206/190    0.001    0.000    0.044    0.000 ops.py:1448(convert_to_tensor)
       22    0.000    0.000    0.043    0.002 base.py:691(_add_variable_with_custom_getter)
        8    0.000    0.000    0.043    0.005 core.py:1159(build)
       22    0.000    0.000    0.041    0.002 base_layer_utils.py:55(make_variable)
       22    0.000    0.000    0.041    0.002 variables.py:182(_variable_v1_call)
       22    0.000    0.000    0.041    0.002 variables.py:199(<lambda>)
       22    0.000    0.000    0.040    0.002 variable_scope.py:2557(default_variable_creator)
       16    0.035    0.002    0.040    0.002 backend_qt5.py:705(_icon)
       16    0.037    0.002    0.037    0.002 {built-in method addAction}
      164    0.025    0.000    0.037    0.000 font_manager.py:1411(get_font)
       19    0.000    0.000    0.036    0.002 axis.py:2298(_get_tick)
       19    0.000    0.000    0.036    0.002 axis.py:489(__init__)
       27    0.000    0.000    0.036    0.001 backend_pdf.py:2144(draw_text)
        8    0.000    0.000    0.036    0.005 base_layer.py:2614(_maybe_build)
1224/1133    0.002    0.000    0.035    0.000 base.py:453(_method_wrapper)
       26    0.000    0.000    0.033    0.001 function.py:1460(__init__)
       16    0.000    0.000    0.033    0.002 axis.py:815(set_tick_params)
        8    0.000    0.000    0.032    0.004 core.py:1192(call)
        8    0.000    0.000    0.032    0.004 core.py:30(dense)
     12/8    0.000    0.000    0.032    0.004 axis.py:607(__get__)
    40/32    0.003    0.000    0.031    0.001 op_def_library.py:299(_apply_op_helper)
        2    0.000    0.000    0.031    0.015 backend_pdf.py:682(finalize)
       15    0.000    0.000    0.030    0.002 <frozen importlib._bootstrap>:549(module_from_spec)
        2    0.000    0.000    0.030    0.015 backend_pdf.py:797(writeFonts)
        2    0.000    0.000    0.030    0.015 backend_pdf.py:982(embedTTF)
        2    0.000    0.000    0.030    0.015 backend_pdf.py:538(__init__)
        2    0.000    0.000    0.029    0.015 backend_pdf.py:999(embedTTFType3)
        2    0.000    0.000    0.029    0.015 <frozen importlib._bootstrap_external>:1099(create_module)
        2    0.029    0.015    0.029    0.015 {built-in method _imp.create_dynamic}
        8    0.000    0.000    0.029    0.004 initializers_v2.py:387(__call__)
       26    0.001    0.000    0.029    0.001 ops.py:3603(_add_new_tf_operations)
        8    0.000    0.000    0.029    0.004 init_ops_v2.py:528(__call__)
        8    0.000    0.000    0.029    0.004 init_ops_v2.py:1037(random_uniform)
        8    0.000    0.000    0.029    0.004 random_ops.py:207(random_uniform)
        1    0.000    0.000    0.029    0.029 load.py:318(_restore_checkpoint)
     1071    0.001    0.000    0.029    0.000 inspect.py:3020(bind)
        7    0.028    0.004    0.028    0.004 {built-in method io.open}
        2    0.000    0.000    0.028    0.014 __init__.py:363(to_filehandle)
     1071    0.019    0.000    0.028    0.000 inspect.py:2889(_bind)
      353    0.001    0.000    0.028    0.000 posixpath.py:387(realpath)
        1    0.000    0.000    0.028    0.028 load.py:494(_finalize_objects)
        1    0.000    0.000    0.027    0.027 load.py:542(_reconstruct_all_models)
        1    0.000    0.000    0.027    0.027 load.py:300(_load_layers)
        7    0.000    0.000    0.027    0.004 load.py:321(_load_layer)
12314/10910    0.004    0.000    0.026    0.000 {built-in method builtins.next}
        7    0.000    0.000    0.026    0.004 load.py:352(_revive_from_config)
      113    0.003    0.000    0.026    0.000 lines.py:269(__init__)
      408    0.005    0.000    0.026    0.000 ops.py:1839(__init__)
      754    0.000    0.000    0.025    0.000 {method 'encode' of 'str' objects}
       26    0.000    0.000    0.025    0.001 ops.py:3622(<listcomp>)
       27    0.000    0.000    0.025    0.001 backend_pdf.py:2139(encode_string)
        1    0.000    0.000    0.025    0.025 __init__.py:70(search_function)
        5    0.000    0.000    0.024    0.005 training.py:246(__init__)
      353    0.004    0.000    0.023    0.000 posixpath.py:396(_joinrealpath)
        4    0.000    0.000    0.023    0.006 _base.py:2851(grid)
        8    0.000    0.000    0.023    0.003 axis.py:1403(grid)
      302    0.022    0.000    0.022    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_FastPathExecute}
      154    0.002    0.000    0.022    0.000 lines.py:734(draw)
      352    0.001    0.000    0.022    0.000 ops.py:3489(_create_op_from_tf_operation)
       93    0.000    0.000    0.022    0.000 constant_op.py:166(constant)
       93    0.000    0.000    0.022    0.000 constant_op.py:267(_constant_impl)
       93    0.000    0.000    0.022    0.000 constant_op.py:298(_constant_eager_impl)
      542    0.005    0.000    0.022    0.000 artist.py:972(update)
       93    0.001    0.000    0.022    0.000 constant_op.py:70(convert_to_eager_tensor)
        1    0.000    0.000    0.021    0.021 load.py:139(_load_all)
       30    0.000    0.000    0.021    0.001 constant_op.py:335(_constant_tensor_conversion_function)
        8    0.000    0.000    0.021    0.003 tensor_util.py:1017(shape_tensor)
      214    0.000    0.000    0.021    0.000 context.py:514(ensure_initialized)
        1    0.020    0.020    0.020    0.020 {built-in method tensorflow.python._pywrap_tfe.TFE_NewContext}
       16    0.000    0.000    0.020    0.001 resource_variable_ops.py:1908(_dense_var_to_tensor)
       16    0.000    0.000    0.020    0.001 resource_variable_ops.py:1317(_dense_var_to_tensor)
        1    0.000    0.000    0.020    0.020 Experiment.py:209(<listcomp>)
       17    0.000    0.000    0.020    0.001 variables.py:223(_variable_v2_call)
       52    0.000    0.000    0.020    0.000 statistics.py:295(mean)
       16    0.000    0.000    0.020    0.001 resource_variable_ops.py:550(value)
        5    0.000    0.000    0.019    0.004 training.py:312(_init_batch_counters)
2941/2239    0.002    0.000    0.019    0.000 contextlib.py:108(__enter__)
       17    0.000    0.000    0.019    0.001 variables.py:237(<lambda>)
       17    0.000    0.000    0.019    0.001 variable_scope.py:2616(default_variable_creator_v2)
        2    0.000    0.000    0.019    0.010 <__array_function__ internals>:2(savetxt)
        2    0.017    0.008    0.019    0.010 npyio.py:1191(savetxt)
2675/1590    0.005    0.000    0.019    0.000 base_layer.py:2756(__setattr__)
       52    0.010    0.000    0.019    0.000 statistics.py:123(_sum)
       16    0.000    0.000    0.019    0.001 resource_variable_ops.py:643(_read_variable_op)
       16    0.000    0.000    0.019    0.001 lazy_loader.py:61(__getattr__)
       16    0.000    0.000    0.019    0.001 lazy_loader.py:42(_load)
        2    0.019    0.009    0.019    0.009 {built-in method setWindowTitle}
        5    0.000    0.000    0.019    0.004 load.py:403(_revive_layer_from_config)
       16    0.000    0.000    0.018    0.001 resource_variable_ops.py:646(read_and_set_handle)
       16    0.000    0.000    0.018    0.001 gen_resource_variable_ops.py:452(read_variable_op)
       26    0.018    0.001    0.018    0.001 {built-in method io.open_code}
       39    0.000    0.000    0.018    0.000 resource_variable_ops.py:198(eager_safe_variable_handle)
        1    0.000    0.000    0.017    0.017 load.py:563(_reconstruct_model)
       39    0.002    0.000    0.017    0.000 resource_variable_ops.py:146(_variable_handle_from_shape_and_dtype)
       28    0.000    0.000    0.017    0.001 axis.py:341(_apply_params)
       28    0.000    0.000    0.017    0.001 qt_compat.py:190(_devicePixelRatioF)
       28    0.017    0.001    0.017    0.001 {built-in method devicePixelRatioF}
       12    0.000    0.000    0.017    0.001 backend_qt5.py:250(_dpi_ratio)
        2    0.000    0.000    0.017    0.008 backend_qt5.py:246(_update_figure_dpi)
        1    0.000    0.000    0.016    0.016 __init__.py:15(<module>)
       56    0.001    0.000    0.016    0.000 func_graph.py:528(_create_op_internal)
        8    0.000    0.000    0.016    0.002 gen_math_ops.py:5591(mat_mul)
       56    0.001    0.000    0.016    0.000 ops.py:3418(_create_op_internal)
       26    0.000    0.000    0.016    0.001 function.py:597(__init__)
        1    0.000    0.000    0.015    0.015 pyplot.py:794(close)
        1    0.000    0.000    0.015    0.015 _pylab_helpers.py:45(destroy)
       81    0.000    0.000    0.015    0.000 backend_agg.py:268(_get_agg_font)
       26    0.001    0.000    0.015    0.001 function.py:412(__init__)
        1    0.000    0.000    0.015    0.015 backend_qt5.py:625(destroy)
        1    0.015    0.015    0.015    0.015 {built-in method close}
        1    0.000    0.000    0.015    0.015 functional.py:1072(reconstruct_from_config)
       54    0.000    0.000    0.015    0.000 backend_agg.py:215(get_text_width_height_descent)
        4    0.000    0.000    0.014    0.004 functional.py:1115(process_node)
45736/45628    0.009    0.000    0.014    0.000 {built-in method builtins.isinstance}
        2    0.000    0.000    0.014    0.007 training.py:462(compile)
       84    0.000    0.000    0.014    0.000 load.py:167(_add_object_graph_edges)
       63    0.000    0.000    0.014    0.000 functional.py:308(_layer_checkpoint_dependencies)
       62    0.000    0.000    0.014    0.000 functional.py:340(_lookup_dependency)
        8    0.000    0.000    0.013    0.002 nn_ops.py:3306(bias_add)
      220    0.000    0.000    0.013    0.000 base_layer.py:1347(weights)
        4    0.000    0.000    0.013    0.003 _base.py:3216(set_xlim)
        2    0.000    0.000    0.013    0.006 backend_pdf.py:1040(<listcomp>)
20621/19331    0.006    0.000    0.013    0.000 {built-in method builtins.getattr}
      512    0.000    0.000    0.013    0.000 backend_pdf.py:1029(get_char_width)
       88    0.001    0.000    0.013    0.000 text.py:127(__init__)
       16    0.000    0.000    0.013    0.001 version_utils.py:63(__new__)
        1    0.000    0.000    0.013    0.013 util.py:1213(restore)
       16    0.012    0.001    0.012    0.001 _base.py:3199(_validate_converted_limits)
      512    0.012    0.000    0.012    0.000 {method 'load_char' of 'matplotlib.ft2font.FT2Font' objects}
       73    0.000    0.000    0.012    0.000 util.py:264(restore_saveables)
        1    0.000    0.000    0.011    0.011 base.py:203(restore)
        1    0.000    0.000    0.011    0.011 base.py:892(_restore_from_checkpoint_position)
       24    0.000    0.000    0.011    0.000 patches.py:575(draw)
        4    0.011    0.003    0.011    0.003 {built-in method height}
    51/19    0.011    0.000    0.011    0.001 version_utils.py:98(swap_class)
        4    0.000    0.000    0.010    0.003 _base.py:3015(tick_params)
    32/20    0.000    0.000    0.010    0.001 generic_utils.py:334(deserialize_keras_object)
     3177    0.002    0.000    0.010    0.000 posixpath.py:164(islink)
2941/2281    0.003    0.000    0.010    0.000 contextlib.py:117(__exit__)
      450    0.001    0.000    0.010    0.000 base_layer.py:2835(_gather_children_attribute)
8078/6676    0.006    0.000    0.010    0.000 artist.py:213(stale)
       11    0.000    0.000    0.010    0.001 functional_saver.py:297(restore)
       60    0.000    0.000    0.010    0.000 load.py:675(setattr_wrapper)
       11    0.000    0.000    0.010    0.001 functional_saver.py:310(restore_fn)
        2    0.000    0.000    0.010    0.005 compile_utils.py:110(__init__)
       32    0.010    0.000    0.010    0.000 {method 'get_glyph_name' of 'matplotlib.ft2font.FT2Font' objects}
       11    0.000    0.000    0.010    0.001 functional_saver.py:80(restore)
       13    0.000    0.000    0.010    0.001 <frozen importlib._bootstrap_external>:578(_compile_bytecode)
      135    0.010    0.000    0.010    0.000 {method 'set_text' of 'matplotlib.ft2font.FT2Font' objects}
     2885    0.010    0.000    0.010    0.000 {built-in method numpy.array}
       13    0.010    0.001    0.010    0.001 {built-in method marshal.loads}
       89    0.002    0.000    0.009    0.000 lines.py:650(recache)
  396/347    0.001    0.000    0.009    0.000 inspect.py:2206(_signature_from_callable)
      450    0.000    0.000    0.009    0.000 base_layer.py:2843(<genexpr>)
        5    0.000    0.000    0.009    0.002 serialization.py:158(deserialize)
        4    0.000    0.000    0.009    0.002 axis.py:2048(_update_label_position)
      166    0.000    0.000    0.009    0.000 func_graph.py:595(capture)
       27    0.000    0.000    0.009    0.000 backend_agg.py:188(draw_text)
        4    0.000    0.000    0.009    0.002 axis.py:2340(_update_label_position)
      352    0.000    0.000    0.009    0.000 importer.py:290(_GetColocationNames)
      230    0.001    0.000    0.009    0.000 text.py:168(update)
  880/450    0.001    0.000    0.009    0.000 layer_utils.py:234(filter_empty_layer_containers)
        6    0.000    0.000    0.009    0.002 base_layer.py:681(from_config)
        1    0.000    0.000    0.009    0.009 np_math_ops.py:15(<module>)
       72    0.000    0.000    0.009    0.000 base.py:382(restore_ops)
       32    0.000    0.000    0.009    0.000 ticker.py:2274(__call__)
      352    0.001    0.000    0.009    0.000 ops.py:2471(get_attr)
       26    0.000    0.000    0.009    0.000 context.py:2346(add_function)
        8    0.000    0.000    0.009    0.001 core.py:1131(__init__)
       39    0.000    0.000    0.009    0.000 gen_resource_variable_ops.py:1163(var_handle_op)
       26    0.000    0.000    0.009    0.000 context.py:1085(add_function)
       26    0.009    0.000    0.009    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunction}
      112    0.000    0.000    0.008    0.000 func_graph.py:644(_capture_helper)
        3    0.000    0.000    0.008    0.003 metrics.py:162(__new__)
        1    0.000    0.000    0.008    0.008 Experiment.py:33(__init__)
     1815    0.001    0.000    0.008    0.000 abc.py:96(__instancecheck__)
        4    0.000    0.000    0.008    0.002 functional.py:108(__init__)
       26    0.005    0.000    0.008    0.000 function_def_to_graph.py:122(function_def_to_graph_def)
      258    0.002    0.000    0.008    0.000 font_manager.py:680(__init__)
     9499    0.006    0.000    0.008    0.000 __init__.py:686(__getitem__)
     3177    0.008    0.000    0.008    0.000 {built-in method posix.lstat}
       32    0.000    0.000    0.008    0.000 ticker.py:2278(tick_values)
       16    0.000    0.000    0.008    0.000 func_graph.py:1123(_create_substitute_placeholder)
      286    0.000    0.000    0.008    0.000 inspect.py:3091(signature)
      286    0.000    0.000    0.008    0.000 inspect.py:2839(from_callable)
       72    0.000    0.000    0.008    0.000 base.py:917(_single_restoration_from_checkpoint_position)
        5    0.000    0.000    0.008    0.002 load.py:472(_try_build_layer)
  670/563    0.001    0.000    0.008    0.000 training.py:322(__setattr__)
     3194    0.005    0.000    0.008    0.000 posixpath.py:71(join)
    61/37    0.000    0.000    0.008    0.000 version_utils.py:109(<genexpr>)
      225    0.000    0.000    0.007    0.000 base_layer.py:1311(trainable_weights)
     2941    0.002    0.000    0.007    0.000 contextlib.py:238(helper)
        4    0.000    0.000    0.007    0.002 axis.py:2321(_get_tick_boxes_siblings)
        4    0.000    0.000    0.007    0.002 axis.py:2029(_get_tick_boxes_siblings)
      170    0.001    0.000    0.007    0.000 transforms.py:1399(transform)
     1815    0.001    0.000    0.007    0.000 {built-in method _abc._abc_instancecheck}
3256/1472    0.003    0.000    0.007    0.000 data_structures.py:756(__getattribute__)
      262    0.001    0.000    0.007    0.000 markers.py:277(set_marker)
       26    0.000    0.000    0.007    0.000 function_deserialization.py:438(_fix_fdef)
      209    0.007    0.000    0.007    0.000 {method 'ParseFromString' of 'google.protobuf.pyext._message.CMessage' objects}
        1    0.000    0.000    0.007    0.007 util.py:750(assert_existing_objects_matched)
    26052    0.007    0.000    0.007    0.000 statistics.py:219(_exact_ratio)
       32    0.001    0.000    0.007    0.000 ticker.py:2214(_raw_ticks)
       12    0.000    0.000    0.007    0.001 axis.py:228(set_clip_path)
        2    0.000    0.000    0.007    0.003 backend_qt5.py:451(draw_idle)
      343    0.003    0.000    0.007    0.000 inspect.py:2112(_signature_from_function)
        2    0.007    0.003    0.007    0.003 {singleShot}
      186    0.000    0.000    0.007    0.000 np_utils.py:287(np_doc)
       11    0.000    0.000    0.007    0.001 gen_io_ops.py:1463(restore_v2)
 1485/638    0.003    0.000    0.007    0.000 backend_pdf.py:242(pdfRepr)
       32    0.000    0.000    0.007    0.000 ticker.py:775(set_locs)
  156/148    0.000    0.000    0.006    0.000 _base.py:635(_unstale_viewLim)
        1    0.000    0.000    0.006    0.006 np_random.py:15(<module>)
      186    0.000    0.000    0.006    0.000 np_utils.py:302(decorator)
    37/35    0.001    0.000    0.006    0.000 {built-in method builtins.__build_class__}
16293/15791    0.005    0.000    0.006    0.000 {built-in method builtins.hasattr}
       39    0.000    0.000    0.006    0.000 backend_pdf.py:1821(draw_path)
        2    0.000    0.000    0.006    0.003 _base.py:611(_init_axis)
      186    0.000    0.000    0.006    0.000 np_utils.py:172(_np_signature)
      728    0.002    0.000    0.006    0.000 fromnumeric.py:70(_wrapreduction)
      408    0.002    0.000    0.006    0.000 ops.py:3521(_create_op_helper)
       11    0.000    0.000    0.006    0.001 gen_io_ops.py:1538(restore_v2_eager_fallback)
       88    0.000    0.000    0.006    0.000 text.py:1188(set_fontproperties)
      164    0.001    0.000    0.006    0.000 base.py:800(_track_trackable)
        1    0.000    0.000    0.006    0.006 load.py:262(_load_nodes)
     1256    0.006    0.000    0.006    0.000 {method 'reduce' of 'numpy.ufunc' objects}
       18    0.000    0.000    0.006    0.000 base_layer.py:297(__init__)
        1    0.000    0.000    0.006    0.006 graph_view.py:436(list_objects)
        1    0.000    0.000    0.006    0.006 graph_view.py:412(objects_ids_and_slot_variables)
       25    0.000    0.000    0.006    0.000 backend_pdf.py:1900(draw_markers)
        1    0.000    0.000    0.006    0.006 np_array_ops.py:15(<module>)
 2601/183    0.001    0.000    0.006    0.000 abc.py:100(__subclasscheck__)
       84    0.000    0.000    0.006    0.000 load.py:227(_recreate)
 2601/183    0.005    0.000    0.006    0.000 {built-in method _abc._abc_subclasscheck}
       25    0.000    0.000    0.006    0.000 axis.py:1345(_copy_tick_props)
       25    0.000    0.000    0.006    0.000 backend_bases.py:165(draw_markers)
        3    0.000    0.000    0.006    0.002 metrics.py:481(__init__)
        3    0.000    0.000    0.006    0.002 metrics.py:326(__init__)
       16    0.000    0.000    0.006    0.000 graph_only_ops.py:29(graph_placeholder)
       67    0.000    0.000    0.006    0.000 load.py:376(_recreate)
      370    0.002    0.000    0.006    0.000 font_manager.py:1131(score_family)
       32    0.000    0.000    0.006    0.000 axis.py:754(_set_scale)
      225    0.000    0.000    0.006    0.000 base_layer.py:1326(non_trainable_weights)
       58    0.000    0.000    0.006    0.000 nested_structure_coder.py:115(decode_proto)
        1    0.000    0.000    0.006    0.006 load.py:202(_setup_functions_captures)
       16    0.000    0.000    0.005    0.000 axis.py:1281(get_majorticklocs)
       26    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphImportGraphDefWithResults}
       32    0.000    0.000    0.005    0.000 scale.py:106(set_default_locators_and_formatters)
   326/58    0.001    0.000    0.005    0.000 nested_structure_coder.py:78(_map_structure)
     2941    0.005    0.000    0.005    0.000 contextlib.py:82(__init__)
      188    0.000    0.000    0.005    0.000 markers.py:215(__init__)
        1    0.000    0.000    0.005    0.005 input_layer.py:210(Input)
  501/407    0.001    0.000    0.005    0.000 data_structures.py:103(sticky_attribute_assignment)
      223    0.000    0.000    0.005    0.000 backend_pdf.py:731(output)
        2    0.000    0.000    0.005    0.003 input_layer.py:91(__init__)
       27    0.001    0.000    0.005    0.000 func_graph.py:165(__init__)
       52    0.002    0.000    0.005    0.000 function_deserialization.py:464(_list_function_deps)
      156    0.001    0.000    0.005    0.000 func_graph.py:365(inner_cm)
  222/182    0.001    0.000    0.005    0.000 transforms.py:2366(get_affine)
      519    0.001    0.000    0.005    0.000 re.py:289(_compile)
       32    0.000    0.000    0.005    0.000 ticker.py:247(format_ticks)
     1372    0.003    0.000    0.005    0.000 __init__.py:2045(_setattr_cm)
       11    0.000    0.000    0.005    0.000 execute.py:33(quick_execute)
       39    0.000    0.000    0.005    0.000 lines.py:1005(get_path)
     1339    0.001    0.000    0.005    0.000 _asarray.py:14(asarray)
       11    0.005    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_Execute}
       16    0.000    0.000    0.005    0.000 transforms.py:658(union)
      170    0.000    0.000    0.005    0.000 transforms.py:2342(transform_affine)
      553    0.001    0.000    0.005    0.000 ops.py:3868(_get_op_def)
      335    0.003    0.000    0.005    0.000 __init__.py:1682(normalize_kwargs)
       56    0.001    0.000    0.005    0.000 ops.py:1764(_create_c_op)
      266    0.000    0.000    0.005    0.000 <__array_function__ internals>:2(any)
      142    0.000    0.000    0.005    0.000 font_manager.py:932(copy)
      352    0.004    0.000    0.005    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationGetAttrValueProto}
       52    0.000    0.000    0.005    0.000 function.py:2041(add_to_graph)
        2    0.000    0.000    0.005    0.002 _base.py:2446(autoscale_view)
        2    0.000    0.000    0.005    0.002 loader_impl.py:72(parse_saved_model)
      838    0.000    0.000    0.005    0.000 nest.py:274(flatten)
       24    0.000    0.000    0.005    0.000 axis.py:770(cla)
        1    0.000    0.000    0.004    0.004 load.py:488(_load_edges)
       52    0.000    0.000    0.004    0.000 function.py:489(add_to_graph)
     2221    0.001    0.000    0.004    0.000 {built-in method builtins.setattr}
       66    0.000    0.000    0.004    0.000 backend_pdf.py:1752(check_gc)
        2    0.004    0.002    0.004    0.002 {built-in method setVisible}
      4/3    0.000    0.000    0.004    0.001 training.py:237(__new__)
      278    0.001    0.000    0.004    0.000 fromnumeric.py:52(_wrapfunc)
        1    0.000    0.000    0.004    0.004 load.py:453(_revive_metric_from_config)
      838    0.001    0.000    0.004    0.000 {built-in method tensorflow.python._pywrap_utils.Flatten}
      450    0.001    0.000    0.004    0.000 markers.py:230(_recache)
        1    0.000    0.000    0.004    0.004 metrics.py:3427(deserialize)
       16    0.000    0.000    0.004    0.000 axis.py:1285(get_minorticklocs)
       11    0.000    0.000    0.004    0.000 load.py:382(<lambda>)
       11    0.000    0.000    0.004    0.000 load.py:419(_recreate_function)
       30    0.000    0.000    0.004    0.000 backend_pdf.py:1702(writeObject)
       11    0.000    0.000    0.004    0.000 function_deserialization.py:192(recreate_function)
        8    0.000    0.000    0.004    0.001 gen_nn_ops.py:648(bias_add)
       29    0.002    0.000    0.004    0.000 ops.py:2862(__init__)
        4    0.000    0.000    0.004    0.001 _base.py:2512(handle_single_axis)
      106    0.000    0.000    0.004    0.000 transforms.py:815(from_extents)
      238    0.004    0.000    0.004    0.000 {method 'SerializeToString' of 'google.protobuf.pyext._message.CMessage' objects}
      430    0.001    0.000    0.004    0.000 data_structures.py:208(layers)
      850    0.001    0.000    0.004    0.000 artist.py:52(_stale_axes_callback)
     1776    0.002    0.000    0.004    0.000 {built-in method builtins.any}
      266    0.000    0.000    0.004    0.000 fromnumeric.py:2249(any)
      284    0.001    0.000    0.004    0.000 ops.py:5580(get_controller)
      356    0.000    0.000    0.004    0.000 posixpath.py:372(abspath)
       30    0.000    0.000    0.004    0.000 backend_pdf.py:333(write)
       40    0.000    0.000    0.004    0.000 load.py:908(_revive_setter)
       10    0.000    0.000    0.004    0.000 sre_compile.py:759(compile)
      112    0.001    0.000    0.004    0.000 custom_gradient.py:45(copy_handle_data)
        3    0.000    0.000    0.004    0.001 generic_utils.py:797(populate_dict_with_module_objects)
      278    0.001    0.000    0.004    0.000 transforms.py:766(__init__)
       67    0.000    0.000    0.004    0.000 ops.py:3319(_add_function)
     1538    0.002    0.000    0.004    0.000 inspect.py:2477(__init__)
        5    0.000    0.000    0.004    0.001 serialization.py:83(populate_deserializable_objects)
      185    0.002    0.000    0.004    0.000 function_deserialization.py:393(fix_node_def)
        6    0.000    0.000    0.004    0.001 metrics.py:279(add_weight)
      258    0.002    0.000    0.004    0.000 artist.py:69(__init__)
        1    0.000    0.000    0.004    0.004 load.py:180(_setup_functions_structures)
     2450    0.003    0.000    0.004    0.000 _collections_abc.py:742(__iter__)
        2    0.000    0.000    0.003    0.002 _axes.py:1510(plot)
        8    0.000    0.000    0.003    0.000 re.py:250(compile)
    33176    0.003    0.000    0.003    0.000 {method 'get' of 'dict' objects}
      405    0.000    0.000    0.003    0.000 ops.py:386(_create_with_tf_output)
       32    0.001    0.000    0.003    0.000 ticker.py:860(_set_format)
      577    0.001    0.000    0.003    0.000 transforms.py:1832(__init__)
       67    0.003    0.000    0.003    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphCopyFunction}
       75    0.000    0.000    0.003    0.000 lines.py:1277(update_from)
      467    0.001    0.000    0.003    0.000 tf_stack.py:131(extract_stack)
       74    0.000    0.000    0.003    0.000 lines.py:1146(set_marker)
        1    0.000    0.000    0.003    0.003 function_deserialization.py:360(_sort_function_defs)
      370    0.001    0.000    0.003    0.000 font_manager.py:1210(score_weight)
      405    0.001    0.000    0.003    0.000 ops.py:359(__init__)
      113    0.000    0.000    0.003    0.000 lines.py:1190(set_markerfacecolor)
      495    0.003    0.000    0.003    0.000 {method 'CopyFrom' of 'google.protobuf.pyext._message.CMessage' objects}
       32    0.000    0.000    0.003    0.000 ticker.py:2889(__init__)
      217    0.000    0.000    0.003    0.000 transforms.py:1267(__add__)
       16    0.000    0.000    0.003    0.000 spines.py:348(draw)
      142    0.001    0.000    0.003    0.000 fromnumeric.py:39(_wrapit)
        1    0.000    0.000    0.003    0.003 graph_view.py:89(_serialize_slot_variables)
      434    0.001    0.000    0.003    0.000 colors.py:161(to_rgba)
       61    0.000    0.000    0.003    0.000 tf_inspect.py:238(getfullargspec)
       32    0.000    0.000    0.003    0.000 ticker.py:2096(__init__)
       11    0.000    0.000    0.003    0.000 function_deserialization.py:121(_deserialize_function_spec_as_nonmethod)
      200    0.001    0.000    0.003    0.000 base_layer.py:2714(__delattr__)
      114    0.003    0.000    0.003    0.000 {built-in method builtins.dir}
       90    0.000    0.000    0.003    0.000 font_manager.py:713(_from_any)
      704    0.000    0.000    0.003    0.000 importer.py:76(_MaybeDevice)
      360    0.002    0.000    0.003    0.000 posixpath.py:334(normpath)
        4    0.000    0.000    0.003    0.001 axis.py:664(__init__)
       16    0.003    0.000    0.003    0.000 {built-in method color}
       32    0.000    0.000    0.003    0.000 ticker.py:2169(set_params)
      370    0.002    0.000    0.003    0.000 font_manager.py:1192(score_stretch)
      395    0.001    0.000    0.003    0.000 transforms.py:148(invalidate)
       14    0.000    0.000    0.003    0.000 backend_agg.py:131(draw_path)
    19283    0.003    0.000    0.003    0.000 inspect.py:2539(kind)
      697    0.002    0.000    0.003    0.000 font_manager.py:736(__hash__)
      400    0.001    0.000    0.003    0.000 base_layer.py:2690(_obj_reference_counts)
      362    0.002    0.000    0.003    0.000 __init__.py:2219(_check_isinstance)
       14    0.003    0.000    0.003    0.000 {method 'draw_path' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      217    0.000    0.000    0.003    0.000 transforms.py:2433(composite_transform_factory)
     1156    0.001    0.000    0.003    0.000 tf_inspect.py:365(isclass)
       61    0.001    0.000    0.003    0.000 inspect.py:1090(getfullargspec)
        1    0.000    0.000    0.003    0.003 type1font.py:1(<module>)
     1111    0.002    0.000    0.003    0.000 dtypes.py:606(as_dtype)
    70/62    0.001    0.000    0.003    0.000 backend_pdf.py:291(<listcomp>)
        8    0.000    0.000    0.003    0.000 gen_random_ops.py:695(random_uniform)
      182    0.001    0.000    0.003    0.000 ops.py:616(set_shape)
        6    0.000    0.000    0.003    0.000 variables.py:66(getter)
      378    0.001    0.000    0.003    0.000 c_api_util.py:224(new_tf_operations)
       27    0.000    0.000    0.003    0.000 backend_pdf.py:744(fontName)
        6    0.000    0.000    0.003    0.000 distribute_lib.py:2855(creator)
        6    0.000    0.000    0.003    0.000 activations.py:190(softplus)
        6    0.000    0.000    0.003    0.000 gen_nn_ops.py:10917(softplus)
      408    0.001    0.000    0.003    0.000 ops.py:4439(_apply_device_functions)
  398/204    0.001    0.000    0.003    0.000 tracking.py:80(__setattr__)
      195    0.001    0.000    0.003    0.000 np_utils.py:266(_np_doc_helper)
        6    0.000    0.000    0.003    0.000 load.py:371(_revive_graph_network)
     1650    0.001    0.000    0.003    0.000 enum.py:289(__call__)
       50    0.000    0.000    0.002    0.000 text.py:252(update_from)
       78    0.000    0.000    0.002    0.000 func_graph.py:362(as_default)
      467    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._tf_stack.extract_stack}
      106    0.001    0.000    0.002    0.000 path.py:98(__init__)
      158    0.001    0.000    0.002    0.000 text.py:832(get_prop_tup)
       39    0.001    0.000    0.002    0.000 resource_variable_ops.py:341(__init__)
      370    0.002    0.000    0.002    0.000 font_manager.py:1154(<listcomp>)
       20    0.000    0.000    0.002    0.000 saveable_object_util.py:119(restore)
      468    0.001    0.000    0.002    0.000 ops.py:5639(init_scope)
       11    0.000    0.000    0.002    0.000 nested_structure_coder.py:243(do_decode)
      132    0.000    0.000    0.002    0.000 axis.py:1941(getter)
      106    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(reshape)
     1224    0.001    0.000    0.002    0.000 transforms.py:1702(__init__)
      223    0.000    0.000    0.002    0.000 backend_pdf.py:732(<listcomp>)
        2    0.000    0.000    0.002    0.001 axis.py:1969(__init__)
       40    0.000    0.000    0.002    0.000 data_structures.py:1050(_set_list_item)
 1393/885    0.001    0.000    0.002    0.000 {built-in method builtins.hash}
     2311    0.002    0.000    0.002    0.000 __init__.py:2254(_check_in_list)
        1    0.000    0.000    0.002    0.002 loader_impl.py:43(parse_saved_model_with_debug_info)
      862    0.000    0.000    0.002    0.000 serialization.py:103(<lambda>)
       66    0.000    0.000    0.002    0.000 transforms.py:806(from_bounds)
      704    0.001    0.000    0.002    0.000 ops.py:2312(inputs)
      138    0.001    0.000    0.002    0.000 backend_bases.py:736(__init__)
      422    0.001    0.000    0.002    0.000 tensor_shape.py:746(__init__)
       59    0.000    0.000    0.002    0.000 gen_resource_variable_ops.py:123(assign_variable_op)
      552    0.000    0.000    0.002    0.000 figure.py:42(_stale_figure_callback)
      416    0.002    0.000    0.002    0.000 inspect.py:2760(__init__)
       26    0.000    0.000    0.002    0.000 importer.py:86(_ProcessGraphDefParam)
      430    0.000    0.000    0.002    0.000 data_structures.py:195(_layers)
      427    0.002    0.000    0.002    0.000 transforms.py:185(set_children)
     1020    0.001    0.000    0.002    0.000 object_identity.py:192(add)
       26    0.001    0.000    0.002    0.000 function_deserialization.py:348(_restore_gradient_functions)
      452    0.001    0.000    0.002    0.000 base_layer.py:2958(_dedup_weights)
        8    0.000    0.000    0.002    0.000 gen_math_ops.py:314(add)
        2    0.000    0.000    0.002    0.001 axis.py:2257(__init__)
        1    0.000    0.000    0.002    0.002 graph_view.py:185(_breadth_first_traversal)
       39    0.000    0.000    0.002    0.000 backend_pdf.py:1677(writePath)
  863/395    0.002    0.000    0.002    0.000 transforms.py:158(_invalidate_internal)
       16    0.000    0.000    0.002    0.000 math_ops.py:1121(binary_op_wrapper)
    45/27    0.000    0.000    0.002    0.000 nested_structure_coder.py:189(do_decode)
       48    0.001    0.000    0.002    0.000 patches.py:523(_bind_draw_path_function)
        2    0.000    0.000    0.002    0.001 _base.py:1956(add_line)
   131/80    0.000    0.000    0.002    0.000 nested_structure_coder.py:190(<genexpr>)
      440    0.000    0.000    0.002    0.000 ops.py:3636(as_graph_element)
     9501    0.002    0.000    0.002    0.000 {function RcParams.__getitem__ at 0x7fe92b8da430}
      216    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(amin)
      152    0.000    0.000    0.002    0.000 _base.py:649(viewLim)
       92    0.000    0.000    0.002    0.000 ops.py:5202(device)
     1240    0.002    0.000    0.002    0.000 {method 'copy' of 'numpy.ndarray' objects}
      352    0.000    0.000    0.002    0.000 ops.py:2172(_set_device)
       39    0.000    0.000    0.002    0.000 gen_math_ops.py:5437(logical_not)
       10    0.000    0.000    0.002    0.000 sre_parse.py:937(parse)
       60    0.000    0.000    0.002    0.000 nest.py:573(map_structure)
       26    0.002    0.000    0.002    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphToFunction_wrapper}
      342    0.000    0.000    0.002    0.000 transforms.py:1715(transform)
        2    0.000    0.000    0.002    0.001 backend_pdf.py:643(newPage)
        2    0.002    0.001    0.002    0.001 {built-in method ttconv.get_pdf_charprocs}
      141    0.000    0.000    0.002    0.000 base.py:854(_handle_deferred_dependencies)
      106    0.000    0.000    0.002    0.000 fromnumeric.py:199(reshape)
        2    0.000    0.000    0.002    0.001 _base.py:982(_gen_axes_spines)
       93    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(column_stack)
       10    0.000    0.000    0.002    0.000 _base.py:997(<genexpr>)
        4    0.000    0.000    0.002    0.000 functional.py:117(_init_graph_network)
        8    0.000    0.000    0.002    0.000 spines.py:484(linear_spine)
       50    0.000    0.000    0.002    0.000 path.py:351(iter_segments)
      434    0.000    0.000    0.002    0.000 colors.py:124(_is_nth_color)
       24    0.000    0.000    0.002    0.000 base_layer.py:2261(_set_dtype_policy)
      758    0.001    0.000    0.002    0.000 object_identity.py:131(__getitem__)
        2    0.000    0.000    0.002    0.001 backend_agg.py:412(get_renderer)
     1419    0.001    0.000    0.002    0.000 object_identity.py:174(__init__)
      168    0.001    0.000    0.002    0.000 transforms.py:2276(__init__)
       38    0.000    0.000    0.002    0.000 backend_pdf.py:739(endStream)
      232    0.000    0.000    0.002    0.000 figure.py:438(_set_dpi)
       32    0.001    0.000    0.002    0.000 ticker.py:784(_compute_offset)
       18    0.000    0.000    0.002    0.000 base_layer.py:2884(_init_call_fn_args)
7726/7548    0.002    0.000    0.002    0.000 {built-in method builtins.len}
     1132    0.001    0.000    0.002    0.000 c_api_util.py:157(tf_buffer)
      313    0.001    0.000    0.002    0.000 backend_pdf.py:97(fill)
       66    0.001    0.000    0.002    0.000 backend_pdf.py:2382(delta)
       34    0.000    0.000    0.002    0.000 backend_pdf.py:501(end)
        1    0.000    0.000    0.002    0.002 type1font.py:38(Type1Font)
      180    0.001    0.000    0.002    0.000 transforms.py:1982(scale)
       12    0.000    0.000    0.002    0.000 patches.py:41(__init__)
       32    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(clip)
      104    0.001    0.000    0.002    0.000 transforms.py:633(translated)
      350    0.001    0.000    0.002    0.000 transforms.py:1794(transform_affine)
     1256    0.001    0.000    0.002    0.000 tf_decorator.py:200(unwrap)
        1    0.000    0.000    0.002    0.002 load.py:152(_create_saveable_object_factories)
      113    0.000    0.000    0.002    0.000 lines.py:1204(set_markerfacecoloralt)
       37    0.000    0.000    0.002    0.000 nested_structure_coder.py:440(do_decode)
      220    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(amax)
    13/10    0.000    0.000    0.002    0.000 sre_parse.py:435(_parse_sub)
        2    0.002    0.001    0.002    0.001 backend_agg.py:90(__init__)
     7199    0.002    0.000    0.002    0.000 {method 'lower' of 'str' objects}
      410    0.001    0.000    0.002    0.000 __init__.py:1281(_to_unmasked_float_array)
       32    0.000    0.000    0.002    0.000 fromnumeric.py:2033(clip)
     1928    0.001    0.000    0.002    0.000 ops.py:2376(type)
       39    0.000    0.000    0.002    0.000 gen_resource_variable_ops.py:1265(var_is_initialized_op)
       14    0.000    0.000    0.002    0.000 array_ops.py:2746(wrapped)
      438    0.000    0.000    0.002    0.000 re.py:188(match)
       78    0.000    0.000    0.002    0.000 tf_contextlib.py:25(contextmanager)
      132    0.000    0.000    0.002    0.000 artist.py:850(_set_gc_clip)
       89    0.000    0.000    0.002    0.000 <__array_function__ internals>:2(broadcast_arrays)
      610    0.000    0.000    0.002    0.000 backend_pdf.py:725(write)
     3903    0.001    0.000    0.002    0.000 posixpath.py:41(_get_sep)
      440    0.001    0.000    0.002    0.000 ops.py:3672(_as_graph_element_locked)
       14    0.000    0.000    0.002    0.000 array_ops.py:2754(zeros)
      216    0.000    0.000    0.002    0.000 fromnumeric.py:2714(amin)
      352    0.001    0.000    0.002    0.000 importer.py:336(_SetDefaultAttrValues)
      430    0.000    0.000    0.002    0.000 {built-in method builtins.all}
       10    0.000    0.000    0.002    0.000 sre_compile.py:598(_code)
      270    0.001    0.000    0.002    0.000 text.py:818(get_unitless_position)
        8    0.000    0.000    0.002    0.000 spines.py:31(__init__)
     8102    0.002    0.000    0.002    0.000 artist.py:796(get_animated)
        8    0.000    0.000    0.002    0.000 spines.py:221(register_axis)
       19    0.000    0.000    0.002    0.000 __init__.py:474(_get_data_path)
    14/11    0.001    0.000    0.002    0.000 sre_parse.py:493(_parse)
      407    0.001    0.000    0.002    0.000 {method 'sub' of 're.Pattern' objects}
       91    0.000    0.000    0.002    0.000 nest.py:536(pack_sequence_as)
    11061    0.002    0.000    0.002    0.000 inspect.py:2527(name)
     1086    0.001    0.000    0.002    0.000 context.py:1851(executing_eagerly)
    10337    0.002    0.000    0.002    0.000 {method 'append' of 'list' objects}
      372    0.001    0.000    0.002    0.000 __init__.py:853(get_siblings)
       15    0.000    0.000    0.002    0.000 <frozen importlib._bootstrap>:890(_find_spec)
     1398    0.001    0.000    0.002    0.000 compat.py:114(as_str)
       12    0.001    0.000    0.002    0.000 __init__.py:313(namedtuple)
      679    0.000    0.000    0.002    0.000 ops.py:3823(_get_operation_by_tf_operation)
     9096    0.002    0.000    0.002    0.000 {method 'items' of 'dict' objects}
        8    0.000    0.000    0.002    0.000 math_ops.py:1449(_mul_dispatch)
       95    0.000    0.000    0.002    0.000 nest.py:496(_pack_sequence_as)
       32    0.000    0.000    0.002    0.000 ticker.py:2146(_validate_steps)
   125/62    0.000    0.000    0.001    0.000 tracking.py:440(wrapped)
        2    0.000    0.000    0.001    0.001 backend.py:1141(placeholder)
      445    0.001    0.000    0.001    0.000 data_structures.py:784(_values)
       56    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FinishOperation}
       10    0.000    0.000    0.001    0.000 node.py:54(__init__)
      132    0.000    0.000    0.001    0.000 backend_bases.py:900(set_clip_path)
     1778    0.001    0.000    0.001    0.000 transforms.py:107(__init__)
       82    0.000    0.000    0.001    0.000 axis.py:467(update_position)
       93    0.001    0.000    0.001    0.000 shape_base.py:612(column_stack)
       43    0.000    0.000    0.001    0.000 ops.py:5744(executing_eagerly_outside_functions)
       18    0.000    0.000    0.001    0.000 base_layer.py:2409(_init_set_name)
      219    0.000    0.000    0.001    0.000 ops.py:3827(get_tensor_by_name)
       32    0.000    0.000    0.001    0.000 axis.py:1333(_get_tick_label_size)
       26    0.001    0.000    0.001    0.000 {method 'extend' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
       68    0.000    0.000    0.001    0.000 backend_pdf.py:2231(new_gc)
        8    0.000    0.000    0.001    0.000 math_ops.py:462(multiply)
       23    0.000    0.000    0.001    0.000 generic_utils.py:745(to_snake_case)
      102    0.001    0.000    0.001    0.000 {method 'write' of '_io.TextIOWrapper' objects}
      220    0.000    0.000    0.001    0.000 fromnumeric.py:2589(amax)
      390    0.000    0.000    0.001    0.000 np_utils.py:160(_has_docstring)
        8    0.000    0.000    0.001    0.000 gen_math_ops.py:6143(mul)
      484    0.000    0.000    0.001    0.000 backend_pdf.py:517(write)
      508    0.000    0.000    0.001    0.000 _asarray.py:86(asanyarray)
       39    0.000    0.000    0.001    0.000 backend_pdf.py:1669(pathOperations)
       72    0.000    0.000    0.001    0.000 backend_pdf.py:2238(__init__)
       19    0.000    0.000    0.001    0.000 pathlib.py:1038(__new__)
      772    0.001    0.000    0.001    0.000 ops.py:5989(get_default_graph)
       46    0.000    0.000    0.001    0.000 re.py:203(sub)
       74    0.000    0.000    0.001    0.000 ops.py:6458(__enter__)
        8    0.000    0.000    0.001    0.000 spines.py:234(cla)
      430    0.000    0.000    0.001    0.000 layer_utils.py:37(is_layer)
      175    0.000    0.000    0.001    0.000 font_manager.py:746(__eq__)
        2    0.000    0.000    0.001    0.001 array_ops.py:3058(placeholder)
       87    0.000    0.000    0.001    0.000 axis.py:538(update_position)
       18    0.000    0.000    0.001    0.000 load.py:207(<listcomp>)
      836    0.001    0.000    0.001    0.000 object_identity.py:186(__contains__)
        2    0.000    0.000    0.001    0.001 gen_array_ops.py:6769(placeholder)
       56    0.001    0.000    0.001    0.000 ops.py:1737(_NodeDef)
  156/148    0.001    0.000    0.001    0.000 spines.py:391(get_spine_transform)
     1048    0.001    0.000    0.001    0.000 {built-in method builtins.sorted}
       89    0.000    0.000    0.001    0.000 stride_tricks.py:204(broadcast_arrays)
     3220    0.001    0.000    0.001    0.000 object_identity.py:63(__hash__)
       16    0.000    0.000    0.001    0.000 axis.py:2241(get_tick_space)
      408    0.001    0.000    0.001    0.000 ops.py:3052(_add_op)
        1    0.000    0.000    0.001    0.001 training.py:2332(summary)
       15    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1334(find_spec)
        1    0.000    0.000    0.001    0.001 layer_utils.py:112(print_summary)
       32    0.000    0.000    0.001    0.000 {method 'clip' of 'numpy.ndarray' objects}
      102    0.000    0.000    0.001    0.000 transforms.py:324(ymax)
       96    0.000    0.000    0.001    0.000 load.py:245(_get_tensor_from_node)
      104    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(round_)
       15    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1302(_get_spec)
       39    0.001    0.000    0.001    0.000 {method 'append' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
       38    0.000    0.000    0.001    0.000 __init__.py:149(get)
       55    0.000    0.000    0.001    0.000 load.py:380(<lambda>)
     2280    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOpType}
       18    0.000    0.000    0.001    0.000 base_layer.py:2907(_call_fn_args)
      405    0.001    0.000    0.001    0.000 c_api_util.py:190(tf_output)
        4    0.000    0.000    0.001    0.000 _base.py:209(__call__)
       29    0.000    0.000    0.001    0.000 c_api_util.py:45(__init__)
     1457    0.001    0.000    0.001    0.000 artist.py:332(pchanged)
      484    0.000    0.000    0.001    0.000 artist.py:165(convert_xunits)
       19    0.000    0.000    0.001    0.000 pathlib.py:677(_from_parts)
       32    0.001    0.000    0.001    0.000 ticker.py:823(_set_order_of_magnitude)
       55    0.000    0.000    0.001    0.000 load.py:395(_recreate_user_object)
       50    0.000    0.000    0.001    0.000 transforms.py:2694(get_transformed_points_and_affine)
  505/501    0.001    0.000    0.001    0.000 data_structures.py:80(wrap_or_unwrap)
      264    0.001    0.000    0.001    0.000 font_manager.py:851(set_weight)
       32    0.000    0.000    0.001    0.000 _methods.py:106(_clip)
       34    0.000    0.000    0.001    0.000 backend_pdf.py:490(_writeHeader)
      709    0.001    0.000    0.001    0.000 posixpath.py:60(isabs)
       39    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.convert_to_string}
     1134    0.001    0.000    0.001    0.000 font_manager.py:1308(<genexpr>)
      113    0.001    0.000    0.001    0.000 lines.py:1098(set_linestyle)
      556    0.000    0.000    0.001    0.000 pyplot.py:715(_auto_draw_if_interactive)
      408    0.001    0.000    0.001    0.000 ops.py:1995(_control_flow_post_processing)
       72    0.000    0.000    0.001    0.000 np_utils.py:216(<listcomp>)
      125    0.001    0.000    0.001    0.000 artist.py:1065(update_from)
        4    0.000    0.000    0.001    0.000 transforms.py:1912(clear)
       29    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewGraph}
        8    0.000    0.000    0.001    0.000 initializers_v2.py:127(__call__)
     5773    0.001    0.000    0.001    0.000 {method 'pop' of 'dict' objects}
       26    0.000    0.000    0.001    0.000 function_def_to_graph.py:71(<listcomp>)
        2    0.000    0.000    0.001    0.001 _base.py:367(_plot_args)
        2    0.000    0.000    0.001    0.001 figure.py:961(set_dpi)
       79    0.000    0.000    0.001    0.000 graph_view.py:158(list_dependencies)
      342    0.001    0.000    0.001    0.000 font_manager.py:887(set_size)
      152    0.000    0.000    0.001    0.000 {method 'min' of 'numpy.ndarray' objects}
      256    0.000    0.000    0.001    0.000 {method 'max' of 'numpy.ndarray' objects}
       18    0.000    0.000    0.001    0.000 base_layer.py:2900(_call_full_argspec)
        8    0.000    0.000    0.001    0.000 init_ops_v2.py:118(__call__)
       15    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:1431(find_spec)
      515    0.000    0.000    0.001    0.000 base_layer.py:2697(_maybe_create_attribute)
       40    0.000    0.000    0.001    0.000 data_structures.py:570(extend)
      327    0.001    0.000    0.001    0.000 ops.py:3848(_get_tensor_by_tf_output)
       76    0.000    0.000    0.001    0.000 ops.py:4368(device)
      378    0.000    0.000    0.001    0.000 c_api_util.py:206(tf_operations)
       54    0.000    0.000    0.001    0.000 transforms.py:2681(_revalidate)
      164    0.000    0.000    0.001    0.000 ops.py:4091(name_scope)
      334    0.001    0.000    0.001    0.000 backend_pdf.py:346(__init__)
        8    0.000    0.000    0.001    0.000 _base.py:1566(apply_aspect)
      408    0.001    0.000    0.001    0.000 ops.py:5059(_snapshot_colocation_stack_metadata)
       19    0.000    0.000    0.001    0.000 pathlib.py:657(_parse_args)
       48    0.001    0.000    0.001    0.000 transforms.py:2764(nonsingular)
       16    0.000    0.000    0.001    0.000 __init__.py:138(deserialize)
       40    0.000    0.000    0.001    0.000 data_structures.py:534(__setitem__)
       66    0.000    0.000    0.001    0.000 backend_bases.py:659(new_gc)
       18    0.000    0.000    0.001    0.000 backend_pdf.py:298(<listcomp>)
      104    0.000    0.000    0.001    0.000 fromnumeric.py:3628(round_)
       40    0.000    0.000    0.001    0.000 transforms.py:1041(get_points)
        8    0.000    0.000    0.001    0.000 base_layer.py:2556(_set_connectivity_metadata)
        1    0.000    0.000    0.001    0.001 backend_pdf.py:1737(RendererPdf)
      221    0.000    0.000    0.001    0.000 ops.py:3779(get_operation_by_name)
        4    0.000    0.000    0.001    0.000 axis.py:2091(_update_offset_text_position)
      335    0.001    0.000    0.001    0.000 __init__.py:1742(<dictcomp>)
        3    0.000    0.000    0.001    0.000 metrics.py:153(__init__)
       80    0.000    0.000    0.001    0.000 data_structures.py:635(_track_value)
      258    0.001    0.000    0.001    0.000 font_manager.py:832(set_style)
       98    0.000    0.000    0.001    0.000 transforms.py:314(ymin)
        2    0.000    0.000    0.001    0.001 _base.py:1982(_update_line_limits)
       82    0.000    0.000    0.001    0.000 lock_util.py:126(__exit__)
      611    0.001    0.000    0.001    0.000 compat.py:64(as_bytes)
       32    0.000    0.000    0.001    0.000 ticker.py:2161(_staircase)
       36    0.000    0.000    0.001    0.000 transforms.py:1019(__init__)
       34    0.000    0.000    0.001    0.000 backend_pdf.py:735(beginStream)
       32    0.000    0.000    0.001    0.000 ticker.py:250(<listcomp>)
      131    0.000    0.000    0.001    0.000 base.py:213(bind_object)
       55    0.000    0.000    0.001    0.000 revived_types.py:150(deserialize)
      204    0.000    0.000    0.001    0.000 _collections_abc.py:657(get)
      152    0.000    0.000    0.001    0.000 _methods.py:41(_amin)
      102    0.000    0.000    0.001    0.000 tf_decorator.py:67(make_decorator)
       32    0.000    0.000    0.001    0.000 transforms.py:796(unit)
        2    0.000    0.000    0.001    0.000 pyplot.py:3106(title)
       12    0.000    0.000    0.001    0.000 axis.py:1451(update_units)
       20    0.000    0.000    0.001    0.000 array_ops.py:244(identity)
      104    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(around)
       38    0.000    0.000    0.001    0.000 patches.py:339(_set_facecolor)
      337    0.000    0.000    0.001    0.000 _collections_abc.py:664(__contains__)
     4831    0.001    0.000    0.001    0.000 {method 'startswith' of 'str' objects}
     1264    0.000    0.000    0.001    0.000 tf_decorator.py:114(_has_tf_decorator_attr)
       16    0.000    0.000    0.001    0.000 transforms.py:666(<listcomp>)
       34    0.000    0.000    0.001    0.000 backend_pdf.py:450(__init__)
      256    0.000    0.000    0.001    0.000 _methods.py:37(_amax)
     1318    0.001    0.000    0.001    0.000 ops.py:4998(_device_function_stack)
    24/12    0.000    0.000    0.001    0.000 units.py:192(get_converter)
      129    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(concatenate)
     1799    0.000    0.000    0.001    0.000 {method 'add' of 'set' objects}
       16    0.000    0.000    0.001    0.000 axis.py:2526(get_tick_space)
       24    0.000    0.000    0.001    0.000 data_structures.py:735(__init__)
       74    0.000    0.000    0.001    0.000 transforms.py:1539(transform_path_non_affine)
      350    0.001    0.000    0.001    0.000 {built-in method matplotlib._path.affine_transform}
      198    0.000    0.000    0.001    0.000 tensor_shape.py:763(<listcomp>)
      106    0.001    0.000    0.001    0.000 __init__.py:2271(_check_shape)
      144    0.000    0.000    0.001    0.000 base.py:310(gather_ops_or_named_saveables)
      286    0.001    0.000    0.001    0.000 inspect.py:493(unwrap)
       25    0.001    0.000    0.001    0.000 {method 'draw_markers' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
      292    0.000    0.000    0.001    0.000 artist.py:935(set_visible)
       86    0.000    0.000    0.001    0.000 transforms.py:309(xmin)
        2    0.000    0.000    0.001    0.000 _axes.py:117(set_title)
       82    0.000    0.000    0.001    0.000 lock_util.py:96(release)
     1383    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationName}
   166/90    0.000    0.000    0.001    0.000 _base.py:700(get_xaxis_transform)
     1760    0.001    0.000    0.001    0.000 object_identity.py:183(_wrap_key)
       25    0.000    0.000    0.001    0.000 ops.py:2386(node_def)
      292    0.000    0.000    0.001    0.000 _internal.py:781(_ufunc_doc_signature_formatter)
      636    0.000    0.000    0.001    0.000 base.py:577(_maybe_initialize_trackable)
        2    0.000    0.000    0.001    0.000 _base.py:3144(set_xbound)
       54    0.000    0.000    0.001    0.000 lines.py:707(_get_transformed_path)
       20    0.000    0.000    0.001    0.000 resource_variable_ops.py:307(shape_safe_assign_variable_handle)
       38    0.000    0.000    0.001    0.000 ops.py:4361(_add_device_to_stack)
      246    0.000    0.000    0.001    0.000 rcsetup.py:623(validate_capstyle)
       78    0.000    0.000    0.001    0.000 contextlib.py:211(contextmanager)
      470    0.000    0.000    0.001    0.000 lines.py:1232(set_xdata)
       11    0.000    0.000    0.001    0.000 nested_structure_coder.py:245(<listcomp>)
    23/10    0.000    0.000    0.001    0.000 sre_compile.py:71(_compile)
       30    0.000    0.000    0.001    0.000 markers.py:753(_set_tickdown)
     3493    0.001    0.000    0.001    0.000 {method 'WhichOneof' of 'google.protobuf.pyext._message.CMessage' objects}
       18    0.000    0.000    0.001    0.000 axis.py:445(_get_text1_transform)
     5565    0.001    0.000    0.001    0.000 {built-in method builtins.id}
       27    0.000    0.000    0.001    0.000 re.py:198(search)
       80    0.000    0.000    0.001    0.000 data_structures.py:173(_track_value)
      113    0.000    0.000    0.001    0.000 lines.py:1346(set_dash_capstyle)
      427    0.001    0.000    0.001    0.000 dtypes.py:192(__eq__)
       52    0.000    0.000    0.001    0.000 lines.py:692(_transform_path)
        8    0.000    0.000    0.001    0.000 text.py:216(_get_xy_display)
      132    0.000    0.000    0.001    0.000 axis.py:295(set_label1)
       88    0.000    0.000    0.001    0.000 nest.py:129(_sequence_like)
      390    0.000    0.000    0.001    0.000 ops.py:2180(_set_device_from_string)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(hstack)
       64    0.000    0.000    0.001    0.000 axis.py:1607(_set_formatter)
      478    0.001    0.000    0.001    0.000 {method 'reshape' of 'numpy.ndarray' objects}
       11    0.000    0.000    0.001    0.000 function_deserialization.py:176(__init__)
     1404    0.001    0.000    0.001    0.000 compat.py:90(as_text)
      101    0.000    0.000    0.001    0.000 transforms.py:1969(translate)
      880    0.001    0.000    0.001    0.000 ops.py:5075(_control_dependencies_stack)
        5    0.000    0.000    0.001    0.000 layer_utils.py:197(print_layer_summary)
      485    0.000    0.000    0.001    0.000 artist.py:177(convert_yunits)
       18    0.000    0.000    0.001    0.000 _base.py:724(get_xaxis_text1_transform)
       84    0.000    0.000    0.001    0.000 text.py:1037(set_fontsize)
      258    0.001    0.000    0.001    0.000 font_manager.py:869(set_stretch)
       40    0.000    0.000    0.001    0.000 text.py:1089(set_position)
      132    0.000    0.000    0.001    0.000 axis.py:308(set_label2)
      737    0.000    0.000    0.001    0.000 {method 'join' of 'str' objects}
      104    0.000    0.000    0.001    0.000 fromnumeric.py:3168(around)
  228/174    0.000    0.000    0.001    0.000 transforms.py:2305(_invalidate_internal)
       11    0.000    0.000    0.001    0.000 def_function.py:451(__init__)
      256    0.000    0.000    0.001    0.000 artist.py:687(set_figure)
       19    0.000    0.000    0.001    0.000 pathlib.py:63(parse_parts)
      394    0.000    0.000    0.001    0.000 base_layer.py:2847(_flatten_layers)
     3213    0.001    0.000    0.001    0.000 deprecation.py:399(<genexpr>)
       49    0.000    0.000    0.001    0.000 revived_types.py:85(from_proto)
       40    0.000    0.000    0.001    0.000 data_structures.py:343(extend)
      704    0.000    0.000    0.001    0.000 ops.py:2052(name)
      597    0.000    0.000    0.001    0.000 ops.py:216(uid)
      408    0.000    0.000    0.001    0.000 ops.py:4637(_record_op_seen_by_control_dependencies)
      450    0.000    0.000    0.001    0.000 object_identity.py:134(__setitem__)
        1    0.000    0.000    0.001    0.001 base_layer_v1.py:16(<module>)
      560    0.000    0.000    0.001    0.000 __init__.py:1198(is_interactive)
       59    0.000    0.000    0.001    0.000 {built-in method builtins.sum}
      182    0.000    0.000    0.001    0.000 dtypes.py:172(is_compatible_with)
      286    0.000    0.000    0.001    0.000 text.py:1100(set_x)
      132    0.000    0.000    0.001    0.000 ticker.py:639(__call__)
      227    0.000    0.000    0.001    0.000 artist.py:354(set_transform)
      574    0.001    0.000    0.001    0.000 {method 'match' of 're.Pattern' objects}
      246    0.000    0.000    0.001    0.000 __init__.py:1268(is_math_text)
      478    0.001    0.000    0.001    0.000 {method 'compress' of 'zlib.Compress' objects}
       40    0.000    0.000    0.001    0.000 data_structures.py:564(append)
        1    0.000    0.000    0.001    0.001 enum.py:392(_create_)
        4    0.000    0.000    0.001    0.000 patches.py:722(__init__)
      113    0.000    0.000    0.001    0.000 lines.py:631(set_data)
      120    0.000    0.000    0.001    0.000 data_structures.py:487(_update_snapshot)
     4973    0.001    0.000    0.001    0.000 inspect.py:2531(default)
      408    0.000    0.000    0.001    0.000 ops.py:5019(_snapshot_device_function_stack_metadata)
        2    0.000    0.000    0.001    0.000 training.py:578(_configure_steps_per_execution)
     1258    0.001    0.000    0.001    0.000 object_identity.py:128(_wrap_key)
     3113    0.001    0.000    0.001    0.000 {method 'HasField' of 'google.protobuf.pyext._message.CMessage' objects}
      151    0.000    0.000    0.001    0.000 path.py:164(_fast_from_codes_and_verts)
      352    0.000    0.000    0.001    0.000 errors_impl.py:264(__init__)
      772    0.000    0.000    0.001    0.000 ops.py:5557(get_default)
      188    0.000    0.000    0.001    0.000 markers.py:252(set_fillstyle)
      104    0.000    0.000    0.001    0.000 transforms.py:1765(frozen)
       10    0.000    0.000    0.001    0.000 _base.py:2161(_process_unit_info)
      194    0.000    0.000    0.001    0.000 ops.py:6385(name_scope)
       27    0.000    0.000    0.001    0.000 backend_pdf.py:1982(_setup_textpos)
       16    0.000    0.000    0.001    0.000 transforms.py:667(<listcomp>)
     1142    0.001    0.000    0.001    0.000 {method 'format' of 'str' objects}
   175/95    0.000    0.000    0.001    0.000 _base.py:776(get_yaxis_transform)
      485    0.000    0.000    0.001    0.000 lines.py:1244(set_ydata)
      474    0.000    0.000    0.001    0.000 dtypes.py:84(base_dtype)
       91    0.000    0.000    0.001    0.000 functools.py:34(update_wrapper)
       16    0.000    0.000    0.001    0.000 transforms.py:668(<listcomp>)
      258    0.000    0.000    0.001    0.000 font_manager.py:842(set_variant)
       64    0.000    0.000    0.001    0.000 _methods.py:72(_clip_dep_is_scalar_nan)
      238    0.000    0.000    0.001    0.000 rcsetup.py:617(validate_joinstyle)
     2689    0.001    0.000    0.001    0.000 {built-in method builtins.iter}
       24    0.000    0.000    0.001    0.000 __init__.py:1652(safe_first_element)
       18    0.000    0.000    0.001    0.000 axis.py:448(_get_text2_transform)
     3177    0.001    0.000    0.001    0.000 {method 'partition' of 'str' objects}
       20    0.000    0.000    0.001    0.000 _base.py:2164(_process_single_axis)
      224    0.000    0.000    0.001    0.000 transforms.py:2183(get_affine)
     3251    0.001    0.000    0.001    0.000 {method 'endswith' of 'str' objects}
        1    0.000    0.000    0.001    0.001 saving_utils.py:313(try_build_compiled_arguments)
       52    0.000    0.000    0.001    0.000 transforms.py:2666(__init__)
      144    0.000    0.000    0.001    0.000 layer_utils.py:224(invalidate_all)
        1    0.001    0.001    0.001    0.001 {built-in method gc.collect}
       19    0.000    0.000    0.001    0.000 axis.py:518(_get_text1_transform)
       26    0.000    0.000    0.001    0.000 patches.py:346(set_facecolor)
       32    0.000    0.000    0.001    0.000 markers.py:733(_set_tickleft)
       10    0.000    0.000    0.001    0.000 sre_compile.py:536(_compile_info)
       86    0.000    0.000    0.001    0.000 transforms.py:319(xmax)
        8    0.000    0.000    0.001    0.000 _base.py:911(_set_position)
       78    0.000    0.000    0.001    0.000 transforms.py:2603(__init__)
       68    0.000    0.000    0.001    0.000 axis.py:1509(convert_units)
       82    0.000    0.000    0.001    0.000 lock_util.py:123(__enter__)
        2    0.000    0.000    0.001    0.000 _base.py:418(<listcomp>)
       11    0.000    0.000    0.001    0.000 saveable_object_util.py:336(validate_and_slice_inputs)
       45    0.000    0.000    0.001    0.000 distribution_strategy_context.py:79(_get_per_thread_mode)
     17/7    0.000    0.000    0.001    0.000 load.py:242(_add_children_recreated_from_config)
        8    0.000    0.000    0.001    0.000 json_utils.py:59(decode)
        2    0.000    0.000    0.001    0.000 _base.py:308(_makeline)
       11    0.000    0.000    0.001    0.000 functional_saver.py:137(__init__)
        4    0.000    0.000    0.001    0.000 _base.py:3488(set_ylim)
       16    0.000    0.000    0.001    0.000 transforms.py:669(<listcomp>)
     1249    0.001    0.000    0.001    0.000 {built-in method __new__ of type object at 0x7fe981577160}
     3432    0.001    0.000    0.001    0.000 artist.py:189(axes)
      113    0.000    0.000    0.001    0.000 lines.py:1302(set_dash_joinstyle)
       18    0.000    0.000    0.001    0.000 _base.py:750(get_xaxis_text2_transform)
       32    0.000    0.000    0.001    0.000 shape_base.py:286(hstack)
      172    0.000    0.000    0.001    0.000 text.py:1135(set_verticalalignment)
       19    0.000    0.000    0.001    0.000 _base.py:800(get_yaxis_text1_transform)
       74    0.000    0.000    0.001    0.000 training.py:2361(layers)
      185    0.000    0.000    0.001    0.000 axis.py:332(_set_artist_props)
      104    0.000    0.000    0.001    0.000 transforms.py:2527(get_matrix)
       16    0.000    0.000    0.001    0.000 resource_variable_ops.py:329(variable_accessed)
        6    0.000    0.000    0.001    0.000 init_ops.py:111(__call__)
        1    0.000    0.000    0.001    0.001 backend_pdf.py:2559(FigureCanvasPdf)
      142    0.000    0.000    0.001    0.000 ops.py:3886(as_default)
        8    0.000    0.000    0.001    0.000 __init__.py:299(loads)
       34    0.000    0.000    0.001    0.000 backend_pdf.py:526(_flush)
      405    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationOutputType}
       39    0.000    0.000    0.001    0.000 gen_logging_ops.py:23(_assert)
      108    0.000    0.000    0.001    0.000 text.py:229(get_rotation)
      378    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphNextOperation}
       14    0.000    0.000    0.001    0.000 array_ops.py:200(fill)
      679    0.001    0.000    0.001    0.000 ops.py:3800(_get_operation_by_name_unsafe)
        1    0.000    0.000    0.001    0.001 backend_bases.py:1580(_check_savefig_extra_args)
      577    0.000    0.000    0.001    0.000 op_def_registry.py:34(get)
      378    0.001    0.000    0.001    0.000 {method 'get' of 'google.protobuf.pyext._message.MessageMapContainer' objects}
      298    0.000    0.000    0.001    0.000 text.py:1111(set_y)
       32    0.000    0.000    0.001    0.000 <__array_function__ internals>:2(ptp)
       82    0.000    0.000    0.001    0.000 lock_util.py:86(acquire)
      833    0.001    0.000    0.001    0.000 {method 'replace' of 'str' objects}
        2    0.000    0.000    0.001    0.000 _base.py:3433(set_ybound)
        2    0.000    0.000    0.001    0.000 _subplots.py:95(update_params)
      172    0.000    0.000    0.001    0.000 transforms.py:2346(transform_non_affine)
       10    0.000    0.000    0.001    0.000 resource_variable_ops.py:280(__del__)
      540    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBuffer}
      137    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetOpDef}
      108    0.000    0.000    0.001    0.000 text.py:1167(_preprocess_math)
     1514    0.001    0.000    0.001    0.000 context.py:791(executing_eagerly)
        2    0.000    0.000    0.001    0.000 gridspec.py:751(get_position)
       26    0.000    0.000    0.001    0.000 function_deserialization.py:488(_clean_function_name)
      731    0.000    0.000    0.001    0.000 _collections_abc.py:676(items)
        4    0.000    0.000    0.001    0.000 deprecation.py:168(deprecate)
        2    0.000    0.000    0.001    0.000 _datasource.py:157(open)
      632    0.000    0.000    0.001    0.000 __init__.py:1830(_str_equal)
     5249    0.001    0.000    0.001    0.000 {built-in method posix.fspath}
      112    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetHandleShapeAndType}
      111    0.000    0.000    0.001    0.000 ops.py:421(shape)
      258    0.000    0.000    0.001    0.000 font_manager.py:819(set_family)
      352    0.000    0.000    0.001    0.000 {method 'throw' of 'generator' objects}
       68    0.000    0.000    0.001    0.000 units.py:58(_is_natively_supported)
       30    0.000    0.000    0.001    0.000 markers.py:747(_set_tickup)
    77/57    0.000    0.000    0.001    0.000 nest.py:461(_packed_nest_with_indices)
       11    0.000    0.000    0.001    0.000 function.py:2299(from_function_and_signature)
       34    0.001    0.000    0.001    0.000 {method 'flush' of 'zlib.Compress' objects}
        4    0.000    0.000    0.001    0.000 _base.py:1195(_set_title_offset_trans)
        2    0.001    0.000    0.001    0.000 py_checkpoint_reader.py:84(NewCheckpointReader)
    22/20    0.000    0.000    0.001    0.000 transforms.py:375(bounds)
      104    0.001    0.000    0.001    0.000 {method 'round' of 'numpy.ndarray' objects}
      380    0.000    0.000    0.001    0.000 __init__.py:1412(debug)
       32    0.000    0.000    0.001    0.000 axis.py:1633(set_major_locator)
      172    0.000    0.000    0.001    0.000 text.py:942(set_horizontalalignment)
        2    0.000    0.000    0.001    0.000 deprecation.py:333(_delete_parameter)
      113    0.000    0.000    0.001    0.000 lines.py:1360(set_solid_capstyle)
       23    0.000    0.000    0.001    0.000 distribution_strategy_context.py:179(get_strategy)
      113    0.000    0.000    0.001    0.000 lines.py:716(set_transform)
      408    0.000    0.000    0.001    0.000 ops.py:4603(_control_dependencies_for_inputs)
      106    0.000    0.000    0.001    0.000 path.py:193(_update_values)
  598/320    0.000    0.000    0.001    0.000 transforms.py:2334(<lambda>)
       57    0.000    0.000    0.001    0.000 tensor_shape.py:1193(as_proto)
       14    0.000    0.000    0.001    0.000 gen_array_ops.py:3357(fill)
      108    0.000    0.000    0.001    0.000 text.py:39(get_rotation)
      245    0.000    0.000    0.001    0.000 serialization.py:110(<lambda>)
       19    0.000    0.000    0.001    0.000 axis.py:521(_get_text2_transform)
       27    0.000    0.000    0.001    0.000 {method 'draw_text_image' of 'matplotlib.backends._backend_agg.RendererAgg' objects}
       36    0.000    0.000    0.001    0.000 device_spec.py:142(from_string)
       15    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap>:477(_init_module_attrs)
      113    0.000    0.000    0.001    0.000 lines.py:1316(set_solid_joinstyle)
      808    0.001    0.000    0.001    0.000 {built-in method builtins.max}
      113    0.000    0.000    0.001    0.000 lines.py:1080(set_linewidth)
       34    0.000    0.000    0.001    0.000 __init__.py:168(connect)
     3220    0.001    0.000    0.001    0.000 object_identity.py:35(__init__)
      858    0.000    0.000    0.001    0.000 ops.py:5044(_colocation_stack)
        8    0.000    0.000    0.001    0.000 decoder.py:332(decode)
      381    0.000    0.000    0.001    0.000 control_flow_util.py:266(CheckInputFromValidContext)
       25    0.000    0.000    0.001    0.000 path.py:464(cleaned)
       36    0.000    0.000    0.001    0.000 data_structures.py:793(_checkpoint_dependencies)
      204    0.000    0.000    0.001    0.000 transforms.py:2055(transform)
       33    0.000    0.000    0.001    0.000 tensor_conversion_registry.py:50(_default_conversion_function)
        1    0.000    0.000    0.001    0.001 base_layer_v1.py:77(Layer)
       56    0.001    0.000    0.001    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewOperation}
       75    0.000    0.000    0.001    0.000 ops.py:1160(shape)
      144    0.000    0.000    0.001    0.000 _weakrefset.py:58(__iter__)
       32    0.000    0.000    0.001    0.000 fromnumeric.py:2490(ptp)
      160    0.000    0.000    0.001    0.000 context.py:219(push)
       19    0.000    0.000    0.001    0.000 _base.py:826(get_yaxis_text2_transform)
     1550    0.001    0.000    0.001    0.000 ops.py:3071(_c_graph)
       54    0.000    0.000    0.001    0.000 context.py:1738(__enter__)
      260    0.000    0.000    0.001    0.000 lines.py:67(_scale_dashes)
        2    0.000    0.000    0.001    0.000 optimizers.py:835(deserialize)
       13    0.000    0.000    0.001    0.000 sre_compile.py:276(_optimize_charset)
       35    0.000    0.000    0.001    0.000 ops.py:444(_c_api_shape)
       20    0.000    0.000    0.001    0.000 saveable_object_util.py:54(set_cpu0)
        2    0.000    0.000    0.001    0.000 _datasource.py:489(open)
       48    0.000    0.000    0.001    0.000 <frozen importlib._bootstrap_external>:80(_path_stat)
      337    0.000    0.000    0.001    0.000 function_base.py:244(iterable)
        5    0.000    0.000    0.000    0.000 base_layer.py:1250(trainable)
       65    0.000    0.000    0.000    0.000 device_spec.py:111(__init__)
       42    0.000    0.000    0.000    0.000 transforms.py:2511(__init__)
      392    0.000    0.000    0.000    0.000 ops.py:2062(device)
      398    0.000    0.000    0.000    0.000 tensor_shape.py:704(as_dimension)
     1198    0.000    0.000    0.000    0.000 inspect.py:2809(<genexpr>)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(diff)
      306    0.000    0.000    0.000    0.000 layer_utils.py:43(has_weights)
       89    0.000    0.000    0.000    0.000 stride_tricks.py:183(_broadcast_shape)
       50    0.000    0.000    0.000    0.000 markers.py:324(get_transform)
        1    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:1(<module>)
      376    0.000    0.000    0.000    0.000 __init__.py:804(clean)
       38    0.000    0.000    0.000    0.000 traceable_stack.py:92(push_obj)
       24    0.000    0.000    0.000    0.000 data_structures.py:832(_update_snapshot)
       38    0.000    0.000    0.000    0.000 patches.py:783(_convert_units)
       32    0.000    0.000    0.000    0.000 axis.py:1567(set_major_formatter)
       82    0.000    0.000    0.000    0.000 threading.py:364(notify_all)
      352    0.000    0.000    0.000    0.000 ops.py:1730(_device_string)
      585    0.000    0.000    0.000    0.000 object_identity.py:54(__eq__)
       34    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(atleast_1d)
       18    0.000    0.000    0.000    0.000 axis.py:451(apply_tickdir)
       11    0.000    0.000    0.000    0.000 data_structures.py:1043(<lambda>)
       60    0.000    0.000    0.000    0.000 nest.py:635(<listcomp>)
        8    0.000    0.000    0.000    0.000 decoder.py:343(raw_decode)
       32    0.000    0.000    0.000    0.000 markers.py:739(_set_tickright)
        5    0.000    0.000    0.000    0.000 base_layer.py:2141(count_params)
     1134    0.000    0.000    0.000    0.000 {method 'values' of 'mappingproxy' objects}
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:147(__enter__)
        8    0.000    0.000    0.000    0.000 tf_utils.py:445(maybe_init_scope)
      494    0.000    0.000    0.000    0.000 backend_mixed.py:67(__getattr__)
      468    0.000    0.000    0.000    0.000 tape.py:150(stop_recording)
      597    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_UID}
       98    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_SetAttrValueProto}
      132    0.000    0.000    0.000    0.000 transforms.py:2844(_interval_contains_close)
      182    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetTensorShape_wrapper}
      113    0.000    0.000    0.000    0.000 lines.py:1045(set_drawstyle)
      378    0.000    0.000    0.000    0.000 function_deserialization.py:339(<genexpr>)
       33    0.000    0.000    0.000    0.000 nested_structure_coder.py:212(do_decode)
      128    0.000    0.000    0.000    0.000 transforms.py:1706(__array__)
      150    0.000    0.000    0.000    0.000 transforms.py:2143(<lambda>)
       32    0.000    0.000    0.000    0.000 ticker.py:2030(scale_range)
       62    0.000    0.000    0.000    0.000 op_def_library.py:53(_SatisfiesTypeConstraint)
       12    0.000    0.000    0.000    0.000 patches.py:434(set_fill)
     1071    0.000    0.000    0.000    0.000 inspect.py:2619(__init__)
      471    0.000    0.000    0.000    0.000 {method 'update' of 'dict' objects}
       24    0.000    0.000    0.000    0.000 policy.py:296(__init__)
       20    0.000    0.000    0.000    0.000 gen_array_ops.py:3973(identity)
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_FunctionToFunctionDef}
      476    0.000    0.000    0.000    0.000 traceable_stack.py:119(peek_objs)
      390    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequestedDevice}
        1    0.000    0.000    0.000    0.000 enum.py:136(__new__)
       37    0.000    0.000    0.000    0.000 nested_structure_coder.py:389(do_decode)
      689    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
       14    0.000    0.000    0.000    0.000 constant_op.py:347(_tensor_shape_tensor_conversion_function)
        1    0.000    0.000    0.000    0.000 load.py:1015(_set_network_attributes_from_metadata)
       40    0.000    0.000    0.000    0.000 data_structures.py:338(append)
       32    0.000    0.000    0.000    0.000 _methods.py:245(_ptp)
      474    0.000    0.000    0.000    0.000 dtypes.py:71(_is_ref_dtype)
       51    0.000    0.000    0.000    0.000 ops.py:6601(__enter__)
      347    0.000    0.000    0.000    0.000 ops.py:1033(dtype)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:340(Name)
       32    0.000    0.000    0.000    0.000 axis.py:1593(set_minor_formatter)
       32    0.000    0.000    0.000    0.000 function_base.py:1152(diff)
      484    0.000    0.000    0.000    0.000 rcsetup.py:600(_deprecate_case_insensitive_join_cap)
        1    0.000    0.000    0.000    0.000 compile_utils.py:298(build)
     10/8    0.000    0.000    0.000    0.000 transforms.py:1710(__eq__)
       52    0.000    0.000    0.000    0.000 function.py:1528(<genexpr>)
       78    0.000    0.000    0.000    0.000 variables.py:151(validate_synchronization_aggregation_trainable)
     3177    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISLNK}
       78    0.000    0.000    0.000    0.000 ops.py:4760(_attr_scope)
      728    0.000    0.000    0.000    0.000 fromnumeric.py:71(<dictcomp>)
        1    0.000    0.000    0.000    0.000 functional.py:332(_checkpoint_dependencies)
       10    0.000    0.000    0.000    0.000 base_layer.py:1228(supports_masking)
      352    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.GetOperationInputs}
       32    0.000    0.000    0.000    0.000 axis.py:1649(set_minor_locator)
        2    0.000    0.000    0.000    0.000 _base.py:621(set_figure)
      112    0.000    0.000    0.000    0.000 {method 'ByteSize' of 'google.protobuf.pyext._message.CMessage' objects}
        7    0.000    0.000    0.000    0.000 layer_utils.py:95(count_params)
        1    0.000    0.000    0.000    0.000 np_arrays.py:15(<module>)
      160    0.000    0.000    0.000    0.000 axis.py:747(get_transform)
      566    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteBuffer}
      362    0.000    0.000    0.000    0.000 __init__.py:2236(type_name)
     1649    0.000    0.000    0.000    0.000 enum.py:586(__new__)
     1160    0.000    0.000    0.000    0.000 inspect.py:72(isclass)
      113    0.000    0.000    0.000    0.000 lines.py:486(set_pickradius)
       34    0.000    0.000    0.000    0.000 shape_base.py:24(atleast_1d)
        2    0.000    0.000    0.000    0.000 gridspec.py:140(get_grid_positions)
        4    0.000    0.000    0.000    0.000 figure.py:847(set_size_inches)
        8    0.000    0.000    0.000    0.000 transforms.py:989(set)
       38    0.000    0.000    0.000    0.000 traceable_stack.py:35(set_filename_and_line_from_caller)
       16    0.000    0.000    0.000    0.000 __init__.py:38(populate_deserializable_objects)
     2274    0.000    0.000    0.000    0.000 context.py:1826(context_safe)
        2    0.000    0.000    0.000    0.000 file_io.py:104(read)
       12    0.000    0.000    0.000    0.000 ticker.py:1754(nonsingular)
        8    0.000    0.000    0.000    0.000 math_ops.py:523(subtract)
      133    0.000    0.000    0.000    0.000 ops.py:3297(_is_function)
       32    0.000    0.000    0.000    0.000 {method 'sum' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 _base.py:965(_gen_axes_patch)
       40    0.000    0.000    0.000    0.000 saveable_object_util.py:134(saveable_objects_for_op)
      284    0.000    0.000    0.000    0.000 ops.py:5387(get_controller)
       42    0.000    0.000    0.000    0.000 tensor_shape.py:1074(is_compatible_with)
        4    0.000    0.000    0.000    0.000 functional.py:825(_map_graph_network)
       32    0.000    0.000    0.000    0.000 nested_structure_coder.py:146(do_decode)
      202    0.000    0.000    0.000    0.000 object_identity.py:220(_wrap_key)
      320    0.000    0.000    0.000    0.000 context.py:773(_mode)
      176    0.000    0.000    0.000    0.000 scale.py:118(get_transform)
     1974    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
       64    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(ndim)
       58    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:157(_get_module_lock)
       68    0.000    0.000    0.000    0.000 func_graph.py:1055(device_stack_has_callable)
       24    0.000    0.000    0.000    0.000 backend_bases.py:2278(mpl_connect)
        2    0.000    0.000    0.000    0.000 training.py:557(_get_optimizer)
        8    0.000    0.000    0.000    0.000 gen_math_ops.py:10433(sub)
        2    0.000    0.000    0.000    0.000 transforms.py:1327(contains_branch_seperately)
       34    0.000    0.000    0.000    0.000 {built-in method zlib.compressobj}
        1    0.000    0.000    0.000    0.000 util.py:171(__init__)
      516    0.000    0.000    0.000    0.000 font_manager.py:1016(_normalize_font_family)
       38    0.000    0.000    0.000    0.000 patches.py:313(_set_edgecolor)
        8    0.000    0.000    0.000    0.000 _base.py:862(get_position)
      100    0.000    0.000    0.000    0.000 lines.py:938(_get_markerfacecolor)
       20    0.000    0.000    0.000    0.000 cycler.py:349(by_key)
       25    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.cleanup_path}
        6    0.000    0.000    0.000    0.000 backend_bases.py:1685(__init__)
       16    0.000    0.000    0.000    0.000 spines.py:240(_adjust_location)
      568    0.000    0.000    0.000    0.000 {built-in method builtins.round}
      112    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphSetOutputHandleShapesAndTypes_wrapper}
      142    0.000    0.000    0.000    0.000 context.py:2001(graph_mode)
       18    0.000    0.000    0.000    0.000 function.py:1562(_initialize_function_spec)
      784    0.000    0.000    0.000    0.000 {method 'write' of '_io.BufferedWriter' objects}
       82    0.000    0.000    0.000    0.000 ops.py:5153(_mutation_lock)
       27    0.000    0.000    0.000    0.000 {method 'draw_glyphs_to_bitmap' of 'matplotlib.ft2font.FT2Font' objects}
      124    0.000    0.000    0.000    0.000 transforms.py:2151(transform_non_affine)
        2    0.000    0.000    0.000    0.000 transforms.py:1308(contains_branch)
      353    0.000    0.000    0.000    0.000 errors_impl.py:64(__init__)
       40    0.000    0.000    0.000    0.000 op_def_library.py:173(_MakeType)
      110    0.000    0.000    0.000    0.000 ops.py:1924(<genexpr>)
       82    0.000    0.000    0.000    0.000 threading.py:341(notify)
        7    0.000    0.000    0.000    0.000 base_layer.py:1242(stateful)
      195    0.000    0.000    0.000    0.000 np_utils.py:236(_prepare_np_fun_name_and_fun)
       10    0.000    0.000    0.000    0.000 transforms.py:237(frozen)
      536    0.000    0.000    0.000    0.000 backend_pdf.py:988(cvt)
       46    0.000    0.000    0.000    0.000 ops.py:5601(_get_outer_context_and_inner_device_stack)
       12    0.000    0.000    0.000    0.000 input_spec.py:132(assert_input_compatibility)
       86    0.000    0.000    0.000    0.000 artist.py:1028(set_zorder)
      181    0.000    0.000    0.000    0.000 training.py:327(<genexpr>)
        8    0.000    0.000    0.000    0.000 path.py:572(get_extents)
       72    0.000    0.000    0.000    0.000 np_utils.py:200(<listcomp>)
        1    0.000    0.000    0.000    0.000 saving_utils.py:204(compile_args_from_training_config)
      516    0.000    0.000    0.000    0.000 tensor_shape.py:185(__init__)
       16    0.000    0.000    0.000    0.000 tape.py:104(variable_accessed)
       33    0.000    0.000    0.000    0.000 nested_structure_coder.py:213(<dictcomp>)
       25    0.000    0.000    0.000    0.000 transforms.py:2422(get_matrix)
       11    0.000    0.000    0.000    0.000 policy.py:488(global_policy)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2843(__init__)
      282    0.000    0.000    0.000    0.000 artist.py:367(get_transform)
      816    0.000    0.000    0.000    0.000 traceable_stack.py:123(peek_traceable_objs)
      112    0.000    0.000    0.000    0.000 custom_gradient.py:75(<listcomp>)
       74    0.000    0.000    0.000    0.000 ops.py:6498(__exit__)
       29    0.000    0.000    0.000    0.000 lock_util.py:54(__init__)
      166    0.000    0.000    0.000    0.000 transforms.py:2613(get_matrix)
        8    0.000    0.000    0.000    0.000 transforms.py:1520(transform_path)
       39    0.000    0.000    0.000    0.000 tensor_spec.py:39(__init__)
      102    0.000    0.000    0.000    0.000 tf_decorator.py:236(__init__)
       32    0.000    0.000    0.000    0.000 nested_structure_coder.py:147(<listcomp>)
       32    0.000    0.000    0.000    0.000 _ufunc_config.py:32(seterr)
      500    0.000    0.000    0.000    0.000 traceable_stack.py:127(__len__)
       60    0.000    0.000    0.000    0.000 nest.py:631(<listcomp>)
      140    0.000    0.000    0.000    0.000 ticker.py:279(fix_minus)
       38    0.000    0.000    0.000    0.000 ops.py:121(__init__)
      210    0.000    0.000    0.000    0.000 backend_bases.py:937(set_foreground)
        2    0.000    0.000    0.000    0.000 figure.py:1406(_add_axes_internal)
       32    0.000    0.000    0.000    0.000 _methods.py:45(_sum)
        2    0.000    0.000    0.000    0.000 training.py:560(_get_single_optimizer)
     1525    0.000    0.000    0.000    0.000 object_identity.py:175(<genexpr>)
      392    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationDevice}
       32    0.000    0.000    0.000    0.000 ticker.py:518(__init__)
      185    0.000    0.000    0.000    0.000 function_deserialization.py:424(<genexpr>)
       54    0.000    0.000    0.000    0.000 context.py:2016(device)
      156    0.000    0.000    0.000    0.000 fractions.py:84(__new__)
      408    0.000    0.000    0.000    0.000 device.py:45(is_device_spec)
       26    0.000    0.000    0.000    0.000 function_def_to_graph.py:83(<listcomp>)
      707    0.000    0.000    0.000    0.000 inspect.py:158(isfunction)
       90    0.000    0.000    0.000    0.000 text.py:233(set_rotation_mode)
     1138    0.000    0.000    0.000    0.000 inspect.py:2845(parameters)
      115    0.000    0.000    0.000    0.000 lines.py:618(axes)
      494    0.000    0.000    0.000    0.000 {method 'count' of 'str' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1742(__init__)
        2    0.000    0.000    0.000    0.000 optimizers.py:872(get)
       26    0.000    0.000    0.000    0.000 patches.py:328(set_edgecolor)
       79    0.000    0.000    0.000    0.000 graph_view.py:61(_object_prefix_from_path)
     1067    0.000    0.000    0.000    0.000 font_manager.py:786(get_stretch)
       26    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:294(cache_from_source)
        1    0.000    0.000    0.000    0.000 compile_utils.py:134(build)
     1156    0.000    0.000    0.000    0.000 {built-in method builtins.abs}
      187    0.000    0.000    0.000    0.000 deprecation.py:456(_deprecate_method_override)
       18    0.000    0.000    0.000    0.000 {method 'all' of 'numpy.ndarray' objects}
       28    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:376(cached)
        4    0.000    0.000    0.000    0.000 _base.py:852(_update_transScale)
      156    0.000    0.000    0.000    0.000 tensor_shape.py:756(<listcomp>)
       52    0.000    0.000    0.000    0.000 fractions.py:394(reverse)
      200    0.000    0.000    0.000    0.000 nest.py:198(_yield_value)
        7    0.000    0.000    0.000    0.000 training.py:569(_reset_compile_cache)
       27    0.000    0.000    0.000    0.000 ops.py:4037(get_all_collection_keys)
       56    0.000    0.000    0.000    0.000 ops.py:4206(unique_name)
       30    0.000    0.000    0.000    0.000 array_ops.py:1489(_autopacking_conversion_function)
       18    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:99(_path_isfile)
       82    0.000    0.000    0.000    0.000 lock_util.py:106(_another_group_active)
       32    0.000    0.000    0.000    0.000 ops.py:4275(_colocate_with_for_gradient)
        2    0.000    0.000    0.000    0.000 _collections_abc.py:701(__len__)
       81    0.000    0.000    0.000    0.000 backend_agg.py:55(get_hinting_flag)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:535(PdfFile)
       64    0.000    0.000    0.000    0.000 backend_pdf.py:1688(reserveObject)
        2    0.000    0.000    0.000    0.000 _datasource.py:346(_findfile)
      384    0.000    0.000    0.000    0.000 inspect.py:513(_is_wrapper)
       56    0.000    0.000    0.000    0.000 ops.py:6880(_reconstruct_sequence_inputs)
        4    0.000    0.000    0.000    0.000 backend_qt5.py:274(get_width_height)
      113    0.000    0.000    0.000    0.000 lines.py:1175(set_markeredgewidth)
       54    0.000    0.000    0.000    0.000 __init__.py:536(__setitem__)
        3    0.000    0.000    0.000    0.000 version_utils.py:54(__new__)
  156/148    0.000    0.000    0.000    0.000 spines.py:215(_ensure_position_is_set)
       64    0.000    0.000    0.000    0.000 backend_pdf.py:1699(recordXref)
        2    0.000    0.000    0.000    0.000 nest.py:1061(map_structure_up_to)
       19    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:90(_path_is_mode_type)
      269    0.000    0.000    0.000    0.000 ops.py:5094(_distribution_strategy_stack)
       13    0.000    0.000    0.000    0.000 {built-in method _imp.source_hash}
       19    0.000    0.000    0.000    0.000 axis.py:524(apply_tickdir)
       82    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:62(_path_join)
      162    0.000    0.000    0.000    0.000 {method 'clear' of 'matplotlib.ft2font.FT2Font' objects}
       51    0.000    0.000    0.000    0.000 ops.py:6635(__exit__)
        2    0.000    0.000    0.000    0.000 training.py:2472(_validate_compile)
        2    0.000    0.000    0.000    0.000 nest.py:1142(map_structure_with_tuple_paths_up_to)
      128    0.000    0.000    0.000    0.000 sre_parse.py:254(get)
      771    0.000    0.000    0.000    0.000 transforms.py:1865(get_matrix)
       60    0.000    0.000    0.000    0.000 data_structures.py:152(__init__)
       30    0.000    0.000    0.000    0.000 array_ops.py:1479(_should_not_autopack)
       20    0.000    0.000    0.000    0.000 saveable_object_util.py:91(__init__)
        5    0.000    0.000    0.000    0.000 base_layer.py:2162(output_shape)
        8    0.000    0.000    0.000    0.000 patches.py:757(get_path)
      396    0.000    0.000    0.000    0.000 base.py:677(_lookup_dependency)
       12    0.000    0.000    0.000    0.000 axis.py:2201(get_ticks_position)
       92    0.000    0.000    0.000    0.000 text.py:926(set_color)
        2    0.000    0.000    0.000    0.000 optimizer_v2.py:879(from_config)
      202    0.000    0.000    0.000    0.000 object_identity.py:75(__init__)
       79    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:114(get)
        4    0.000    0.000    0.000    0.000 {method 'close' of '_io.TextIOWrapper' objects}
       32    0.000    0.000    0.000    0.000 _methods.py:87(_clip_dep_invoke_with_casting)
      352    0.000    0.000    0.000    0.000 errors_impl.py:117(__str__)
      277    0.000    0.000    0.000    0.000 transforms.py:200(<lambda>)
       36    0.000    0.000    0.000    0.000 data_structures.py:1061(<lambda>)
      900    0.000    0.000    0.000    0.000 {method 'extend' of 'list' objects}
       11    0.000    0.000    0.000    0.000 tf_utils.py:261(convert_inner_node_data)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:424(_get_cached)
      162    0.000    0.000    0.000    0.000 {method 'set_size' of 'matplotlib.ft2font.FT2Font' objects}
       78    0.000    0.000    0.000    0.000 ops.py:3761(get_operations)
       23    0.000    0.000    0.000    0.000 layer_utils.py:109(<genexpr>)
       16    0.000    0.000    0.000    0.000 _ufunc_config.py:433(__enter__)
     1067    0.000    0.000    0.000    0.000 font_manager.py:764(get_style)
        2    0.000    0.000    0.000    0.000 rmsprop.py:98(__init__)
       88    0.000    0.000    0.000    0.000 text.py:1202(set_usetex)
      125    0.000    0.000    0.000    0.000 lines.py:33(_get_dash_pattern)
     10/8    0.000    0.000    0.000    0.000 transforms.py:2320(__eq__)
     1630    0.000    0.000    0.000    0.000 {method 'isidentifier' of 'str' objects}
       82    0.000    0.000    0.000    0.000 lock_util.py:74(group)
     1067    0.000    0.000    0.000    0.000 font_manager.py:752(get_family)
        1    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:19(CharacterTracker)
       98    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsCompositeTensor}
      585    0.000    0.000    0.000    0.000 object_identity.py:42(_assert_type)
       38    0.000    0.000    0.000    0.000 ops.py:158(string_merge)
      408    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationNumOutputs}
       16    0.000    0.000    0.000    0.000 transforms.py:2252(blended_transform_factory)
       96    0.000    0.000    0.000    0.000 data_structures.py:818(_dirty)
       54    0.000    0.000    0.000    0.000 op_def_library.py:510(<listcomp>)
    21/11    0.000    0.000    0.000    0.000 tf_utils.py:157(map_structure_with_atomic)
       18    0.000    0.000    0.000    0.000 _methods.py:56(_all)
       32    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(nonzero)
       22    0.000    0.000    0.000    0.000 device_spec.py:236(replace)
        4    0.000    0.000    0.000    0.000 backend_bases.py:2021(get_width_height)
        4    0.000    0.000    0.000    0.000 figure.py:951(set_facecolor)
       64    0.000    0.000    0.000    0.000 fromnumeric.py:3075(ndim)
       10    0.000    0.000    0.000    0.000 node.py:234(output_shapes)
       16    0.000    0.000    0.000    0.000 func_graph.py:265(watch_variable)
       16    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(prod)
        5    0.000    0.000    0.000    0.000 {method 'connect' of 'PyQt5.QtCore.pyqtBoundSignal' objects}
        8    0.000    0.000    0.000    0.000 path.py:694(unit_rectangle)
       36    0.000    0.000    0.000    0.000 data_structures.py:414(__init__)
       26    0.000    0.000    0.000    0.000 function_def_to_graph.py:76(<listcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:138(_create_pdf_info_dict)
       68    0.000    0.000    0.000    0.000 optimizer_v2.py:721(__setattr__)
       39    0.000    0.000    0.000    0.000 function.py:2388(__init__)
       93    0.000    0.000    0.000    0.000 shape_base.py:608(_column_stack_dispatcher)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:276(__init__)
      113    0.000    0.000    0.000    0.000 lines.py:1218(set_markersize)
       12    0.000    0.000    0.000    0.000 axis.py:1878(_get_ticks_position)
      380    0.000    0.000    0.000    0.000 __init__.py:1677(isEnabledFor)
       37    0.000    0.000    0.000    0.000 artist.py:921(set_alpha)
       39    0.000    0.000    0.000    0.000 backend_pdf.py:2277(paint)
       16    0.000    0.000    0.000    0.000 _base.py:62(wrapper)
       16    0.000    0.000    0.000    0.000 generic_utils.py:283(class_and_config_for_serialized_keras_object)
       40    0.000    0.000    0.000    0.000 op_def_library.py:84(_Flatten)
        2    0.000    0.000    0.000    0.000 transforms.py:1645(__eq__)
       34    0.000    0.000    0.000    0.000 weakref.py:44(__new__)
       89    0.000    0.000    0.000    0.000 stride_tricks.py:256(<listcomp>)
       37    0.000    0.000    0.000    0.000 axis.py:196(_set_labelrotation)
       38    0.000    0.000    0.000    0.000 execute.py:191(make_type)
    26/13    0.000    0.000    0.000    0.000 sre_parse.py:174(getwidth)
       52    0.000    0.000    0.000    0.000 fractions.py:382(forward)
       18    0.000    0.000    0.000    0.000 pathlib.py:717(__str__)
       78    0.000    0.000    0.000    0.000 backend_bases.py:957(set_joinstyle)
      440    0.000    0.000    0.000    0.000 ops.py:193(_as_graph_element)
        2    0.000    0.000    0.000    0.000 {built-in method addWidget}
      386    0.000    0.000    0.000    0.000 text.py:1149(set_text)
      153    0.000    0.000    0.000    0.000 sre_parse.py:233(__next)
        2    0.000    0.000    0.000    0.000 transforms.py:2091(__eq__)
       82    0.000    0.000    0.000    0.000 transforms.py:339(intervalx)
        7    0.000    0.000    0.000    0.000 base_layer.py:2673(_get_trainable_state)
       26    0.000    0.000    0.000    0.000 function_def_to_graph.py:68(<listcomp>)
     1067    0.000    0.000    0.000    0.000 font_manager.py:771(get_variant)
       10    0.000    0.000    0.000    0.000 gen_resource_variable_ops.py:226(destroy_resource_op)
       25    0.000    0.000    0.000    0.000 transforms.py:2387(__init__)
      113    0.000    0.000    0.000    0.000 lines.py:531(set_markevery)
      724    0.000    0.000    0.000    0.000 __init__.py:2234(<genexpr>)
        8    0.000    0.000    0.000    0.000 spines.py:355(set_position)
       48    0.000    0.000    0.000    0.000 dtypes.py:205(__ne__)
      128    0.000    0.000    0.000    0.000 tape.py:177(record_operation)
      590    0.000    0.000    0.000    0.000 transforms.py:971(get_points)
        6    0.000    0.000    0.000    0.000 transforms.py:357(width)
      242    0.000    0.000    0.000    0.000 nest.py:203(_yield_sorted_items)
        1    0.000    0.000    0.000    0.000 context.py:487(_initialize_logical_devices)
        4    0.000    0.000    0.000    0.000 _base.py:2521(<listcomp>)
       32    0.000    0.000    0.000    0.000 scale.py:639(scale_factory)
      113    0.000    0.000    0.000    0.000 lines.py:1022(set_antialiased)
      869    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
       38    0.000    0.000    0.000    0.000 device.py:133(shortcut_string_merge)
      113    0.000    0.000    0.000    0.000 lines.py:1160(set_markeredgecolor)
      172    0.000    0.000    0.000    0.000 function_def_to_graph.py:258(_get_num_args)
        8    0.000    0.000    0.000    0.000 transforms.py:1529(transform_path_affine)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1719(writeInfoDict)
      261    0.000    0.000    0.000    0.000 graph_view.py:63(<genexpr>)
      216    0.000    0.000    0.000    0.000 base.py:402(trackable)
      692    0.000    0.000    0.000    0.000 {method 'join' of 'bytes' objects}
       16    0.000    0.000    0.000    0.000 fromnumeric.py:2881(prod)
       36    0.000    0.000    0.000    0.000 data_structures.py:824(_check_self_external_modification)
       21    0.000    0.000    0.000    0.000 backend.py:639(get_graph)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1351(writeExtGSTates)
  239/231    0.000    0.000    0.000    0.000 optimizer_v2.py:706(__getattribute__)
       10    0.000    0.000    0.000    0.000 enum.py:858(__and__)
       28    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:194(_lock_unlock_module)
      163    0.000    0.000    0.000    0.000 sre_parse.py:164(__getitem__)
      260    0.000    0.000    0.000    0.000 ops.py:4079(_name_stack)
     1067    0.000    0.000    0.000    0.000 font_manager.py:777(get_weight)
      381    0.000    0.000    0.000    0.000 control_flow_util.py:180(GetOutputContext)
       18    0.000    0.000    0.000    0.000 monitoring.py:335(get_cell)
      326    0.000    0.000    0.000    0.000 nested_structure_coder.py:143(can_decode)
       20    0.000    0.000    0.000    0.000 ops.py:5325(control_dependencies)
      734    0.000    0.000    0.000    0.000 _collections_abc.py:698(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:664(_set_lim_and_transforms)
        4    0.000    0.000    0.000    0.000 functional.py:760(_compute_tensor_usage_count)
      118    0.000    0.000    0.000    0.000 font_manager.py:1116(get_default_size)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:151(__exit__)
       25    0.000    0.000    0.000    0.000 function_def_to_graph.py:107(is_function)
      370    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsSequence}
       60    0.000    0.000    0.000    0.000 layer_utils.py:179(__init__)
      909    0.000    0.000    0.000    0.000 ops.py:3043(_check_not_finalized)
      216    0.000    0.000    0.000    0.000 base.py:406(object_proto)
        8    0.000    0.000    0.000    0.000 transforms.py:1732(transform_path_affine)
      146    0.000    0.000    0.000    0.000 _weakrefset.py:26(__exit__)
      104    0.000    0.000    0.000    0.000 statistics.py:177(<genexpr>)
       26    0.000    0.000    0.000    0.000 function_def_to_graph.py:80(<listcomp>)
       29    0.000    0.000    0.000    0.000 threading.py:222(__init__)
       36    0.000    0.000    0.000    0.000 data_structures.py:309(__init__)
      688    0.000    0.000    0.000    0.000 ops.py:796(_as_tf_output)
       56    0.000    0.000    0.000    0.000 op_callbacks.py:118(should_invoke_op_callbacks)
       32    0.000    0.000    0.000    0.000 ops.py:4288(colocate_with)
       72    0.000    0.000    0.000    0.000 data_structures.py:497(_checkpoint_dependencies)
       26    0.000    0.000    0.000    0.000 importer.py:204(_PopulateTFImportGraphDefOptions)
       54    0.000    0.000    0.000    0.000 context.py:827(device)
       12    0.000    0.000    0.000    0.000 transforms.py:2210(__init__)
       52    0.000    0.000    0.000    0.000 fractions.py:409(_add)
       10    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(all)
       78    0.000    0.000    0.000    0.000 backend_bases.py:889(set_capstyle)
        1    0.000    0.000    0.000    0.000 deprecation.py:426(deprecated_wrapper)
       58    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:103(release)
      372    0.000    0.000    0.000    0.000 __init__.py:857(<listcomp>)
       17    0.000    0.000    0.000    0.000 distribution_strategy_context.py:199(has_strategy)
        6    0.000    0.000    0.000    0.000 load.py:402(_recreate_base_user_object)
      112    0.000    0.000    0.000    0.000 custom_gradient.py:77(<listcomp>)
      114    0.000    0.000    0.000    0.000 {built-in method builtins.min}
      869    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
       54    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_AddInput}
      370    0.000    0.000    0.000    0.000 font_manager.py:1164(score_style)
       54    0.000    0.000    0.000    0.000 transforms.py:2721(get_affine)
      197    0.000    0.000    0.000    0.000 ops.py:3015(_variable_creator_stack)
      934    0.000    0.000    0.000    0.000 ops.py:2381(graph)
        1    0.000    0.000    0.000    0.000 context.py:902(config)
       34    0.000    0.000    0.000    0.000 {built-in method numpy.arange}
       20    0.000    0.000    0.000    0.000 tensor_shape.py:1121(assert_is_compatible_with)
      776    0.000    0.000    0.000    0.000 artist.py:880(get_agg_filter)
      192    0.000    0.000    0.000    0.000 data_structures.py:479(_check_external_modification)
      315    0.000    0.000    0.000    0.000 artist.py:194(axes)
      234    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsStopped}
       16    0.000    0.000    0.000    0.000 input_spec.py:57(__init__)
      113    0.000    0.000    0.000    0.000 lines.py:1034(set_color)
       70    0.000    0.000    0.000    0.000 {method 'tell' of '_io.BufferedWriter' objects}
      784    0.000    0.000    0.000    0.000 artist.py:792(get_visible)
       16    0.000    0.000    0.000    0.000 ops.py:4567(__exit__)
        5    0.000    0.000    0.000    0.000 functional.py:1169(process_layer)
        1    0.000    0.000    0.000    0.000 load.py:423(_recreate_bare_concrete_function)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1426(_get_spec)
       12    0.000    0.000    0.000    0.000 _base.py:4038(get_children)
        4    0.000    0.000    0.000    0.000 training.py:2401(_set_save_spec)
       52    0.000    0.000    0.000    0.000 fractions.py:431(_div)
        5    0.000    0.000    0.000    0.000 base_layer.py:2182(<listcomp>)
       16    0.000    0.000    0.000    0.000 base_layer.py:1300(input_spec)
        1    0.000    0.000    0.000    0.000 function_deserialization.py:153(setup_bare_concrete_function)
      384    0.000    0.000    0.000    0.000 _internal.py:792(<genexpr>)
      112    0.000    0.000    0.000    0.000 custom_gradient.py:78(<listcomp>)
       58    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:78(acquire)
       18    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._op_def_registry.get}
        7    0.000    0.000    0.000    0.000 load.py:1026(_maybe_add_serialized_attributes)
       72    0.000    0.000    0.000    0.000 weakref.py:159(__setitem__)
      244    0.000    0.000    0.000    0.000 {built-in method sys.intern}
      776    0.000    0.000    0.000    0.000 artist.py:860(get_rasterized)
       16    0.000    0.000    0.000    0.000 _ufunc_config.py:438(__exit__)
       12    0.000    0.000    0.000    0.000 text.py:529(set_clip_box)
       20    0.000    0.000    0.000    0.000 saveable_object_util.py:317(_add_saveable)
      174    0.000    0.000    0.000    0.000 ops.py:402(graph)
       82    0.000    0.000    0.000    0.000 transforms.py:348(intervaly)
       48    0.000    0.000    0.000    0.000 getlimits.py:366(__new__)
      318    0.000    0.000    0.000    0.000 __init__.py:2291(<genexpr>)
      585    0.000    0.000    0.000    0.000 {built-in method _thread.get_ident}
      212    0.000    0.000    0.000    0.000 resource_variable_ops.py:2127(is_resource_variable)
        2    0.000    0.000    0.000    0.000 np_math_ops.py:809(_make_nan_reduction)
    28/14    0.000    0.000    0.000    0.000 nest.py:750(assert_shallow_structure)
       85    0.000    0.000    0.000    0.000 tensor_shape.py:1180(as_list)
       54    0.000    0.000    0.000    0.000 context.py:1772(__exit__)
        4    0.000    0.000    0.000    0.000 transforms.py:1671(set)
      969    0.000    0.000    0.000    0.000 ops.py:2307(outputs)
       24    0.000    0.000    0.000    0.000 policy.py:342(_parse_name)
       58    0.000    0.000    0.000    0.000 nested_structure_coder.py:74(_get_decoders)
        2    0.000    0.000    0.000    0.000 figure.py:2067(sca)
        8    0.000    0.000    0.000    0.000 nest.py:873(flatten_up_to)
       16    0.000    0.000    0.000    0.000 ops.py:5314(colocate_with)
      918    0.000    0.000    0.000    0.000 font_manager.py:800(get_size_in_points)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2303(alpha_cmd)
        4    0.000    0.000    0.000    0.000 transforms.py:2705(get_transformed_path_and_affine)
        8    0.000    0.000    0.000    0.000 _base.py:955(_set_artist_props)
        3    0.000    0.000    0.000    0.000 np_array_ops.py:990(_split_on_axis)
      160    0.000    0.000    0.000    0.000 context.py:239(pop)
        8    0.000    0.000    0.000    0.000 base_layer.py:3208(_in_functional_construction_mode)
        4    0.000    0.000    0.000    0.000 axis.py:942(get_inverted)
       24    0.000    0.000    0.000    0.000 loss_scale.py:46(get)
      125    0.000    0.000    0.000    0.000 shape_base.py:208(_arrays_for_stack_dispatcher)
      998    0.000    0.000    0.000    0.000 _collections_abc.py:392(__subclasshook__)
      246    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.lock' objects}
        1    0.000    0.000    0.000    0.000 context.py:1097(add_function_def)
       32    0.000    0.000    0.000    0.000 ticker.py:2069(le)
       54    0.000    0.000    0.000    0.000 markers.py:243(__bool__)
        4    0.000    0.000    0.000    0.000 functional.py:1036(_deserialize_keras_tensors)
       19    0.000    0.000    0.000    0.000 __init__.py:213(process)
      352    0.000    0.000    0.000    0.000 {built-in method sys.exc_info}
      188    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GetBuffer}
       20    0.000    0.000    0.000    0.000 patches.py:456(set_capstyle)
       11    0.000    0.000    0.000    0.000 gen_io_ops.py:1543(<listcomp>)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2688(__init__)
       90    0.000    0.000    0.000    0.000 functools.py:64(wraps)
        4    0.000    0.000    0.000    0.000 backend_bases.py:2962(_wait_cursor_for_draw_cm)
       27    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:39(track)
        6    0.000    0.000    0.000    0.000 _datasource.py:302(_isurl)
       54    0.000    0.000    0.000    0.000 pathlib.py:292(splitroot)
      404    0.000    0.000    0.000    0.000 object_identity.py:125(__init__)
       32    0.000    0.000    0.000    0.000 axis.py:795(reset_ticks)
        6    0.000    0.000    0.000    0.000 transforms.py:241(__array__)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2265(switch_backends)
       16    0.000    0.000    0.000    0.000 ops.py:5291(_colocate_with_for_gradient)
      288    0.000    0.000    0.000    0.000 transforms.py:1691(<lambda>)
  198/186    0.000    0.000    0.000    0.000 json_utils.py:63(_decode_helper)
      135    0.000    0.000    0.000    0.000 ops.py:3972(get_collection_ref)
       36    0.000    0.000    0.000    0.000 axis.py:1894(<genexpr>)
       18    0.000    0.000    0.000    0.000 load.py:210(<listcomp>)
       10    0.000    0.000    0.000    0.000 fromnumeric.py:2337(all)
       18    0.000    0.000    0.000    0.000 monitoring.py:136(get_cell)
        1    0.000    0.000    0.000    0.000 backend.py:217(get_uid)
        8    0.000    0.000    0.000    0.000 activations.py:495(get)
       52    0.000    0.000    0.000    0.000 statistics.py:251(_convert)
      192    0.000    0.000    0.000    0.000 distribute_utils.py:216(is_distributed_variable)
      370    0.000    0.000    0.000    0.000 font_manager.py:1228(score_size)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1816(nonzero)
       50    0.000    0.000    0.000    0.000 object_identity.py:137(__delitem__)
       89    0.000    0.000    0.000    0.000 {method 'astype' of 'numpy.ndarray' objects}
      167    0.000    0.000    0.000    0.000 {method 'add' of 'google.protobuf.pyext._message.RepeatedCompositeContainer' objects}
        8    0.000    0.000    0.000    0.000 base_layer.py:1232(dynamic)
      363    0.000    0.000    0.000    0.000 backend_pdf.py:373(pdfRepr)
      294    0.000    0.000    0.000    0.000 nested_structure_coder.py:186(can_decode)
        3    0.000    0.000    0.000    0.000 file_io.py:235(file_exists)
       38    0.000    0.000    0.000    0.000 device.py:67(merge_device)
      182    0.000    0.000    0.000    0.000 graph_view.py:51(_escape_local_name)
       40    0.000    0.000    0.000    0.000 op_def_library.py:87(<listcomp>)
       26    0.000    0.000    0.000    0.000 c_api_util.py:60(__init__)
       25    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_OperationToNodeDef}
        3    0.000    0.000    0.000    0.000 file_io.py:252(file_exists_v2)
       78    0.000    0.000    0.000    0.000 backend_bases.py:867(set_alpha)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:1286(alphaState)
        4    0.000    0.000    0.000    0.000 inspect.py:625(cleandoc)
      310    0.000    0.000    0.000    0.000 {built-in method builtins.vars}
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewBufferFromString}
      370    0.000    0.000    0.000    0.000 font_manager.py:1181(score_variant)
        4    0.000    0.000    0.000    0.000 copy.py:66(copy)
       80    0.000    0.000    0.000    0.000 context.py:1831(ensure_initialized)
       82    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:64(<listcomp>)
        5    0.000    0.000    0.000    0.000 sre_compile.py:411(_mk_bitmap)
        1    0.000    0.000    0.000    0.000 util.py:677(_objects_with_attributes)
        4    0.000    0.000    0.000    0.000 ticker.py:2295(view_limits)
       51    0.000    0.000    0.000    0.000 backprop.py:170(_must_record_gradient)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:493(_classify_pyc)
       35    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_GraphGetTensorShapeHelper}
       16    0.000    0.000    0.000    0.000 qt_compat.py:209(_setDevicePixelRatioF)
       18    0.000    0.000    0.000    0.000 {built-in method builtins.print}
        1    0.000    0.000    0.000    0.000 util.py:679(<listcomp>)
      102    0.000    0.000    0.000    0.000 __init__.py:1841(_str_lower_equal)
        4    0.000    0.000    0.000    0.000 {built-in method addSeparator}
      156    0.000    0.000    0.000    0.000 ops.py:5117(_auto_cast_variable_read_dtype)
      699    0.000    0.000    0.000    0.000 font_manager.py:803(get_file)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(sort)
       27    0.000    0.000    0.000    0.000 {method 'search' of 're.Pattern' objects}
        8    0.000    0.000    0.000    0.000 parse.py:366(urlparse)
       16    0.000    0.000    0.000    0.000 {built-in method setToolTip}
       36    0.000    0.000    0.000    0.000 device_spec.py:300(_string_to_components)
       39    0.000    0.000    0.000    0.000 resource_variable_ops.py:268(__init__)
        2    0.000    0.000    0.000    0.000 nest.py:1225(<listcomp>)
      157    0.000    0.000    0.000    0.000 {method 'ravel' of 'numpy.ndarray' objects}
        2    0.000    0.000    0.000    0.000 load.py:756(_finalize_config_layers)
       16    0.000    0.000    0.000    0.000 ops.py:4557(__enter__)
      602    0.000    0.000    0.000    0.000 ops.py:392(op)
        7    0.000    0.000    0.000    0.000 enum.py:65(__setitem__)
      442    0.000    0.000    0.000    0.000 figure.py:435(_get_dpi)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1706(writeXref)
      128    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRecordOperation}
       43    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:176(cb)
       26    0.000    0.000    0.000    0.000 function.py:356(_inference_name)
        8    0.000    0.000    0.000    0.000 initializers_v2.py:521(__init__)
       16    0.000    0.000    0.000    0.000 base.py:498(no_automatic_dependency_tracking_scope)
      544    0.000    0.000    0.000    0.000 artist.py:1043(sticky_edges)
       43    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:58(__init__)
        3    0.000    0.000    0.000    0.000 abc.py:84(__new__)
      370    0.000    0.000    0.000    0.000 font_manager.py:794(get_size)
      246    0.000    0.000    0.000    0.000 lock_util.py:110(_validate_group_id)
       49    0.000    0.000    0.000    0.000 revived_types.py:89(should_load)
       24    0.000    0.000    0.000    0.000 spines.py:149(get_patch_transform)
       74    0.000    0.000    0.000    0.000 ops.py:6439(__init__)
       56    0.000    0.000    0.000    0.000 six.py:588(iteritems)
        4    0.000    0.000    0.000    0.000 compile_utils.py:70(_maybe_broadcast_to_outputs)
       45    0.000    0.000    0.000    0.000 distribution_strategy_context.py:337(_get_default_replica_mode)
        3    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.FileExists}
      216    0.000    0.000    0.000    0.000 nested_structure_coder.py:240(can_decode)
        4    0.000    0.000    0.000    0.000 backend_qt5.py:822(set_history_buttons)
       16    0.000    0.000    0.000    0.000 base_layer.py:1235(<genexpr>)
       24    0.000    0.000    0.000    0.000 loss_scale.py:421(get)
        4    0.000    0.000    0.000    0.000 file_io.py:73(_preread_check)
      516    0.000    0.000    0.000    0.000 path.py:202(vertices)
        2    0.000    0.000    0.000    0.000 figure.py:106(add)
       58    0.000    0.000    0.000    0.000 nested_structure_coder.py:76(<listcomp>)
      267    0.000    0.000    0.000    0.000 stride_tricks.py:260(<genexpr>)
       16    0.000    0.000    0.000    0.000 distribution_strategy_context.py:215(get_strategy_and_replica_context)
        7    0.000    0.000    0.000    0.000 activations.py:457(deserialize)
       82    0.000    0.000    0.000    0.000 threading.py:261(_is_owned)
      777    0.000    0.000    0.000    0.000 tensor_shape.py:247(value)
        1    0.000    0.000    0.000    0.000 __init__.py:2006(getLogger)
      146    0.000    0.000    0.000    0.000 _weakrefset.py:20(__enter__)
        1    0.000    0.000    0.000    0.000 training.py:1890(trainable_weights)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:629(spec_from_file_location)
        4    0.000    0.000    0.000    0.000 transforms.py:1500(get_matrix)
       16    0.000    0.000    0.000    0.000 axis.py:854(_translate_tick_kw)
       12    0.000    0.000    0.000    0.000 patches.py:400(set_linestyle)
       57    0.000    0.000    0.000    0.000 tensor_shape.py:1198(<listcomp>)
       16    0.000    0.000    0.000    0.000 resource_variable_ops.py:317(_maybe_set_handle_data)
       32    0.000    0.000    0.000    0.000 _ufunc_config.py:132(geterr)
      376    0.000    0.000    0.000    0.000 __init__.py:807(<listcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method addToolBar}
      249    0.000    0.000    0.000    0.000 nested_structure_coder.py:209(can_decode)
        2    0.000    0.000    0.000    0.000 __init__.py:1617(index_of)
       12    0.000    0.000    0.000    0.000 artist.py:711(set_clip_box)
        2    0.000    0.000    0.000    0.000 transforms.py:849(update_from_path)
       33    0.000    0.000    0.000    0.000 __init__.py:88(<lambda>)
        1    0.000    0.000    0.000    0.000 cp1252.py:1(<module>)
      347    0.000    0.000    0.000    0.000 {method '_datatype_enum' of 'tensorflow.python.framework.ops.EagerTensor' objects}
      193    0.000    0.000    0.000    0.000 function.py:422(<genexpr>)
       16    0.000    0.000    0.000    0.000 func_graph.py:321(control_dependencies)
       40    0.000    0.000    0.000    0.000 ops.py:6051(_get_graph_from_inputs)
      132    0.000    0.000    0.000    0.000 weakref.py:419(get)
        2    0.000    0.000    0.000    0.000 gridspec.py:644(_from_subplot_args)
      514    0.000    0.000    0.000    0.000 traceable_stack.py:121(<genexpr>)
        3    0.000    0.000    0.000    0.000 metrics_utils.py:63(update_state_wrapper)
       70    0.000    0.000    0.000    0.000 nest.py:104(_is_namedtuple)
       26    0.000    0.000    0.000    0.000 function.py:474(<listcomp>)
        4    0.000    0.000    0.000    0.000 deprecation.py:24(_generate_deprecation_warning)
       32    0.000    0.000    0.000    0.000 ticker.py:2076(ge)
      462    0.000    0.000    0.000    0.000 {built-in method builtins.issubclass}
        1    0.000    0.000    0.000    0.000 __init__.py:1272(getLogger)
       22    0.000    0.000    0.000    0.000 patches.py:380(set_linewidth)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:625(<listcomp>)
       64    0.000    0.000    0.000    0.000 ticker.py:2059(closeto)
       48    0.000    0.000    0.000    0.000 tensor_shape.py:252(is_compatible_with)
       27    0.000    0.000    0.000    0.000 ops.py:4040(<listcomp>)
      335    0.000    0.000    0.000    0.000 __init__.py:1756(<listcomp>)
        4    0.000    0.000    0.000    0.000 _datasource.py:293(_possible_names)
      108    0.000    0.000    0.000    0.000 text.py:24(_wrap_text)
       60    0.000    0.000    0.000    0.000 _weakrefset.py:36(__init__)
      408    0.000    0.000    0.000    0.000 ops.py:5061(<dictcomp>)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:413(<dictcomp>)
       16    0.000    0.000    0.000    0.000 transforms.py:2581(get_matrix)
        4    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(cumsum)
       10    0.000    0.000    0.000    0.000 sre_parse.py:224(__init__)
        7    0.000    0.000    0.000    0.000 backend.py:984(unique_object_name)
      124    0.000    0.000    0.000    0.000 tensor_shape.py:1230(as_shape)
      288    0.000    0.000    0.000    0.000 weakref.py:128(__getitem__)
       89    0.000    0.000    0.000    0.000 {method '_shape_tuple' of 'tensorflow.python.framework.ops.EagerTensor' objects}
        2    0.000    0.000    0.000    0.000 transforms.py:369(size)
       13    0.000    0.000    0.000    0.000 sre_compile.py:249(_compile_charset)
        9    0.000    0.000    0.000    0.000 np_utils.py:356(decorator)
      762    0.000    0.000    0.000    0.000 ops.py:2036(_get_control_flow_context)
        8    0.000    0.000    0.000    0.000 base_layer.py:2312(_maybe_cast_inputs)
       18    0.000    0.000    0.000    0.000 sre_parse.py:295(_class_escape)
        2    0.000    0.000    0.000    0.000 _base.py:3128(get_xbound)
      312    0.000    0.000    0.000    0.000 _base.py:638(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3548(export)
       16    0.000    0.000    0.000    0.000 base_layer_utils.py:281(needs_keras_history)
        4    0.000    0.000    0.000    0.000 figure.py:941(set_edgecolor)
       26    0.000    0.000    0.000    0.000 function.py:442(<listcomp>)
    31/18    0.000    0.000    0.000    0.000 load.py:606(_search_for_child_node)
       16    0.000    0.000    0.000    0.000 base_layer.py:2916(_call_fn_arg_defaults)
        3    0.000    0.000    0.000    0.000 decorator_utils.py:76(add_notice_to_docstring)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:839(sort)
       66    0.000    0.000    0.000    0.000 backend_pdf.py:330(pdfRepr)
        6    0.000    0.000    0.000    0.000 layer_utils.py:182(print_row)
      144    0.000    0.000    0.000    0.000 np_utils.py:186(names_from_num)
        2    0.000    0.000    0.000    0.000 device.py:50(canonical_name)
      203    0.000    0.000    0.000    0.000 weakref.py:189(get)
      186    0.000    0.000    0.000    0.000 base.py:951(_gather_saveables_for_checkpoint)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1010(path_stats)
       43    0.000    0.000    0.000    0.000 ops.py:6625(_restore_name_scope)
        4    0.000    0.000    0.000    0.000 base.py:436(no_automatic_dependency_tracking)
      156    0.000    0.000    0.000    0.000 ops.py:5101(_distribution_strategy_stack)
      366    0.000    0.000    0.000    0.000 ops.py:397(dtype)
      402    0.000    0.000    0.000    0.000 text.py:850(get_text)
       89    0.000    0.000    0.000    0.000 <string>:1(__new__)
        2    0.000    0.000    0.000    0.000 _datasource.py:377(abspath)
        3    0.000    0.000    0.000    0.000 colors.py:197(_to_rgba_no_colorcycle)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:164(have_all_keras_metadata)
      108    0.000    0.000    0.000    0.000 backend_pdf.py:2414(<listcomp>)
       26    0.000    0.000    0.000    0.000 function.py:428(<listcomp>)
        6    0.000    0.000    0.000    0.000 _datasource.py:263(_iszip)
        2    0.000    0.000    0.000    0.000 _base.py:3176(get_xlim)
      100    0.000    0.000    0.000    0.000 lines.py:503(get_fillstyle)
       68    0.000    0.000    0.000    0.000 func_graph.py:1057(<genexpr>)
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_NewImportGraphDefOptions}
      205    0.000    0.000    0.000    0.000 nested_structure_coder.py:289(can_decode)
       64    0.000    0.000    0.000    0.000 _methods.py:82(_clip_dep_is_byte_swapped)
      339    0.000    0.000    0.000    0.000 multiarray.py:706(dot)
      320    0.000    0.000    0.000    0.000 {method 'rstrip' of 'bytes' objects}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2348(clip_cmd)
    15/11    0.000    0.000    0.000    0.000 tf_utils.py:186(<listcomp>)
      474    0.000    0.000    0.000    0.000 tensor_shape.py:826(dims)
        4    0.000    0.000    0.000    0.000 axis.py:2382(_update_offset_text_position)
       16    0.000    0.000    0.000    0.000 axis.py:1093(<listcomp>)
      222    0.000    0.000    0.000    0.000 cycler.py:227(<genexpr>)
        8    0.000    0.000    0.000    0.000 init_ops_v2.py:506(__init__)
       18    0.000    0.000    0.000    0.000 pathlib.py:700(_format_parsed_parts)
        2    0.000    0.000    0.000    0.000 deprecation.py:222(finalize)
      164    0.000    0.000    0.000    0.000 ops.py:4086(_name_stack)
       85    0.000    0.000    0.000    0.000 tensor_shape.py:1191(<listcomp>)
      366    0.000    0.000    0.000    0.000 context.py:1718(context_switches)
        4    0.000    0.000    0.000    0.000 _base.py:2525(<listcomp>)
      205    0.000    0.000    0.000    0.000 nested_structure_coder.py:266(can_decode)
        2    0.000    0.000    0.000    0.000 _base.py:2496(<listcomp>)
       95    0.000    0.000    0.000    0.000 ops.py:2801(name_from_scope_name)
      205    0.000    0.000    0.000    0.000 nested_structure_coder.py:316(can_decode)
        4    0.000    0.000    0.000    0.000 functional.py:623(_validate_graph_inputs_and_outputs)
       50    0.000    0.000    0.000    0.000 lines.py:913(get_markeredgecolor)
       51    0.000    0.000    0.000    0.000 ops.py:6583(__init__)
       10    0.000    0.000    0.000    0.000 figure.py:415(get_axes)
      118    0.000    0.000    0.000    0.000 tensor_shape.py:819(rank)
       32    0.000    0.000    0.000    0.000 ticker.py:2048(__init__)
      290    0.000    0.000    0.000    0.000 backend_pdf.py:387(pdfRepr)
      656    0.000    0.000    0.000    0.000 {built-in method builtins.ord}
      104    0.000    0.000    0.000    0.000 {built-in method math.log10}
       37    0.000    0.000    0.000    0.000 nested_structure_coder.py:412(do_decode)
       16    0.000    0.000    0.000    0.000 ops.py:4592(_pop_control_dependencies_controller)
      469    0.000    0.000    0.000    0.000 base_layer.py:1246(trainable)
        1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:74(__init__)
        7    0.000    0.000    0.000    0.000 device_spec.py:212(make_merged_spec)
       54    0.000    0.000    0.000    0.000 weakref.py:471(pop)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:111(_set_new_active_manager)
        4    0.000    0.000    0.000    0.000 transforms.py:941(intervalx)
       96    0.000    0.000    0.000    0.000 func_graph.py:679(replace_capture)
        2    0.000    0.000    0.000    0.000 _base.py:3417(get_ybound)
       96    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:222(_verbose_message)
        4    0.000    0.000    0.000    0.000 functional.py:947(_build_map)
      450    0.000    0.000    0.000    0.000 {built-in method from_iterable}
       32    0.000    0.000    0.000    0.000 tensor_shape.py:866(__getitem__)
        4    0.000    0.000    0.000    0.000 backend_bases.py:142(__init__)
        2    0.000    0.000    0.000    0.000 _datasource.py:248(__init__)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2418(cumsum)
       75    0.000    0.000    0.000    0.000 path.py:348(__len__)
      424    0.000    0.000    0.000    0.000 ops.py:3148(_get_control_flow_context)
       12    0.000    0.000    0.000    0.000 figure.py:65(as_list)
        8    0.000    0.000    0.000    0.000 weakref.py:51(_cb)
      258    0.000    0.000    0.000    0.000 font_manager.py:912(set_file)
        2    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:59(__init__)
       26    0.000    0.000    0.000    0.000 c_api_util.py:63(__del__)
        2    0.000    0.000    0.000    0.000 gridspec.py:480(get_subplot_params)
        8    0.000    0.000    0.000    0.000 sre_parse.py:432(_uniq)
        1    0.000    0.000    0.000    0.000 inspect.py:2853(replace)
       56    0.000    0.000    0.000    0.000 traceable_stack.py:131(copy)
       10    0.000    0.000    0.000    0.000 backend.py:1283(int_shape)
        8    0.000    0.000    0.000    0.000 base_layer.py:2395(_name_scope)
      164    0.000    0.000    0.000    0.000 lock_util.py:107(<genexpr>)
       49    0.000    0.000    0.000    0.000 tracking.py:127(delete_tracking)
       64    0.000    0.000    0.000    0.000 axis.py:573(locator)
       26    0.000    0.000    0.000    0.000 importer.py:178(_ConvertInputMapValues)
        7    0.000    0.000    0.000    0.000 doc_controls.py:168(for_subclass_implementers)
        2    0.000    0.000    0.000    0.000 backend_qt5.py:380(sizeHint)
        1    0.000    0.000    0.000    0.000 layer_utils.py:254(gather_trainable_weights)
        4    0.000    0.000    0.000    0.000 figure.py:628(get_children)
        8    0.000    0.000    0.000    0.000 {built-in method setEnabled}
       51    0.000    0.000    0.000    0.000 function.py:1959(name)
       65    0.000    0.000    0.000    0.000 device_spec.py:350(_components_to_string)
        2    0.000    0.000    0.000    0.000 _base.py:3465(get_ylim)
        3    0.000    0.000    0.000    0.000 decorator_utils.py:35(_normalize_docstring)
       51    0.000    0.000    0.000    0.000 {method 'find' of 'bytearray' objects}
        2    0.000    0.000    0.000    0.000 context.py:1216(_initialize_physical_devices)
        2    0.000    0.000    0.000    0.000 __init__.py:1292(_check_1d)
       19    0.000    0.000    0.000    0.000 distribution_strategy_context.py:312(_get_default_strategy)
       16    0.000    0.000    0.000    0.000 ops.py:4646(control_dependencies)
      266    0.000    0.000    0.000    0.000 fromnumeric.py:2245(_any_dispatcher)
        4    0.000    0.000    0.000    0.000 transforms.py:2327(_iter_break_from_left_to_right)
       78    0.000    0.000    0.000    0.000 backend_bases.py:884(set_antialiased)
        4    0.000    0.000    0.000    0.000 transforms.py:1629(__init__)
        3    0.000    0.000    0.000    0.000 tf_utils.py:484(get_tensor_spec)
       98    0.000    0.000    0.000    0.000 op_def_library.py:80(_IsListValue)
       39    0.000    0.000    0.000    0.000 backend_pdf.py:2262(fill)
        2    0.000    0.000    0.000    0.000 os.py:766(getenv)
       76    0.000    0.000    0.000    0.000 backend_bases.py:993(get_hatch_path)
       19    0.000    0.000    0.000    0.000 version_utils.py:84(should_use_v2)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:605(<genexpr>)
        9    0.000    0.000    0.000    0.000 posixpath.py:117(splitext)
        1    0.000    0.000    0.000    0.000 functools.py:183(total_ordering)
       77    0.000    0.000    0.000    0.000 sre_parse.py:249(match)
      180    0.000    0.000    0.000    0.000 nested_structure_coder.py:339(can_decode)
       28    0.000    0.000    0.000    0.000 artist.py:585(get_snap)
      146    0.000    0.000    0.000    0.000 traceable_stack.py:83(__init__)
       16    0.000    0.000    0.000    0.000 func_graph.py:669(add_capture)
       22    0.000    0.000    0.000    0.000 tensor_util.py:1036(maybe_set_static_shape)
       52    0.000    0.000    0.000    0.000 image.py:123(<genexpr>)
       24    0.000    0.000    0.000    0.000 patches.py:269(get_patch_transform)
      335    0.000    0.000    0.000    0.000 __init__.py:1761(<listcomp>)
       17    0.000    0.000    0.000    0.000 tf_inspect.py:370(isfunction)
        4    0.000    0.000    0.000    0.000 backend_qt5.py:770(set_cursor)
        4    0.000    0.000    0.000    0.000 tf_utils.py:192(get_shapes)
        2    0.000    0.000    0.000    0.000 deprecation.py:308(deprecated_wrapper)
       27    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:389(parent)
       32    0.000    0.000    0.000    0.000 scale.py:98(__init__)
        4    0.000    0.000    0.000    0.000 artist.py:1008(set_label)
        8    0.000    0.000    0.000    0.000 figure.py:752(set_canvas)
       51    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetIsEmpty}
      312    0.000    0.000    0.000    0.000 _base.py:640(<genexpr>)
       22    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:135(<genexpr>)
    11/10    0.000    0.000    0.000    0.000 sre_compile.py:461(_get_literal_prefix)
       26    0.000    0.000    0.000    0.000 func_graph.py:735(external_captures)
      352    0.000    0.000    0.000    0.000 ops.py:1922(<listcomp>)
      198    0.000    0.000    0.000    0.000 artist.py:571(get_gid)
        4    0.000    0.000    0.000    0.000 os.py:670(__getitem__)
       84    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsTypeSpec}
      119    0.000    0.000    0.000    0.000 {built-in method math.cos}
       39    0.000    0.000    0.000    0.000 context.py:1980(shared_name)
        2    0.000    0.000    0.000    0.000 figure.py:99(bubble)
     15/3    0.000    0.000    0.000    0.000 functional.py:978(_build_map_helper)
       64    0.000    0.000    0.000    0.000 backend_pdf.py:324(__init__)
        8    0.000    0.000    0.000    0.000 base_layer.py:2457(_set_mask_metadata)
       23    0.000    0.000    0.000    0.000 sre_parse.py:111(__init__)
    41/21    0.000    0.000    0.000    0.000 nest.py:720(_yield_flat_up_to)
        7    0.000    0.000    0.000    0.000 backend.py:708(get_default_graph_uid_map)
      124    0.000    0.000    0.000    0.000 {method 'rpartition' of 'str' objects}
      110    0.000    0.000    0.000    0.000 ops.py:5035(_device_function_stack)
       38    0.000    0.000    0.000    0.000 traceable_stack.py:75(copy_metadata)
      144    0.000    0.000    0.000    0.000 data_structures.py:161(_attribute_sentinel)
        1    0.000    0.000    0.000    0.000 deprecation.py:58(_add_deprecated_arg_notice_to_docstring)
        7    0.000    0.000    0.000    0.000 layer_utils.py:105(<listcomp>)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1335(<lambda>)
        1    0.000    0.000    0.000    0.000 base.py:38(is_hdf5)
       68    0.000    0.000    0.000    0.000 sre_parse.py:172(append)
        1    0.000    0.000    0.000    0.000 enum.py:124(__prepare__)
        8    0.000    0.000    0.000    0.000 __init__.py:186(_remove_proxy)
      110    0.000    0.000    0.000    0.000 ops.py:3472(<genexpr>)
        5    0.000    0.000    0.000    0.000 sre_compile.py:413(<listcomp>)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2335(push)
      146    0.000    0.000    0.000    0.000 {built-in method math.radians}
        2    0.000    0.000    0.000    0.000 figure.py:2167(<lambda>)
      133    0.000    0.000    0.000    0.000 base.py:649(_checkpoint_dependencies)
       97    0.000    0.000    0.000    0.000 func_graph.py:427(outer_graph)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:2863(__enter__)
       22    0.000    0.000    0.000    0.000 backend.py:976(track_variable)
      233    0.000    0.000    0.000    0.000 ops.py:3354(building_function)
        8    0.000    0.000    0.000    0.000 parse.py:417(urlsplit)
       84    0.000    0.000    0.000    0.000 weakref.py:395(__setitem__)
      352    0.000    0.000    0.000    0.000 errors_impl.py:86(message)
        2    0.000    0.000    0.000    0.000 backend_mixed.py:15(__init__)
        2    0.000    0.000    0.000    0.000 device.py:115(__init__)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextAddFunctionDef}
       42    0.000    0.000    0.000    0.000 __init__.py:158(__init__)
        1    0.000    0.000    0.000    0.000 backend_qt5.py:516(closeEvent)
        1    0.000    0.000    0.000    0.000 enum.py:178(<setcomp>)
        1    0.000    0.000    0.000    0.000 py_checkpoint_reader.py:66(get_tensor)
       79    0.000    0.000    0.000    0.000 _collections_abc.py:271(__subclasshook__)
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:1320(__init__)
       43    0.000    0.000    0.000    0.000 base_layer_utils.py:754(v2_dtype_behavior_enabled)
        8    0.000    0.000    0.000    0.000 decoder.py:284(__init__)
       27    0.000    0.000    0.000    0.000 cp1252.py:11(encode)
       56    0.000    0.000    0.000    0.000 context.py:1204(op_callbacks)
      156    0.000    0.000    0.000    0.000 ops.py:3039(_variable_creator_stack)
       20    0.000    0.000    0.000    0.000 transforms.py:2236(get_matrix)
       32    0.000    0.000    0.000    0.000 shape_base.py:219(_vhstack_dispatcher)
      352    0.000    0.000    0.000    0.000 ops.py:2245(_add_control_inputs)
        6    0.000    0.000    0.000    0.000 figure.py:892(get_size_inches)
      446    0.000    0.000    0.000    0.000 {method 'popleft' of 'collections.deque' objects}
       86    0.000    0.000    0.000    0.000 context.py:808(scope_name)
      196    0.000    0.000    0.000    0.000 axis.py:582(formatter)
        2    0.000    0.000    0.000    0.000 backend_bases.py:2708(notify_axes_change)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1265(_path_importer_cache)
        8    0.000    0.000    0.000    0.000 axis.py:763(limit_range_for_scale)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:508(__enter__)
        4    0.000    0.000    0.000    0.000 _base.py:2528(<listcomp>)
        2    0.000    0.000    0.000    0.000 {built-in method today}
       32    0.000    0.000    0.000    0.000 sre_parse.py:286(tell)
       36    0.000    0.000    0.000    0.000 nest.py:96(_sorted)
       12    0.000    0.000    0.000    0.000 patches.py:472(set_joinstyle)
      195    0.000    0.000    0.000    0.000 device_spec.py:38(_as_int_or_none)
      121    0.000    0.000    0.000    0.000 nested_structure_coder.py:362(can_decode)
      203    0.000    0.000    0.000    0.000 base.py:193(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:2815(set_axisbelow)
       40    0.000    0.000    0.000    0.000 op_def_library.py:737(<listcomp>)
      144    0.000    0.000    0.000    0.000 {built-in method _thread.allocate_lock}
      108    0.000    0.000    0.000    0.000 {method 'get_width_height' of 'matplotlib.ft2font.FT2Font' objects}
        2    0.000    0.000    0.000    0.000 py_checkpoint_reader.py:51(get_variable_to_dtype_map)
       16    0.000    0.000    0.000    0.000 {built-in method palette}
       16    0.000    0.000    0.000    0.000 backend_pdf.py:2327(fillcolor_cmd)
       65    0.000    0.000    0.000    0.000 device_spec.py:42(_as_device_str_or_none)
      156    0.000    0.000    0.000    0.000 ops.py:5133(_auto_cast_variable_read_dtype)
        2    0.000    0.000    0.000    0.000 _base.py:2502(<listcomp>)
        1    0.000    0.000    0.000    0.000 backend_mixed.py:1(<module>)
       18    0.000    0.000    0.000    0.000 context.py:2006(eager_mode)
       10    0.000    0.000    0.000    0.000 enum.py:379(__setattr__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1725(writeTrailer)
       16    0.000    0.000    0.000    0.000 nest.py:954(<genexpr>)
      146    0.000    0.000    0.000    0.000 _weakrefset.py:16(__init__)
       64    0.000    0.000    0.000    0.000 axis.py:586(formatter)
      108    0.000    0.000    0.000    0.000 context.py:823(_set_device)
       72    0.000    0.000    0.000    0.000 weakref.py:323(__new__)
       25    0.000    0.000    0.000    0.000 nested_structure_coder.py:319(do_decode)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:714(close)
        3    0.000    0.000    0.000    0.000 enum.py:491(_get_mixins_)
        2    0.000    0.000    0.000    0.000 op_def_library.py:184(_MakeShape)
        6    0.000    0.000    0.000    0.000 text.py:1055(set_fontweight)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:218(_datetime_to_pdf)
      245    0.000    0.000    0.000    0.000 path.py:216(codes)
       74    0.000    0.000    0.000    0.000 {built-in method math.floor}
        2    0.000    0.000    0.000    0.000 {built-in method matplotlib._path.update_path_extents}
       82    0.000    0.000    0.000    0.000 lock_util.py:119(__init__)
      182    0.000    0.000    0.000    0.000 {method 'decode' of 'bytes' objects}
       70    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsNamedtuple}
       16    0.000    0.000    0.000    0.000 initializers_v2.py:747(_get_dtype)
       21    0.000    0.000    0.000    0.000 tf_utils.py:281(_is_atomic_nested)
        2    0.000    0.000    0.000    0.000 figure.py:2163(add_axobserver)
       26    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:68(_path_split)
       88    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsMutableMapping}
        4    0.000    0.000    0.000    0.000 transforms.py:946(intervaly)
      111    0.000    0.000    0.000    0.000 nested_structure_coder.py:386(can_decode)
       98    0.000    0.000    0.000    0.000 backend_pdf.py:2169(<genexpr>)
       16    0.000    0.000    0.000    0.000 base_layer_utils.py:541(is_subclassed)
        4    0.000    0.000    0.000    0.000 {built-in method setCursor}
      252    0.000    0.000    0.000    0.000 function.py:501(name)
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2319(rgb_cmd)
      133    0.000    0.000    0.000    0.000 {method 'setdefault' of 'dict' objects}
        6    0.000    0.000    0.000    0.000 deprecation.py:473(new_func)
       16    0.000    0.000    0.000    0.000 {built-in method backgroundRole}
        5    0.000    0.000    0.000    0.000 util.py:1354(saver_with_op_caching)
       10    0.000    0.000    0.000    0.000 backend_pdf.py:2307(hatch_cmd)
       78    0.000    0.000    0.000    0.000 backend_bases.py:962(set_linewidth)
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(unravel_index)
      384    0.000    0.000    0.000    0.000 data_structures.py:447(_external_modification)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:310(<listcomp>)
       26    0.000    0.000    0.000    0.000 load.py:87(__init__)
        4    0.000    0.000    0.000    0.000 variable_scope.py:2738(variable_creator_scope)
        4    0.000    0.000    0.000    0.000 __init__.py:580(push)
        2    0.000    0.000    0.000    0.000 figure.py:1086(_process_projection_requirements)
      158    0.000    0.000    0.000    0.000 context.py:813(device_name)
        2    0.000    0.000    0.000    0.000 __init__.py:610(bubble)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_checkpoint_reader.CheckpointReader_GetTensor}
      216    0.000    0.000    0.000    0.000 text.py:1216(get_usetex)
        4    0.000    0.000    0.000    0.000 {method '__reduce_ex__' of 'object' objects}
       32    0.000    0.000    0.000    0.000 {method 'nonzero' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 functional.py:658(<listcomp>)
        1    0.000    0.000    0.000    0.000 functional.py:1056(connect_ancillary_layers)
       14    0.000    0.000    0.000    0.000 tensor_shape.py:1166(is_fully_defined)
        2    0.000    0.000    0.000    0.000 {method 'close' of '_io.BufferedWriter' objects}
      286    0.000    0.000    0.000    0.000 {built-in method sys.getrecursionlimit}
       16    0.000    0.000    0.000    0.000 base_layer.py:3218(<genexpr>)
       16    0.000    0.000    0.000    0.000 ops.py:4522(__init__)
      119    0.000    0.000    0.000    0.000 {built-in method math.sin}
        1    0.000    0.000    0.000    0.000 _collections_abc.py:496(__sub__)
       43    0.000    0.000    0.000    0.000 function.py:1549(_set_function_spec)
      131    0.000    0.000    0.000    0.000 context.py:749(_handle)
        2    0.000    0.000    0.000    0.000 device.py:124(__call__)
       72    0.000    0.000    0.000    0.000 base.py:553(_update_uid)
      130    0.000    0.000    0.000    0.000 device_spec.py:34(_as_str_or_none)
      128    0.000    0.000    0.000    0.000 ticker.py:214(set_axis)
        1    0.000    0.000    0.000    0.000 np_dtypes.py:15(<module>)
       42    0.000    0.000    0.000    0.000 sre_parse.py:160(__len__)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.seterrobj}
        1    0.000    0.000    0.000    0.000 enum.py:534(_find_new_)
       37    0.000    0.000    0.000    0.000 axis.py:214(get_tick_padding)
        1    0.000    0.000    0.000    0.000 functional.py:1059(<listcomp>)
      146    0.000    0.000    0.000    0.000 {built-in method _imp.acquire_lock}
      175    0.000    0.000    0.000    0.000 markers.py:249(get_fillstyle)
       52    0.000    0.000    0.000    0.000 numbers.py:283(__float__)
       23    0.000    0.000    0.000    0.000 weakref.py:343(__init__)
      138    0.000    0.000    0.000    0.000 markers.py:350(_set_nothing)
      163    0.000    0.000    0.000    0.000 base.py:662(_deferred_dependencies)
      252    0.000    0.000    0.000    0.000 {method 'copy' of 'list' objects}
        8    0.000    0.000    0.000    0.000 ops.py:6013(get_name_scope)
        2    0.000    0.000    0.000    0.000 backend_qt5.py:441(draw)
      274    0.000    0.000    0.000    0.000 transforms.py:1741(get_affine)
        1    0.000    0.000    0.000    0.000 training.py:1899(non_trainable_weights)
       39    0.000    0.000    0.000    0.000 tensor_shape.py:843(__len__)
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteImportGraphDefOptions}
      384    0.000    0.000    0.000    0.000 data_structures.py:431(_non_append_mutation)
        1    0.000    0.000    0.000    0.000 Experiment.py:200(<listcomp>)
        8    0.000    0.000    0.000    0.000 base_layer.py:2340(_should_cast_single_input)
        8    0.000    0.000    0.000    0.000 ticker.py:747(get_offset)
       32    0.000    0.000    0.000    0.000 ticker.py:1736(raise_if_exceeds)
        3    0.000    0.000    0.000    0.000 {built-in method _abc._abc_init}
       27    0.000    0.000    0.000    0.000 base_layer.py:1213(dtype)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_ListPhysicalDevices}
      144    0.000    0.000    0.000    0.000 _weakrefset.py:52(_commit_removals)
       22    0.000    0.000    0.000    0.000 op_def_library.py:38(_Attr)
       43    0.000    0.000    0.000    0.000 {method 'sort' of 'list' objects}
        8    0.000    0.000    0.000    0.000 sre_compile.py:423(_simple)
       22    0.000    0.000    0.000    0.000 base.py:763(_preload_simple_restoration)
        4    0.000    0.000    0.000    0.000 _datasource.py:419(_sanitize_relative_path)
       16    0.000    0.000    0.000    0.000 {built-in method setDevicePixelRatio}
        5    0.000    0.000    0.000    0.000 tracking.py:356(cached_per_instance)
        1    0.000    0.000    0.000    0.000 np_utils.py:15(<module>)
        8    0.000    0.000    0.000    0.000 init_ops_v2.py:70(from_config)
        3    0.000    0.000    0.000    0.000 metrics_utils.py:98(result_wrapper)
       18    0.000    0.000    0.000    0.000 func_graph.py:491(variables)
        8    0.000    0.000    0.000    0.000 transforms.py:1654(_set)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1755(draw_event)
       98    0.000    0.000    0.000    0.000 inspect.py:2234(<lambda>)
       80    0.000    0.000    0.000    0.000 object_identity.py:143(__iter__)
      105    0.000    0.000    0.000    0.000 tf2.py:42(enabled)
      129    0.000    0.000    0.000    0.000 multiarray.py:143(concatenate)
        3    0.000    0.000    0.000    0.000 training_utils.py:1945(get_static_batch_size)
       39    0.000    0.000    0.000    0.000 backend_pdf.py:2251(stroke)
        8    0.000    0.000    0.000    0.000 base_layer.py:2495(_get_input_masks)
        2    0.000    0.000    0.000    0.000 figure.py:1784(clf)
      108    0.000    0.000    0.000    0.000 context.py:818(device_spec)
       88    0.000    0.000    0.000    0.000 text.py:548(set_wrap)
        6    0.000    0.000    0.000    0.000 distribute_lib.py:340(_require_strategy_scope_strategy)
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_ImportGraphDefOptionsSetPrefix}
       38    0.000    0.000    0.000    0.000 device.py:172(is_null_merge)
      164    0.000    0.000    0.000    0.000 {method 'release' of '_thread.lock' objects}
       40    0.000    0.000    0.000    0.000 resource_variable_ops.py:246(_handle_graph)
        7    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge1}
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:51(_unpack_uint32)
        6    0.000    0.000    0.000    0.000 {method 'any' of 'numpy.ndarray' objects}
       28    0.000    0.000    0.000    0.000 text.py:341(<listcomp>)
       26    0.000    0.000    0.000    0.000 c_api_util.py:76(__del__)
       20    0.000    0.000    0.000    0.000 sre_compile.py:595(isstring)
      223    0.000    0.000    0.000    0.000 {method 'rstrip' of 'str' objects}
       54    0.000    0.000    0.000    0.000 op_def_library.py:64(_IsListParameter)
        2    0.000    0.000    0.000    0.000 backend_bases.py:3273(update)
        1    0.000    0.000    0.000    0.000 functools.py:525(decorating_function)
       45    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:867(__exit__)
        4    0.000    0.000    0.000    0.000 transforms.py:936(p1)
        1    0.000    0.000    0.000    0.000 load.py:116(<dictcomp>)
       16    0.000    0.000    0.000    0.000 core.py:588(filled)
        4    0.000    0.000    0.000    0.000 copy.py:258(_reconstruct)
      225    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
      129    0.000    0.000    0.000    0.000 function.py:763(forward)
        2    0.000    0.000    0.000    0.000 gridspec.py:370(__init__)
        8    0.000    0.000    0.000    0.000 sre_compile.py:492(_get_charset_prefix)
      140    0.000    0.000    0.000    0.000 axis.py:349(<genexpr>)
        1    0.000    0.000    0.000    0.000 {method 'emit' of 'PyQt5.QtCore.pyqtBoundSignal' objects}
        4    0.000    0.000    0.000    0.000 training.py:679(distribute_strategy)
        1    0.000    0.000    0.000    0.000 layer_utils.py:277(gather_non_trainable_weights)
      216    0.000    0.000    0.000    0.000 fromnumeric.py:2709(_amin_dispatcher)
       16    0.000    0.000    0.000    0.000 transforms.py:1769(is_separable)
        7    0.000    0.000    0.000    0.000 _pylab_helpers.py:106(get_active)
        2    0.000    0.000    0.000    0.000 deprecation.py:46(_add_deprecated_function_notice_to_docstring)
        8    0.000    0.000    0.000    0.000 base_layer.py:418(build)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1749(finalize)
        1    0.000    0.000    0.000    0.000 function_deserialization.py:370(<listcomp>)
        9    0.000    0.000    0.000    0.000 genericpath.py:121(_splitext)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1384(writeHatches)
       16    0.000    0.000    0.000    0.000 generic_utils.py:81(__enter__)
       26    0.000    0.000    0.000    0.000 tensor_shape.py:838(ndims)
      146    0.000    0.000    0.000    0.000 {built-in method _imp.release_lock}
      132    0.000    0.000    0.000    0.000 artist.py:680(get_path_effects)
       29    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.SetRequireShapeInferenceFns}
       46    0.000    0.000    0.000    0.000 re.py:325(_subx)
       50    0.000    0.000    0.000    0.000 backend_agg.py:281(points_to_pixels)
      198    0.000    0.000    0.000    0.000 backend_bases.py:147(open_group)
       73    0.000    0.000    0.000    0.000 object_identity.py:227(__iter__)
       54    0.000    0.000    0.000    0.000 text.py:544(get_wrap)
        2    0.000    0.000    0.000    0.000 {built-in method setCentralWidget}
        4    0.000    0.000    0.000    0.000 textpath.py:24(__init__)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:465(_from_iterable)
        2    0.000    0.000    0.000    0.000 figure.py:163(__init__)
       26    0.000    0.000    0.000    0.000 func_graph.py:745(deferred_external_captures)
       14    0.000    0.000    0.000    0.000 _collections_abc.py:72(_check_methods)
       72    0.000    0.000    0.000    0.000 weakref.py:328(__init__)
       16    0.000    0.000    0.000    0.000 ticker.py:808(<genexpr>)
        2    0.000    0.000    0.000    0.000 _base.py:1432(set_box_aspect)
        2    0.000    0.000    0.000    0.000 execute.py:201(make_shape)
      134    0.000    0.000    0.000    0.000 device_spec.py:431(to_string)
       45    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:863(__enter__)
       86    0.000    0.000    0.000    0.000 array_ops.py:1485(<genexpr>)
       29    0.000    0.000    0.000    0.000 threading.py:81(RLock)
       24    0.000    0.000    0.000    0.000 base_layer_utils.py:399(call_context)
        8    0.000    0.000    0.000    0.000 random_seed.py:41(get_seed)
       52    0.000    0.000    0.000    0.000 function.py:427(<genexpr>)
       18    0.000    0.000    0.000    0.000 __init__.py:206(__getattr__)
        4    0.000    0.000    0.000    0.000 _base.py:185(__init__)
       80    0.000    0.000    0.000    0.000 data_structures.py:383(__len__)
       33    0.000    0.000    0.000    0.000 np_utils.py:192(<listcomp>)
       26    0.000    0.000    0.000    0.000 function.py:475(<listcomp>)
       16    0.000    0.000    0.000    0.000 ops.py:4579(add_op)
       58    0.000    0.000    0.000    0.000 backend_pdf.py:2293(linewidth_cmd)
        2    0.000    0.000    0.000    0.000 {built-in method setWindowIcon}
       80    0.000    0.000    0.000    0.000 data_structures.py:330(_name_element)
       26    0.000    0.000    0.000    0.000 function.py:423(<listcomp>)
      208    0.000    0.000    0.000    0.000 fromnumeric.py:3164(_around_dispatcher)
        4    0.000    0.000    0.000    0.000 {method 'sort' of 'numpy.ndarray' objects}
       26    0.000    0.000    0.000    0.000 function.py:229(_parse_func_attrs)
        1    0.000    0.000    0.000    0.000 compile_utils.py:499(create_pseudo_input_names)
        2    0.000    0.000    0.000    0.000 figure.py:1056(_make_key)
        2    0.000    0.000    0.000    0.000 py_checkpoint_reader.py:52(<dictcomp>)
       16    0.000    0.000    0.000    0.000 base.py:549(_setattr_tracking)
      132    0.000    0.000    0.000    0.000 backend_bases.py:966(set_url)
        4    0.000    0.000    0.000    0.000 functional.py:845(<setcomp>)
       11    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringGetCellBoolGauge0}
       10    0.000    0.000    0.000    0.000 _datasource.py:132(keys)
        1    0.000    0.000    0.000    0.000 deprecation.py:372(<listcomp>)
      125    0.000    0.000    0.000    0.000 markers.py:274(get_marker)
      106    0.000    0.000    0.000    0.000 fromnumeric.py:194(_reshape_dispatcher)
        7    0.000    0.000    0.000    0.000 load.py:532(_unblock_model_reconstruction)
       74    0.000    0.000    0.000    0.000 nested_structure_coder.py:409(can_decode)
        3    0.000    0.000    0.000    0.000 genericpath.py:16(exists)
      198    0.000    0.000    0.000    0.000 backend_bases.py:154(close_group)
        8    0.000    0.000    0.000    0.000 {method 'searchsorted' of 'numpy.ndarray' objects}
       27    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:77(get_canvas_width_height)
        1    0.000    0.000    0.000    0.000 _collections_abc.py:501(<genexpr>)
        7    0.000    0.000    0.000    0.000 device_spec.py:280(_get_combined_properties)
        2    0.000    0.000    0.000    0.000 {method 'strftime' of 'datetime.date' objects}
        1    0.000    0.000    0.000    0.000 compile_utils.py:504(_create_pseudo_names)
       54    0.000    0.000    0.000    0.000 context.py:1733(__init__)
        8    0.000    0.000    0.000    0.000 tf_utils.py:339(is_symbolic_tensor)
       11    0.000    0.000    0.000    0.000 tf_inspect.py:390(ismethod)
      220    0.000    0.000    0.000    0.000 fromnumeric.py:2584(_amax_dispatcher)
       58    0.000    0.000    0.000    0.000 ops.py:5066(_colocation_stack)
        8    0.000    0.000    0.000    0.000 execute.py:177(make_str)
      240    0.000    0.000    0.000    0.000 _collections_abc.py:252(__subclasshook__)
        4    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:72(option_image_nocomposite)
       39    0.000    0.000    0.000    0.000 resource_variable_ops.py:84(_set_handle_shapes_and_types)
       22    0.000    0.000    0.000    0.000 policy.py:433(should_cast_variables)
        8    0.000    0.000    0.000    0.000 {built-in method fromkeys}
        2    0.000    0.000    0.000    0.000 figure.py:488(set_constrained_layout)
       26    0.000    0.000    0.000    0.000 sre_parse.py:81(groups)
       16    0.000    0.000    0.000    0.000 {built-in method builtins.repr}
       24    0.000    0.000    0.000    0.000 cycler.py:225(__iter__)
       52    0.000    0.000    0.000    0.000 text.py:826(get_position)
      140    0.000    0.000    0.000    0.000 path.py:247(should_simplify)
       19    0.000    0.000    0.000    0.000 pathlib.py:1048(_init)
      126    0.000    0.000    0.000    0.000 {method 'values' of 'collections.OrderedDict' objects}
        2    0.000    0.000    0.000    0.000 _base.py:281(_getdefaults)
        2    0.000    0.000    0.000    0.000 transforms.py:801(null)
        6    0.000    0.000    0.000    0.000 _methods.py:53(_any)
      156    0.000    0.000    0.000    0.000 {built-in method math.gcd}
       10    0.000    0.000    0.000    0.000 {built-in method _sre.compile}
      104    0.000    0.000    0.000    0.000 function.py:484(<genexpr>)
       27    0.000    0.000    0.000    0.000 {method 'update' of 'set' objects}
        3    0.000    0.000    0.000    0.000 sre_parse.py:96(closegroup)
       11    0.000    0.000    0.000    0.000 functional_saver.py:168(<dictcomp>)
       76    0.000    0.000    0.000    0.000 traceable_stack.py:30(__init__)
      192    0.000    0.000    0.000    0.000 function.py:1964(graph)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:800(find_spec)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1252(_path_hooks)
        3    0.000    0.000    0.000    0.000 {setAttribute}
       64    0.000    0.000    0.000    0.000 {built-in method builtins.divmod}
        8    0.000    0.000    0.000    0.000 mathtext.py:3324(__init__)
      135    0.000    0.000    0.000    0.000 {method 'get_descent' of 'matplotlib.ft2font.FT2Font' objects}
       12    0.000    0.000    0.000    0.000 axis.py:1359(get_major_locator)
        5    0.000    0.000    0.000    0.000 load.py:849(_restore_layer_metrics)
       38    0.000    0.000    0.000    0.000 traceable_stack.py:111(pop_obj)
        1    0.000    0.000    0.000    0.000 __init__.py:1323(_fixupParents)
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_ImportGraphDefResultsMissingUnusedInputMappings_wrapper}
        4    0.000    0.000    0.000    0.000 transforms.py:1638(_init)
       10    0.000    0.000    0.000    0.000 sre_parse.py:921(fix_flags)
        4    0.000    0.000    0.000    0.000 _base.py:198(set_prop_cycle)
        4    0.000    0.000    0.000    0.000 nest.py:1403(list_to_tuple)
      116    0.000    0.000    0.000    0.000 resource_variable_ops.py:545(handle)
      204    0.000    0.000    0.000    0.000 base.py:398(checkpoint)
        8    0.000    0.000    0.000    0.000 ops.py:5175(__init__)
       18    0.000    0.000    0.000    0.000 monitoring.py:303(set)
      164    0.000    0.000    0.000    0.000 _collections_abc.py:302(__subclasshook__)
        2    0.000    0.000    0.000    0.000 figure.py:2015(_set_artist_props)
       26    0.000    0.000    0.000    0.000 c_api_util.py:86(__init__)
       20    0.000    0.000    0.000    0.000 saveable_object.py:24(__init__)
        1    0.000    0.000    0.000    0.000 saving_utils.py:245(_deserialize_nested_config)
       13    0.000    0.000    0.000    0.000 base_layer.py:2937(_call_accepts_kwargs)
        4    0.000    0.000    0.000    0.000 compile_utils.py:46(_conform_to_outputs)
        5    0.000    0.000    0.000    0.000 enum.py:338(__getattr__)
       89    0.000    0.000    0.000    0.000 __init__.py:1610(<lambda>)
        2    0.000    0.000    0.000    0.000 file_io.py:95(size)
       16    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeVariableAccessed}
       27    0.000    0.000    0.000    0.000 function_deserialization.py:296(<genexpr>)
      208    0.000    0.000    0.000    0.000 fractions.py:286(denominator)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1479(_fill_cache)
        1    0.000    0.000    0.000    0.000 functools.py:186(<setcomp>)
       40    0.000    0.000    0.000    0.000 resource_variable_ops.py:503(device)
       80    0.000    0.000    0.000    0.000 {method 'lstrip' of 'str' objects}
       54    0.000    0.000    0.000    0.000 artist.py:557(get_url)
       16    0.000    0.000    0.000    0.000 axis.py:1389(get_minor_ticks)
        8    0.000    0.000    0.000    0.000 backend.py:887(name_scope)
       64    0.000    0.000    0.000    0.000 {built-in method numpy.geterrobj}
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1107(exec_module)
       16    0.000    0.000    0.000    0.000 generic_utils.py:87(__exit__)
        4    0.000    0.000    0.000    0.000 {built-in method setCheckable}
       78    0.000    0.000    0.000    0.000 backend_bases.py:974(set_snap)
       26    0.000    0.000    0.000    0.000 c_api_util.py:73(__init__)
       13    0.000    0.000    0.000    0.000 {built-in method _imp._fix_co_filename}
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_ImportGraphDefOptionsSetUniquifyNames}
        8    0.000    0.000    0.000    0.000 axis.py:980(_set_artist_props)
        8    0.000    0.000    0.000    0.000 _dill.py:457(find_class)
       17    0.000    0.000    0.000    0.000 {built-in method PyQt5.QtCore.qVersion}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2420(copy_properties)
        1    0.000    0.000    0.000    0.000 load.py:599(_get_child_layer_node_ids)
        3    0.000    0.000    0.000    0.000 enum.py:502(_find_data_type)
       11    0.000    0.000    0.000    0.000 enum.py:20(_is_dunder)
       85    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsMapping}
       10    0.000    0.000    0.000    0.000 re.py:331(filter)
        5    0.000    0.000    0.000    0.000 colors.py:266(<genexpr>)
       60    0.000    0.000    0.000    0.000 axis.py:569(locator)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1445(writeGouraudTriangles)
       10    0.000    0.000    0.000    0.000 transforms.py:2356(transform_path_non_affine)
       89    0.000    0.000    0.000    0.000 stride_tricks.py:200(_broadcast_arrays_dispatcher)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:456(_check_name_wrapper)
       37    0.000    0.000    0.000    0.000 backend_pdf.py:381(__init__)
       16    0.000    0.000    0.000    0.000 ops.py:4589(_push_control_dependencies_controller)
      132    0.000    0.000    0.000    0.000 backend_bases.py:777(restore)
      130    0.000    0.000    0.000    0.000 path.py:235(simplify_threshold)
        2    0.000    0.000    0.000    0.000 copyreg.py:99(_slotnames)
        4    0.000    0.000    0.000    0.000 _bootlocale.py:33(getpreferredencoding)
        2    0.000    0.000    0.000    0.000 {built-in method setPalette}
       27    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_encode}
      132    0.000    0.000    0.000    0.000 axis.py:279(get_loc)
       32    0.000    0.000    0.000    0.000 ops.py:5087(_control_dependencies_stack)
        2    0.000    0.000    0.000    0.000 figure.py:1075(fixlist)
       27    0.000    0.000    0.000    0.000 tf_utils.py:273(_is_serialized_node_data)
       30    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:143(__init__)
       78    0.000    0.000    0.000    0.000 artist.py:624(get_sketch_params)
      8/4    0.000    0.000    0.000    0.000 transforms.py:2333(<lambda>)
        2    0.000    0.000    0.000    0.000 pyplot.py:303(_warn_if_gui_out_of_main_thread)
        2    0.000    0.000    0.000    0.000 _datasource.py:433(exists)
        1    0.000    0.000    0.000    0.000 context.py:1008(_compute_gpu_options)
       12    0.000    0.000    0.000    0.000 traceback.py:292(walk_stack)
       81    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsAttrs}
        2    0.000    0.000    0.000    0.000 __init__.py:214(_acquireLock)
      161    0.000    0.000    0.000    0.000 {method 'remove' of 'set' objects}
       19    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:937(_sanity_check)
        1    0.000    0.000    0.000    0.000 losses.py:1838(deserialize)
      124    0.000    0.000    0.000    0.000 ops.py:173(__exit__)
       77    0.000    0.000    0.000    0.000 policy.py:392(variable_dtype)
       14    0.000    0.000    0.000    0.000 patches.py:300(set_antialiased)
       54    0.000    0.000    0.000    0.000 text.py:223(_get_multialignment)
        8    0.000    0.000    0.000    0.000 op_def_library.py:159(_MakeStr)
       18    0.000    0.000    0.000    0.000 func_graph.py:493(<listcomp>)
       10    0.000    0.000    0.000    0.000 sre_parse.py:76(__init__)
       26    0.000    0.000    0.000    0.000 text.py:344(<listcomp>)
       12    0.000    0.000    0.000    0.000 text.py:522(_update_clip_properties)
        1    0.000    0.000    0.000    0.000 utils_impl.py:225(get_variables_path)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:342(__init__)
        8    0.000    0.000    0.000    0.000 figure.py:1831(<genexpr>)
        3    0.000    0.000    0.000    0.000 training_utils.py:1911(get_input_shape_and_dtype)
       39    0.000    0.000    0.000    0.000 backend_pdf.py:393(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:221(<listcomp>)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:791(scope)
      105    0.000    0.000    0.000    0.000 backend_bases.py:1012(get_sketch_params)
       40    0.000    0.000    0.000    0.000 op_def_library.py:89(<listcomp>)
       80    0.000    0.000    0.000    0.000 op_def_library.py:235(_MaybeColocateWith)
        1    0.000    0.000    0.000    0.000 {built-in method posix.listdir}
        2    0.000    0.000    0.000    0.000 <__array_function__ internals>:2(iscomplexobj)
        1    0.000    0.000    0.000    0.000 function_deserialization.py:389(<dictcomp>)
       26    0.000    0.000    0.000    0.000 function.py:441(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:207(__getitem__)
       95    0.000    0.000    0.000    0.000 base_layer.py:1218(name)
        8    0.000    0.000    0.000    0.000 optimizer_v2.py:656(_set_hyper)
       33    0.000    0.000    0.000    0.000 generic_utils.py:199(get_registered_object)
       24    0.000    0.000    0.000    0.000 cycler.py:138(keys)
       16    0.000    0.000    0.000    0.000 {built-in method value}
        6    0.000    0.000    0.000    0.000 init_ops.py:105(__init__)
       16    0.000    0.000    0.000    0.000 parse.py:110(_coerce_args)
        2    0.000    0.000    0.000    0.000 file_io.py:780(stat)
        7    0.000    0.000    0.000    0.000 enum.py:28(_is_sunder)
       46    0.000    0.000    0.000    0.000 {method 'group' of 're.Match' objects}
       10    0.000    0.000    0.000    0.000 sre_parse.py:1054(expand_template)
        2    0.000    0.000    0.000    0.000 gridspec.py:32(__init__)
        4    0.000    0.000    0.000    0.000 functional.py:289(_set_output_names)
       73    0.000    0.000    0.000    0.000 weakref.py:238(values)
       70    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_utils.IsMappingView}
       20    0.000    0.000    0.000    0.000 ops.py:1217(graph)
       11    0.000    0.000    0.000    0.000 policy.py:517(policy_defaults_to_floatx)
        4    0.000    0.000    0.000    0.000 os.py:748(encode)
       35    0.000    0.000    0.000    0.000 ops.py:452(<listcomp>)
       17    0.000    0.000    0.000    0.000 __init__.py:100(__hash__)
      124    0.000    0.000    0.000    0.000 ops.py:167(__init__)
       66    0.000    0.000    0.000    0.000 backend_bases.py:816(get_dashes)
        4    0.000    0.000    0.000    0.000 transforms.py:2119(__init__)
        2    0.000    0.000    0.000    0.000 warnings.py:130(filterwarnings)
      104    0.000    0.000    0.000    0.000 statistics.py:188(_coerce)
       92    0.000    0.000    0.000    0.000 __init__.py:385(<genexpr>)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:2872(__exit__)
       18    0.000    0.000    0.000    0.000 generic_utils.py:792(is_default)
       25    0.000    0.000    0.000    0.000 function.py:2067(_get_gradient_function)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1263(<listcomp>)
        2    0.000    0.000    0.000    0.000 rcsetup.py:200(validate_axisbelow)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:35(_new_module)
       34    0.000    0.000    0.000    0.000 object_identity.py:211(__iter__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:248(_get_loss_object)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:554(_validate_hash_pyc)
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_ImportGraphDefOptionsSetValidateColocationConstraints}
       16    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_VariableWatcherVariableAccessed}
        1    0.000    0.000    0.000    0.000 __init__.py:1392(__init__)
        6    0.000    0.000    0.000    0.000 transforms.py:299(p1)
       34    0.000    0.000    0.000    0.000 {method 'find' of 'str' objects}
        1    0.000    0.000    0.000    0.000 backend_bases.py:2333(mpl_disconnect)
      156    0.000    0.000    0.000    0.000 fractions.py:282(numerator)
        4    0.000    0.000    0.000    0.000 {method 'cumsum' of 'numpy.ndarray' objects}
        4    0.000    0.000    0.000    0.000 {built-in method resize}
        4    0.000    0.000    0.000    0.000 backend_pdf.py:2342(pop)
       78    0.000    0.000    0.000    0.000 ops.py:113(tensor_id)
       20    0.000    0.000    0.000    0.000 saveable_object.py:80(device)
        5    0.000    0.000    0.000    0.000 enum.py:12(_is_descriptor)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:2236(GraphicsContextPdf)
        9    0.000    0.000    0.000    0.000 np_utils.py:340(np_doc_only)
       39    0.000    0.000    0.000    0.000 function.py:2421(<dictcomp>)
        4    0.000    0.000    0.000    0.000 axis.py:2214(get_minpos)
       40    0.000    0.000    0.000    0.000 op_def_library.py:46(_AttrValue)
       50    0.000    0.000    0.000    0.000 {method 'index' of 'list' objects}
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:441(enter)
        4    0.000    0.000    0.000    0.000 ops.py:2979(_variable_creator_scope)
       39    0.000    0.000    0.000    0.000 backend_pdf.py:417(_paint_path)
       26    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tf_session.TF_DeleteImportGraphDefResults}
        2    0.000    0.000    0.000    0.000 figure.py:150(__contains__)
        1    0.000    0.000    0.000    0.000 backend_bases.py:1770(close_event)
       54    0.000    0.000    0.000    0.000 text.py:733(get_color)
       16    0.000    0.000    0.000    0.000 _base.py:2658(<genexpr>)
        8    0.000    0.000    0.000    0.000 init_ops_v2.py:1020(__init__)
        4    0.000    0.000    0.000    0.000 compile_utils.py:549(map_to_output_names)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetConfig}
        2    0.000    0.000    0.000    0.000 distribute_lib.py:2892(_scope)
        1    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:54(RendererPDFPSBase)
        8    0.000    0.000    0.000    0.000 init_ops.py:1401(_compute_fans)
       76    0.000    0.000    0.000    0.000 traceable_stack.py:115(peek_top_obj)
       32    0.000    0.000    0.000    0.000 {built-in method numpy.core._multiarray_umath.normalize_axis_index}
       16    0.000    0.000    0.000    0.000 ticker.py:1894(__call__)
        4    0.000    0.000    0.000    0.000 __init__.py:552(__init__)
        2    0.000    0.000    0.000    0.000 _datasource.py:280(_splitzipext)
       15    0.000    0.000    0.000    0.000 node.py:123(parent_nodes)
        2    0.000    0.000    0.000    0.000 file_io.py:796(stat_v2)
       32    0.000    0.000    0.000    0.000 ticker.py:270(set_locs)
        8    0.000    0.000    0.000    0.000 nn_ops.py:3293(_tf_deterministic_ops)
        1    0.000    0.000    0.000    0.000 deprecation.py:365(<genexpr>)
       74    0.000    0.000    0.000    0.000 policy.py:406(compute_dtype)
        5    0.000    0.000    0.000    0.000 _collections_abc.py:349(__subclasshook__)
      143    0.000    0.000    0.000    0.000 inspect.py:2535(annotation)
       27    0.000    0.000    0.000    0.000 backend_agg.py:264(get_canvas_width_height)
        8    0.000    0.000    0.000    0.000 init_ops_v2.py:997(_assert_float_dtype)
       37    0.000    0.000    0.000    0.000 nested_structure_coder.py:437(can_decode)
        3    0.000    0.000    0.000    0.000 sre_parse.py:258(getwhile)
       50    0.000    0.000    0.000    0.000 markers.py:347(get_snap_threshold)
       10    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
      149    0.000    0.000    0.000    0.000 {method 'append' of 'collections.deque' objects}
       66    0.000    0.000    0.000    0.000 backend_bases.py:806(get_clip_path)
       12    0.000    0.000    0.000    0.000 ops.py:4258(get_name_scope)
        4    0.000    0.000    0.000    0.000 transforms.py:1282(_iter_break_from_left_to_right)
       64    0.000    0.000    0.000    0.000 {method 'write' of '_io.BytesIO' objects}
        1    0.000    0.000    0.000    0.000 load.py:360(adjust_debug_info_func_names)
       32    0.000    0.000    0.000    0.000 ticker.py:549(set_useOffset)
       11    0.000    0.000    0.000    0.000 functional_saver.py:44(__init__)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1520(path_hook_for_FileFinder)
        3    0.000    0.000    0.000    0.000 {built-in method posix.getcwd}
       86    0.000    0.000    0.000    0.000 load.py:373(get)
       92    0.000    0.000    0.000    0.000 {method '__contains__' of 'frozenset' objects}
        2    0.000    0.000    0.000    0.000 __init__.py:1674(sanitize_sequence)
      124    0.000    0.000    0.000    0.000 ops.py:170(__enter__)
      105    0.000    0.000    0.000    0.000 object_identity.py:38(unwrapped)
        4    0.000    0.000    0.000    0.000 core.py:672(getdata)
        4    0.000    0.000    0.000    0.000 inspect.py:1838(_signature_is_functionlike)
       43    0.000    0.000    0.000    0.000 context.py:803(scope_name)
       56    0.000    0.000    0.000    0.000 regularizers.py:360(get)
       29    0.000    0.000    0.000    0.000 ops.py:4981(switch_to_thread_local)
        8    0.000    0.000    0.000    0.000 figure.py:135(current_key_axes)
        1    0.000    0.000    0.000    0.000 __init__.py:199(disconnect)
        3    0.000    0.000    0.000    0.000 sre_parse.py:84(opengroup)
       73    0.000    0.000    0.000    0.000 weakref.py:213(keys)
       26    0.000    0.000    0.000    0.000 function.py:381(__init__)
       16    0.000    0.000    0.000    0.000 base_layer.py:1000(<genexpr>)
       12    0.000    0.000    0.000    0.000 axis.py:750(get_scale)
       11    0.000    0.000    0.000    0.000 def_function.py:556(_get_key_for_call_stats)
       66    0.000    0.000    0.000    0.000 backend_bases.py:844(get_rgb)
       12    0.000    0.000    0.000    0.000 patches.py:488(set_hatch)
        9    0.000    0.000    0.000    0.000 training.py:152(is_functional_model_init_params)
        1    0.000    0.000    0.000    0.000 inspect.py:2543(replace)
       26    0.000    0.000    0.000    0.000 function.py:443(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method numpy.empty}
        6    0.000    0.000    0.000    0.000 tf_utils.py:289(_convert_object_or_list)
       40    0.000    0.000    0.000    0.000 cycler.py:371(<genexpr>)
        1    0.000    0.000    0.000    0.000 load.py:792(_restore_layer_unconditional_losses)
        4    0.000    0.000    0.000    0.000 axis.py:2499(get_minpos)
       66    0.000    0.000    0.000    0.000 backend_bases.py:1000(get_hatch_color)
        1    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:56(register_tensor_conversion_function)
       34    0.000    0.000    0.000    0.000 function.py:1974(structured_input_signature)
        2    0.000    0.000    0.000    0.000 transforms.py:2569(__init__)
       16    0.000    0.000    0.000    0.000 _ufunc_config.py:429(__init__)
       27    0.000    0.000    0.000    0.000 {method 'get_bitmap_offset' of 'matplotlib.ft2font.FT2Font' objects}
        8    0.000    0.000    0.000    0.000 {function Unpickler.find_class at 0x7fe92b9d8820}
        3    0.000    0.000    0.000    0.000 base_layer.py:2070(input)
       66    0.000    0.000    0.000    0.000 backend_bases.py:1008(get_hatch_linewidth)
       66    0.000    0.000    0.000    0.000 backend_bases.py:856(get_snap)
       78    0.000    0.000    0.000    0.000 node.py:118(keras_inputs)
        4    0.000    0.000    0.000    0.000 figure.py:73(get)
        7    0.000    0.000    0.000    0.000 device_spec.py:320(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method posix.mkdir}
        2    0.000    0.000    0.000    0.000 figure.py:519(set_constrained_layout_pads)
       64    0.000    0.000    0.000    0.000 fromnumeric.py:3071(_ndim_dispatcher)
       19    0.000    0.000    0.000    0.000 __init__.py:235(wrapper)
        1    0.000    0.000    0.000    0.000 cp1252.py:33(getregentry)
        2    0.000    0.000    0.000    0.000 training.py:2629(_get_distribution_strategy)
        1    0.000    0.000    0.000    0.000 deprecation.py:336(deprecated_args)
       50    0.000    0.000    0.000    0.000 {method 'copy' of 'dict' objects}
        1    0.000    0.000    0.000    0.000 _dill.py:465(__init__)
        2    0.000    0.000    0.000    0.000 distribute_lib.py:2853(__init__)
        4    0.000    0.000    0.000    0.000 inspect.py:2096(_signature_from_builtin)
        2    0.000    0.000    0.000    0.000 deprecation.py:211(finalize)
       32    0.000    0.000    0.000    0.000 base_layer_utils.py:302(<genexpr>)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:2441(PdfPages)
       24    0.000    0.000    0.000    0.000 _collections_abc.py:367(__subclasshook__)
       50    0.000    0.000    0.000    0.000 lines.py:881(get_drawstyle)
        2    0.000    0.000    0.000    0.000 rcsetup.py:150(validate_bool)
       10    0.000    0.000    0.000    0.000 __init__.py:605(clear)
       76    0.000    0.000    0.000    0.000 backend_bases.py:989(get_hatch)
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_file_io.Stat}
        4    0.000    0.000    0.000    0.000 {method 'get_sfnt_table' of 'matplotlib.ft2font.FT2Font' objects}
       50    0.000    0.000    0.000    0.000 markers.py:331(get_alt_path)
       20    0.000    0.000    0.000    0.000 saveable_object.py:61(__init__)
       23    0.000    0.000    0.000    0.000 generic_utils.py:772(validate_kwargs)
       54    0.000    0.000    0.000    0.000 artist.py:785(get_alpha)
       39    0.000    0.000    0.000    0.000 function.py:2427(<dictcomp>)
       50    0.000    0.000    0.000    0.000 markers.py:271(get_capstyle)
       28    0.000    0.000    0.000    0.000 backend_bases.py:911(set_dashes)
        6    0.000    0.000    0.000    0.000 context.py:2390(_tmp_in_graph_mode)
        1    0.000    0.000    0.000    0.000 utils_impl.py:218(get_variables_dir)
        2    0.000    0.000    0.000    0.000 backend_agg.py:112(_update_methods)
       21    0.000    0.000    0.000    0.000 {method 'rfind' of 'str' objects}
       54    0.000    0.000    0.000    0.000 text.py:248(get_rotation_mode)
       24    0.000    0.000    0.000    0.000 tensor_shape.py:97(dimension_value)
       12    0.000    0.000    0.000    0.000 load.py:1035(_get_keras_attr)
       12    0.000    0.000    0.000    0.000 _datasource.py:105(_load)
       14    0.000    0.000    0.000    0.000 _base.py:2586(_get_axis_list)
       13    0.000    0.000    0.000    0.000 context.py:934(rewriter_toggle)
       19    0.000    0.000    0.000    0.000 sre_compile.py:453(_get_iscased)
        4    0.000    0.000    0.000    0.000 figure.py:1832(<lambda>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:2431(finalize)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:598(<genexpr>)
       37    0.000    0.000    0.000    0.000 axis.py:145(<dictcomp>)
       12    0.000    0.000    0.000    0.000 np_utils.py:165(_add_blank_line)
       20    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetRestartOnThread}
        6    0.000    0.000    0.000    0.000 functional.py:1109(get_node_index)
        1    0.000    0.000    0.000    0.000 functional.py:334(<listcomp>)
       30    0.000    0.000    0.000    0.000 variables.py:1182(_gather_saveables_for_checkpoint)
        1    0.000    0.000    0.000    0.000 utils_impl.py:259(get_debug_dir)
        8    0.000    0.000    0.000    0.000 ops.py:5185(__enter__)
        2    0.000    0.000    0.000    0.000 pyplot.py:319(draw_if_interactive)
       22    0.000    0.000    0.000    0.000 tensor_shape.py:1169(<genexpr>)
        1    0.000    0.000    0.000    0.000 losses.py:213(__init__)
        4    0.000    0.000    0.000    0.000 tf_utils.py:420(assert_no_legacy_layers)
       15    0.000    0.000    0.000    0.000 {built-in method _imp.is_frozen}
       18    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_MonitoringBoolGaugeCellSet}
        2    0.000    0.000    0.000    0.000 warnings.py:181(_add_filter)
       38    0.000    0.000    0.000    0.000 resource_variable_ops.py:588(trainable)
        8    0.000    0.000    0.000    0.000 tensor_util.py:986(is_tensor)
        5    0.000    0.000    0.000    0.000 load.py:805(_restore_layer_activation_loss)
        1    0.000    0.000    0.000    0.000 io_utils.py:57(path_to_string)
       26    0.000    0.000    0.000    0.000 importer.py:116(_ProcessInputMapParam)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1250(__init__)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:524(__exit__)
        6    0.000    0.000    0.000    0.000 transforms.py:963(minposx)
       32    0.000    0.000    0.000    0.000 ticker.py:621(set_useMathText)
        1    0.000    0.000    0.000    0.000 context.py:1225(<listcomp>)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_NewContextOptions}
       72    0.000    0.000    0.000    0.000 object_identity.py:78(unwrapped)
        3    0.000    0.000    0.000    0.000 optimizer_v2.py:1045(_init_set_name)
        2    0.000    0.000    0.000    0.000 _base.py:2719(<listcomp>)
        8    0.000    0.000    0.000    0.000 backend_bases.py:756(copy_properties)
       32    0.000    0.000    0.000    0.000 ops.py:3156(_set_control_flow_context)
        2    0.000    0.000    0.000    0.000 {built-in method setMouseTracking}
       50    0.000    0.000    0.000    0.000 markers.py:315(get_path)
       16    0.000    0.000    0.000    0.000 generic_utils.py:77(__init__)
       50    0.000    0.000    0.000    0.000 markers.py:268(get_joinstyle)
       40    0.000    0.000    0.000    0.000 data_structures.py:140(__init__)
        4    0.000    0.000    0.000    0.000 base_layer_utils.py:270(unnest_if_single_tensor)
        4    0.000    0.000    0.000    0.000 functional.py:626(<setcomp>)
       18    0.000    0.000    0.000    0.000 json_utils.py:68(<genexpr>)
        4    0.000    0.000    0.000    0.000 figure.py:147(__call__)
       40    0.000    0.000    0.000    0.000 device_spec.py:426(__hash__)
        2    0.000    0.000    0.000    0.000 nest.py:1234(<listcomp>)
       16    0.000    0.000    0.000    0.000 input_spec.py:75(<dictcomp>)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:397(has_location)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2029(_clip_dispatcher)
        2    0.000    0.000    0.000    0.000 figure.py:61(__init__)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:939(__init__)
       16    0.000    0.000    0.000    0.000 base_layer_utils.py:165(<genexpr>)
       36    0.000    0.000    0.000    0.000 resource_variable_ops.py:518(shape)
       28    0.000    0.000    0.000    0.000 axis.py:381(<dictcomp>)
       50    0.000    0.000    0.000    0.000 lines.py:588(get_markevery)
       12    0.000    0.000    0.000    0.000 functional.py:776(<setcomp>)
        2    0.000    0.000    0.000    0.000 figure.py:462(set_tight_layout)
       17    0.000    0.000    0.000    0.000 ops.py:6423(<genexpr>)
        4    0.000    0.000    0.000    0.000 {built-in method _locale.nl_langinfo}
        2    0.000    0.000    0.000    0.000 figure.py:917(get_facecolor)
        2    0.000    0.000    0.000    0.000 {built-in method setSizePolicy}
        4    0.000    0.000    0.000    0.000 __init__.py:540(__init__)
        1    0.000    0.000    0.000    0.000 io_utils.py:40(_path_to_string)
       28    0.000    0.000    0.000    0.000 axis.py:392(<dictcomp>)
       61    0.000    0.000    0.000    0.000 inspect.py:2849(return_annotation)
       50    0.000    0.000    0.000    0.000 backend_bases.py:663(points_to_pixels)
        6    0.000    0.000    0.000    0.000 {method 'splitlines' of 'str' objects}
        2    0.000    0.000    0.000    0.000 nest.py:1232(<listcomp>)
        3    0.000    0.000    0.000    0.000 base_layer.py:2578(_get_node_attribute_at_index)
       60    0.000    0.000    0.000    0.000 ticker.py:291(_set_locator)
        2    0.000    0.000    0.000    0.000 warnings.py:458(__enter__)
       38    0.000    0.000    0.000    0.000 constraints.py:299(get)
       45    0.000    0.000    0.000    0.000 function.py:2447(fullargspec)
        2    0.000    0.000    0.000    0.000 figure.py:929(get_dpi)
       32    0.000    0.000    0.000    0.000 tensor_shape.py:790(_v2_behavior)
       16    0.000    0.000    0.000    0.000 op_def_library.py:166(_MakeBool)
        8    0.000    0.000    0.000    0.000 backend.py:360(global_learning_phase_is_set)
        7    0.000    0.000    0.000    0.000 layer_utils.py:106(<listcomp>)
       12    0.000    0.000    0.000    0.000 {method 'get' of 'mappingproxy' objects}
        1    0.000    0.000    0.000    0.000 weakref.py:102(__init__)
       40    0.000    0.000    0.000    0.000 base_layer.py:2821(<genexpr>)
        1    0.000    0.000    0.000    0.000 deprecation.py:385(_get_arg_names_to_ok_vals)
        2    0.000    0.000    0.000    0.000 file_io.py:50(__init__)
        1    0.000    0.000    0.000    0.000 losses.py:84(__init__)
       71    0.000    0.000    0.000    0.000 base.py:565(_unconditional_dependency_names)
        2    0.000    0.000    0.000    0.000 sre_compile.py:432(_generate_overlap_table)
        1    0.000    0.000    0.000    0.000 {built-in method destroy}
       10    0.000    0.000    0.000    0.000 node.py:116(<listcomp>)
        6    0.000    0.000    0.000    0.000 util.py:1078(__init__)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:1812(_nonzero_dispatcher)
        2    0.000    0.000    0.000    0.000 compile_utils.py:280(__init__)
       28    0.000    0.000    0.000    0.000 axis.py:368(<dictcomp>)
        6    0.000    0.000    0.000    0.000 transforms.py:363(height)
        2    0.000    0.000    0.000    0.000 nest.py:1137(<lambda>)
       28    0.000    0.000    0.000    0.000 keras_tensor.py:43(keras_tensors_enabled)
        1    0.000    0.000    0.000    0.000 enum.py:58(__init__)
       12    0.000    0.000    0.000    0.000 figure.py:69(<listcomp>)
       36    0.000    0.000    0.000    0.000 resource_variable_ops.py:498(dtype)
       27    0.000    0.000    0.000    0.000 ops.py:3117(seed)
       15    0.000    0.000    0.000    0.000 functional.py:905(<lambda>)
        5    0.000    0.000    0.000    0.000 enum.py:626(_generate_next_value_)
        4    0.000    0.000    0.000    0.000 deprecation.py:112(deprecated)
       32    0.000    0.000    0.000    0.000 function_base.py:1148(_diff_dispatcher)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1394(__init__)
        2    0.000    0.000    0.000    0.000 pyplot.py:211(_get_required_interactive_framework)
        2    0.000    0.000    0.000    0.000 data_structures.py:66(_should_wrap_tuple)
        2    0.000    0.000    0.000    0.000 {built-in method setAlignment}
       19    0.000    0.000    0.000    0.000 {method 'reverse' of 'list' objects}
        3    0.000    0.000    0.000    0.000 base_layer_utils.py:315(is_in_eager_or_tf_function)
        2    0.000    0.000    0.000    0.000 deprecation.py:192(_deprecated_property)
       22    0.000    0.000    0.000    0.000 tensor_shape.py:849(__bool__)
        1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:327(_get_default_replica_context)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:2837(__init__)
       24    0.000    0.000    0.000    0.000 load.py:539(<genexpr>)
       16    0.000    0.000    0.000    0.000 base_layer.py:2468(<genexpr>)
       10    0.000    0.000    0.000    0.000 node.py:115(<listcomp>)
       15    0.000    0.000    0.000    0.000 functional.py:821(_make_node_key)
        2    0.000    0.000    0.000    0.000 backend_bases.py:3503(draw_if_interactive)
        1    0.000    0.000    0.000    0.000 font_manager.py:1383(is_opentype_cff_font)
        8    0.000    0.000    0.000    0.000 _base.py:1281(get_aspect)
       39    0.000    0.000    0.000    0.000 tensor_spec.py:63(shape)
       32    0.000    0.000    0.000    0.000 fromnumeric.py:2486(_ptp_dispatcher)
        1    0.000    0.000    0.000    0.000 <frozen zipimport>:63(__init__)
        1    0.000    0.000    0.000    0.000 np_arrays.py:91(ndarray)
        2    0.000    0.000    0.000    0.000 type_check.py:279(iscomplexobj)
       12    0.000    0.000    0.000    0.000 _base.py:593(get_window_extent)
        1    0.000    0.000    0.000    0.000 __init__.py:43(normalize_encoding)
       32    0.000    0.000    0.000    0.000 {method 'get_char_index' of 'matplotlib.ft2font.FT2Font' objects}
       16    0.000    0.000    0.000    0.000 execute.py:184(make_bool)
        4    0.000    0.000    0.000    0.000 graph_view.py:176(root)
        5    0.000    0.000    0.000    0.000 {method 'translate' of 'bytearray' objects}
        8    0.000    0.000    0.000    0.000 backend_pdf.py:2290(joinstyle_cmd)
        2    0.000    0.000    0.000    0.000 {built-in method setFocusPolicy}
        3    0.000    0.000    0.000    0.000 __init__.py:42(__getattr__)
        8    0.000    0.000    0.000    0.000 transforms.py:259(y0)
        6    0.000    0.000    0.000    0.000 base_layer.py:2383(_dtype)
       18    0.000    0.000    0.000    0.000 monitoring.py:295(__init__)
       32    0.000    0.000    0.000    0.000 scale.py:44(__init__)
        6    0.000    0.000    0.000    0.000 _collections_abc.py:719(__iter__)
        1    0.000    0.000    0.000    0.000 Experiment.py:203(<listcomp>)
        8    0.000    0.000    0.000    0.000 __init__.py:91(__init__)
        9    0.000    0.000    0.000    0.000 context.py:1841(global_seed)
       26    0.000    0.000    0.000    0.000 ops.py:3112(seed)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:124(set_active)
       28    0.000    0.000    0.000    0.000 transforms.py:2051(get_matrix)
       26    0.000    0.000    0.000    0.000 importer.py:193(<genexpr>)
        8    0.000    0.000    0.000    0.000 _base.py:949(get_axes_locator)
        4    0.000    0.000    0.000    0.000 tf_utils.py:434(<listcomp>)
       14    0.000    0.000    0.000    0.000 {method 'strip' of 'str' objects}
        8    0.000    0.000    0.000    0.000 base_layer.py:2505(<listcomp>)
       39    0.000    0.000    0.000    0.000 backend_pdf.py:396(pdfRepr)
        1    0.000    0.000    0.000    0.000 deprecation.py:395(_get_deprecated_positional_arguments)
       16    0.000    0.000    0.000    0.000 axis.py:716(get_remove_overlapping_locs)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1007(<listcomp>)
       24    0.000    0.000    0.000    0.000 axis.py:1526(set_units)
       10    0.000    0.000    0.000    0.000 revived_types.py:170(registered_identifiers)
       20    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_Py_TapeSetStopOnThread}
        4    0.000    0.000    0.000    0.000 training.py:2474(<genexpr>)
       59    0.000    0.000    0.000    0.000 nested_structure_coder.py:342(do_decode)
       16    0.000    0.000    0.000    0.000 tf_decorator.py:262(decorated_target)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_DeleteContextOptions}
        1    0.000    0.000    0.000    0.000 errors_impl.py:297(__init__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:416(_get_metric_objects)
       17    0.000    0.000    0.000    0.000 function.py:1581(<listcomp>)
       38    0.000    0.000    0.000    0.000 device_spec.py:260(job)
        2    0.000    0.000    0.000    0.000 __init__.py:223(_releaseLock)
       12    0.000    0.000    0.000    0.000 backend_pdf.py:366(__hash__)
        7    0.000    0.000    0.000    0.000 {method 'expandtabs' of 'str' objects}
       12    0.000    0.000    0.000    0.000 generic_utils.py:781(validate_config)
        2    0.000    0.000    0.000    0.000 gridspec.py:496(<dictcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:1506(have_units)
        8    0.000    0.000    0.000    0.000 inspect.py:1826(_signature_is_builtin)
        2    0.000    0.000    0.000    0.000 warnings.py:477(__exit__)
       11    0.000    0.000    0.000    0.000 nested_structure_coder.py:247(<listcomp>)
       24    0.000    0.000    0.000    0.000 spines.py:212(get_path)
       13    0.000    0.000    0.000    0.000 {built-in method from_bytes}
        2    0.000    0.000    0.000    0.000 {built-in method setAllowedAreas}
        2    0.000    0.000    0.000    0.000 figure.py:91(_entry_from_axes)
       16    0.000    0.000    0.000    0.000 artist.py:1094(<genexpr>)
       24    0.000    0.000    0.000    0.000 policy.py:453(name)
        2    0.000    0.000    0.000    0.000 __init__.py:2310(_check_getitem)
       15    0.000    0.000    0.000    0.000 {built-in method sys._getframe}
        6    0.000    0.000    0.000    0.000 transforms.py:967(minposy)
        2    0.000    0.000    0.000    0.000 npyio.py:1319(WriteWrap)
       36    0.000    0.000    0.000    0.000 device_spec.py:268(task)
       16    0.000    0.000    0.000    0.000 distribute_lib.py:771(extended)
       31    0.000    0.000    0.000    0.000 util.py:291(<genexpr>)
        8    0.000    0.000    0.000    0.000 base_layer.py:2968(_split_out_first_arg)
       26    0.000    0.000    0.000    0.000 func_graph.py:738(<listcomp>)
       11    0.000    0.000    0.000    0.000 inspect.py:80(ismethod)
        2    0.000    0.000    0.000    0.000 {built-in method setFocus}
        3    0.000    0.000    0.000    0.000 backend_bases.py:1704(_fix_ipython_backend2gui)
       44    0.000    0.000    0.000    0.000 base.py:561(_unconditional_checkpoint_dependencies)
        2    0.000    0.000    0.000    0.000 gridspec.py:622(__init__)
        4    0.000    0.000    0.000    0.000 __init__.py:798(__init__)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:503(__init__)
        1    0.000    0.000    0.000    0.000 nest.py:1310(yield_flat_paths)
       12    0.000    0.000    0.000    0.000 axis.py:1915(get_label_position)
        4    0.000    0.000    0.000    0.000 copyreg.py:90(__newobj__)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:317(Reference)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextListDevices}
        8    0.000    0.000    0.000    0.000 ops.py:5193(__exit__)
       36    0.000    0.000    0.000    0.000 device_spec.py:264(replica)
        4    0.000    0.000    0.000    0.000 figure.py:194(update)
       20    0.000    0.000    0.000    0.000 saveable_object_util.py:99(_read_variable_closure)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:441(Stream)
       34    0.000    0.000    0.000    0.000 shape_base.py:20(_atleast_1d_dispatcher)
        2    0.000    0.000    0.000    0.000 pyplot.py:755(get_fignums)
       17    0.000    0.000    0.000    0.000 load.py:673(_config_node_setter)
       26    0.000    0.000    0.000    0.000 importer.py:128(_ProcessReturnElementsParam)
        1    0.000    0.000    0.000    0.000 enum.py:484(_check_for_existing_members)
        5    0.000    0.000    0.000    0.000 backend_bases.py:1222(__init__)
       26    0.000    0.000    0.000    0.000 function.py:445(<listcomp>)
        1    0.000    0.000    0.000    0.000 functools.py:487(lru_cache)
        4    0.000    0.000    0.000    0.000 functional.py:938(<listcomp>)
        6    0.000    0.000    0.000    0.000 graph_view.py:145(__init__)
        1    0.000    0.000    0.000    0.000 util.py:700(__init__)
        2    0.000    0.000    0.000    0.000 file_io.py:89(_prepare_value)
        8    0.000    0.000    0.000    0.000 {built-in method math.sqrt}
        5    0.000    0.000    0.000    0.000 sre_compile.py:65(_combine_flags)
        3    0.000    0.000    0.000    0.000 training_utils.py:1925(_is_graph_model)
       20    0.000    0.000    0.000    0.000 saveable_object_util.py:359(<lambda>)
        8    0.000    0.000    0.000    0.000 sre_parse.py:168(__setitem__)
       27    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:64(flipy)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:2658(__init__)
        2    0.000    0.000    0.000    0.000 {built-in method update}
        1    0.000    0.000    0.000    0.000 codecs.py:94(__new__)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:725(find_spec)
        2    0.000    0.000    0.000    0.000 __init__.py:1180(get_backend)
        6    0.000    0.000    0.000    0.000 widgets.py:35(__init__)
        8    0.000    0.000    0.000    0.000 figure.py:480(get_constrained_layout)
        2    0.000    0.000    0.000    0.000 sre_parse.py:355(_escape)
        2    0.000    0.000    0.000    0.000 {built-in method setAttribute}
        4    0.000    0.000    0.000    0.000 weakref.py:345(remove)
        8    0.000    0.000    0.000    0.000 node.py:276(is_keras_tensor)
        2    0.000    0.000    0.000    0.000 figure.py:913(get_edgecolor)
        8    0.000    0.000    0.000    0.000 base_layer.py:2629(<genexpr>)
        4    0.000    0.000    0.000    0.000 backend_pdf.py:184(is_string_like)
        5    0.000    0.000    0.000    0.000 load.py:146(_is_graph_network)
       38    0.000    0.000    0.000    0.000 device_spec.py:272(device_type)
       27    0.000    0.000    0.000    0.000 backend_bases.py:640(flipy)
        2    0.000    0.000    0.000    0.000 file_io.py:183(tell)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:182(<dictcomp>)
        1    0.000    0.000    0.000    0.000 np_utils.py:205(<listcomp>)
       32    0.000    0.000    0.000    0.000 {method 'getvalue' of '_io.BytesIO' objects}
       16    0.000    0.000    0.000    0.000 ops.py:4575(control_inputs)
       17    0.000    0.000    0.000    0.000 {method 'clear' of 'dict' objects}
       12    0.000    0.000    0.000    0.000 figure.py:71(<listcomp>)
        5    0.000    0.000    0.000    0.000 {method 'insert' of 'list' objects}
        2    0.000    0.000    0.000    0.000 __init__.py:44(get_projection_class)
        8    0.000    0.000    0.000    0.000 base_layer_utils.py:475(training)
       20    0.000    0.000    0.000    0.000 graph_view.py:164(saveables_cache)
       12    0.000    0.000    0.000    0.000 node.py:221(output_tensors)
       12    0.000    0.000    0.000    0.000 scale.py:80(limit_range_for_scale)
        5    0.000    0.000    0.000    0.000 colors.py:276(<genexpr>)
       18    0.000    0.000    0.000    0.000 function.py:1969(inputs)
        2    0.000    0.000    0.000    0.000 os.py:800(fsencode)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:377(Operator)
        2    0.000    0.000    0.000    0.000 threading.py:1306(current_thread)
        4    0.000    0.000    0.000    0.000 weakref.py:73(__eq__)
       16    0.000    0.000    0.000    0.000 ops.py:6769(_op_to_colocate_with)
        8    0.000    0.000    0.000    0.000 {built-in method math.copysign}
        1    0.000    0.000    0.000    0.000 load.py:300(<listcomp>)
       24    0.000    0.000    0.000    0.000 data_structures.py:747(<dictcomp>)
        8    0.000    0.000    0.000    0.000 axis.py:565(__init__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:370(_create_ordered_metrics)
        3    0.000    0.000    0.000    0.000 functional.py:149(<lambda>)
       36    0.000    0.000    0.000    0.000 data_structures.py:475(_make_storage)
       36    0.000    0.000    0.000    0.000 device_spec.py:276(device_index)
       16    0.000    0.000    0.000    0.000 axis.py:1298(<listcomp>)
        6    0.000    0.000    0.000    0.000 posixpath.py:131(splitdrive)
        8    0.000    0.000    0.000    0.000 base.py:543(_setattr_tracking)
       12    0.000    0.000    0.000    0.000 _internal.py:801(<genexpr>)
        6    0.000    0.000    0.000    0.000 backend_pdf.py:2287(capstyle_cmd)
       12    0.000    0.000    0.000    0.000 backend_config.py:67(floatx)
        4    0.000    0.000    0.000    0.000 transforms.py:249(x0)
        1    0.000    0.000    0.000    0.000 load.py:589(<dictcomp>)
        2    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1088(__init__)
        1    0.000    0.000    0.000    0.000 experiment_3.py:26(NeuralNetwork3)
        1    0.000    0.000    0.000    0.000 context.py:1245(list_physical_devices)
        7    0.000    0.000    0.000    0.000 functional.py:768(<genexpr>)
        1    0.000    0.000    0.000    0.000 weakref.py:284(update)
       15    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:40(_relax_case)
        2    0.000    0.000    0.000    0.000 _backend_pdf_ps.py:27(__init__)
        2    0.000    0.000    0.000    0.000 _base.py:3103(set_axis_on)
       26    0.000    0.000    0.000    0.000 func_graph.py:748(<listcomp>)
       16    0.000    0.000    0.000    0.000 base_layer.py:2515(_call_arg_was_passed)
        4    0.000    0.000    0.000    0.000 artist.py:1024(get_zorder)
       22    0.000    0.000    0.000    0.000 np_math_ops.py:926(_wrap)
        1    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:104(_path_isdir)
        7    0.000    0.000    0.000    0.000 functional.py:141(<genexpr>)
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:964(get_filename)
        1    0.000    0.000    0.000    0.000 enum.py:153(<dictcomp>)
       12    0.000    0.000    0.000    0.000 {built-in method math.ceil}
        3    0.000    0.000    0.000    0.000 _collections_abc.py:672(keys)
        4    0.000    0.000    0.000    0.000 _base.py:289(<genexpr>)
        2    0.000    0.000    0.000    0.000 _base.py:299(_setdefaults)
        1    0.000    0.000    0.000    0.000 util.py:855(expect_partial)
        8    0.000    0.000    0.000    0.000 inspect.py:285(isbuiltin)
       12    0.000    0.000    0.000    0.000 base_layer.py:1265(input_spec)
        4    0.000    0.000    0.000    0.000 _base.py:2519(<listcomp>)
        1    0.000    0.000    0.000    0.000 __init__.py:772(__init__)
        4    0.000    0.000    0.000    0.000 backend_bases.py:1738(is_saving)
        1    0.000    0.000    0.000    0.000 load.py:604(<listcomp>)
        4    0.000    0.000    0.000    0.000 compile_utils.py:37(__init__)
        8    0.000    0.000    0.000    0.000 compile_utils.py:579(<genexpr>)
        1    0.000    0.000    0.000    0.000 Experiment.py:123(__init__)
        2    0.000    0.000    0.000    0.000 warnings.py:437(__init__)
        2    0.000    0.000    0.000    0.000 {instance}
       15    0.000    0.000    0.000    0.000 base_layer.py:2825(<genexpr>)
       11    0.000    0.000    0.000    0.000 {method 'upper' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {built-in method _stat.S_ISREG}
        2    0.000    0.000    0.000    0.000 {built-in method _imp.exec_dynamic}
        1    0.000    0.000    0.000    0.000 _collections_abc.py:870(__iter__)
       16    0.000    0.000    0.000    0.000 distribute_lib.py:2973(value_container)
        4    0.000    0.000    0.000    0.000 _pylab_helpers.py:56(<genexpr>)
       15    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
       16    0.000    0.000    0.000    0.000 layer_utils.py:107(<listcomp>)
       16    0.000    0.000    0.000    0.000 parse.py:99(_noop)
       10    0.000    0.000    0.000    0.000 nested_structure_coder.py:365(do_decode)
       12    0.000    0.000    0.000    0.000 transforms.py:1294(depth)
        8    0.000    0.000    0.000    0.000 base_layer.py:2442(_handle_activity_regularization)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:2888(__init__)
        2    0.000    0.000    0.000    0.000 __init__.py:2112(__init__)
       16    0.000    0.000    0.000    0.000 ops.py:4634(<genexpr>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:270(_should_broadcast)
        2    0.000    0.000    0.000    0.000 _datasource.py:258(__del__)
        1    0.000    0.000    0.000    0.000 os.py:752(decode)
       16    0.000    0.000    0.000    0.000 ticker.py:1897(tick_values)
        3    0.000    0.000    0.000    0.000 generic_utils.py:786(default)
        3    0.000    0.000    0.000    0.000 {method 'items' of 'mappingproxy' objects}
        6    0.000    0.000    0.000    0.000 generic_utils.py:113(serialize_keras_class_and_config)
        4    0.000    0.000    0.000    0.000 codecs.py:186(__init__)
        1    0.000    0.000    0.000    0.000 {closeEvent}
       26    0.000    0.000    0.000    0.000 function_deserialization.py:363(<lambda>)
        1    0.000    0.000    0.000    0.000 os.py:1073(__subclasshook__)
       16    0.000    0.000    0.000    0.000 base_layer.py:2506(<genexpr>)
        1    0.000    0.000    0.000    0.000 loss_reduction.py:65(validate)
        2    0.000    0.000    0.000    0.000 _pylab_helpers.py:34(get_fig_manager)
        2    0.000    0.000    0.000    0.000 _base.py:656(_request_autoscale_view)
        4    0.000    0.000    0.000    0.000 artist.py:1004(get_label)
        8    0.000    0.000    0.000    0.000 base_layer.py:853(compute_mask)
        3    0.000    0.000    0.000    0.000 signature_serialization.py:215(__iter__)
        5    0.000    0.000    0.000    0.000 functional.py:1026(_should_skip_first_node)
        2    0.000    0.000    0.000    0.000 {method 'acquire' of '_thread.RLock' objects}
        1    0.000    0.000    0.000    0.000 backend_mixed.py:7(MixedModeRenderer)
       16    0.000    0.000    0.000    0.000 fromnumeric.py:2876(_prod_dispatcher)
       17    0.000    0.000    0.000    0.000 function.py:1586(<genexpr>)
        4    0.000    0.000    0.000    0.000 {method 'startswith' of 'bytes' objects}
        8    0.000    0.000    0.000    0.000 {built-in method sys.is_finalizing}
       17    0.000    0.000    0.000    0.000 function.py:2463(input_signature)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:391(Verbatim)
       16    0.000    0.000    0.000    0.000 {method 'end' of 're.Match' objects}
        9    0.000    0.000    0.000    0.000 {built-in method builtins.globals}
       10    0.000    0.000    0.000    0.000 fromnumeric.py:2333(_all_dispatcher)
       10    0.000    0.000    0.000    0.000 {method 'extendleft' of 'collections.deque' objects}
        2    0.000    0.000    0.000    0.000 text.py:1122(set_rotation)
        6    0.000    0.000    0.000    0.000 variables.py:63(_make_getter)
        4    0.000    0.000    0.000    0.000 compile_utils.py:98(<lambda>)
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListName}
        1    0.000    0.000    0.000    0.000 distribution_strategy_context.py:56(__init__)
        1    0.000    0.000    0.000    0.000 __init__.py:1226(append)
        8    0.000    0.000    0.000    0.000 artist.py:1213(mouseover)
        4    0.000    0.000    0.000    0.000 tf_utils.py:194(<lambda>)
       17    0.000    0.000    0.000    0.000 function.py:2451(is_method)
        1    0.000    0.000    0.000    0.000 {built-in method _codecs.charmap_build}
        2    0.000    0.000    0.000    0.000 _base.py:3770(set_navigate_mode)
        2    0.000    0.000    0.000    0.000 py3k.py:48(asstr)
        1    0.000    0.000    0.000    0.000 np_arrays.py:60(NdarraySpec)
       10    0.000    0.000    0.000    0.000 node.py:74(<lambda>)
        1    0.000    0.000    0.000    0.000 __init__.py:189(_checkLevel)
       15    0.000    0.000    0.000    0.000 __init__.py:554(__missing__)
        3    0.000    0.000    0.000    0.000 decorator_utils.py:117(validate_callable)
       12    0.000    0.000    0.000    0.000 {method 'issubset' of 'set' objects}
       17    0.000    0.000    0.000    0.000 function.py:2471(is_pure)
        2    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListType}
       13    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:774(create_module)
        2    0.000    0.000    0.000    0.000 compile_utils.py:419(<listcomp>)
        2    0.000    0.000    0.000    0.000 _base.py:3754(set_navigate)
        1    0.000    0.000    0.000    0.000 backend_bases.py:3563(Show)
        6    0.000    0.000    0.000    0.000 load.py:408(_UserObject)
        8    0.000    0.000    0.000    0.000 node.py:72(<lambda>)
        1    0.000    0.000    0.000    0.000 saving_utils.py:248(_is_single_object)
        8    0.000    0.000    0.000    0.000 axis.py:1433(<dictcomp>)
        4    0.000    0.000    0.000    0.000 lines.py:1390(is_dashed)
        2    0.000    0.000    0.000    0.000 {built-in method raise_}
        4    0.000    0.000    0.000    0.000 functional.py:1103(add_unprocessed_node)
        2    0.000    0.000    0.000    0.000 gridspec.py:211(_normalize)
        4    0.000    0.000    0.000    0.000 compile_utils.py:596(map_missing_dict_keys)
        1    0.000    0.000    0.000    0.000 function_deserialization.py:390(<listcomp>)
        1    0.000    0.000    0.000    0.000 losses.py:107(_set_name_scope)
        2    0.000    0.000    0.000    0.000 figure.py:1059(fixitems)
        4    0.000    0.000    0.000    0.000 doc_controls.py:105(do_not_doc_inheritable)
        7    0.000    0.000    0.000    0.000 {method 'items' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 compile_utils.py:334(_set_metric_names)
        6    0.000    0.000    0.000    0.000 tf_utils.py:254(__init__)
        1    0.000    0.000    0.000    0.000 signature_serialization.py:237(<lambda>)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:835(_sort_dispatcher)
        1    0.000    0.000    0.000    0.000 backend_pdf.py:2607(_BackendPdf)
        4    0.000    0.000    0.000    0.000 figure.py:458(get_tight_layout)
        2    0.000    0.000    0.000    0.000 figure.py:92(<dictcomp>)
        1    0.000    0.000    0.000    0.000 util.py:254(expect_partial)
        6    0.000    0.000    0.000    0.000 {built-in method _warnings._filters_mutated}
        2    0.000    0.000    0.000    0.000 _datasource.py:151(__getitem__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:187(is_date)
        4    0.000    0.000    0.000    0.000 nest.py:1417(sequence_fn)
        2    0.000    0.000    0.000    0.000 deprecation.py:274(deprecated)
        1    0.000    0.000    0.000    0.000 context.py:1234(<listcomp>)
        1    0.000    0.000    0.000    0.000 version_utils.py:125(is_v1_layer_or_model)
        1    0.000    0.000    0.000    0.000 {method 'MergeFrom' of 'google.protobuf.pyext._message.CMessage' objects}
        1    0.000    0.000    0.000    0.000 losses.py:1857(get)
        2    0.000    0.000    0.000    0.000 patches.py:288(get_facecolor)
        4    0.000    0.000    0.000    0.000 __init__.py:608(update)
        6    0.000    0.000    0.000    0.000 gridspec.py:74(get_geometry)
        1    0.000    0.000    0.000    0.000 layer_utils.py:168(<listcomp>)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:363(__lt__)
        4    0.000    0.000    0.000    0.000 backend_bases.py:894(set_clip_rectangle)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeleteDeviceList}
        1    0.000    0.000    0.000    0.000 base_layer_utils.py:426(__init__)
        4    0.000    0.000    0.000    0.000 transforms.py:2083(inverted)
        2    0.000    0.000    0.000    0.000 _base.py:2249(use_sticky_edges)
        8    0.000    0.000    0.000    0.000 artist.py:346(is_transform_set)
        6    0.000    0.000    0.000    0.000 distributed_training_utils.py:439(is_tpu_strategy)
        2    0.000    0.000    0.000    0.000 gridspec.py:100(set_width_ratios)
        2    0.000    0.000    0.000    0.000 __init__.py:94(__call__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1579(writeImages)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:1984(__init__)
        1    0.000    0.000    0.000    0.000 util.py:127(__init__)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1360(_write_soft_mask_groups)
        5    0.000    0.000    0.000    0.000 load.py:266(<dictcomp>)
       10    0.000    0.000    0.000    0.000 base.py:621(_object_identifier)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1618(writeMarkers)
        1    0.000    0.000    0.000    0.000 loss_reduction.py:61(all)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:744(__init__)
        2    0.000    0.000    0.000    0.000 compile_utils.py:480(_should_broadcast)
        2    0.000    0.000    0.000    0.000 gridspec.py:703(num2)
        4    0.000    0.000    0.000    0.000 _base.py:378(<genexpr>)
        6    0.000    0.000    0.000    0.000 tf_utils.py:257(as_list)
        4    0.000    0.000    0.000    0.000 __init__.py:799(<dictcomp>)
        2    0.000    0.000    0.000    0.000 __init__.py:19(get_projection_class)
        1    0.000    0.000    0.000    0.000 graph_view.py:67(_slot_variable_naming_for_optimizer)
        2    0.000    0.000    0.000    0.000 {built-in method time.time}
        5    0.000    0.000    0.000    0.000 {method 'setter' of 'property' objects}
        1    0.000    0.000    0.000    0.000 optimizer_v2.py:731(get_slot_names)
        8    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap_external>:1400(<genexpr>)
        2    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:101(<genexpr>)
        1    0.000    0.000    0.000    0.000 __init__.py:1663(getEffectiveLevel)
        2    0.000    0.000    0.000    0.000 distribution_strategy_context.py:42(__init__)
        7    0.000    0.000    0.000    0.000 base_layer.py:2798(<genexpr>)
        6    0.000    0.000    0.000    0.000 {method 'isalnum' of 'str' objects}
        2    0.000    0.000    0.000    0.000 gridspec.py:120(set_height_ratios)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TFE_ContextOptionsSetDevicePlacementPolicy}
        3    0.000    0.000    0.000    0.000 signature_serialization.py:212(__getitem__)
        2    0.000    0.000    0.000    0.000 context.py:944(rewriter_bool)
        3    0.000    0.000    0.000    0.000 node.py:215(input_tensors)
        1    0.000    0.000    0.000    0.000 cp1252.py:9(Codec)
        2    0.000    0.000    0.000    0.000 patches.py:284(get_edgecolor)
        1    0.000    0.000    0.000    0.000 load_options.py:35(__init__)
        1    0.000    0.000    0.000    0.000 compile_utils.py:151(_create_metrics)
        1    0.000    0.000    0.000    0.000 {method 'mro' of 'type' objects}
        4    0.000    0.000    0.000    0.000 {method 'endswith' of 'bytes' objects}
        2    0.000    0.000    0.000    0.000 policy.py:444(loss_scale)
        4    0.000    0.000    0.000    0.000 fromnumeric.py:2414(_cumsum_dispatcher)
        2    0.000    0.000    0.000    0.000 artist.py:819(get_clip_path)
        1    0.000    0.000    0.000    0.000 context.py:1263(<listcomp>)
        1    0.000    0.000    0.000    0.000 weakref.py:422(__contains__)
        2    0.000    0.000    0.000    0.000 _iotools.py:37(_is_string_like)
        5    0.000    0.000    0.000    0.000 load.py:851(<dictcomp>)
        1    0.000    0.000    0.000    0.000 {method 'pop' of 'collections.OrderedDict' objects}
        1    0.000    0.000    0.000    0.000 backend_qt5.py:588(_widgetclosed)
        1    0.000    0.000    0.000    0.000 data_structures.py:377(__getitem__)
        1    0.000    0.000    0.000    0.000 context.py:1228(<dictcomp>)
        3    0.000    0.000    0.000    0.000 deprecation.py:93(_validate_deprecation_args)
        2    0.000    0.000    0.000    0.000 type_check.py:206(_is_type_dispatcher)
        1    0.000    0.000    0.000    0.000 signature_serialization.py:203(__init__)
        4    0.000    0.000    0.000    0.000 backend_agg.py:297(option_image_nocomposite)
        2    0.000    0.000    0.000    0.000 ops.py:3003(<lambda>)
        2    0.000    0.000    0.000    0.000 tensor_conversion_registry.py:99(<genexpr>)
        4    0.000    0.000    0.000    0.000 tf_utils.py:181(<listcomp>)
        2    0.000    0.000    0.000    0.000 gridspec.py:699(num2)
        1    0.000    0.000    0.000    0.000 object_identity.py:208(__len__)
        2    0.000    0.000    0.000    0.000 _subplots.py:83(get_subplotspec)
        1    0.000    0.000    0.000    0.000 weakref.py:382(__getitem__)
        1    0.000    0.000    0.000    0.000 util.py:137(__del__)
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_DeviceListCount}
        1    0.000    0.000    0.000    0.000 deprecation.py:414(<dictcomp>)
        2    0.000    0.000    0.000    0.000 {method 'release' of '_thread.RLock' objects}
        2    0.000    0.000    0.000    0.000 artist.py:959(set_in_layout)
        2    0.000    0.000    0.000    0.000 gridspec.py:710(get_gridspec)
        1    0.000    0.000    0.000    0.000 signature_serialization.py:206(_add_signature)
        1    0.000    0.000    0.000    0.000 doc_controls.py:24(do_not_generate_docs)
        2    0.000    0.000    0.000    0.000 weakref.py:119(_commit_removals)
        2    0.000    0.000    0.000    0.000 activations.py:405(linear)
        2    0.000    0.000    0.000    0.000 multiarray.py:990(unravel_index)
        4    0.000    0.000    0.000    0.000 compile_utils.py:93(_broadcast_fn)
        2    0.000    0.000    0.000    0.000 parse.py:399(_checknetloc)
        1    0.000    0.000    0.000    0.000 load.py:223(_expect_partial_checkpoint)
        1    0.000    0.000    0.000    0.000 context.py:1296(_import_config)
        2    0.000    0.000    0.000    0.000 {built-in method width}
        2    0.000    0.000    0.000    0.000 {method 'move_to_end' of 'collections.OrderedDict' objects}
        2    0.000    0.000    0.000    0.000 backend_pdf.py:691(<dictcomp>)
        2    0.000    0.000    0.000    0.000 npyio.py:1185(_savetxt_dispatcher)
        2    0.000    0.000    0.000    0.000 compile_utils.py:40(build)
        2    0.000    0.000    0.000    0.000 {method 'utcoffset' of 'datetime.datetime' objects}
        1    0.000    0.000    0.000    0.000 load.py:682(_finalize_saved_model_layers)
        1    0.000    0.000    0.000    0.000 experiment_3.py:49(Experiment3)
        2    0.000    0.000    0.000    0.000 functional.py:791(_assert_weights_created)
        1    0.000    0.000    0.000    0.000 <string>:1(<module>)
        2    0.000    0.000    0.000    0.000 compile_utils.py:421(_get_metric_object)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:1648(writePathCollectionTemplates)
        2    0.000    0.000    0.000    0.000 threading.py:1395(main_thread)
        1    0.000    0.000    0.000    0.000 base_layer_v1.py:2398(KerasHistory)
        1    0.000    0.000    0.000    0.000 checkpoint_options.py:44(__init__)
        1    0.000    0.000    0.000    0.000 cp1252.py:17(IncrementalEncoder)
        2    0.000    0.000    0.000    0.000 backend_bases.py:1994(draw)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
        1    0.000    0.000    0.000    0.000 {built-in method tensorflow.python._pywrap_tfe.TF_IsMlirBridgeEnabled}
        1    0.000    0.000    0.000    0.000 context.py:1238(<dictcomp>)
        1    0.000    0.000    0.000    0.000 cp1252.py:21(IncrementalDecoder)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:607(<genexpr>)
        1    0.000    0.000    0.000    0.000 util.py:134(set_expect_partial)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:611(<genexpr>)
        1    0.000    0.000    0.000    0.000 functional.py:139(<genexpr>)
        1    0.000    0.000    0.000    0.000 distribute_lib.py:2745(strategy)
        2    0.000    0.000    0.000    0.000 backend_pdf.py:615(<genexpr>)
        1    0.000    0.000    0.000    0.000 cp1252.py:28(StreamReader)
        1    0.000    0.000    0.000    0.000 cp1252.py:25(StreamWriter)
        1    0.000    0.000    0.000    0.000 layer_utils.py:272(<listcomp>)


